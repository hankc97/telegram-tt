{"version":3,"file":"src_components_common_gift_GiftMenuItems_tsx-src_components_middle_message_ActionMessage_tsx.71efe8a0382a88f86e57.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/MiniTable.module.scss?145f","webpack://telegram-t/./src/components/common/MiniTable.tsx","webpack://telegram-t/./src/components/common/gift/GiftMenuItems.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/middle/message/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/components/middle/message/actions/ChannelPhoto.tsx","webpack://telegram-t/./src/components/middle/message/actions/Gift.tsx","webpack://telegram-t/./src/components/middle/message/actions/GiveawayPrize.tsx","webpack://telegram-t/./src/components/middle/message/actions/StarGift.tsx","webpack://telegram-t/./src/components/middle/message/actions/StarGiftUnique.tsx","webpack://telegram-t/./src/components/middle/message/actions/SuggestedPhoto.tsx","webpack://telegram-t/./src/components/middle/message/actions/SuggestedPostApproval.tsx","webpack://telegram-t/./src/components/middle/message/actions/SuggestedPostBalanceTooLow.tsx","webpack://telegram-t/./src/components/middle/message/actions/SuggestedPostRejected.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFluidBackgroundFilter.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cKr8J5k_\",\"key\":\"c9RLLvfs\",\"value\":\"QEuGpzIc\"};","import { memo, type TeactNode } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MiniTable.module.scss';\n\nexport type TableEntry = [TeactNode, TeactNode];\n\ntype OwnProps = {\n  data: TableEntry[];\n  className?: string;\n  style?: string;\n  valueClassName?: string;\n  keyClassName?: string;\n};\n\nconst MiniTable = ({\n  data,\n  style,\n  className,\n  valueClassName,\n  keyClassName,\n}: OwnProps) => {\n  return (\n    <div className={buildClassName(styles.root, className)} style={style}>\n      {data.map(([key, value]) => (\n        <>\n          <div className={buildClassName(styles.key, keyClassName)}>{key}</div>\n          <div className={buildClassName(styles.value, valueClassName)}>{value}</div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MiniTable);\n","import { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiEmojiStatusCollectible, ApiEmojiStatusType, ApiSavedStarGift, ApiStarGift,\n} from '../../../api/types';\n\nimport { DEFAULT_STATUS_ICON_ID, TME_LINK_PREFIX } from '../../../config';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  peerId: string;\n  canManage?: boolean;\n  gift: ApiSavedStarGift | ApiStarGift;\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n};\n\nconst GiftMenuItems = ({\n  peerId,\n  canManage,\n  gift: typeGift,\n  currentUserEmojiStatus,\n  collectibleEmojiStatuses,\n}: OwnProps) => {\n  const {\n    showNotification,\n    openChatWithDraft,\n    openGiftTransferModal,\n    openGiftResalePriceComposerModal,\n    openGiftStatusInfoModal,\n    setEmojiStatus,\n    toggleSavedGiftPinned,\n    changeGiftVisibility,\n    updateStarGiftPrice,\n    closeGiftInfoModal,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const gift = isSavedGift ? typeGift.gift : typeGift;\n\n  const starGiftUniqueSlug = gift?.type === 'starGiftUnique' ? gift.slug : undefined;\n  const starGiftUniqueLink = useMemo(() => {\n    if (!starGiftUniqueSlug) return undefined;\n    return `${TME_LINK_PREFIX}nft/${starGiftUniqueSlug}`;\n  }, [starGiftUniqueSlug]);\n  const userCollectibleStatus = useMemo(() => {\n    if (!starGiftUniqueSlug) return undefined;\n    return collectibleEmojiStatuses?.find((\n      status,\n    ) => status.type === 'collectible' && status.slug === starGiftUniqueSlug) as ApiEmojiStatusCollectible | undefined;\n  }, [starGiftUniqueSlug, collectibleEmojiStatuses]);\n\n  const currenUniqueEmojiStatusSlug = currentUserEmojiStatus?.type === 'collectible'\n    ? currentUserEmojiStatus.slug : undefined;\n\n  const isGiftUnique = gift && gift.type === 'starGiftUnique';\n  const canTakeOff = isGiftUnique && currenUniqueEmojiStatusSlug === gift.slug;\n  const canWear = userCollectibleStatus && !canTakeOff;\n  const giftResalePrice = isGiftUnique ? gift.resellPriceInStars : undefined;\n\n  const hasPinOptions = canManage && savedGift && !savedGift.isUnsaved && isGiftUnique;\n\n  const handleTriggerVisibility = useLastCallback(() => {\n    const { inputGift, isUnsaved } = savedGift!;\n    changeGiftVisibility({ gift: inputGift!, shouldUnsave: !isUnsaved });\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    if (!starGiftUniqueLink) return;\n    copyTextToClipboard(starGiftUniqueLink);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleLinkShare = useLastCallback(() => {\n    if (!starGiftUniqueLink) return;\n    openChatWithDraft({ text: { text: starGiftUniqueLink } });\n  });\n\n  const handleTransfer = useLastCallback(() => {\n    if (!savedGift || savedGift?.gift.type !== 'starGiftUnique') return;\n\n    if (savedGift.canTransferAt && savedGift.canTransferAt > getServerTime()) {\n      showNotification({\n        message: {\n          key: 'NotificationGiftCanTransferAt',\n          variables: { date: formatDateAtTime(oldLang, savedGift.canTransferAt * 1000) },\n        },\n      });\n      return;\n    }\n\n    openGiftTransferModal({ gift: savedGift });\n  });\n\n  const handleSell = useLastCallback(() => {\n    if (!savedGift) return;\n    if (savedGift.canResellAt && savedGift.canResellAt > getServerTime()) {\n      showNotification({\n        message: {\n          key: 'NotificationGiftCanResellAt',\n          variables: { date: formatDateAtTime(oldLang, savedGift.canResellAt * 1000) },\n        },\n      });\n      return;\n    }\n    openGiftResalePriceComposerModal({ peerId, gift: savedGift });\n  });\n\n  const handleUnsell = useLastCallback(() => {\n    if (!savedGift || savedGift.gift.type !== 'starGiftUnique' || !savedGift.inputGift) return;\n    closeGiftInfoModal();\n    updateStarGiftPrice({ gift: savedGift.inputGift, price: 0 });\n    showNotification({\n      icon: 'unlist-outline',\n      message: {\n        key: 'NotificationGiftIsUnlist',\n        variables: { gift: lang('GiftUnique', { title: savedGift.gift.title, number: savedGift.gift.number }) },\n      },\n    });\n  });\n\n  const handleWear = useLastCallback(() => {\n    if (gift?.type !== 'starGiftUnique' || !userCollectibleStatus) return;\n    openGiftStatusInfoModal({ emojiStatus: userCollectibleStatus });\n  });\n\n  const handleTakeOff = useLastCallback(() => {\n    if (canTakeOff) {\n      setEmojiStatus({\n        emojiStatus: { type: 'regular', documentId: DEFAULT_STATUS_ICON_ID },\n      });\n    }\n  });\n\n  const handleTogglePin = useLastCallback(() => {\n    toggleSavedGiftPinned({ peerId, gift: savedGift! });\n  });\n\n  return (\n    <>\n      {hasPinOptions && (\n        <MenuItem icon={savedGift.isPinned ? 'unpin' : 'pin'} onClick={handleTogglePin}>\n          {lang(savedGift.isPinned ? 'ChatListUnpinFromTop' : 'ChatListPinToTop')}\n        </MenuItem>\n      )}\n      <MenuItem icon=\"link-badge\" onClick={handleCopyLink}>\n        {lang('CopyLink')}\n      </MenuItem>\n      <MenuItem icon=\"forward\" onClick={handleLinkShare}>\n        {lang('Share')}\n      </MenuItem>\n      {canManage && isGiftUnique && (\n        <MenuItem icon=\"diamond\" onClick={handleTransfer}>\n          {lang('GiftInfoTransfer')}\n        </MenuItem>\n      )}\n      {canManage && isGiftUnique && !giftResalePrice && (\n        <MenuItem icon=\"sell-outline\" onClick={handleSell}>\n          {lang('Sell')}\n        </MenuItem>\n      )}\n      {canManage && isGiftUnique && Boolean(giftResalePrice) && (\n        <MenuItem icon=\"unlist-outline\" onClick={handleUnsell}>\n          {lang('GiftInfoUnlist')}\n        </MenuItem>\n      )}\n      {canManage && savedGift && (\n        <MenuItem icon={savedGift.isUnsaved ? 'eye-outline' : 'eye-crossed-outline'} onClick={handleTriggerVisibility}>\n          {lang(savedGift.isUnsaved ? 'GiftActionShow' : 'GiftActionHide')}\n        </MenuItem>\n      )}\n      {canWear && (\n        <MenuItem icon=\"crown-wear-outline\" onClick={handleWear}>\n          {lang('GiftInfoWear')}\n        </MenuItem>\n      )}\n      {canTakeOff && (\n        <MenuItem icon=\"crown-take-off-outline\" onClick={handleTakeOff}>\n          {lang('GiftInfoTakeOff')}\n        </MenuItem>\n      )}\n    </>\n  );\n};\n\nexport default memo(GiftMenuItems);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n  purple: [['#E367D7', '#757BF6'], ['#E367D7', '#757BF6']],\n  green: [['#52D553', '#4BB121'], ['#52D553', '#4BB121']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\ntype GradientColor = readonly [string, string];\n\ntype OwnProps = {\n  color: ColorKey | GradientColor | (string & {});\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor: GradientColor | undefined\n  = Array.isArray(color)\n    ? color as GradientColor\n    : colorKey\n      ? COLORS[colorKey][isDarkTheme ? 1 : 0]\n      : undefined;\n\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import {\n  memo, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessageAction } from '../../../api/types/messageActions';\nimport type {\n  FocusDirection,\n  ScrollTargetPosition,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { type ApiMessage, type ApiPeer, MAIN_THREAD_ID } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectSender,\n  selectTabState,\n  selectTheme,\n} from '../../../global/selectors';\nimport { IS_ANDROID, IS_ELECTRON, IS_FLUID_BACKGROUND_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isLocalMessageId } from '../../../util/keys/messageKey';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { preventMessageInputBlur } from '../helpers/preventMessageInputBlur';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { type OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport useFluidBackgroundFilter from './hooks/useFluidBackgroundFilter';\nimport useFocusMessage from './hooks/useFocusMessage';\n\nimport ActionMessageText from './ActionMessageText';\nimport ChannelPhoto from './actions/ChannelPhoto';\nimport Gift from './actions/Gift';\nimport GiveawayPrize from './actions/GiveawayPrize';\nimport StarGift from './actions/StarGift';\nimport StarGiftUnique from './actions/StarGiftUnique';\nimport SuggestedPhoto from './actions/SuggestedPhoto';\nimport SuggestedPostApproval from './actions/SuggestedPostApproval';\nimport SuggestedPostBalanceTooLow from './actions/SuggestedPostBalanceTooLow';\nimport SuggestedPostRejected from './actions/SuggestedPostRejected';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport Reactions from './reactions/Reactions';\nimport SimilarChannels from './SimilarChannels';\n\nimport styles from './ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId: ThreadId;\n  appearanceOrder: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  getIsMessageListReady?: Signal<boolean>;\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  observeIntersectionForBottom?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  currentUserId?: string;\n  isInsideTopic?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  replyMessage?: ApiMessage;\n  patternColor?: string;\n  isCurrentUserPremium?: boolean;\n  isInSelectMode?: boolean;\n  hasUnreadReaction?: boolean;\n  isResizingContainer?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isAccountFrozen?: boolean;\n};\n\nconst SINGLE_LINE_ACTIONS = new Set<ApiMessageAction['type']>([\n  'pinMessage',\n  'chatEditPhoto',\n  'chatDeletePhoto',\n  'todoCompletions',\n  'todoAppendTasks',\n  'unsupported',\n]);\nconst HIDDEN_TEXT_ACTIONS = new Set<ApiMessageAction['type']>(['giftCode', 'prizeStars',\n  'suggestProfilePhoto', 'suggestedPostApproval']);\n\nconst ActionMessage = ({\n  message,\n  threadId,\n  sender,\n  currentUserId,\n  appearanceOrder,\n  isJustAdded,\n  isLastInList,\n  memoFirstUnreadIdRef,\n  getIsMessageListReady,\n  isInsideTopic,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  replyMessage,\n  patternColor,\n  isCurrentUserPremium,\n  isInSelectMode,\n  hasUnreadReaction,\n  isResizingContainer,\n  scrollTargetPosition,\n  onIntersectPinnedMessage,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  isAccountFrozen,\n}: OwnProps & StateProps) => {\n  const {\n    requestConfetti,\n    openMediaViewer,\n    getReceipt,\n    checkGiftCode,\n    openPrizeStarsTransactionFromGiveaway,\n    openPremiumModal,\n    openStarsTransactionFromGift,\n    openGiftInfoModalFromMessage,\n    toggleChannelRecommendations,\n    animateUnreadReaction,\n    markMentionsRead,\n    focusMessage,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const { id, chatId } = message;\n  const action = message.content.action!;\n  const isLocal = isLocalMessageId(id);\n\n  const isTextHidden = HIDDEN_TEXT_ACTIONS.has(action.type);\n  const isSingleLine = SINGLE_LINE_ACTIONS.has(action.type);\n  const isFluidMultiline = IS_FLUID_BACKGROUND_SUPPORTED && !isSingleLine;\n  const isClickableText = action.type === 'suggestedPostSuccess';\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions?.results?.length);\n\n  const shouldSkipRender = isInsideTopic && action.type === 'topicCreate';\n\n  const { isTouchScreen } = useAppLayout();\n\n  useOnIntersect(ref, !shouldSkipRender ? observeIntersectionForBottom : undefined);\n\n  useMessageResizeObserver(ref, !shouldSkipRender && isLastInList && action.type !== 'channelJoined');\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    id,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    scrollTargetPosition,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const { ref: refWithTransition } = useShowTransition({\n    isOpen: isShown,\n    noOpenTransition: noAppearanceAnimation,\n    noCloseTransition: true,\n    className: false,\n    ref,\n  });\n\n  useEffect(() => {\n    const bottomMarker = ref.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [id] });\n    }\n\n    if (message.hasUnreadMention) {\n      markMentionsRead({ chatId, messageIds: [id] });\n    }\n  }, [hasUnreadReaction, chatId, id, animateUnreadReaction, message.hasUnreadMention]);\n\n  useEffect(() => {\n    if (action.type !== 'giftPremium') return;\n    if ((memoFirstUnreadIdRef?.current && id >= memoFirstUnreadIdRef.current) || isLocal) {\n      requestConfetti({});\n    }\n  }, [action.type, id, isLocal, memoFirstUnreadIdRef]);\n\n  const fluidBackgroundStyle = useFluidBackgroundFilter(isFluidMultiline ? patternColor : undefined);\n\n  const handleClick = useLastCallback(() => {\n    switch (action.type) {\n      case 'paymentSent':\n      case 'paymentRefunded': {\n        getReceipt({\n          chatId: message.chatId,\n          messageId: message.id,\n        });\n        break;\n      }\n\n      case 'chatEditPhoto': {\n        openMediaViewer({\n          chatId: message.chatId,\n          messageId: message.id,\n          threadId,\n          origin: MediaViewerOrigin.ChannelAvatar,\n        });\n        break;\n      }\n\n      case 'giftCode': {\n        checkGiftCode({ slug: action.slug, message: { chatId: message.chatId, messageId: message.id } });\n        break;\n      }\n\n      case 'prizeStars': {\n        openPrizeStarsTransactionFromGiveaway({\n          chatId: message.chatId,\n          messageId: message.id,\n        });\n        break;\n      }\n\n      case 'giftPremium': {\n        openPremiumModal({\n          isGift: true,\n          fromUserId: sender?.id,\n          toUserId: sender && sender.id === currentUserId ? chatId : currentUserId,\n          monthsAmount: action.months,\n        });\n        break;\n      }\n\n      case 'giftTon':\n      case 'giftStars': {\n        openStarsTransactionFromGift({\n          chatId: message.chatId,\n          messageId: message.id,\n        });\n        break;\n      }\n\n      case 'starGift':\n      case 'starGiftUnique': {\n        openGiftInfoModalFromMessage({\n          chatId: message.chatId,\n          messageId: message.id,\n        });\n        break;\n      }\n\n      case 'channelJoined': {\n        toggleChannelRecommendations({ chatId });\n        break;\n      }\n\n      case 'suggestedPostApproval': {\n        const replyInfo = getMessageReplyInfo(message);\n        if (replyInfo?.type === 'message' && replyInfo.replyToMsgId) {\n          focusMessage({\n            chatId: message.chatId,\n            threadId,\n            messageId: replyInfo.replyToMsgId,\n          });\n        }\n        break;\n      }\n\n      case 'suggestedPostSuccess': {\n        const replyInfo = getMessageReplyInfo(message);\n        if (replyInfo?.type === 'message' && replyInfo.replyToMsgId) {\n          focusMessage({\n            chatId: message.chatId,\n            threadId,\n            messageId: replyInfo.replyToMsgId,\n          });\n        }\n        break;\n      }\n    }\n  });\n\n  const fullContent = useMemo(() => {\n    switch (action.type) {\n      case 'chatEditPhoto': {\n        if (!action.photo) return undefined;\n        return (\n          <ChannelPhoto\n            action={action}\n            observeIntersection={observeIntersectionForLoading}\n            onClick={handleClick}\n          />\n        );\n      }\n\n      case 'suggestProfilePhoto':\n        return (\n          <SuggestedPhoto\n            message={message}\n            action={action}\n            observeIntersection={observeIntersectionForLoading}\n          />\n        );\n\n      case 'prizeStars':\n      case 'giftCode':\n        return (\n          <GiveawayPrize\n            action={action}\n            sender={sender}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleClick}\n          />\n        );\n\n      case 'giftPremium':\n      case 'giftTon':\n      case 'giftStars':\n        return (\n          <Gift\n            action={action}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleClick}\n          />\n        );\n\n      case 'starGift':\n        return (\n          <StarGift\n            action={action}\n            message={message}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleClick}\n          />\n        );\n\n      case 'starGiftUnique':\n        return (\n          <StarGiftUnique\n            action={action}\n            message={message}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleClick}\n          />\n        );\n\n      case 'channelJoined':\n        return (\n          <SimilarChannels\n            chatId={message.chatId}\n          />\n        );\n\n      case 'suggestedPostApproval':\n        if (action.isBalanceTooLow) {\n          return (\n            <SuggestedPostBalanceTooLow\n              message={message}\n              action={action}\n              onClick={handleClick}\n            />\n          );\n        }\n        return action.isRejected ? (\n          <SuggestedPostRejected\n            message={message}\n            action={action}\n            onClick={handleClick}\n          />\n        ) : (\n          <SuggestedPostApproval\n            message={message}\n            action={action}\n            onClick={handleClick}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }, [action, message, observeIntersectionForLoading, sender, observeIntersectionForPlaying]);\n\n  if ((isInsideTopic && action.type === 'topicCreate') || action.type === 'phoneCall') {\n    return undefined;\n  }\n\n  return (\n    <div\n      ref={refWithTransition}\n      id={getMessageHtmlId(id)}\n      className={buildClassName(\n        'ActionMessage',\n        'message-list-item',\n        styles.root,\n        isSingleLine && styles.singleLine,\n        isFluidMultiline && styles.fluidMultiline,\n        fullContent && styles.hasFullContent,\n        isFocused && !noFocusHighlight && 'focused',\n        isContextMenuShown && 'has-menu-open',\n        isLastInList && 'last-in-list',\n      )}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      data-has-unread-mention={message.hasUnreadMention || undefined}\n      data-has-unread-reaction={hasUnreadReaction || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isTextHidden && (\n        <>\n          {isFluidMultiline && (\n            <div className={buildClassName(styles.inlineWrapper, isClickableText && styles.hoverable)}>\n              <span className={styles.fluidBackground} style={fluidBackgroundStyle}>\n                <ActionMessageText message={message} isInsideTopic={isInsideTopic} />\n              </span>\n            </div>\n          )}\n          <div className={buildClassName(styles.inlineWrapper, isClickableText && styles.hoverable)}>\n            <span className={styles.textContent} onClick={handleClick}>\n              <ActionMessageText message={message} isInsideTopic={isInsideTopic} />\n            </span>\n          </div>\n        </>\n      )}\n      {fullContent}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          className={styles.contextContainer}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isAccountFrozen={isAccountFrozen}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const tabState = selectTabState(global);\n    const { themes } = global.settings;\n\n    const chat = selectChat(global, message.chatId);\n\n    const sender = selectSender(global, message);\n\n    const isInsideTopic = chat?.isForum && threadId !== MAIN_THREAD_ID;\n\n    const { replyToMsgId, replyToPeerId } = getMessageReplyInfo(message) || {};\n    const replyMessage = replyToMsgId\n      ? selectChatMessage(global, replyToPeerId || message.chatId, replyToMsgId) : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n      isResizingContainer, scrollTargetPosition,\n    } = (isFocused && tabState.focusedMessage) || {};\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      sender,\n      currentUserId: global.currentUserId,\n      isCurrentUserPremium,\n      isFocused,\n      focusDirection,\n      noFocusHighlight,\n      isInsideTopic,\n      replyMessage,\n      isInSelectMode: selectIsInSelectMode(global),\n      patternColor: themes[selectTheme(global)]?.patternColor,\n      hasUnreadReaction,\n      isResizingContainer,\n      scrollTargetPosition,\n      isAccountFrozen,\n    };\n  },\n)(ActionMessage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst ANIMATION_DURATION = 150;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\nconst AUTO_EXPAND_TIME = 10; // Seconds from joining\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  isExpanded?: boolean;\n  count?: number;\n  isCurrentUserPremium: boolean;\n  channelJoinInfo?: ApiChatFullInfo['joinInfo'];\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  isExpanded,\n  count,\n  isCurrentUserPremium,\n  channelJoinInfo,\n}: StateProps & OwnProps) => {\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n\n  const ref = useRef<HTMLDivElement>();\n\n  const ignoreAutoScrollRef = useRef(false);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shouldRenderSkeleton, setShouldRenderSkeleton] = useState(false);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shouldRenderSkeleton\n    && (isExpanded || isAnimating)\n    && areSimilarChannelsPresent,\n  );\n\n  useHorizontalScroll(ref, !shouldRenderChannels, true);\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShouldRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shouldRenderSkeleton && similarChannels && isExpanded) {\n      const id = setTimeout(() => {\n        setShouldRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, isExpanded, shouldRenderSkeleton]);\n\n  useEffect(() => {\n    if (isExpanded) {\n      markShowing();\n      markNotHiding();\n      setShouldRenderSkeleton(!similarChannelIds);\n      if (!ignoreAutoScrollRef.current) {\n        setTimeout(() => {\n          ref.current?.scrollIntoView({ behavior: 'smooth' });\n        }, ANIMATION_DURATION);\n      }\n    } else {\n      markNotShowing();\n      markHiding();\n    }\n  }, [isExpanded, similarChannelIds]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n  });\n\n  useEffect(() => {\n    if (!channelJoinInfo?.joinedDate || isExpanded) return;\n    if (getServerTime() - channelJoinInfo.joinedDate <= AUTO_EXPAND_TIME) {\n      handleToggle();\n      ignoreAutoScrollRef.current = true;\n    }\n  }, [channelJoinInfo, isExpanded]);\n\n  if (!shouldRenderChannels && !shouldRenderSkeleton) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      {shouldRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count! - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n  const lang = useLang();\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <Icon name=\"user-filled\" className={styles.icon} />\n        <span className={styles.membersCount}>\n          {formatIntegerCompact(lang, channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, isExpanded, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      similarChannelIds,\n      isExpanded,\n      count,\n      isCurrentUserPremium,\n      channelJoinInfo: chatFullInfo?.joinInfo,\n    };\n  })(SimilarChannels),\n);\n","import { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMessageActionChatEditPhoto } from '../../../../api/types/messageActions';\n\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport { type ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport Avatar from '../../../common/Avatar';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  action: ApiMessageActionChatEditPhoto;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst AVATAR_SIZE = 15 * REM;\n\nconst ChannelPhotoAction = ({\n  action,\n  onClick,\n  observeIntersection,\n}: OwnProps) => {\n  return (\n    <Avatar\n      className={styles.channelPhoto}\n      photo={action.photo}\n      loopIndefinitely\n      withVideo\n      observeIntersection={observeIntersection}\n      onClick={onClick}\n      size={AVATAR_SIZE}\n    />\n  );\n};\n\nexport default memo(ChannelPhotoAction);\n","import { memo, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type {\n  ApiMessageActionGiftPremium,\n  ApiMessageActionGiftStars,\n  ApiMessageActionGiftTon } from '../../../../api/types/messageActions';\n\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectGiftStickerForTon,\n} from '../../../../global/selectors';\nimport { formatCurrency } from '../../../../util/formatCurrency';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { type ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport useLang from '../../../../hooks/useLang';\n\nimport Sparkles from '../../../common/Sparkles';\nimport StickerView from '../../../common/StickerView';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  action: ApiMessageActionGiftPremium | ApiMessageActionGiftStars | ApiMessageActionGiftTon;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  sticker?: ApiSticker;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst STICKER_SIZE = 150;\n\nconst GiftAction = ({\n  action,\n  sticker,\n  canPlayAnimatedEmojis,\n  onClick,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n}: OwnProps & StateProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const lang = useLang();\n  const message = action.type === 'giftPremium' ? action.message : undefined;\n\n  const renderTonTitle = () => {\n    const { cryptoAmount, cryptoCurrency } = action;\n    const price = cryptoAmount\n      ? formatCurrency(lang, cryptoAmount, cryptoCurrency!, { asFontIcon: true })\n      : undefined;\n\n    return price;\n  };\n\n  return (\n    <div className={styles.contentBox} tabIndex={0} role=\"button\" onClick={onClick}>\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${STICKER_SIZE}px; height: ${STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={STICKER_SIZE}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            noLoad={!canPlayAnimatedEmojis}\n          />\n        )}\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>\n          {action.type === 'giftPremium' ? (\n            lang('ActionGiftPremiumTitle', { months: action.months }, { pluralValue: action.months })\n          ) : action.type === 'giftStars' ? (\n            lang('ActionGiftStarsTitle', { amount: action.stars }, { pluralValue: action.stars })\n          ) : renderTonTitle()}\n        </h3>\n        <div>\n          {message && renderTextWithEntities(message)}\n          {!message\n            && (lang(action.type === 'giftTon' ? 'DescriptionAboutTon'\n              : action.type === 'giftPremium'\n                ? 'ActionGiftPremiumText' : 'ActionGiftStarsText'))}\n        </div>\n      </div>\n      <div className={styles.actionButton}>\n        <Sparkles preset=\"button\" />\n        {lang('ActionViewButton')}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { action }): StateProps => {\n    const sticker = action.type === 'giftPremium'\n      ? selectGiftStickerForDuration(global, action.months)\n      : action.type === 'giftStars'\n        ? selectGiftStickerForStars(global, action.stars)\n        : selectGiftStickerForTon(global, action.cryptoAmount);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n\n    return {\n      sticker,\n      canPlayAnimatedEmojis,\n    };\n  },\n)(GiftAction));\n","import { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiChat, ApiPeer, ApiSticker } from '../../../../api/types';\nimport type { ApiMessageActionGiftCode, ApiMessageActionPrizeStars } from '../../../../api/types/messageActions';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n} from '../../../../global/selectors';\nimport { renderPeerLink, translateWithYou } from '../helpers/messageActions';\n\nimport { type ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport useLang from '../../../../hooks/useLang';\n\nimport Sparkles from '../../../common/Sparkles';\nimport StickerView from '../../../common/StickerView';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  action: ApiMessageActionGiftCode | ApiMessageActionPrizeStars;\n  sender?: ApiPeer;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  channel?: ApiChat;\n  sticker?: ApiSticker;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst STICKER_SIZE = 150;\n\nconst GiveawayPrizeAction = ({\n  currentUserId,\n  action,\n  sender,\n  sticker,\n  canPlayAnimatedEmojis,\n  channel,\n  onClick,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n}: OwnProps & StateProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const lang = useLang();\n\n  const channelLink = useMemo(() => {\n    const channelTitle = channel && getPeerTitle(lang, channel);\n    const channelFallbackText = lang('ActionFallbackChannel');\n\n    return renderPeerLink(channel?.id, channelTitle || channelFallbackText);\n  }, [channel, lang]);\n\n  const peerLink = useMemo(() => {\n    const peer = channel || sender;\n    const peerTitle = peer && getPeerTitle(lang, peer);\n    const peerFallbackText = lang('ActionFallbackChat');\n\n    return renderPeerLink(peer?.id, peerTitle || peerFallbackText);\n  }, [channel, sender, lang]);\n\n  return (\n    <div className={styles.contentBox} tabIndex={0} role=\"button\" onClick={onClick}>\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${STICKER_SIZE}px; height: ${STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={STICKER_SIZE}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            noLoad={!canPlayAnimatedEmojis}\n          />\n        )}\n      </div>\n      <div>\n        <h3 className={styles.title}>\n          {lang(action.type !== 'giftCode' || action.isViaGiveaway\n            ? 'ActionGiveawayResultTitle' : 'GiftInfoTitle')}\n        </h3>\n        <div>\n          {action.type === 'giftCode' && (\n            action.isViaGiveaway ? lang(\n              'ActionGiveawayResultPremiumText',\n              { channel: channelLink, months: action.months },\n              {\n                withNodes: true,\n                withMarkdown: true,\n                pluralValue: action.months,\n                renderTextFilters: ['br'],\n              })\n              : translateWithYou(\n                lang,\n                'ActionGiftCodeSubscriptionText',\n                sender?.id === currentUserId,\n                { peer: peerLink, months: action.months },\n                {\n                  pluralValue: action.months,\n                  renderTextFilters: ['br'],\n                })\n          )}\n          {action.type === 'prizeStars' && (\n            lang(\n              'ActionGiveawayResultStarsText',\n              { amount: action.stars, channel: channelLink },\n              {\n                withNodes: true,\n                withMarkdown: true,\n                pluralValue: action.stars,\n                renderTextFilters: ['br'],\n              },\n            )\n          )}\n        </div>\n      </div>\n      <div className={styles.actionButton}>\n        <Sparkles preset=\"button\" />\n        {lang(action.type === 'giftCode' ? 'ActionOpenGiftButton' : 'ActionViewButton')}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { action }): StateProps => {\n    const currentUserId = global.currentUserId!;\n    const sticker = action.type === 'giftCode'\n      ? selectGiftStickerForDuration(global, action.months)\n      : selectGiftStickerForStars(global, action.stars);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n\n    const channel = action.boostPeerId ? selectChat(global, action.boostPeerId) : undefined;\n\n    return {\n      currentUserId,\n      sticker,\n      canPlayAnimatedEmojis,\n      channel,\n    };\n  },\n)(GiveawayPrizeAction));\n","import { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../../api/types';\nimport type { ApiMessageActionStarGift } from '../../../../api/types/messageActions';\n\nimport { isChatChannel } from '../../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat } from '../../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectPeer,\n  selectSender,\n  selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatStarsAsText } from '../../../../util/localization/format';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { getStickerFromGift } from '../../../common/helpers/gifts';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { renderPeerLink, translateWithYou } from '../helpers/messageActions';\n\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport { type ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport useLang from '../../../../hooks/useLang';\n\nimport GiftRibbon from '../../../common/gift/GiftRibbon';\nimport Sparkles from '../../../common/Sparkles';\nimport StickerView from '../../../common/StickerView';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  action: ApiMessageActionStarGift;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n  sender?: ApiPeer;\n  recipient?: ApiPeer;\n  starGiftMaxConvertPeriod?: number;\n};\n\nconst STICKER_SIZE = 120;\n\nconst StarGiftAction = ({\n  action,\n  message,\n  canPlayAnimatedEmojis,\n  sender,\n  recipient,\n  starGiftMaxConvertPeriod,\n  onClick,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n}: OwnProps & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const stickerRef = useRef<HTMLDivElement>();\n  const lang = useLang();\n\n  const { isOutgoing } = message;\n\n  const sticker = getStickerFromGift(action.gift)!;\n\n  const peer = isOutgoing ? recipient : sender;\n  const isChannel = peer && isApiPeerChat(peer) && isChatChannel(peer);\n\n  const backgroundColor = useDynamicColorListener(ref, 'background-color', !action.gift.availabilityTotal);\n\n  const fallbackPeerTitle = lang('ActionFallbackSomeone');\n  const peerTitle = peer && getPeerTitle(lang, peer);\n  const isSelf = sender?.id === recipient?.id;\n\n  const giftDescription = useMemo(() => {\n    const peerLink = renderPeerLink(peer?.id, peerTitle || fallbackPeerTitle);\n    const starsAmount = action.starsToConvert !== undefined\n      ? formatStarsAsText(lang, action.starsToConvert) : undefined;\n\n    if (action.isUpgraded) {\n      return lang('ActionStarGiftUpgraded');\n    }\n\n    if (action.alreadyPaidUpgradeStars) {\n      return translateWithYou(\n        lang, 'ActionStarGiftUpgradeText', !isOutgoing || isSelf, { peer: peerLink },\n      );\n    }\n\n    if (action.isConverted) {\n      return translateWithYou(\n        lang, 'ActionStarGiftConvertedText', !isOutgoing || isSelf, { peer: peerLink, amount: starsAmount },\n      );\n    }\n\n    if (starGiftMaxConvertPeriod && getServerTime() < message.date + starGiftMaxConvertPeriod) {\n      return translateWithYou(\n        lang, 'ActionStarGiftConvertText', !isOutgoing || isSelf, { peer: peerLink, amount: starsAmount },\n      );\n    }\n\n    if (isChannel) {\n      return lang(\n        'ActionStarGiftChannelText', { amount: starsAmount }, { withNodes: true },\n      );\n    }\n\n    return translateWithYou(\n      lang, 'ActionStarGiftNoConvertText', !isOutgoing || isSelf, { peer: peerLink },\n    );\n  }, [\n    action, fallbackPeerTitle, isChannel, isOutgoing, lang, message.date, peer?.id, peerTitle, starGiftMaxConvertPeriod,\n    isSelf,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.contentBox, styles.starGift)}\n      tabIndex={0}\n      role=\"button\"\n      onClick={onClick}\n    >\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${STICKER_SIZE}px; height: ${STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={STICKER_SIZE}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            noLoad={!canPlayAnimatedEmojis}\n          />\n        )}\n      </div>\n      {Boolean(action.gift.availabilityTotal) && (\n        <GiftRibbon\n          color={backgroundColor || 'blue'}\n          text={lang('ActionStarGiftLimitedRibbon', {\n            total: formatIntegerCompact(lang, action.gift.availabilityTotal),\n          })}\n        />\n      )}\n      <div className={styles.info}>\n        <h3 className={styles.title}>\n          {isSelf ? lang('ActionStarGiftSelf') : lang(\n            isOutgoing ? 'ActionStarGiftTo' : 'ActionStarGiftFrom',\n            {\n              peer: renderPeerLink(peer?.id, peerTitle || fallbackPeerTitle),\n            },\n            {\n              withNodes: true,\n            },\n          )}\n        </h3>\n        <div className={styles.subtitle}>\n          {action.message && renderTextWithEntities(action.message)}\n          {!action.message && giftDescription}\n        </div>\n      </div>\n      <div className={styles.actionButton}>\n        <Sparkles preset=\"button\" />\n        {action.alreadyPaidUpgradeStars && !action.isUpgraded && !isOutgoing\n          ? lang('ActionStarGiftUnpack') : lang('ActionViewButton')}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, action }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n    const messageSender = selectSender(global, message);\n    const giftSender = action.fromId ? selectPeer(global, action.fromId) : undefined;\n    const messageRecipient = message.isOutgoing ? selectPeer(global, message.chatId) : currentUser;\n    const giftRecipient = action.peerId ? selectPeer(global, action.peerId) : undefined;\n\n    return {\n      canPlayAnimatedEmojis,\n      sender: giftSender || messageSender,\n      recipient: giftRecipient || messageRecipient,\n      starGiftMaxConvertPeriod: global.appConfig?.starGiftMaxConvertPeriod,\n    };\n  },\n)(StarGiftAction));\n","import { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../../api/types';\nimport type { ApiMessageActionStarGiftUnique } from '../../../../api/types/messageActions';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectPeer,\n  selectSender,\n  selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport buildStyle from '../../../../util/buildStyle';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { renderPeerLink } from '../helpers/messageActions';\n\nimport { type ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport useLang from '../../../../hooks/useLang';\n\nimport GiftRibbon from '../../../common/gift/GiftRibbon';\nimport MiniTable, { type TableEntry } from '../../../common/MiniTable';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Sparkles from '../../../common/Sparkles';\nimport StickerView from '../../../common/StickerView';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  action: ApiMessageActionStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n  sender?: ApiPeer;\n  recipient?: ApiPeer;\n};\n\nconst STICKER_SIZE = 120;\n\nconst StarGiftAction = ({\n  action,\n  message,\n  canPlayAnimatedEmojis,\n  sender,\n  recipient,\n  onClick,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n}: OwnProps & StateProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const lang = useLang();\n\n  const { isOutgoing } = message;\n\n  const sticker = getStickerFromGift(action.gift)!;\n  const attributes = getGiftAttributes(action.gift)!;\n  const model = attributes.model!;\n  const pattern = attributes.pattern!;\n  const backdrop = attributes.backdrop!;\n  const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n  const adaptedPatternColor = `${backdrop.patternColor.slice(0, 7)}55`;\n\n  const tableData = useMemo((): TableEntry[] => [\n    [lang('ActionStarGiftUniqueModel'), model.name],\n    [lang('ActionStarGiftUniqueBackdrop'), backdrop.name],\n    [lang('ActionStarGiftUniqueSymbol'), pattern.name],\n  ], [lang, model, pattern, backdrop]);\n\n  const shouldShowFrom = !isOutgoing || action.isUpgrade;\n  const peer = shouldShowFrom && !action.isUpgrade ? sender : recipient;\n\n  const fallbackPeerTitle = lang('ActionFallbackSomeone');\n  const peerTitle = peer && getPeerTitle(lang, peer);\n  const isSelf = sender?.id === recipient?.id;\n\n  return (\n    <div\n      className={buildClassName(styles.contentBox, styles.starGift, styles.uniqueGift)}\n      tabIndex={0}\n      role=\"button\"\n      onClick={onClick}\n    >\n      <div className={styles.uniqueBackgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.uniqueBackground}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop.patternColor}\n          patternIcon={pattern.sticker}\n          clearBottomSector\n        />\n      </div>\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${STICKER_SIZE}px; height: ${STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={STICKER_SIZE}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            noLoad={!canPlayAnimatedEmojis}\n          />\n        )}\n      </div>\n      <GiftRibbon\n        color={adaptedPatternColor}\n        text={lang('ActionStarGiftUniqueRibbon')}\n      />\n      <div className={styles.info}>\n        <h3 className={styles.title}>\n          {isSelf ? lang('ActionStarGiftSelf') : lang(\n            shouldShowFrom ? 'ActionStarGiftFrom' : 'ActionStarGiftTo',\n            {\n              peer: renderPeerLink(peer?.id, peerTitle || fallbackPeerTitle),\n            },\n            {\n              withNodes: true,\n            },\n          )}\n        </h3>\n        <div className={styles.subtitle} style={`color: ${backdrop.textColor}`}>\n          {lang('GiftUnique', { title: action.gift.title, number: action.gift.number })}\n        </div>\n        <MiniTable data={tableData} style={`color: ${backdrop.textColor}`} valueClassName={styles.uniqueValue} />\n      </div>\n      <div\n        className={styles.actionButton}\n        style={buildStyle(adaptedPatternColor && `background-color: ${adaptedPatternColor}`)}\n      >\n        <Sparkles preset=\"button\" />\n        {lang('ActionViewButton')}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, action }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n    const messageSender = selectSender(global, message);\n    const giftSender = action.fromId ? selectPeer(global, action.fromId) : undefined;\n    const messageRecipient = message.isOutgoing ? selectPeer(global, message.chatId) : currentUser;\n    const giftRecipient = action.peerId ? selectPeer(global, action.peerId) : undefined;\n\n    return {\n      canPlayAnimatedEmojis,\n      sender: giftSender || messageSender,\n      recipient: giftRecipient || messageRecipient,\n    };\n  },\n)(StarGiftAction));\n","import { memo, useMemo, useState } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiMessageActionSuggestProfilePhoto } from '../../../../api/types/messageActions';\nimport { type ApiMessage, type ApiPeer, MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { fetchBlob } from '../../../../util/files';\nimport { renderPeerLink } from '../helpers/messageActions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport { type ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Avatar from '../../../common/Avatar';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\nimport CropModal from '../../../ui/CropModal';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  action: ApiMessageActionSuggestProfilePhoto;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst SuggestedPhotoAction = ({\n  message,\n  action,\n  peer,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { openMediaViewer, uploadProfilePhoto, showNotification } = getActions();\n  const { isOutgoing } = message;\n  const photo = action.photo;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = photo.isVideo;\n\n  const text = useMemo(() => {\n    const peerName = (peer && getPeerTitle(lang, peer)) || lang('ActionFallbackUser');\n    const peerLink = renderPeerLink(peer?.id, peerName);\n\n    if (isOutgoing) {\n      return lang('ActionSuggestedPhotoYou', { user: peerLink }, { withNodes: true });\n    }\n\n    return lang('ActionSuggestedPhoto', { user: peerLink }, { withNodes: true });\n  }, [lang, isOutgoing, peer]);\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ActionSuggestedPhotoUpdatedTitle'),\n      message: lang('ActionSuggestedPhotoUpdatedDescription'),\n      action: {\n        action: 'openSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <div className={styles.contentBox} tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        className={styles.suggestedAvatar}\n        photo={action.photo}\n        loopIndefinitely\n        withVideo\n        observeIntersection={observeIntersection}\n        size=\"jumbo\"\n      />\n      <div className={styles.suggestedText}>\n        {text}\n      </div>\n      <div className={styles.actionButton}>\n        {lang('ActionSuggestedPhotoButton')}\n      </div>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('ActionSuggestedVideoTitle')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        text={lang('ActionSuggestedVideoText')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const peer = selectPeer(global, message.chatId);\n\n    return {\n      peer,\n    };\n  },\n)(SuggestedPhotoAction));\n","import { memo } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../../api/types';\nimport type { ApiMessageActionSuggestedPostApproval } from '../../../../api/types/messageActions';\n\nimport { STARS_SUGGESTED_POST_AGE_MIN, TON_CURRENCY_CODE } from '../../../../config';\nimport { getPeerFullTitle } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { selectIsMonoforumAdmin, selectMonoforumChannel,\n  selectReplyMessage,\n  selectSender } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatScheduledDateTime, formatShortDuration } from '../../../../util/dates/dateFormat';\nimport { convertTonFromNanos } from '../../../../util/formatCurrency';\nimport { formatStarsAsText, formatTonAsText } from '../../../../util/localization/format';\nimport { getServerTime } from '../../../../util/serverTime';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderPeerLink, translateWithYou } from '../helpers/messageActions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  action: ApiMessageActionSuggestedPostApproval;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  chat?: ApiPeer;\n  originalSender?: ApiPeer;\n  ageMinSeconds: number;\n  isAdmin: boolean;\n};\n\nconst SuggestedPostApproval = ({\n  message,\n  action,\n  sender,\n  chat,\n  originalSender,\n  ageMinSeconds,\n  isAdmin,\n  onClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const { scheduleDate, amount } = action;\n\n  const chatTitle = chat && getPeerFullTitle(lang, chat);\n  const renderChatLink = () => renderPeerLink(chat?.id, chatTitle || lang('ActionFallbackChat'));\n\n  const originalSenderTitle = originalSender && getPeerFullTitle(lang, originalSender);\n  const originalSenderLink = renderPeerLink(originalSender?.id, originalSenderTitle || lang('ActionFallbackUser'));\n\n  const publishDate = scheduleDate\n    ? formatScheduledDateTime(scheduleDate, lang, oldLang)\n    : lang('SuggestMessageAnytime');\n\n  const isPostPublished = scheduleDate ? scheduleDate <= getServerTime() : false;\n\n  const currency = amount?.currency;\n  const amountValue = amount?.amount || 0;\n\n  const formattedAmount = amountValue > 0\n    ? (currency === TON_CURRENCY_CODE\n      ? formatTonAsText(lang, convertTonFromNanos(amountValue))\n      : formatStarsAsText(lang, amountValue))\n    : undefined;\n\n  const duration = formatShortDuration(lang, ageMinSeconds, true);\n\n  return (\n    <div\n      className={buildClassName(styles.contentBox, styles.suggestedPostContentBox)}\n      onClick={onClick}\n    >\n      <div className={styles.suggestedPostApprovalTitle}>\n        {renderText(lang('SuggestedPostAgreementReached'))}\n      </div>\n\n      <div className={styles.suggestedPostApprovalSection}>\n        {translateWithYou(\n          lang,\n          isPostPublished ? 'SuggestedPostPublished' : 'SuggestedPostPublishSchedule',\n          !isAdmin,\n          { peer: renderChatLink(), date: publishDate },\n          { withMarkdown: true },\n        )}\n      </div>\n\n      {formattedAmount && (\n        <div className={styles.suggestedPostApprovalSection}>\n          {translateWithYou(lang,\n            'SuggestedPostCharged',\n            !isAdmin,\n            {\n              user: originalSenderLink,\n              amount: formattedAmount,\n            },\n            { withMarkdown: true },\n          )}\n        </div>\n      )}\n\n      {isPostPublished && formattedAmount && (\n        <>\n          <div className={styles.suggestedPostApprovalSection}>\n            {translateWithYou(lang, 'SuggestedPostReceiveAmount', !isAdmin, {\n              peer: renderChatLink(),\n              duration,\n              currency: currency === TON_CURRENCY_CODE ? lang('CurrencyTon') : lang('CurrencyStars'),\n            }, { withMarkdown: true })}\n          </div>\n\n          <div className={styles.suggestedPostApprovalSection}>\n            {translateWithYou(lang, 'SuggestedPostRefund', !isAdmin, {\n              peer: renderChatLink(),\n              duration,\n              currency: currency === TON_CURRENCY_CODE ? lang('CurrencyTon') : lang('CurrencyStars'),\n            }, { withMarkdown: true })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const sender = selectSender(global, message);\n    const chat = selectMonoforumChannel(global, message.chatId);\n\n    const replyInfo = getMessageReplyInfo(message);\n    let originalSender: ApiPeer | undefined;\n\n    if (replyInfo?.type === 'message' && replyInfo.replyToMsgId) {\n      const replyMessage = selectReplyMessage(global, message);\n      if (replyMessage) {\n        originalSender = selectSender(global, replyMessage);\n      }\n    }\n\n    const { appConfig } = global;\n    const ageMinSeconds = appConfig?.starsSuggestedPostAgeMin || STARS_SUGGESTED_POST_AGE_MIN;\n    const isAdmin = chat ? Boolean(selectIsMonoforumAdmin(global, message.chatId)) : false;\n\n    return {\n      sender,\n      chat,\n      originalSender,\n      ageMinSeconds,\n      isAdmin,\n    };\n  },\n)(SuggestedPostApproval));\n","import { memo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../../api/types';\nimport type { ApiMessageActionSuggestedPostApproval } from '../../../../api/types/messageActions';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { getPeerFullTitle } from '../../../../global/helpers/peers';\nimport { selectChatMessage, selectSender } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderPeerLink } from '../helpers/messageActions';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Sparkles from '../../../common/Sparkles';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  action: ApiMessageActionSuggestedPostApproval;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  replyMessageSender?: ApiPeer;\n  replyMessage?: ApiMessage;\n};\n\nconst SuggestedPostBalanceTooLow = ({\n  onClick,\n  message,\n  sender,\n  replyMessageSender,\n  replyMessage,\n}: OwnProps & StateProps) => {\n  const { openStarsBalanceModal } = getActions();\n  const lang = useLang();\n\n  const handleGetMoreStars = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    openStarsBalanceModal({});\n  });\n\n  const targetPeer = replyMessageSender || sender;\n  const peerTitle = targetPeer && getPeerFullTitle(lang, targetPeer);\n  const peerLink = renderPeerLink(targetPeer?.id, peerTitle || lang('ActionFallbackUser'));\n\n  const currency = replyMessage?.suggestedPostInfo?.price?.currency || STARS_CURRENCY_CODE;\n  const currencyName = currency === TON_CURRENCY_CODE ? lang('CurrencyTon') : lang('CurrencyStars');\n  const buyButtonText = currency === TON_CURRENCY_CODE ? lang('ButtonTopUpViaFragment') : lang('ButtonBuyStars');\n\n  return (\n    <div\n      className={buildClassName(styles.contentBox, styles.suggestedPostBalanceTooLowBox)}\n      onClick={onClick}\n    >\n      <div className={styles.suggestedPostBalanceTooLowTitle}>\n        {lang('SuggestedPostBalanceTooLow', {\n          peer: peerLink,\n          currency: currencyName,\n        }, { withNodes: true, withMarkdown: true })}\n      </div>\n\n      {!message.isOutgoing && (\n        <div className={styles.actionButton} onClick={handleGetMoreStars}>\n          <Sparkles preset=\"button\" />\n          {buyButtonText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const sender = selectSender(global, message);\n\n    const replyMessage = message.replyInfo?.type === 'message' && message.replyInfo.replyToMsgId\n      ? selectChatMessage(global, message.chatId, message.replyInfo.replyToMsgId)\n      : undefined;\n\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage) : undefined;\n\n    return {\n      sender,\n      replyMessageSender,\n      replyMessage,\n    };\n  },\n)(SuggestedPostBalanceTooLow));\n","import { memo } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../../api/types';\nimport type { ApiMessageActionSuggestedPostApproval } from '../../../../api/types/messageActions';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectSender } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderPeerLink, translateWithYou } from '../helpers/messageActions';\n\nimport useLang from '../../../../hooks/useLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from '../ActionMessage.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  action: ApiMessageActionSuggestedPostApproval;\n  onClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n};\n\nconst SuggestedPostRejected = ({\n  message,\n  action,\n  sender,\n  onClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const { isOutgoing } = message;\n  const { rejectComment } = action;\n\n  const senderTitle = sender && getPeerTitle(lang, sender);\n  const senderLink = renderPeerLink(sender?.id, senderTitle || lang('ActionFallbackUser'));\n\n  return (\n    <div\n      className={buildClassName(styles.contentBox, styles.suggestedPostRejectedContentBox)}\n      onClick={onClick}\n    >\n      <div className={styles.suggestedPostRejectedTitle}>\n        <Icon className={styles.rejectedIcon} name=\"close\" />\n        {translateWithYou(\n          lang,\n          rejectComment ? 'SuggestedPostRejectedWithReason' : 'SuggestedPostRejected',\n          isOutgoing,\n          { peer: senderLink },\n          { withMarkdown: true },\n        )}\n      </div>\n\n      {rejectComment && (\n        <div className={styles.suggestedPostRejectedComment}>\n          {lang('SuggestedPostRejectedComment', { comment: rejectComment })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const sender = selectSender(global, message);\n\n    return {\n      sender,\n    };\n  },\n)(SuggestedPostRejected));\n","import { useEffect } from '../../../../lib/teact/teact';\n\nimport { SVG_NAMESPACE } from '../../../../config';\nimport { addSvgDefinition, removeSvgDefinition } from '../../../../util/svgController';\n\nconst SVG_MAP = new Map<string, SvgFluidBackgroundFilter>();\n\nclass SvgFluidBackgroundFilter {\n  public filterId: string;\n\n  private referenceCount = 0;\n\n  constructor(public color: string) {\n    this.filterId = `fluid-background-filter-${color.slice(1)}`;\n\n    addSvgDefinition((\n      <filter color-interpolation-filters=\"sRGB\" xmlns={SVG_NAMESPACE}>\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"4\" result=\"blur\" />\n        <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 30 -15\" result=\"goo\" />\n        <feComposite in=\"SourceAlpha\" in2=\"goo\" operator=\"over\" result=\"outline\" />\n        <feFlood flood-color={color} result=\"color\" />\n        <feComposite in=\"color\" in2=\"outline\" operator=\"in\" />\n      </filter>\n    ), this.filterId);\n  }\n\n  public getFilterId() {\n    this.referenceCount += 1;\n    return this.filterId;\n  }\n\n  public removeReference() {\n    this.referenceCount -= 1;\n    if (this.referenceCount === 0) {\n      removeSvgDefinition(this.filterId);\n    }\n  }\n\n  public isUsed() {\n    return this.referenceCount > 0;\n  }\n}\n\nexport default function useFluidBackgroundFilter(color?: string, asValue?: boolean) {\n  useEffect(() => {\n    if (!color) return undefined;\n\n    return () => {\n      const colorFilter = SVG_MAP.get(color);\n      if (colorFilter) {\n        colorFilter.removeReference();\n        if (!colorFilter.isUsed()) {\n          SVG_MAP.delete(colorFilter.color);\n        }\n      }\n    };\n  }, [color]);\n\n  if (!color) return undefined;\n\n  if (SVG_MAP.has(color)) {\n    const svg = SVG_MAP.get(color)!;\n    return prepareStyle(svg.getFilterId(), asValue);\n  }\n\n  const svg = new SvgFluidBackgroundFilter(color);\n  SVG_MAP.set(color, svg);\n\n  return prepareStyle(svg.getFilterId(), asValue);\n}\n\nfunction prepareStyle(filterId: string, asValue?: boolean) {\n  if (asValue) {\n    return `url(#${filterId})`;\n  }\n\n  return `filter: url(#${filterId});`;\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n"],"names":["memo","buildClassName","styles","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","MiniTable","data","style","className","valueClassName","keyClassName","root","children","map","key","value","useMemo","getActions","DEFAULT_STATUS_ICON_ID","TME_LINK_PREFIX","copyTextToClipboard","formatDateAtTime","getServerTime","useLang","useLastCallback","useOldLang","MenuItem","GiftMenuItems","peerId","canManage","gift","typeGift","currentUserEmojiStatus","collectibleEmojiStatuses","showNotification","openChatWithDraft","openGiftTransferModal","openGiftResalePriceComposerModal","openGiftStatusInfoModal","setEmojiStatus","toggleSavedGiftPinned","changeGiftVisibility","updateStarGiftPrice","closeGiftInfoModal","lang","oldLang","isSavedGift","savedGift","undefined","starGiftUniqueSlug","type","slug","starGiftUniqueLink","userCollectibleStatus","find","status","currenUniqueEmojiStatusSlug","isGiftUnique","canTakeOff","canWear","giftResalePrice","resellPriceInStars","hasPinOptions","isUnsaved","handleTriggerVisibility","inputGift","shouldUnsave","handleCopyLink","message","handleLinkShare","text","handleTransfer","canTransferAt","variables","date","handleSell","canResellAt","handleUnsell","price","icon","title","number","handleWear","emojiStatus","handleTakeOff","documentId","handleTogglePin","isPinned","onClick","Boolean","withGlobal","selectTheme","useUniqueId","COLORS","red","blue","purple","green","COLOR_KEYS","Set","Object","keys","GiftRibbon","color","theme","randomId","validSvgRandomId","colorKey","has","isDarkTheme","gradientColor","Array","isArray","startColor","endColor","ribbon","width","height","viewBox","fill","d","id","x1","y1","x2","y2","gradientUnits","offset","global","useEffect","useRef","useUnmountCleanup","MAIN_THREAD_ID","MediaViewerOrigin","MESSAGE_APPEARANCE_DELAY","getMessageHtmlId","getMessageReplyInfo","selectChat","selectChatMessage","selectIsCurrentUserFrozen","selectIsCurrentUserPremium","selectIsInSelectMode","selectIsMessageFocused","selectSender","selectTabState","IS_ANDROID","IS_ELECTRON","IS_FLUID_BACKGROUND_SUPPORTED","isLocalMessageId","isElementInViewport","preventMessageInputBlur","useAppLayout","useContextMenuHandlers","useEnsureMessage","useFlag","useOnIntersect","useMessageResizeObserver","useShowTransition","useFluidBackgroundFilter","useFocusMessage","ActionMessageText","ChannelPhoto","Gift","GiveawayPrize","StarGift","StarGiftUnique","SuggestedPhoto","SuggestedPostApproval","SuggestedPostBalanceTooLow","SuggestedPostRejected","ContextMenuContainer","Reactions","SimilarChannels","SINGLE_LINE_ACTIONS","HIDDEN_TEXT_ACTIONS","ActionMessage","threadId","sender","currentUserId","appearanceOrder","isJustAdded","isLastInList","memoFirstUnreadIdRef","getIsMessageListReady","isInsideTopic","isFocused","focusDirection","noFocusHighlight","replyMessage","patternColor","isCurrentUserPremium","isInSelectMode","hasUnreadReaction","isResizingContainer","scrollTargetPosition","onIntersectPinnedMessage","observeIntersectionForBottom","observeIntersectionForLoading","observeIntersectionForPlaying","isAccountFrozen","requestConfetti","openMediaViewer","getReceipt","checkGiftCode","openPrizeStarsTransactionFromGiveaway","openPremiumModal","openStarsTransactionFromGift","openGiftInfoModalFromMessage","toggleChannelRecommendations","animateUnreadReaction","markMentionsRead","focusMessage","ref","chatId","action","content","isLocal","isTextHidden","isSingleLine","isFluidMultiline","isClickableText","messageReplyInfo","replyToMsgId","replyToPeerId","withServiceReactions","areReactionsPossible","reactions","results","length","shouldSkipRender","isTouchScreen","elementRef","viewportPinnedIdsToRemove","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","isContextMenuShown","handleMouseDown","e","noAppearanceAnimation","isShown","markShown","setTimeout","refWithTransition","isOpen","noOpenTransition","noCloseTransition","bottomMarker","current","messageIds","hasUnreadMention","fluidBackgroundStyle","handleClick","messageId","origin","ChannelAvatar","isGift","fromUserId","toUserId","monthsAmount","months","replyInfo","fullContent","photo","observeIntersection","isBalanceTooLow","isRejected","singleLine","fluidMultiline","hasFullContent","onMouseDown","onContextMenu","inlineWrapper","hoverable","fluidBackground","textContent","anchor","messageListType","contextContainer","onClose","onCloseAnimationEnd","isOutside","tabState","themes","settings","chat","isForum","direction","noHighlight","focusedMessage","unreadReactions","includes","useState","getGlobal","selectChatFullInfo","selectSimilarChannelIds","formatIntegerCompact","useTimeout","useAverageColor","useHorizontalScroll","Avatar","Icon","Button","Skeleton","DEFAULT_BADGE_COLOR","SHOW_CHANNELS_NUMBER","ANIMATION_DURATION","MIN_SKELETON_DELAY","MAX_SKELETON_DELAY","AUTO_EXPAND_TIME","similarChannelIds","isExpanded","count","channelJoinInfo","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","ignoreAutoScrollRef","similarChannels","filter","shouldRenderSkeleton","setShouldRenderSkeleton","firstSimilarChannels","slice","areSimilarChannelsPresent","isAnimating","shouldRenderChannels","clearTimeout","scrollIntoView","behavior","handleToggle","joinedDate","skeleton","isAppearing","notch","xmlns","notchPath","inner","header","close","name","channelList","channel","i","MoreChannels","channelsCount","SimilarChannel","openChat","item","avatar","size","peer","badge","membersCount","channelTitle","openChatWithInfo","handleClickMore","shouldReplaceHistory","profileTab","forceScrollProfileTab","lastItem","fakeAvatar","fakeAvatarInner","lastFakeAvatar","chatFullInfo","joinInfo","REM","AVATAR_SIZE","ChannelPhotoAction","channelPhoto","loopIndefinitely","withVideo","selectCanPlayAnimatedEmojis","selectGiftStickerForDuration","selectGiftStickerForStars","selectGiftStickerForTon","formatCurrency","renderTextWithEntities","Sparkles","StickerView","STICKER_SIZE","GiftAction","sticker","canPlayAnimatedEmojis","stickerRef","renderTonTitle","cryptoAmount","cryptoCurrency","asFontIcon","contentBox","tabIndex","role","stickerWrapper","containerRef","noLoad","info","pluralValue","amount","stars","actionButton","preset","getPeerTitle","renderPeerLink","translateWithYou","GiveawayPrizeAction","channelLink","channelFallbackText","peerLink","peerTitle","peerFallbackText","isViaGiveaway","withNodes","withMarkdown","renderTextFilters","boostPeerId","isChatChannel","isApiPeerChat","selectPeer","selectUser","formatStarsAsText","getStickerFromGift","useDynamicColorListener","StarGiftAction","recipient","starGiftMaxConvertPeriod","isOutgoing","isChannel","backgroundColor","availabilityTotal","fallbackPeerTitle","isSelf","giftDescription","starsAmount","starsToConvert","isUpgraded","alreadyPaidUpgradeStars","isConverted","starGift","total","subtitle","currentUser","messageSender","giftSender","fromId","messageRecipient","giftRecipient","appConfig","buildStyle","getGiftAttributes","RadialPatternBackground","attributes","model","pattern","backdrop","backgroundColors","centerColor","edgeColor","adaptedPatternColor","tableData","shouldShowFrom","isUpgrade","uniqueGift","uniqueBackgroundWrapper","uniqueBackground","patternIcon","clearBottomSector","textColor","uniqueValue","SettingsScreens","getPhotoMediaHash","getVideoProfilePhotoMediaHash","fetchBlob","useMedia","ConfirmDialog","CropModal","SuggestedPhotoAction","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","isVideo","peerName","user","showAvatarNotification","payload","screen","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","blob","File","videoTs","videoSizes","l","videoStartTs","handleViewSuggestedAvatar","SuggestedAvatar","suggestedAvatar","suggestedText","onChange","confirmHandler","STARS_SUGGESTED_POST_AGE_MIN","TON_CURRENCY_CODE","getPeerFullTitle","selectIsMonoforumAdmin","selectMonoforumChannel","selectReplyMessage","formatScheduledDateTime","formatShortDuration","convertTonFromNanos","formatTonAsText","renderText","originalSender","ageMinSeconds","isAdmin","scheduleDate","chatTitle","renderChatLink","originalSenderTitle","originalSenderLink","publishDate","isPostPublished","currency","amountValue","formattedAmount","duration","suggestedPostContentBox","suggestedPostApprovalTitle","suggestedPostApprovalSection","starsSuggestedPostAgeMin","STARS_CURRENCY_CODE","replyMessageSender","openStarsBalanceModal","handleGetMoreStars","preventDefault","stopPropagation","targetPeer","suggestedPostInfo","currencyName","buyButtonText","suggestedPostBalanceTooLowBox","suggestedPostBalanceTooLowTitle","rejectComment","senderTitle","senderLink","suggestedPostRejectedContentBox","suggestedPostRejectedTitle","rejectedIcon","suggestedPostRejectedComment","comment","SVG_NAMESPACE","addSvgDefinition","removeSvgDefinition","SVG_MAP","Map","SvgFluidBackgroundFilter","referenceCount","constructor","filterId","in","stdDeviation","result","mode","values","in2","operator","getFilterId","removeReference","isUsed","asValue","colorFilter","get","delete","svg","prepareStyle","set","ApiMediaFormat","getChatAvatarHash","getAverageColor","rgb2hex","fallbackColor","setColor","imgBlobUrl","BlobUrl","averageColor"],"sourceRoot":""}