{"version":3,"file":"BundleMain.719f0628e423541b448c.js","mappings":"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","sources":["webpack://telegram-t/./src/bundles/main.ts","webpack://telegram-t/./src/components/calls/ActiveCallHeader.async.tsx","webpack://telegram-t/./src/components/calls/group/GroupCall.async.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCall.async.tsx","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.async.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.async.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.async.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/PreviewMedia.tsx","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.async.tsx","webpack://telegram-t/./src/components/common/SeenByModal.async.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.async.tsx","webpack://telegram-t/./src/components/common/UnreadCounter.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.async.tsx","webpack://telegram-t/./src/components/common/gift/SavedGift.module.scss?4193","webpack://telegram-t/./src/components/common/gift/SavedGift.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.async.tsx","webpack://telegram-t/./src/components/left/ConnectionStatusOverlay.scss?68e4","webpack://telegram-t/./src/components/left/ConnectionStatusOverlay.tsx","webpack://telegram-t/./src/components/left/LeftColumn.scss?a37a","webpack://telegram-t/./src/components/left/LeftColumn.tsx","webpack://telegram-t/./src/components/left/NewChatButton.scss?e572","webpack://telegram-t/./src/components/left/NewChatButton.tsx","webpack://telegram-t/./src/components/left/main/AccountMenuItems.tsx","webpack://telegram-t/./src/components/left/main/ChatFolders.tsx","webpack://telegram-t/./src/components/left/main/ContactList.async.tsx","webpack://telegram-t/./src/components/left/main/LeftMain.scss?c60d","webpack://telegram-t/./src/components/left/main/LeftMain.tsx","webpack://telegram-t/./src/components/left/main/LeftMainHeader.scss?35c4","webpack://telegram-t/./src/components/left/main/LeftMainHeader.tsx","webpack://telegram-t/./src/components/left/main/LeftSideMenuItems.tsx","webpack://telegram-t/./src/components/left/main/StatusButton.tsx","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.async.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.async.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.async.tsx","webpack://telegram-t/./src/components/left/settings/Settings.async.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.async.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.async.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.async.tsx","webpack://telegram-t/./src/components/main/Dialogs.async.tsx","webpack://telegram-t/./src/components/main/DownloadManager.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.async.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.async.tsx","webpack://telegram-t/./src/components/main/GameModal.scss?4db8","webpack://telegram-t/./src/components/main/GameModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.async.tsx","webpack://telegram-t/./src/components/main/LockScreen.module.scss?8252","webpack://telegram-t/./src/components/main/LockScreen.tsx","webpack://telegram-t/./src/components/main/Main.scss?00aa","webpack://telegram-t/./src/components/main/Main.tsx","webpack://telegram-t/./src/components/main/NewContactModal.async.tsx","webpack://telegram-t/./src/components/main/Notifications.async.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.async.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.async.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.async.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.async.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.async.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.async.tsx","webpack://telegram-t/./src/components/main/visualEffects/ConfettiContainer.module.scss?a4ff","webpack://telegram-t/./src/components/main/visualEffects/ConfettiContainer.tsx","webpack://telegram-t/./src/components/main/visualEffects/WaveContainer.module.scss?b372","webpack://telegram-t/./src/components/main/visualEffects/WaveContainer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.async.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.async.tsx","webpack://telegram-t/./src/components/middle/ContactGreeting.module.scss?8a0f","webpack://telegram-t/./src/components/middle/ContactGreeting.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.async.tsx","webpack://telegram-t/./src/components/middle/FloatingActionButtons.module.scss?b2b2","webpack://telegram-t/./src/components/middle/FloatingActionButtons.tsx","webpack://telegram-t/./src/components/middle/FrozenAccountPlaceholder.module.scss?f487","webpack://telegram-t/./src/components/middle/FrozenAccountPlaceholder.tsx","webpack://telegram-t/./src/components/middle/MessageList.scss?8c89","webpack://telegram-t/./src/components/middle/MessageList.tsx","webpack://telegram-t/./src/components/middle/MessageListAccountInfo.module.scss?912e","webpack://telegram-t/./src/components/middle/MessageListAccountInfo.tsx","webpack://telegram-t/./src/components/middle/MessageListContent.tsx","webpack://telegram-t/./src/components/middle/MessageListHistoryHandler.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.async.tsx","webpack://telegram-t/./src/components/middle/MiddleColumn.module.scss?b2f0","webpack://telegram-t/./src/components/middle/MiddleColumn.scss?caee","webpack://telegram-t/./src/components/middle/MiddleColumn.tsx","webpack://telegram-t/./src/components/middle/MiddleHeader.scss?3d02","webpack://telegram-t/./src/components/middle/MiddleHeader.tsx","webpack://telegram-t/./src/components/middle/MiddleHeaderPanes.module.scss?d2aa","webpack://telegram-t/./src/components/middle/MiddleHeaderPanes.tsx","webpack://telegram-t/./src/components/middle/NoMessages.scss?ea80","webpack://telegram-t/./src/components/middle/NoMessages.tsx","webpack://telegram-t/./src/components/middle/PinnedMessageNavigation.module.scss?cd96","webpack://telegram-t/./src/components/middle/PinnedMessageNavigation.tsx","webpack://telegram-t/./src/components/middle/PremiumRequiredPlaceholder.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.async.tsx","webpack://telegram-t/./src/components/middle/RequirementToContactMessage.module.scss?677e","webpack://telegram-t/./src/components/middle/RequirementToContactMessage.tsx","webpack://telegram-t/./src/components/middle/ScrollDownButton.module.scss?272e","webpack://telegram-t/./src/components/middle/ScrollDownButton.tsx","webpack://telegram-t/./src/components/middle/helpers/calculateMiddleFooterTransforms.ts","webpack://telegram-t/./src/components/middle/helpers/groupMessages.ts","webpack://telegram-t/./src/components/middle/hooks/useContainerHeight.ts","webpack://telegram-t/./src/components/middle/hooks/useMessageObservers.ts","webpack://telegram-t/./src/components/middle/hooks/usePinnedMessage.ts","webpack://telegram-t/./src/components/middle/hooks/useScrollHooks.ts","webpack://telegram-t/./src/components/middle/hooks/useStickyDates.ts","webpack://telegram-t/./src/components/middle/message/SenderGroupContainer.module.scss?0f2f","webpack://telegram-t/./src/components/middle/message/SenderGroupContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessage.scss?7f4d","webpack://telegram-t/./src/components/middle/message/SponsoredMessage.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.async.tsx","webpack://telegram-t/./src/components/middle/panes/AudioPlayer.scss?e395","webpack://telegram-t/./src/components/middle/panes/AudioPlayer.tsx","webpack://telegram-t/./src/components/middle/panes/BotAdPane.module.scss?ff1a","webpack://telegram-t/./src/components/middle/panes/BotAdPane.tsx","webpack://telegram-t/./src/components/middle/panes/BotVerificationPane.module.scss?a09a","webpack://telegram-t/./src/components/middle/panes/BotVerificationPane.tsx","webpack://telegram-t/./src/components/middle/panes/ChatReportPane.scss?324b","webpack://telegram-t/./src/components/middle/panes/ChatReportPane.tsx","webpack://telegram-t/./src/components/middle/panes/HeaderPinnedMessage.module.scss?7a09","webpack://telegram-t/./src/components/middle/panes/HeaderPinnedMessage.tsx","webpack://telegram-t/./src/components/middle/panes/PaidMessageChargePane.module.scss?0dc7","webpack://telegram-t/./src/components/middle/panes/PaidMessageChargePane.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.async.tsx","webpack://telegram-t/./src/components/modals/ModalContainer.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.async.tsx","webpack://telegram-t/./src/components/modals/ageVerification/AgeVerificationModal.async.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.async.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.async.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.async.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.async.tsx","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.async.tsx","webpack://telegram-t/./src/components/modals/deleteAccount/DeleteAccountModal.async.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.async.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.async.tsx","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/transfer/GiftTransferModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.async.tsx","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.async.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.async.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.async.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.async.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.async.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.async.tsx","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.async.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.async.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.async.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.async.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.async.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.async.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.async.tsx","webpack://telegram-t/./src/components/modals/stars/chatRefund/ChatRefundModal.async.tsx","webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.async.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.async.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.async.tsx","webpack://telegram-t/./src/components/modals/suggestMessage/SuggestMessageModal.async.tsx","webpack://telegram-t/./src/components/modals/suggestedPostApproval/SuggestedPostApprovalModal.async.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.async.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.async.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.async.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.async.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.async.tsx","webpack://telegram-t/./src/components/right/AddChatMembers.scss?bf99","webpack://telegram-t/./src/components/right/AddChatMembers.tsx","webpack://telegram-t/./src/components/right/CreateTopic.async.tsx","webpack://telegram-t/./src/components/right/EditTopic.async.tsx","webpack://telegram-t/./src/components/right/GifSearch.async.tsx","webpack://telegram-t/./src/components/right/PollResults.async.tsx","webpack://telegram-t/./src/components/right/Profile.scss?9db0","webpack://telegram-t/./src/components/right/Profile.tsx","webpack://telegram-t/./src/components/right/RightColumn.scss?091a","webpack://telegram-t/./src/components/right/RightColumn.tsx","webpack://telegram-t/./src/components/right/RightColumnProfile.scss?5115","webpack://telegram-t/./src/components/right/RightColumnProfile.tsx","webpack://telegram-t/./src/components/right/RightColumnTrading.scss?3a5c","webpack://telegram-t/./src/components/right/RightColumnTrading.tsx","webpack://telegram-t/./src/components/right/RightHeader.scss?518b","webpack://telegram-t/./src/components/right/RightHeader.tsx","webpack://telegram-t/./src/components/right/StickerSearch.async.tsx","webpack://telegram-t/./src/components/right/hooks/useProfileState.ts","webpack://telegram-t/./src/components/right/hooks/useProfileViewportIds.ts","webpack://telegram-t/./src/components/right/hooks/useTransitionFixes.ts","webpack://telegram-t/./src/components/right/management/Management.async.tsx","webpack://telegram-t/./src/components/right/statistics/BoostStatistics.module.scss?692b","webpack://telegram-t/./src/components/right/statistics/BoostStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.async.tsx","webpack://telegram-t/./src/components/right/statistics/MonetizationStatistics.module.scss?4abc","webpack://telegram-t/./src/components/right/statistics/MonetizationStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.async.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.async.tsx","webpack://telegram-t/./src/components/story/MediaStory.module.scss?3a87","webpack://telegram-t/./src/components/story/MediaStory.tsx","webpack://telegram-t/./src/components/story/StoryViewer.async.tsx","webpack://telegram-t/./src/components/tradingview/TVChart/TVChart.tsx","webpack://telegram-t/./src/components/tradingview/TVChart/datafeed.ts","webpack://telegram-t/./src/components/tradingview/TVChart/helpers.ts","webpack://telegram-t/./src/global/actions/all.ts","webpack://telegram-t/./src/global/actions/api/accounts.ts","webpack://telegram-t/./src/global/actions/api/bots.ts","webpack://telegram-t/./src/global/actions/api/globalSearch.ts","webpack://telegram-t/./src/global/actions/api/management.ts","webpack://telegram-t/./src/global/actions/api/messages.ts","webpack://telegram-t/./src/global/actions/api/middleSearch.ts","webpack://telegram-t/./src/global/actions/api/payments.ts","webpack://telegram-t/./src/global/actions/api/reactions.ts","webpack://telegram-t/./src/global/actions/api/stars.ts","webpack://telegram-t/./src/global/actions/api/statistics.ts","webpack://telegram-t/./src/global/actions/api/stories.ts","webpack://telegram-t/./src/global/actions/api/symbols.ts","webpack://telegram-t/./src/global/actions/api/sync.ts","webpack://telegram-t/./src/global/actions/api/twoFaSettings.ts","webpack://telegram-t/./src/global/actions/api/users.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/calls.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/chats.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/messages.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/misc.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/payments.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/settings.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/symbols.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/twoFaSettings.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/users.ts","webpack://telegram-t/./src/global/actions/ui/account.ts","webpack://telegram-t/./src/global/actions/ui/bots.ts","webpack://telegram-t/./src/global/actions/ui/chats.ts","webpack://telegram-t/./src/global/actions/ui/globalSearch.ts","webpack://telegram-t/./src/global/actions/ui/mediaViewer.ts","webpack://telegram-t/./src/global/actions/ui/messages.ts","webpack://telegram-t/./src/global/actions/ui/middleSearch.ts","webpack://telegram-t/./src/global/actions/ui/misc.ts","webpack://telegram-t/./src/global/actions/ui/passcode.ts","webpack://telegram-t/./src/global/actions/ui/payments.ts","webpack://telegram-t/./src/global/actions/ui/reactions.ts","webpack://telegram-t/./src/global/actions/ui/stars.ts","webpack://telegram-t/./src/global/actions/ui/statistics.ts","webpack://telegram-t/./src/global/actions/ui/stickerSearch.ts","webpack://telegram-t/./src/global/actions/ui/stories.ts","webpack://telegram-t/./src/global/actions/ui/users.ts","webpack://telegram-t/./src/global/helpers/meta.ts","webpack://telegram-t/./src/global/helpers/renderMessageSummaryHtml.ts","webpack://telegram-t/./src/global/reducers/bots.ts","webpack://telegram-t/./src/global/reducers/reactions.ts","webpack://telegram-t/./src/hooks/hellomoon/hmApi.ts","webpack://telegram-t/./src/hooks/useCacheBuster.ts","webpack://telegram-t/./src/hooks/useConnectionStatus.ts","webpack://telegram-t/./src/hooks/useMessageMediaMetadata.ts","webpack://telegram-t/./src/hooks/useNativeCopySelectedMessages.ts","webpack://telegram-t/./src/hooks/usePreventPinchZoomGesture.ts","webpack://telegram-t/./src/hooks/useResize.ts","webpack://telegram-t/./src/hooks/window/useBrowserOnline.ts","webpack://telegram-t/./src/util/PopupManager.ts","webpack://telegram-t/./src/util/formatNumber.ts","webpack://telegram-t/./src/util/getIsAppUpdateNeeded.ts","webpack://telegram-t/./src/util/payments/stripe.ts","webpack://telegram-t/./src/util/requestQuery.ts","webpack://telegram-t/./src/util/updateIcon.ts","webpack://telegram-t/./src/util/updatePageTitle.ts","webpack://telegram-t/ignored|/Users/hankchen/Code/hellomoon/m7/telegram-tt/node_modules/bn.js/lib|buffer"],"sourcesContent":["import { DEBUG } from '../config';\n\nexport { default as Main } from '../components/main/Main';\nexport { default as LockScreen } from '../components/main/LockScreen';\n\nif (DEBUG) {\n  // eslint-disable-next-line no-console\n  console.log('>>> FINISH LOAD MAIN BUNDLE');\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\ntype OwnProps = {\n  isActive?: boolean;\n};\n\nconst ActiveCallHeaderAsync: FC<OwnProps> = (props) => {\n  const { isActive } = props;\n  const ActiveCallHeader = useModuleLoader(Bundles.Calls, 'ActiveCallHeader', !isActive);\n\n  return ActiveCallHeader ? <ActiveCallHeader /> : undefined;\n};\n\nexport default ActiveCallHeaderAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './GroupCall';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst GroupCallAsync: FC<OwnProps> = (props) => {\n  const { groupCallId } = props;\n  const GroupCall = useModuleLoader(Bundles.Calls, 'GroupCall', !groupCallId);\n\n  return GroupCall ? <GroupCall {...props} /> : undefined;\n};\n\nexport default GroupCallAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\ntype OwnProps = {\n  isActive?: boolean;\n};\n\nconst PhoneCallAsync: FC<OwnProps> = (props) => {\n  const { isActive } = props;\n  const PhoneCall = useModuleLoader(Bundles.Calls, 'PhoneCall', !isActive);\n\n  return PhoneCall ? <PhoneCall /> : undefined;\n};\n\nexport default PhoneCallAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './RatePhoneCallModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst RatePhoneCallModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const RatePhoneCallModal = useModuleLoader(Bundles.Calls, 'RatePhoneCallModal', !isOpen);\n\n  return RatePhoneCallModal ? <RatePhoneCallModal {...props} /> : undefined;\n};\n\nexport default RatePhoneCallModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './AboutMonetizationModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst AboutMonetizationModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const AboutMonetizationModal = useModuleLoader(Bundles.Extra, 'AboutMonetizationModal', !isOpen);\n\n  return AboutMonetizationModal ? <AboutMonetizationModal {...props} /> : undefined;\n};\n\nexport default AboutMonetizationModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiSetsModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CustomEmojiSetsModalAsync: FC<OwnProps> = (props) => {\n  const { customEmojiSetIds } = props;\n  const CustomEmojiSetsModal = useModuleLoader(Bundles.Extra, 'CustomEmojiSetsModal', !customEmojiSetIds);\n\n  return CustomEmojiSetsModal ? <CustomEmojiSetsModal {...props} /> : undefined;\n};\n\nexport default CustomEmojiSetsModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiBotPreviewMedia } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageMediaHash, getMessageMediaThumbDataUri,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  media: ApiBotPreviewMedia;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick: (index: number) => void;\n  index: number;\n};\n\nconst PreviewMedia: FC<OwnProps> = ({\n  media,\n  idPrefix = 'preview-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n  index,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(media);\n\n  const mediaBlobUrl = useMedia(getMessageMediaHash(media, 'preview'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = media.content.video;\n\n  const handleClick = useLastCallback(() => {\n    onClick(index);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${index}`}\n      className=\"Media scroll-item\"\n      onClick={handleClick}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(PreviewMedia);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PrivacySettingsNoticeModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PrivacySettingsNoticeModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PrivacySettingsNoticeModal = useModuleLoader(Bundles.Extra, 'PrivacySettingsNoticeModal', !isOpen);\n\n  return PrivacySettingsNoticeModal ? <PrivacySettingsNoticeModal {...props} /> : undefined;\n};\n\nexport default PrivacySettingsNoticeModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './SeenByModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst SeenByModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SeenByModal = useModuleLoader(Bundles.Extra, 'SeenByModal', !isOpen);\n\n  return SeenByModal ? <SeenByModal {...props} /> : undefined;\n};\n\nexport default SeenByModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerSetModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default StickerSetModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './UnpinAllMessagesModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst UnpinAllMessagesModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const UnpinAllMessagesModal = useModuleLoader(Bundles.Extra, 'UnpinAllMessagesModal', !isOpen);\n\n  return UnpinAllMessagesModal ? <UnpinAllMessagesModal {...props} /> : undefined;\n};\n\nexport default UnpinAllMessagesModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect } from '../../lib/teact/teact';\n\nimport { updateAppBadge } from '../../util/appBadge';\nimport { getAllNotificationsCount } from '../../util/folderManager';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport { useFolderManagerForUnreadCounters } from '../../hooks/useFolderManager';\nimport useLang from '../../hooks/useLang';\n\ninterface OwnProps {\n  isForAppBadge?: boolean;\n}\n\nconst UnreadCounter: FC<OwnProps> = ({ isForAppBadge }) => {\n  useFolderManagerForUnreadCounters();\n  const unreadNotificationsCount = getAllNotificationsCount();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (isForAppBadge) {\n      updateAppBadge(unreadNotificationsCount);\n    }\n  }, [isForAppBadge, unreadNotificationsCount]);\n\n  if (isForAppBadge || !unreadNotificationsCount) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"unread-count active\">{formatIntegerCompact(lang, unreadNotificationsCount)}</div>\n  );\n};\n\nexport default memo(UnreadCounter);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './VerificationMonetizationModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst VerificationMonetizationModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const VerificationMonetizationModal = useModuleLoader(Bundles.Extra, 'VerificationMonetizationModal', !modal);\n\n  return VerificationMonetizationModal ? <VerificationMonetizationModal {...props} /> : undefined;\n};\n\nexport default VerificationMonetizationModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HN4dYXIk\",\"topIcon\":\"_TMVTkD4\",\"hiddenGift\":\"xY4yqqYA\",\"radialPattern\":\"_I9aOdGr\",\"stickerWrapper\":\"NYuBBB9j\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiEmojiStatusType, ApiPeer, ApiSavedStarGift } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectChat, selectPeer, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { CUSTOM_PEER_HIDDEN } from '../../../util/objects/customPeer';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift, getTotalGiftAvailability } from '../helpers/gifts';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StickerView from '../../common/StickerView';\nimport Menu from '../../ui/Menu';\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\nimport RadialPatternBackground from '../profile/RadialPatternBackground';\nimport GiftMenuItems from './GiftMenuItems';\nimport GiftRibbon from './GiftRibbon';\n\nimport styles from './SavedGift.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  gift: ApiSavedStarGift;\n  style?: string;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  fromPeer?: ApiPeer;\n  currentUserId?: string;\n  hasAdminRights?: boolean;\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n};\n\nconst GIFT_STICKER_SIZE = 90;\n\nconst SavedGift = ({\n  peerId,\n  gift,\n  style,\n  fromPeer,\n  currentUserId,\n  hasAdminRights,\n  collectibleEmojiStatuses,\n  currentUserEmojiStatus,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { openGiftInfoModal } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const canManage = peerId === currentUserId || hasAdminRights;\n\n  const totalIssued = getTotalGiftAvailability(gift.gift);\n  const starGift = gift.gift;\n  const starGiftUnique = starGift.type === 'starGiftUnique' ? starGift : undefined;\n  const ribbonText = (() => {\n    if (starGiftUnique?.resellPriceInStars) {\n      return lang('GiftRibbonSale');\n    }\n    if (gift.isPinned && starGiftUnique) {\n      return lang('GiftSavedNumber', { number: starGiftUnique.number });\n    }\n    if (totalIssued) {\n      return lang('ActionStarGiftLimitedRibbon', { total: formatIntegerCompact(lang, totalIssued) });\n    }\n    return undefined;\n  })();\n\n  const ribbonColor = starGiftUnique?.resellPriceInStars ? 'green' : 'blue';\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => (\n    document.querySelector('#portals')?.querySelector('.saved-gift-context-menu .bubble')\n  ));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const handleClick = useLastCallback(() => {\n    openGiftInfoModal({\n      peerId,\n      gift,\n    });\n  });\n\n  const avatarPeer = (gift.isNameHidden && !fromPeer) ? CUSTOM_PEER_HIDDEN : fromPeer;\n\n  const sticker = getStickerFromGift(gift.gift);\n\n  const radialPatternBackdrop = useMemo(() => {\n    const { backdrop, pattern } = getGiftAttributes(gift.gift) || {};\n\n    if (!backdrop || !pattern) {\n      return undefined;\n    }\n\n    const backdropColors = [backdrop.centerColor, backdrop.edgeColor];\n    const patternColor = backdrop.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={pattern.sticker}\n      />\n    );\n  }, [gift.gift]);\n\n  if (!sticker) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.root, 'scroll-item')}\n      style={style}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onMouseDown={handleBeforeContextMenu}\n    >\n      {radialPatternBackdrop}\n      {!radialPatternBackdrop && <Avatar className={styles.topIcon} peer={avatarPeer} size=\"micro\" />}\n      {gift.isPinned && <Icon name=\"pinned-message\" className={styles.topIcon} />}\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${GIFT_STICKER_SIZE}px; height: ${GIFT_STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            observeIntersectionForPlaying={observeIntersection}\n            observeIntersectionForLoading={observeIntersection}\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={GIFT_STICKER_SIZE}\n            shouldPreloadPreview\n          />\n        )}\n\n      </div>\n      {gift.isUnsaved && (\n        <div className={styles.hiddenGift}>\n          <Icon name=\"eye-crossed-outline\" />\n        </div>\n      )}\n      {ribbonText && (\n        <GiftRibbon\n          color={ribbonColor}\n          text={ribbonText}\n        />\n      )}\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          className=\"saved-gift-context-menu\"\n          autoClose\n          withPortal\n          getMenuElement={getMenuElement}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getLayout={getLayout}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <GiftMenuItems\n            peerId={peerId}\n            gift={gift}\n            canManage={canManage}\n            collectibleEmojiStatuses={collectibleEmojiStatuses}\n            currentUserEmojiStatus={currentUserEmojiStatus}\n          />\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, gift }): StateProps => {\n    const fromPeer = gift.fromId ? selectPeer(global, gift.fromId) : undefined;\n    const chat = selectChat(global, peerId);\n    const hasAdminRights = chat && getHasAdminRight(chat, 'postMessages');\n\n    const currentUserId = global.currentUserId;\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n    const currentUserEmojiStatus = currentUser?.emojiStatus;\n    const collectibleEmojiStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      fromPeer,\n      hasAdminRights,\n      currentUserId,\n      currentUserEmojiStatus,\n      collectibleEmojiStatuses,\n    };\n  },\n)(SavedGift));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ArchivedChats';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nimport Loading from '../ui/Loading';\n\nconst ArchivedChatsAsync: FC<OwnProps> = (props) => {\n  const ArchivedChats = useModuleLoader(Bundles.Extra, 'ArchivedChats');\n\n  return ArchivedChats ? <ArchivedChats {...props} /> : <Loading />;\n};\n\nexport default ArchivedChatsAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ConnectionStatus } from '../../hooks/useConnectionStatus';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport './ConnectionStatusOverlay.scss';\n\ntype OwnProps = {\n  connectionStatus: ConnectionStatus;\n  connectionStatusText: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst ConnectionStatusOverlay: FC<OwnProps> = ({\n  connectionStatus,\n  connectionStatusText,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div id=\"ConnectionStatusOverlay\" dir={lang.isRtl ? 'rtl' : undefined} onClick={onClick}>\n      <Spinner color=\"black\" />\n      <div className=\"state-text\">\n        <Transition activeKey={connectionStatus} name=\"slideFade\">\n          {connectionStatusText}\n        </Transition>\n      </div>\n      <Button\n        round\n        size=\"tiny\"\n        color=\"translucent-black\"\n      >\n        <Icon name=\"close\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ConnectionStatusOverlay);\n","// extracted by mini-css-extract-plugin\nexport {};","import type {\n  ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FoldersActions } from '../../hooks/reducers/useFoldersReducer';\nimport type { ReducerAction } from '../../hooks/useReducer';\nimport { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport {\n  selectCurrentChat, selectIsCurrentUserFrozen, selectIsForumPanelOpen, selectTabState,\n} from '../../global/selectors';\nimport {\n  IS_APP, IS_FIREFOX, IS_MAC_OS, IS_TOUCH_ENV, LAYERS_ANIMATION_NAME,\n} from '../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { captureControlledSwipe } from '../../util/swipeController';\n\nimport useFoldersReducer from '../../hooks/reducers/useFoldersReducer';\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\n\nimport Transition from '../ui/Transition';\nimport ArchivedChats from './ArchivedChats.async';\nimport LeftMain from './main/LeftMain';\nimport NewChat from './newChat/NewChat.async';\nimport Settings from './settings/Settings.async';\n\nimport './LeftColumn.scss';\n\ninterface OwnProps {\n  ref: ElementRef<HTMLDivElement>;\n}\n\ntype StateProps = {\n  contentKey: LeftColumnContent;\n  settingsScreen: SettingsScreens;\n  searchQuery?: string;\n  searchDate?: number;\n  isFirstChatFolderActive: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  currentUserId?: string;\n  hasPasscode?: boolean;\n  nextFoldersAction?: ReducerAction<FoldersActions>;\n  isChatOpen: boolean;\n  isAppUpdateAvailable?: boolean;\n  isElectronUpdateAvailable?: boolean;\n  isForumPanelOpen?: boolean;\n  forumPanelChatId?: string;\n  isClosingSearch?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isArchivedStoryRibbonShown?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nenum ContentType {\n  Main,\n\n  Settings,\n  Archived,\n\n  NewGroup,\n\n  NewChannel,\n}\n\nconst RENDER_COUNT = Object.keys(ContentType).length / 2;\nconst RESET_TRANSITION_DELAY_MS = 250;\n\nfunction LeftColumn({\n  ref,\n  contentKey,\n  settingsScreen,\n  searchQuery,\n  searchDate,\n  isFirstChatFolderActive,\n  shouldSkipHistoryAnimations,\n  currentUserId,\n  hasPasscode,\n  nextFoldersAction,\n  isChatOpen,\n  isAppUpdateAvailable,\n  isElectronUpdateAvailable,\n  isForumPanelOpen,\n  forumPanelChatId,\n  isClosingSearch,\n  archiveSettings,\n  isArchivedStoryRibbonShown,\n  isAccountFrozen,\n}: OwnProps & StateProps) {\n  const {\n    setGlobalSearchQuery,\n    setGlobalSearchClosing,\n    setGlobalSearchChatId,\n    resetChatCreation,\n    setGlobalSearchDate,\n    loadPasswordInfo,\n    clearTwoFaError,\n    openChat,\n    openLeftColumnContent,\n    openSettingsScreen,\n  } = getActions();\n\n  const [contactsFilter, setContactsFilter] = useState<string>('');\n  const [foldersState, foldersDispatch] = useFoldersReducer();\n\n  // Used to reset child components in background.\n  const [lastResetTime, setLastResetTime] = useState<number>(0);\n\n  let contentType: ContentType = ContentType.Main;\n  switch (contentKey) {\n    case LeftColumnContent.Archived:\n      contentType = ContentType.Archived;\n      break;\n    case LeftColumnContent.Settings:\n      contentType = ContentType.Settings;\n      break;\n    case LeftColumnContent.NewChannelStep1:\n    case LeftColumnContent.NewChannelStep2:\n      contentType = ContentType.NewChannel;\n      break;\n    case LeftColumnContent.NewGroupStep1:\n    case LeftColumnContent.NewGroupStep2:\n      contentType = ContentType.NewGroup;\n      break;\n  }\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    function fullReset() {\n      openLeftColumnContent({ contentKey: undefined });\n      openSettingsScreen({ screen: undefined });\n      setContactsFilter('');\n      setGlobalSearchClosing({ isClosing: true });\n      resetChatCreation();\n      setTimeout(() => {\n        setGlobalSearchQuery({ query: '' });\n        setGlobalSearchDate({ date: undefined });\n        setGlobalSearchChatId({ id: undefined });\n        setGlobalSearchClosing({ isClosing: false });\n        setLastResetTime(Date.now());\n      }, RESET_TRANSITION_DELAY_MS);\n    }\n\n    if (forceReturnToChatList === true) {\n      fullReset();\n      return;\n    }\n\n    if (contentKey === LeftColumnContent.NewGroupStep2) {\n      openLeftColumnContent({ contentKey: LeftColumnContent.NewGroupStep1 });\n      return;\n    }\n\n    if (contentKey === LeftColumnContent.NewChannelStep2) {\n      openLeftColumnContent({ contentKey: LeftColumnContent.NewChannelStep1 });\n      return;\n    }\n\n    if (contentKey === LeftColumnContent.NewGroupStep1) {\n      const pickerSearchInput = document.getElementById('new-group-picker-search');\n      if (pickerSearchInput) {\n        pickerSearchInput.blur();\n      }\n    }\n\n    if (contentKey === LeftColumnContent.Settings) {\n      switch (settingsScreen) {\n        case SettingsScreens.EditProfile:\n        case SettingsScreens.Folders:\n        case SettingsScreens.General:\n        case SettingsScreens.Notifications:\n        case SettingsScreens.DataStorage:\n        case SettingsScreens.Privacy:\n        case SettingsScreens.Performance:\n        case SettingsScreens.ActiveSessions:\n        case SettingsScreens.Language:\n        case SettingsScreens.Stickers:\n        case SettingsScreens.Experimental:\n          openSettingsScreen({ screen: SettingsScreens.Main });\n          return;\n\n        case SettingsScreens.GeneralChatBackground:\n          openSettingsScreen({ screen: SettingsScreens.General });\n          return;\n        case SettingsScreens.GeneralChatBackgroundColor:\n          openSettingsScreen({ screen: SettingsScreens.GeneralChatBackground });\n          return;\n\n        case SettingsScreens.PrivacyPhoneNumber:\n        case SettingsScreens.PrivacyAddByPhone:\n        case SettingsScreens.PrivacyLastSeen:\n        case SettingsScreens.PrivacyProfilePhoto:\n        case SettingsScreens.PrivacyBio:\n        case SettingsScreens.PrivacyBirthday:\n        case SettingsScreens.PrivacyGifts:\n        case SettingsScreens.PrivacyPhoneCall:\n        case SettingsScreens.PrivacyPhoneP2P:\n        case SettingsScreens.PrivacyForwarding:\n        case SettingsScreens.PrivacyGroupChats:\n        case SettingsScreens.PrivacyVoiceMessages:\n        case SettingsScreens.PrivacyMessages:\n        case SettingsScreens.PrivacyBlockedUsers:\n        case SettingsScreens.ActiveWebsites:\n        case SettingsScreens.TwoFaDisabled:\n        case SettingsScreens.TwoFaEnabled:\n        case SettingsScreens.TwoFaCongratulations:\n        case SettingsScreens.PasscodeDisabled:\n        case SettingsScreens.PasscodeEnabled:\n        case SettingsScreens.PasscodeCongratulations:\n          openSettingsScreen({ screen: SettingsScreens.Privacy });\n          return;\n\n        case SettingsScreens.PasscodeNewPasscode:\n          openSettingsScreen({\n            screen: hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n          });\n          return;\n\n        case SettingsScreens.PasscodeChangePasscodeCurrent:\n        case SettingsScreens.PasscodeTurnOff:\n          openSettingsScreen({ screen: SettingsScreens.PasscodeEnabled });\n          return;\n\n        case SettingsScreens.PasscodeNewPasscodeConfirm:\n          openSettingsScreen({ screen: SettingsScreens.PasscodeNewPasscode });\n          return;\n\n        case SettingsScreens.PasscodeChangePasscodeNew:\n          openSettingsScreen({ screen: SettingsScreens.PasscodeChangePasscodeCurrent });\n          return;\n\n        case SettingsScreens.PasscodeChangePasscodeConfirm:\n          openSettingsScreen({ screen: SettingsScreens.PasscodeChangePasscodeNew });\n          return;\n\n        case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n        case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyPhoneNumber });\n          return;\n        case SettingsScreens.PrivacyLastSeenAllowedContacts:\n        case SettingsScreens.PrivacyLastSeenDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyLastSeen });\n          return;\n        case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n        case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyProfilePhoto });\n          return;\n        case SettingsScreens.PrivacyBioAllowedContacts:\n        case SettingsScreens.PrivacyBioDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyBio });\n          return;\n        case SettingsScreens.PrivacyBirthdayAllowedContacts:\n        case SettingsScreens.PrivacyBirthdayDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyBirthday });\n          return;\n        case SettingsScreens.PrivacyGiftsAllowedContacts:\n        case SettingsScreens.PrivacyGiftsDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyGifts });\n          return;\n        case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n        case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyPhoneCall });\n          return;\n        case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyPhoneP2P });\n          return;\n        case SettingsScreens.PrivacyForwardingAllowedContacts:\n        case SettingsScreens.PrivacyForwardingDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyForwarding });\n          return;\n        case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n        case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyVoiceMessages });\n          return;\n        case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyGroupChats });\n          return;\n        case SettingsScreens.TwoFaNewPassword:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaDisabled });\n          return;\n        case SettingsScreens.TwoFaNewPasswordConfirm:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaNewPassword });\n          return;\n        case SettingsScreens.TwoFaNewPasswordHint:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordConfirm });\n          return;\n        case SettingsScreens.TwoFaNewPasswordEmail:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordHint });\n          return;\n        case SettingsScreens.TwoFaNewPasswordEmailCode:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaNewPasswordEmail });\n          return;\n        case SettingsScreens.TwoFaChangePasswordCurrent:\n        case SettingsScreens.TwoFaTurnOff:\n        case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaEnabled });\n          return;\n        case SettingsScreens.TwoFaChangePasswordNew:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordCurrent });\n          return;\n        case SettingsScreens.TwoFaChangePasswordConfirm:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordNew });\n          return;\n        case SettingsScreens.TwoFaChangePasswordHint:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaChangePasswordConfirm });\n          return;\n        case SettingsScreens.TwoFaRecoveryEmail:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaRecoveryEmailCurrentPassword });\n          return;\n        case SettingsScreens.TwoFaRecoveryEmailCode:\n          openSettingsScreen({ screen: SettingsScreens.TwoFaRecoveryEmail });\n          return;\n\n        case SettingsScreens.FoldersCreateFolder:\n        case SettingsScreens.FoldersEditFolder:\n          openSettingsScreen({ screen: SettingsScreens.Folders });\n          return;\n\n        case SettingsScreens.FoldersShare:\n          openSettingsScreen({ screen: SettingsScreens.FoldersEditFolder });\n          return;\n\n        case SettingsScreens.FoldersIncludedChatsFromChatList:\n        case SettingsScreens.FoldersExcludedChatsFromChatList:\n          openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n          return;\n\n        case SettingsScreens.FoldersEditFolderFromChatList:\n        case SettingsScreens.FoldersEditFolderInvites:\n          openLeftColumnContent({ contentKey: LeftColumnContent.ChatList });\n          openSettingsScreen({ screen: SettingsScreens.Main });\n          return;\n\n        case SettingsScreens.QuickReaction:\n        case SettingsScreens.CustomEmoji:\n          openSettingsScreen({ screen: SettingsScreens.Stickers });\n          return;\n\n        case SettingsScreens.DoNotTranslate:\n          openSettingsScreen({ screen: SettingsScreens.Language });\n          return;\n\n        case SettingsScreens.PrivacyNoPaidMessages:\n          openSettingsScreen({ screen: SettingsScreens.PrivacyMessages });\n          return;\n\n        default:\n          break;\n      }\n    }\n\n    if (contentKey === LeftColumnContent.ChatList && isFirstChatFolderActive) {\n      openLeftColumnContent({ contentKey: LeftColumnContent.GlobalSearch });\n\n      return;\n    }\n\n    fullReset();\n  });\n\n  const handleSearchQuery = useLastCallback((query: string) => {\n    if (contentKey === LeftColumnContent.Contacts) {\n      setContactsFilter(query);\n      return;\n    }\n\n    openLeftColumnContent({ contentKey: LeftColumnContent.GlobalSearch });\n\n    if (query !== searchQuery) {\n      setGlobalSearchQuery({ query });\n    }\n  });\n\n  const handleTopicSearch = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.GlobalSearch });\n    setGlobalSearchQuery({ query: '' });\n    setGlobalSearchChatId({ id: forumPanelChatId });\n  });\n\n  useEffect(\n    () => {\n      const isArchived = contentKey === LeftColumnContent.Archived;\n      const isChatList = contentKey === LeftColumnContent.ChatList;\n      const noChatOrForumOpen = !isChatOpen && !isForumPanelOpen;\n      // We listen for escape key only in these cases:\n      // 1. When we are in archived chats and no chat or forum is open.\n      // 2. When we are in any other screen except chat list and archived chat list.\n      // 3. When we are in chat list and first chat folder is active and no chat or forum is open.\n      if ((isArchived && noChatOrForumOpen) || (!isChatList && !isArchived)\n        || (isFirstChatFolderActive && noChatOrForumOpen)) {\n        return captureEscKeyListener(() => {\n          handleReset();\n        });\n      } else {\n        return undefined;\n      }\n    },\n    [isFirstChatFolderActive, contentKey, handleReset, isChatOpen, isForumPanelOpen],\n  );\n\n  const handleHotkeySearch = useLastCallback((e: KeyboardEvent) => {\n    if (contentKey === LeftColumnContent.GlobalSearch) {\n      return;\n    }\n\n    e.preventDefault();\n    openLeftColumnContent({ contentKey: LeftColumnContent.GlobalSearch });\n  });\n\n  const handleHotkeySavedMessages = useLastCallback((e: KeyboardEvent) => {\n    e.preventDefault();\n    openChat({ id: currentUserId, shouldReplaceHistory: true });\n  });\n\n  const handleArchivedChats = useLastCallback((e: KeyboardEvent) => {\n    e.preventDefault();\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n  });\n\n  const handleHotkeySettings = useLastCallback((e: KeyboardEvent) => {\n    e.preventDefault();\n    openLeftColumnContent({ contentKey: LeftColumnContent.Settings });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+Shift+F': handleHotkeySearch,\n    // https://support.mozilla.org/en-US/kb/take-screenshots-firefox\n    ...(!IS_FIREFOX && {\n      'Mod+Shift+S': handleHotkeySavedMessages,\n    }),\n    ...(IS_APP && {\n      'Mod+0': handleHotkeySavedMessages,\n      'Mod+9': handleArchivedChats,\n    }),\n    ...(IS_MAC_OS && IS_APP && { 'Mod+,': handleHotkeySettings }),\n  }), []));\n\n  useEffect(() => {\n    clearTwoFaError();\n\n    if (settingsScreen === SettingsScreens.Privacy) {\n      loadPasswordInfo();\n    }\n  }, [clearTwoFaError, loadPasswordInfo, settingsScreen]);\n\n  useSyncEffect(() => {\n    if (nextFoldersAction) {\n      foldersDispatch(nextFoldersAction);\n    }\n  }, [foldersDispatch, nextFoldersAction]);\n\n  const prevSettingsScreenRef = useStateRef(usePrevious(contentType === ContentType.Settings ? settingsScreen : -1));\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureControlledSwipe(ref.current!, {\n      excludedClosestSelector: '.ProfileInfo, .color-picker, .hue-picker',\n      selectorToPreventScroll: '#Settings .custom-scroll',\n      onSwipeRightStart: handleReset,\n      onCancel: () => {\n        openLeftColumnContent({ contentKey: LeftColumnContent.Settings });\n        openSettingsScreen({ screen: prevSettingsScreenRef.current! });\n      },\n    });\n  }, [prevSettingsScreenRef, ref]);\n\n  function renderContent(isActive: boolean) {\n    switch (contentType) {\n      case ContentType.Archived:\n        return (\n          <ArchivedChats\n            isActive={isActive}\n            onReset={handleReset}\n            onTopicSearch={handleTopicSearch}\n            foldersDispatch={foldersDispatch}\n            isForumPanelOpen={isForumPanelOpen}\n            archiveSettings={archiveSettings}\n            isStoryRibbonShown={isArchivedStoryRibbonShown}\n          />\n        );\n      case ContentType.Settings:\n        return (\n          <Settings\n            isActive={isActive}\n            currentScreen={settingsScreen}\n            foldersState={foldersState}\n            foldersDispatch={foldersDispatch}\n            shouldSkipTransition={shouldSkipHistoryAnimations}\n            onReset={handleReset}\n          />\n        );\n      case ContentType.NewChannel:\n        return (\n          <NewChat\n            key={lastResetTime}\n            isActive={isActive}\n            isChannel\n            content={contentKey}\n            onReset={handleReset}\n          />\n        );\n      case ContentType.NewGroup:\n        return (\n          <NewChat\n            key={lastResetTime}\n            isActive={isActive}\n            content={contentKey}\n            onReset={handleReset}\n          />\n        );\n      default:\n        return (\n          <LeftMain\n            content={contentKey}\n            isClosingSearch={isClosingSearch}\n            searchQuery={searchQuery}\n            searchDate={searchDate}\n            contactsFilter={contactsFilter}\n            foldersDispatch={foldersDispatch}\n            onSearchQuery={handleSearchQuery}\n            onReset={handleReset}\n            shouldSkipTransition={shouldSkipHistoryAnimations}\n            isAppUpdateAvailable={isAppUpdateAvailable}\n            isElectronUpdateAvailable={isElectronUpdateAvailable}\n            isForumPanelOpen={isForumPanelOpen}\n            onTopicSearch={handleTopicSearch}\n            isAccountFrozen={isAccountFrozen}\n          />\n        );\n    }\n  }\n\n  return (\n    <Transition\n      ref={ref}\n      name={shouldSkipHistoryAnimations ? 'none' : LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={contentType}\n      shouldCleanup\n      cleanupExceptionKey={ContentType.Main}\n      shouldWrap\n      wrapExceptionKey={ContentType.Main}\n      id=\"LeftColumn\"\n      withSwipeControl\n    >\n      {renderContent}\n    </Transition>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const {\n      globalSearch: {\n        query,\n        minDate,\n      },\n      shouldSkipHistoryAnimations,\n      activeChatFolder,\n      leftColumn,\n      nextFoldersAction,\n      storyViewer: {\n        isArchivedRibbonShown,\n      },\n    } = tabState;\n    const {\n      currentUserId,\n      passcode: {\n        hasPasscode,\n      },\n      isAppUpdateAvailable,\n      isElectronUpdateAvailable,\n      archiveSettings,\n    } = global;\n\n    const currentChat = selectCurrentChat(global);\n    const isChatOpen = Boolean(currentChat?.id);\n    const isForumPanelOpen = selectIsForumPanelOpen(global);\n    const forumPanelChatId = tabState.forumPanelChatId;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      searchQuery: query,\n      searchDate: minDate,\n      isFirstChatFolderActive: activeChatFolder === 0,\n      shouldSkipHistoryAnimations,\n      currentUserId,\n      hasPasscode,\n      nextFoldersAction,\n      isChatOpen,\n      isAppUpdateAvailable,\n      isElectronUpdateAvailable,\n      isForumPanelOpen,\n      forumPanelChatId,\n      isClosingSearch: tabState.globalSearch.isClosing,\n      archiveSettings,\n      isArchivedStoryRibbonShown: isArchivedRibbonShown,\n      isAccountFrozen,\n      contentKey: leftColumn.contentKey,\n      settingsScreen: leftColumn.settingsScreen,\n    };\n  },\n)(LeftColumn));\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport {\n  useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './NewChatButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  onNewPrivateChat: () => void;\n  onNewChannel: () => void;\n  onNewGroup: () => void;\n  isAccountFrozen?: boolean;\n};\n\nconst NewChatButton: FC<OwnProps> = ({\n  isShown,\n  onNewPrivateChat,\n  onNewChannel,\n  onNewGroup,\n  isAccountFrozen,\n}) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const { openFrozenAccountModal } = getActions();\n\n  useEffect(() => {\n    if (!isShown) {\n      setIsMenuOpen(false);\n    }\n  }, [isShown]);\n\n  const lang = useOldLang();\n\n  const fabClassName = buildClassName(\n    'NewChatButton',\n    isShown && 'revealed',\n    isMenuOpen && 'menu-is-open',\n  );\n\n  const toggleIsMenuOpen = useCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    setIsMenuOpen(!isMenuOpen);\n  }, [isMenuOpen, isAccountFrozen]);\n\n  const handleClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const menuItems = useMemo(() => (\n    <>\n      <MenuItem icon=\"channel\" onClick={onNewChannel}>{lang('NewChannel')}</MenuItem>\n      <MenuItem icon=\"group\" onClick={onNewGroup}>{lang('NewGroup')}</MenuItem>\n      <MenuItem icon=\"user\" onClick={onNewPrivateChat}>{lang('NewMessageTitle')}</MenuItem>\n    </>\n  ), [lang, onNewChannel, onNewGroup, onNewPrivateChat]);\n\n  return (\n    <div className={fabClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <Button\n        round\n        color=\"primary\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={toggleIsMenuOpen}\n        ariaLabel={lang(isMenuOpen ? 'Close' : 'NewMessageTitle')}\n        tabIndex={-1}\n      >\n        <Icon name=\"new-chat-filled\" />\n        <Icon name=\"close\" />\n      </Button>\n      <Menu\n        isOpen={isMenuOpen}\n        positionX={lang.isRtl ? 'left' : 'right'}\n        positionY=\"bottom\"\n        autoClose\n        onClose={handleClose}\n      >\n        {menuItems}\n      </Menu>\n    </div>\n  );\n};\n\nexport default NewChatButton;\n","import { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { getCurrentMaxAccountCount, getCurrentProdAccountCount } from '../../../global/helpers';\nimport { getAccountSlotUrl } from '../../../util/multiaccount';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMultiaccountInfo from '../../../hooks/useMultiaccountInfo';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\ntype OwnProps = {\n  currentUser: ApiUser;\n  totalLimit: number;\n  onSelectCurrent?: VoidFunction;\n};\n\nconst NOTIFICATION_DURATION = 7000;\n\nconst AccountMenuItems = ({\n  currentUser,\n  totalLimit,\n  onSelectCurrent,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const accounts = useMultiaccountInfo(currentUser);\n\n  const currentCount = getCurrentProdAccountCount();\n  const maxCount = getCurrentMaxAccountCount();\n\n  const currentAccountInfo = useMemo(() => {\n    return Object.values(accounts).find((account) => account.userId === currentUser.id);\n  }, [accounts, currentUser.id]);\n\n  const shouldShowLimit = currentCount >= maxCount;\n\n  const handleLimitClick = useLastCallback(() => {\n    showNotification({\n      title: lang('PremiumLimitAccountsTitle'),\n      message: currentUser.isPremium ? lang('PremiumLimitAccounts') : lang('PremiumLimitAccountsNoPremium'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const newAccountUrl = useMemo(() => {\n    if (!Object.values(accounts).length) {\n      return undefined;\n    }\n\n    if (currentCount === totalLimit) {\n      return undefined;\n    }\n\n    let freeIndex = 1;\n    while (accounts[freeIndex]) {\n      freeIndex += 1;\n    }\n\n    return getAccountSlotUrl(freeIndex, true);\n  }, [accounts, currentCount, totalLimit]);\n\n  return (\n    <>\n      {Object.entries(accounts || {})\n        .sort(([, account]) => (account.userId === currentUser.id ? -1 : 1))\n        .map(([slot, account], index, arr) => {\n          const isSameServer = account.isTest === currentAccountInfo?.isTest;\n          const mockUser: CustomPeer = {\n            title: [account.firstName, account.lastName].filter(Boolean).join(' '),\n            isCustomPeer: true,\n            peerColorId: account.color,\n            emojiStatusId: isSameServer ? account.emojiStatusId : undefined,\n            isPremium: account.isPremium,\n          };\n\n          const hasSeparator = account.userId === currentUser.id && (newAccountUrl || arr.length > 1);\n\n          return (\n            <>\n              <MenuItem\n                className=\"account-menu-item\"\n                customIcon={(\n                  <Avatar\n                    size=\"mini\"\n                    className=\"account-avatar\"\n                    peer={mockUser}\n                    previewUrl={account.avatarUri}\n                  />\n                )}\n                onClick={account.userId === currentUser.id ? onSelectCurrent : undefined}\n                href={account.userId !== currentUser.id ? getAccountSlotUrl(Number(slot)) : undefined}\n              >\n                {account.isTest && <span className=\"account-menu-item-test\">T</span>}\n                <FullNameTitle peer={mockUser} withEmojiStatus emojiStatusSize={REM} />\n              </MenuItem>\n              {hasSeparator && <MenuSeparator />}\n            </>\n          );\n        })}\n      {newAccountUrl && (\n        <MenuItem\n          icon=\"add\"\n          rel=\"noopener\" // Allow referrer to be passed\n          href={!shouldShowLimit ? newAccountUrl : undefined}\n          onClick={shouldShowLimit ? handleLimitClick : undefined}\n        >\n          {lang('MenuAddAccount')}\n        </MenuItem>\n      )}\n    </>\n  );\n};\n\nexport default memo(AccountMenuItems);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistExportedInvite, ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { MenuItemContextAction } from '../../ui/ListItem';\nimport type { TabWithProperties } from '../../ui/TabList';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport { selectCanShareFolder, selectIsCurrentUserFrozen, selectTabState } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport {\n  useFolderManagerForUnreadChatsByFolder,\n  useFolderManagerForUnreadCounters,\n} from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StoryRibbon from '../../story/StoryRibbon';\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatList from './ChatList';\n\ntype OwnProps = {\n  foldersDispatch: FolderEditDispatch;\n  shouldHideFolderTabs?: boolean;\n  isForumPanelOpen?: boolean;\n};\n\ntype StateProps = {\n  chatFoldersById: Record<number, ApiChatFolder>;\n  folderInvitesById: Record<number, ApiChatlistExportedInvite[]>;\n  orderedFolderIds?: number[];\n  activeChatFolder: number;\n  currentUserId?: string;\n  shouldSkipHistoryAnimations?: boolean;\n  maxFolders: number;\n  maxChatLists: number;\n  maxFolderInvites: number;\n  hasArchivedChats?: boolean;\n  hasArchivedStories?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n};\n\nconst SAVED_MESSAGES_HOTKEY = '0';\nconst FIRST_FOLDER_INDEX = 0;\n\nconst ChatFolders: FC<OwnProps & StateProps> = ({\n  foldersDispatch,\n  chatFoldersById,\n  orderedFolderIds,\n  activeChatFolder,\n  currentUserId,\n  isForumPanelOpen,\n  shouldSkipHistoryAnimations,\n  maxFolders,\n  maxChatLists,\n  shouldHideFolderTabs,\n  folderInvitesById,\n  maxFolderInvites,\n  hasArchivedChats,\n  hasArchivedStories,\n  archiveSettings,\n  isStoryRibbonShown,\n  sessions,\n  isAccountFrozen,\n}) => {\n  const {\n    loadChatFolders,\n    setActiveChatFolder,\n    openChat,\n    openShareChatFolderModal,\n    openDeleteChatFolderModal,\n    openEditChatFolder,\n    openLimitReachedModal,\n    markChatMessagesRead,\n    openSettingsScreen,\n  } = getActions();\n\n  const transitionRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    loadChatFolders();\n  }, []);\n\n  const {\n    ref,\n    shouldRender: shouldRenderStoryRibbon,\n    getIsClosing: getIsStoryRibbonClosing,\n  } = useShowTransition({\n    isOpen: isStoryRibbonShown,\n    className: false,\n    withShouldRender: true,\n  });\n  const isStoryRibbonClosing = useDerivedState(getIsStoryRibbonClosing);\n\n  const scrollToTop = useLastCallback(() => {\n    const activeList = ref.current?.querySelector<HTMLElement>('.chat-list.Transition_slide-active');\n    activeList?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  });\n\n  const allChatsFolder: ApiChatFolder = useMemo(() => {\n    return {\n      id: ALL_FOLDER_ID,\n      title: { text: orderedFolderIds?.[0] === ALL_FOLDER_ID ? lang('FilterAllChatsShort') : lang('FilterAllChats') },\n      includedChatIds: MEMO_EMPTY_ARRAY,\n      excludedChatIds: MEMO_EMPTY_ARRAY,\n    } satisfies ApiChatFolder;\n  }, [orderedFolderIds, lang]);\n\n  const displayedFolders = useMemo(() => {\n    return orderedFolderIds\n      ? orderedFolderIds.map((id) => {\n        if (id === ALL_FOLDER_ID) {\n          return allChatsFolder;\n        }\n\n        return chatFoldersById[id] || {};\n      }).filter(Boolean)\n      : undefined;\n  }, [chatFoldersById, allChatsFolder, orderedFolderIds]);\n\n  const allChatsFolderIndex = displayedFolders?.findIndex((folder) => folder.id === ALL_FOLDER_ID);\n  const isInAllChatsFolder = allChatsFolderIndex === activeChatFolder;\n  const isInFirstFolder = FIRST_FOLDER_INDEX === activeChatFolder;\n\n  const folderUnreadChatsCountersById = useFolderManagerForUnreadChatsByFolder();\n  const handleReadAllChats = useLastCallback((folderId: number) => {\n    const unreadChatIds = folderUnreadChatsCountersById[folderId];\n    if (!unreadChatIds?.length) return;\n\n    unreadChatIds.forEach((chatId) => {\n      markChatMessagesRead({ id: chatId });\n    });\n  });\n\n  const folderCountersById = useFolderManagerForUnreadCounters();\n  const folderTabs = useMemo(() => {\n    if (!displayedFolders || !displayedFolders.length) {\n      return undefined;\n    }\n\n    return displayedFolders.map((folder, i) => {\n      const { id, title } = folder;\n      const isBlocked = id !== ALL_FOLDER_ID && i > maxFolders - 1;\n      const canShareFolder = selectCanShareFolder(getGlobal(), id);\n      const contextActions: MenuItemContextAction[] = [];\n\n      if (canShareFolder) {\n        contextActions.push({\n          title: lang('FilterShare'),\n          icon: 'link',\n          handler: () => {\n            const chatListCount = Object.values(chatFoldersById).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n            if (chatListCount >= maxChatLists && !folder.isChatList) {\n              openLimitReachedModal({\n                limit: 'chatlistJoined',\n              });\n              return;\n            }\n\n            // Greater amount can be after premium downgrade\n            if (folderInvitesById[id]?.length >= maxFolderInvites) {\n              openLimitReachedModal({\n                limit: 'chatlistInvites',\n              });\n              return;\n            }\n\n            openShareChatFolderModal({\n              folderId: id,\n            });\n          },\n        });\n      }\n\n      if (id === ALL_FOLDER_ID) {\n        contextActions.push({\n          title: lang('FilterEditFolders'),\n          icon: 'edit',\n          handler: () => {\n            openSettingsScreen({ screen: SettingsScreens.Folders });\n          },\n        });\n\n        if (folderUnreadChatsCountersById[id]?.length) {\n          contextActions.push({\n            title: lang('ChatListMarkAllAsRead'),\n            icon: 'readchats',\n            handler: () => handleReadAllChats(folder.id),\n          });\n        }\n      } else {\n        contextActions.push({\n          title: lang('EditFolder'),\n          icon: 'edit',\n          handler: () => {\n            openEditChatFolder({ folderId: id });\n          },\n        });\n\n        if (folderUnreadChatsCountersById[id]?.length) {\n          contextActions.push({\n            title: lang('ChatListMarkAllAsRead'),\n            icon: 'readchats',\n            handler: () => handleReadAllChats(folder.id),\n          });\n        }\n\n        contextActions.push({\n          title: lang('FilterMenuDelete'),\n          icon: 'delete',\n          destructive: true,\n          handler: () => {\n            openDeleteChatFolderModal({ folderId: id });\n          },\n        });\n      }\n\n      return {\n        id,\n        title: renderTextWithEntities({\n          text: title.text,\n          entities: title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }),\n        badgeCount: folderCountersById[id]?.chatsCount,\n        isBadgeActive: Boolean(folderCountersById[id]?.notificationsCount),\n        isBlocked,\n        contextActions: contextActions?.length ? contextActions : undefined,\n      } satisfies TabWithProperties;\n    });\n  }, [\n    displayedFolders, maxFolders, folderCountersById, lang, chatFoldersById, maxChatLists, folderInvitesById,\n    maxFolderInvites, folderUnreadChatsCountersById, openSettingsScreen,\n  ]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    setActiveChatFolder({ activeChatFolder: index }, { forceOnHeavyAnimation: true });\n    if (activeChatFolder === index) {\n      scrollToTop();\n    }\n  });\n\n  // Prevent `activeTab` pointing at non-existing folder after update\n  useEffect(() => {\n    if (!folderTabs?.length) {\n      return;\n    }\n\n    if (activeChatFolder >= folderTabs.length) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }, [activeChatFolder, folderTabs, setActiveChatFolder]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || !folderTabs?.length || isForumPanelOpen) {\n      return undefined;\n    }\n\n    return captureEvents(transitionRef.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          setActiveChatFolder(\n            { activeChatFolder: Math.min(activeChatFolder + 1, folderTabs.length - 1) },\n            { forceOnHeavyAnimation: true },\n          );\n          return true;\n        } else if (direction === SwipeDirection.Right) {\n          setActiveChatFolder({ activeChatFolder: Math.max(0, activeChatFolder - 1) }, { forceOnHeavyAnimation: true });\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [activeChatFolder, folderTabs, isForumPanelOpen, setActiveChatFolder]);\n\n  const isNotInFirstFolderRef = useRef();\n  isNotInFirstFolderRef.current = !isInFirstFolder;\n  useEffect(() => (isNotInFirstFolderRef.current ? captureEscKeyListener(() => {\n    if (isNotInFirstFolderRef.current) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }) : undefined), [activeChatFolder, setActiveChatFolder]);\n\n  useHistoryBack({\n    isActive: !isInFirstFolder,\n    onBack: () => setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX }, { forceOnHeavyAnimation: true }),\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey && e.shiftKey && e.code.startsWith('Digit') && folderTabs) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        if (digit === SAVED_MESSAGES_HOTKEY) {\n          openChat({ id: currentUserId, shouldReplaceHistory: true });\n          return;\n        }\n\n        const folder = Number(digit) - 1;\n        if (folder > folderTabs.length - 1) return;\n\n        setActiveChatFolder({ activeChatFolder: folder }, { forceOnHeavyAnimation: true });\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, true);\n    };\n  }, [currentUserId, folderTabs, openChat, setActiveChatFolder]);\n\n  const {\n    ref: placeholderRef,\n    shouldRender: shouldRenderPlaceholder,\n  } = useShowTransition({\n    isOpen: !orderedFolderIds,\n    noMountTransition: true,\n    withShouldRender: true,\n  });\n\n  function renderCurrentTab(isActive: boolean) {\n    const activeFolder = Object.values(chatFoldersById)\n      .find(({ id }) => id === folderTabs![activeChatFolder].id);\n    const isFolder = activeFolder && !isInAllChatsFolder;\n\n    return (\n      <ChatList\n        folderType={isFolder ? 'folder' : 'all'}\n        folderId={isFolder ? activeFolder.id : undefined}\n        isActive={isActive}\n        isForumPanelOpen={isForumPanelOpen}\n        foldersDispatch={foldersDispatch}\n        isMainList\n        canDisplayArchive={(hasArchivedChats || hasArchivedStories) && !archiveSettings.isHidden}\n        archiveSettings={archiveSettings}\n        sessions={sessions}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  const shouldRenderFolders = folderTabs && folderTabs.length > 1;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'ChatFolders',\n        shouldRenderFolders && shouldHideFolderTabs && 'ChatFolders--tabs-hidden',\n        shouldRenderStoryRibbon && 'with-story-ribbon',\n      )}\n    >\n      {shouldRenderStoryRibbon && <StoryRibbon isClosing={isStoryRibbonClosing} />}\n      {shouldRenderFolders ? (\n        <TabList\n          contextRootElementSelector=\"#LeftColumn\"\n          tabs={folderTabs}\n          activeTab={activeChatFolder}\n          onSwitchTab={handleSwitchTab}\n        />\n      ) : shouldRenderPlaceholder ? (\n        <div ref={placeholderRef} className=\"tabs-placeholder\" />\n      ) : undefined}\n      <Transition\n        ref={transitionRef}\n        name={shouldSkipHistoryAnimations ? 'none' : lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        activeKey={activeChatFolder}\n        renderCount={shouldRenderFolders ? folderTabs.length : undefined}\n      >\n        {renderCurrentTab}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chatFolders: {\n        byId: chatFoldersById,\n        orderedIds: orderedFolderIds,\n        invites: folderInvitesById,\n      },\n      chats: {\n        listIds: {\n          archived,\n        },\n      },\n      stories: {\n        orderedPeerIds: {\n          archived: archivedStories,\n        },\n      },\n      activeSessions: {\n        byHash: sessions,\n      },\n      currentUserId,\n      archiveSettings,\n    } = global;\n    const { shouldSkipHistoryAnimations, activeChatFolder } = selectTabState(global);\n    const { storyViewer: { isRibbonShown: isStoryRibbonShown } } = selectTabState(global);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chatFoldersById,\n      folderInvitesById,\n      orderedFolderIds,\n      activeChatFolder,\n      currentUserId,\n      shouldSkipHistoryAnimations,\n      hasArchivedChats: Boolean(archived?.length),\n      hasArchivedStories: Boolean(archivedStories?.length),\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n      maxFolderInvites: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      archiveSettings,\n      isStoryRibbonShown,\n      sessions,\n      isAccountFrozen,\n    };\n  },\n)(ChatFolders));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContactList';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst ContactListAsync: FC<OwnProps> = (props) => {\n  const ContactList = useModuleLoader(Bundles.Extra, 'ContactList');\n\n  return ContactList ? <ContactList {...props} /> : <Loading />;\n};\n\nexport default ContactListAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport { PRODUCTION_URL } from '../../../config';\nimport { IS_ELECTRON, IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useForumPanelRender from '../../../hooks/useForumPanelRender';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../../ui/Button';\nimport Transition from '../../ui/Transition';\nimport NewChatButton from '../NewChatButton';\nimport LeftSearch from '../search/LeftSearch.async';\nimport ChatFolders from './ChatFolders';\nimport ContactList from './ContactList.async';\nimport ForumPanel from './ForumPanel';\nimport LeftMainHeader from './LeftMainHeader';\n\nimport './LeftMain.scss';\n\ntype OwnProps = {\n  content: LeftColumnContent;\n  searchQuery?: string;\n  searchDate?: number;\n  contactsFilter: string;\n  shouldSkipTransition?: boolean;\n  foldersDispatch: FolderEditDispatch;\n  isAppUpdateAvailable?: boolean;\n  isElectronUpdateAvailable?: boolean;\n  isForumPanelOpen?: boolean;\n  isClosingSearch?: boolean;\n  onSearchQuery: (query: string) => void;\n  onTopicSearch: NoneToVoidFunction;\n  isAccountFrozen?: boolean;\n  onReset: () => void;\n};\n\nconst TRANSITION_RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\nconst BUTTON_CLOSE_DELAY_MS = 250;\n\nlet closeTimeout: number | undefined;\n\nconst LeftMain: FC<OwnProps> = ({\n  content,\n  searchQuery,\n  searchDate,\n  isClosingSearch,\n  contactsFilter,\n  shouldSkipTransition,\n  foldersDispatch,\n  isAppUpdateAvailable,\n  isElectronUpdateAvailable,\n  isForumPanelOpen,\n  onSearchQuery,\n  onReset,\n  onTopicSearch,\n  isAccountFrozen,\n}) => {\n  const { closeForumPanel, openLeftColumnContent } = getActions();\n  const [isNewChatButtonShown, setIsNewChatButtonShown] = useState(IS_TOUCH_ENV);\n  const [isElectronAutoUpdateEnabled, setIsElectronAutoUpdateEnabled] = useState(false);\n\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsElectronAutoUpdateEnabled);\n  }, []);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelRendered = isForumPanelOpen && content === LeftColumnContent.ChatList;\n  const isForumPanelVisible = isForumPanelRendered && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderUpdateButton,\n    transitionClassNames: updateButtonClassNames,\n  } = useShowTransitionDeprecated(isAppUpdateAvailable || isElectronUpdateAvailable);\n\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback(() => {\n    if (content !== LeftColumnContent.ChatList) {\n      return;\n    }\n    isMouseInside.current = true;\n    setIsNewChatButtonShown(true);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        setIsNewChatButtonShown(false);\n      }\n    }, BUTTON_CLOSE_DELAY_MS);\n  });\n\n  const handleSelectSettings = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Settings });\n  });\n\n  const handleSelectContacts = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Contacts });\n  });\n\n  const handleSelectArchived = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleUpdateClick = useLastCallback(() => {\n    if (IS_ELECTRON && !isElectronAutoUpdateEnabled) {\n      window.open(`${PRODUCTION_URL}/get`, '_blank', 'noopener');\n    } else if (isElectronUpdateAvailable) {\n      window.electron?.installUpdate();\n    } else {\n      window.location.reload();\n    }\n  });\n\n  const handleSelectNewChannel = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.NewChannelStep1 });\n  });\n\n  const handleSelectNewGroup = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.NewGroupStep1 });\n  });\n\n  useEffect(() => {\n    let autoCloseTimeout: number | undefined;\n    if (content !== LeftColumnContent.ChatList) {\n      autoCloseTimeout = window.setTimeout(() => {\n        setIsNewChatButtonShown(false);\n      }, BUTTON_CLOSE_DELAY_MS);\n    } else if (isMouseInside.current || IS_TOUCH_ENV) {\n      setIsNewChatButtonShown(true);\n    }\n\n    return () => {\n      if (autoCloseTimeout) {\n        clearTimeout(autoCloseTimeout);\n        autoCloseTimeout = undefined;\n      }\n    };\n  }, [content]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      id=\"LeftColumn-main\"\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n    >\n      <LeftMainHeader\n        shouldHideSearch={isForumPanelVisible}\n        content={content}\n        contactsFilter={contactsFilter}\n        onSearchQuery={onSearchQuery}\n        onSelectSettings={handleSelectSettings}\n        onSelectContacts={handleSelectContacts}\n        onSelectArchived={handleSelectArchived}\n        onReset={onReset}\n        shouldSkipTransition={shouldSkipTransition}\n        isClosingSearch={isClosingSearch}\n      />\n      <Transition\n        name={shouldSkipTransition ? 'none' : 'zoomFade'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={content}\n        shouldCleanup\n        cleanupExceptionKey={LeftColumnContent.ChatList}\n        shouldWrap\n        wrapExceptionKey={LeftColumnContent.ChatList}\n      >\n        {(isActive) => {\n          switch (content) {\n            case LeftColumnContent.ChatList:\n              return (\n                <ChatFolders\n                  shouldHideFolderTabs={isForumPanelVisible}\n                  foldersDispatch={foldersDispatch}\n                  isForumPanelOpen={isForumPanelVisible}\n                />\n              );\n            case LeftColumnContent.GlobalSearch:\n              return (\n                <LeftSearch\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  isActive={isActive}\n                  onReset={onReset}\n                />\n              );\n            case LeftColumnContent.Contacts:\n              return <ContactList filter={contactsFilter} isActive={isActive} onReset={onReset} />;\n            default:\n              return undefined;\n          }\n        }}\n      </Transition>\n      {shouldRenderUpdateButton && (\n        <Button\n          fluid\n          badge\n          className={buildClassName('btn-update', updateButtonClassNames)}\n          onClick={handleUpdateClick}\n        >\n          {lang('lng_update_telegram')}\n        </Button>\n      )}\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          isHidden={!isForumPanelRendered}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n      <NewChatButton\n        isShown={isNewChatButtonShown}\n        onNewPrivateChat={handleSelectContacts}\n        onNewChannel={handleSelectNewChannel}\n        onNewGroup={handleSelectNewGroup}\n        isAccountFrozen={isAccountFrozen}\n      />\n    </div>\n  );\n};\n\nexport default memo(LeftMain);\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { LeftColumnContent, SettingsScreens } from '../../../types';\n\nimport {\n  APP_NAME,\n  DEBUG,\n  IS_BETA,\n} from '../../../config';\nimport {\n  selectCanSetPasscode,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectTabState,\n  selectTheme,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_APP, IS_ELECTRON, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useConnectionStatus from '../../../hooks/useConnectionStatus';\nimport useElectronDrag from '../../../hooks/useElectronDrag';\nimport useFlag from '../../../hooks/useFlag';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useFullscreenStatus } from '../../../hooks/window/useFullscreen';\nimport useLeftHeaderButtonRtlForumTransition from './hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport StoryToggler from '../../story/StoryToggler';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport SearchInput from '../../ui/SearchInput';\nimport ShowTransition from '../../ui/ShowTransition';\nimport ConnectionStatusOverlay from '../ConnectionStatusOverlay';\nimport LeftSideMenuItems from './LeftSideMenuItems';\nimport StatusButton from './StatusButton';\n\nimport './LeftMainHeader.scss';\n\ntype OwnProps = {\n  shouldHideSearch?: boolean;\n  content: LeftColumnContent;\n  contactsFilter: string;\n  isClosingSearch?: boolean;\n  shouldSkipTransition?: boolean;\n  onSearchQuery: (query: string) => void;\n  onSelectSettings: NoneToVoidFunction;\n  onSelectContacts: NoneToVoidFunction;\n  onSelectArchived: NoneToVoidFunction;\n  onReset: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    searchQuery?: string;\n    isLoading: boolean;\n    globalSearchChatId?: string;\n    searchDate?: number;\n    theme: ThemeKey;\n    isMessageListOpen: boolean;\n    isCurrentUserPremium?: boolean;\n    isConnectionStatusMinimized?: boolean;\n    areChatsLoaded?: boolean;\n    hasPasscode?: boolean;\n    canSetPasscode?: boolean;\n  }\n  & Pick<GlobalState, 'connectionState' | 'isSyncing' | 'isFetchingDifference'>;\n\nconst CLEAR_DATE_SEARCH_PARAM = { date: undefined };\nconst CLEAR_CHAT_SEARCH_PARAM = { id: undefined };\n\nconst LeftMainHeader: FC<OwnProps & StateProps> = ({\n  shouldHideSearch,\n  content,\n  contactsFilter,\n  isClosingSearch,\n  searchQuery,\n  isLoading,\n  isCurrentUserPremium,\n  shouldSkipTransition,\n  globalSearchChatId,\n  searchDate,\n  theme,\n  connectionState,\n  isSyncing,\n  isFetchingDifference,\n  isMessageListOpen,\n  isConnectionStatusMinimized,\n  areChatsLoaded,\n  hasPasscode,\n  canSetPasscode,\n  onSearchQuery,\n  onSelectSettings,\n  onSelectContacts,\n  onSelectArchived,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchDate,\n    setSharedSettingOption,\n    setGlobalSearchChatId,\n    lockScreen,\n    openSettingsScreen,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const [isBotMenuOpen, markBotMenuOpen, unmarkBotMenuOpen] = useFlag();\n\n  const areContactsVisible = content === LeftColumnContent.Contacts;\n  const hasMenu = content === LeftColumnContent.ChatList;\n\n  const selectedSearchDate = useMemo(() => {\n    return searchDate\n      ? formatDateToString(new Date(searchDate * 1000))\n      : undefined;\n  }, [searchDate]);\n\n  const { connectionStatus, connectionStatusText, connectionStatusPosition } = useConnectionStatus(\n    oldLang,\n    connectionState,\n    isSyncing || isFetchingDifference,\n    isMessageListOpen,\n    isConnectionStatusMinimized,\n    !areChatsLoaded,\n  );\n\n  const handleLockScreenHotkey = useLastCallback((e: KeyboardEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (hasPasscode) {\n      lockScreen();\n    } else {\n      openSettingsScreen({ screen: SettingsScreens.PasscodeDisabled });\n    }\n  });\n\n  useHotkeys(useMemo(() => (canSetPasscode ? {\n    'Ctrl+Shift+L': handleLockScreenHotkey,\n    'Alt+Shift+L': handleLockScreenHotkey,\n    'Meta+Shift+L': handleLockScreenHotkey,\n    ...(IS_APP && { 'Mod+L': handleLockScreenHotkey }),\n  } : undefined), [canSetPasscode]));\n\n  const MainButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={hasMenu && !isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n\n        onClick={hasMenu ? onTrigger : () => onReset()}\n        ariaLabel={hasMenu ? oldLang('AccDescrOpenMenu2') : 'Return to chat list'}\n      >\n        <div className={buildClassName(\n          'animated-menu-icon',\n          !hasMenu && 'state-back',\n          shouldSkipTransition && 'no-animation',\n        )}\n        />\n      </Button>\n    );\n  }, [hasMenu, isMobile, oldLang, onReset, shouldSkipTransition]);\n\n  const handleSearchFocus = useLastCallback(() => {\n    if (!searchQuery) {\n      onSearchQuery('');\n    }\n  });\n\n  const toggleConnectionStatus = useLastCallback(() => {\n    setSharedSettingOption({ isConnectionStatusMinimized: !isConnectionStatusMinimized });\n  });\n\n  const handleLockScreen = useLastCallback(() => {\n    lockScreen();\n  });\n\n  const isSearchRelevant = Boolean(globalSearchChatId)\n    || content === LeftColumnContent.GlobalSearch\n    || content === LeftColumnContent.Contacts;\n\n  const isSearchFocused = isMobile ? !isMessageListOpen && isSearchRelevant : isSearchRelevant;\n\n  useEffect(() => (isSearchFocused ? captureEscKeyListener(() => onReset()) : undefined), [isSearchFocused, onReset]);\n\n  const searchInputPlaceholder = content === LeftColumnContent.Contacts\n    ? lang('SearchFriends')\n    : lang('Search');\n\n  const versionString = IS_BETA ? `${APP_VERSION} Beta (${APP_REVISION})` : (DEBUG ? APP_REVISION : APP_VERSION);\n\n  const isFullscreen = useFullscreenStatus();\n\n  // Disable dropdown menu RTL animation for resize\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(shouldHideSearch);\n\n  const headerRef = useRef<HTMLDivElement>();\n  useElectronDrag(headerRef);\n\n  const withStoryToggler = !isSearchFocused\n    && !selectedSearchDate && !globalSearchChatId && !areContactsVisible;\n\n  const searchContent = useMemo(() => {\n    return (\n      <>\n        {selectedSearchDate && (\n          <PeerChip\n            icon=\"calendar\"\n            title={selectedSearchDate}\n            canClose\n            isMinimized={Boolean(globalSearchChatId)}\n            className=\"left-search-picker-item\"\n            onClick={setGlobalSearchDate}\n            isCloseNonDestructive\n            clickArg={CLEAR_DATE_SEARCH_PARAM}\n          />\n        )}\n        {globalSearchChatId && (\n          <PeerChip\n            className=\"left-search-picker-item\"\n            peerId={globalSearchChatId}\n            onClick={setGlobalSearchChatId}\n            canClose\n            isMinimized\n            clickArg={CLEAR_CHAT_SEARCH_PARAM}\n          />\n        )}\n      </>\n    );\n  }, [globalSearchChatId, selectedSearchDate]);\n\n  return (\n    <div className=\"LeftMainHeader\">\n      <div id=\"LeftMainHeader\" className=\"left-header\" ref={headerRef}>\n        {oldLang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <DropdownMenu\n          trigger={MainButton}\n          footer={`${APP_NAME} ${versionString}`}\n          className={buildClassName(\n            'main-menu',\n            oldLang.isRtl && 'rtl',\n            shouldHideSearch && oldLang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && oldLang.isRtl && 'disable-transition',\n          )}\n          forceOpen={isBotMenuOpen}\n          positionX={shouldHideSearch && oldLang.isRtl ? 'right' : 'left'}\n          transformOriginX={IS_ELECTRON && IS_MAC_OS && !isFullscreen ? 90 : undefined}\n          onTransitionEnd={oldLang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n        >\n          <LeftSideMenuItems\n            onSelectArchived={onSelectArchived}\n            onSelectContacts={onSelectContacts}\n            onSelectSettings={onSelectSettings}\n            onBotMenuOpened={markBotMenuOpen}\n            onBotMenuClosed={unmarkBotMenuOpen}\n          />\n        </DropdownMenu>\n        <SearchInput\n          inputId=\"telegram-search-input\"\n          resultsItemSelector=\".LeftSearch .ListItem-button\"\n          className={buildClassName(\n            (globalSearchChatId || searchDate) ? 'with-picker-item' : undefined,\n            shouldHideSearch && 'SearchInput--hidden',\n          )}\n          value={isClosingSearch ? undefined : (contactsFilter || searchQuery)}\n          focused={isSearchFocused}\n          isLoading={isLoading || connectionStatusPosition === 'minimized'}\n          spinnerColor={connectionStatusPosition === 'minimized' ? 'yellow' : undefined}\n          spinnerBackgroundColor={connectionStatusPosition === 'minimized' && theme === 'light' ? 'light' : undefined}\n          placeholder={searchInputPlaceholder}\n          autoComplete=\"off\"\n          canClose={Boolean(globalSearchChatId || searchDate)}\n          onChange={onSearchQuery}\n          onReset={onReset}\n          onFocus={handleSearchFocus}\n          onSpinnerClick={connectionStatusPosition === 'minimized' ? toggleConnectionStatus : undefined}\n        >\n          {searchContent}\n          <StoryToggler\n            canShow={withStoryToggler}\n          />\n        </SearchInput>\n        {isCurrentUserPremium && <StatusButton />}\n        {hasPasscode && (\n          <Button\n            round\n            ripple={!isMobile}\n            size=\"smaller\"\n            color=\"translucent\"\n            ariaLabel={`${oldLang('ShortcutsController.Others.LockByPasscode')} (Ctrl+Shift+L)`}\n            onClick={handleLockScreen}\n            className={buildClassName(!isCurrentUserPremium && 'extra-spacing')}\n          >\n            <Icon name=\"lock\" />\n          </Button>\n        )}\n        <ShowTransition\n          isOpen={connectionStatusPosition === 'overlay'}\n          isCustom\n          className=\"connection-state-wrapper\"\n        >\n          <ConnectionStatusOverlay\n            connectionStatus={connectionStatus}\n            connectionStatusText={connectionStatusText!}\n            onClick={toggleConnectionStatus}\n          />\n        </ShowTransition>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const {\n      query: searchQuery, fetchingStatus, chatId, minDate,\n    } = tabState.globalSearch;\n    const {\n      connectionState, isSyncing, isFetchingDifference,\n    } = global;\n    const { isConnectionStatusMinimized } = selectSharedSettings(global);\n\n    return {\n      searchQuery,\n      isLoading: fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false,\n      globalSearchChatId: chatId,\n      searchDate: minDate,\n      theme: selectTheme(global),\n      connectionState,\n      isSyncing,\n      isFetchingDifference,\n      isMessageListOpen: Boolean(selectCurrentMessageList(global)),\n      isConnectionStatusMinimized,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      areChatsLoaded: Boolean(global.chats.listIds.active),\n      hasPasscode: Boolean(global.passcode.hasPasscode),\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(LeftMainHeader));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { AnimationLevel, ThemeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_MAX,\n  ANIMATION_LEVEL_MIN,\n  ARCHIVED_FOLDER_ID,\n  BETA_CHANGELOG_URL,\n  FEEDBACK_URL,\n  IS_BETA,\n  IS_TEST,\n  PRODUCTION_HOSTNAME,\n  WEB_VERSION_BASE,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectTabState, selectTheme, selectUser } from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_MULTIACCOUNT_SUPPORTED } from '../../../util/browser/globalEnvironment';\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport { getPromptInstall } from '../../../util/installPrompt';\nimport { switchPermanentWebVersion } from '../../../util/permanentWebVersion';\n\nimport { useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AttachBotItem from '../../middle/composer/AttachBotItem';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Switcher from '../../ui/Switcher';\nimport Toggle from '../../ui/Toggle';\nimport AccountMenuItems from './AccountMenuItems';\n\ntype OwnProps = {\n  onSelectSettings: NoneToVoidFunction;\n  onSelectContacts: NoneToVoidFunction;\n  onSelectArchived: NoneToVoidFunction;\n  onBotMenuOpened: NoneToVoidFunction;\n  onBotMenuClosed: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  animationLevel: AnimationLevel;\n  currentUser?: ApiUser;\n  theme: ThemeKey;\n  canInstall?: boolean;\n  attachBots: GlobalState['attachMenu']['bots'];\n  accountsTotalLimit: number;\n} & Pick<GlobalState, 'currentUserId' | 'archiveSettings'>;\n\nconst LeftSideMenuItems = ({\n  currentUserId,\n  archiveSettings,\n  animationLevel,\n  theme,\n  canInstall,\n  attachBots,\n  currentUser,\n  accountsTotalLimit,\n  onSelectArchived,\n  onSelectContacts,\n  onSelectSettings,\n  onBotMenuOpened,\n  onBotMenuClosed,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    setSharedSettingOption,\n    updatePerformanceSettings,\n    openChatByUsername,\n    openUrl,\n    openChatWithInfo,\n  } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const animationLevelValue = animationLevel !== ANIMATION_LEVEL_MIN\n    ? (animationLevel === ANIMATION_LEVEL_MAX ? 'max' : 'mid') : 'min';\n\n  const withOtherVersions = !IS_ELECTRON && (window.location.hostname === PRODUCTION_HOSTNAME || IS_TEST);\n\n  const archivedUnreadChatsCount = useFolderManagerForUnreadCounters()[ARCHIVED_FOLDER_ID]?.chatsCount || 0;\n\n  const bots = useMemo(() => Object.values(attachBots).filter((bot) => bot.isForSideMenu), [attachBots]);\n\n  const handleSelectSaved = useLastCallback(() => {\n    openChat({ id: currentUserId, shouldReplaceHistory: true });\n  });\n\n  const handleDarkModeToggle = useLastCallback((e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n\n    setSharedSettingOption({ theme: newTheme });\n    setSharedSettingOption({ shouldUseSystemTheme: false });\n  });\n\n  const handleAnimationLevelChange = useLastCallback((e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n\n    let newLevel = animationLevel + 1;\n    if (newLevel > ANIMATION_LEVEL_MAX) {\n      newLevel = ANIMATION_LEVEL_MIN;\n    }\n    const performanceSettings = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MAX ? INITIAL_PERFORMANCE_STATE_MAX : INITIAL_PERFORMANCE_STATE_MID);\n\n    setSharedSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performanceSettings);\n  });\n\n  const handleChangelogClick = useLastCallback(() => {\n    window.open(BETA_CHANGELOG_URL, '_blank', 'noopener');\n  });\n\n  const handleSwitchToWebK = useLastCallback(() => {\n    switchPermanentWebVersion('K');\n  });\n\n  const handleOpenTipsChat = useLastCallback(() => {\n    openChatByUsername({ username: oldLang('Settings.TipsUsername') });\n  });\n\n  const handleBugReportClick = useLastCallback(() => {\n    openUrl({ url: FEEDBACK_URL });\n  });\n\n  const handleOpenMyStories = useLastCallback(() => {\n    openChatWithInfo({ id: currentUserId, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  return (\n    <>\n      {IS_MULTIACCOUNT_SUPPORTED && currentUser && (\n        <>\n          <AccountMenuItems\n            currentUser={currentUser}\n            totalLimit={accountsTotalLimit}\n            onSelectCurrent={onSelectSettings}\n          />\n          <MenuSeparator />\n        </>\n      )}\n      <MenuItem\n        icon=\"saved-messages\"\n        onClick={handleSelectSaved}\n      >\n        {oldLang('SavedMessages')}\n      </MenuItem>\n      {archiveSettings.isHidden && (\n        <MenuItem\n          icon=\"archive\"\n          onClick={onSelectArchived}\n        >\n          <span className=\"menu-item-name\">{oldLang('ArchivedChats')}</span>\n          {archivedUnreadChatsCount > 0 && (\n            <div className=\"right-badge\">{archivedUnreadChatsCount}</div>\n          )}\n        </MenuItem>\n      )}\n      <MenuItem\n        icon=\"user\"\n        onClick={onSelectContacts}\n      >\n        {oldLang('Contacts')}\n      </MenuItem>\n      {bots.map((bot) => (\n        <AttachBotItem\n          bot={bot}\n          theme={theme}\n          isInSideMenu\n          canShowNew\n          onMenuOpened={onBotMenuOpened}\n          onMenuClosed={onBotMenuClosed}\n        />\n      ))}\n      <MenuItem\n        icon=\"play-story\"\n        onClick={handleOpenMyStories}\n      >\n        {oldLang('Settings.MyStories')}\n      </MenuItem>\n      <MenuItem\n        icon=\"settings\"\n        onClick={onSelectSettings}\n      >\n        {oldLang('Settings')}\n      </MenuItem>\n      <MenuItem\n        icon=\"darkmode\"\n        onClick={handleDarkModeToggle}\n      >\n        <span className=\"menu-item-name\">{oldLang('lng_menu_night_mode')}</span>\n        <Switcher\n          id=\"darkmode\"\n          label={oldLang(theme === 'dark' ? 'lng_settings_disable_night_theme' : 'lng_settings_enable_night_theme')}\n          checked={theme === 'dark'}\n          noAnimation\n        />\n      </MenuItem>\n      <MenuItem\n        icon=\"animations\"\n        onClick={handleAnimationLevelChange}\n      >\n        <span className=\"menu-item-name capitalize\">{oldLang('Appearance.Animations').toLowerCase()}</span>\n        <Toggle value={animationLevelValue} />\n      </MenuItem>\n      <MenuItem\n        icon=\"help\"\n        onClick={handleOpenTipsChat}\n      >\n        {oldLang('TelegramFeatures')}\n      </MenuItem>\n      <MenuItem\n        icon=\"bug\"\n        onClick={handleBugReportClick}\n      >\n        {lang('MenuReportBug')}\n      </MenuItem>\n      {IS_BETA && (\n        <MenuItem\n          icon=\"permissions\"\n          onClick={handleChangelogClick}\n        >\n          {lang('MenuBetaChangelog')}\n        </MenuItem>\n      )}\n      {withOtherVersions && (\n        <MenuItem\n          icon=\"K\"\n          isCharIcon\n          href={`${WEB_VERSION_BASE}k`}\n          onClick={handleSwitchToWebK}\n        >\n          {lang('MenuSwitchToK')}\n        </MenuItem>\n      )}\n      {canInstall && (\n        <MenuItem\n          icon=\"install\"\n          onClick={getPromptInstall()}\n        >\n          {lang('MenuInstallApp')}\n        </MenuItem>\n      )}\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const {\n      currentUserId, archiveSettings,\n    } = global;\n    const { animationLevel } = selectSharedSettings(global);\n    const attachBots = global.attachMenu.bots;\n\n    return {\n      currentUserId,\n      currentUser: selectUser(global, currentUserId!),\n      theme: selectTheme(global),\n      animationLevel,\n      canInstall: Boolean(tabState.canInstall),\n      archiveSettings,\n      attachBots,\n      accountsTotalLimit: selectPremiumLimit(global, 'moreAccounts'),\n    };\n  },\n)(LeftSideMenuItems));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiEmojiStatusCollectible, ApiEmojiStatusType, ApiSticker } from '../../../api/types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../../config';\nimport { selectIsCurrentUserFrozen, selectUser } from '../../../global/selectors';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport StarIcon from '../../common/icons/StarIcon';\nimport CustomEmojiEffect from '../../common/reactions/CustomEmojiEffect';\nimport Button from '../../ui/Button';\nimport StatusPickerMenu from './StatusPickerMenu.async';\n\ninterface StateProps {\n  emojiStatus?: ApiEmojiStatusType;\n  collectibleStatuses?: ApiEmojiStatusType[];\n  isAccountFrozen?: boolean;\n}\n\nconst EFFECT_DURATION_MS = 1500;\nconst EMOJI_STATUS_SIZE = 24;\n\nconst StatusButton: FC<StateProps> = ({ emojiStatus, collectibleStatuses, isAccountFrozen }) => {\n  const { setEmojiStatus, loadCurrentUser, openFrozenAccountModal } = getActions();\n\n  const buttonRef = useRef<HTMLButtonElement>();\n  const [shouldShowEffect, markShouldShowEffect, unmarkShouldShowEffect] = useFlag(false);\n  const [isEffectShown, showEffect, hideEffect] = useFlag(false);\n  const [isStatusPickerOpen, openStatusPicker, closeStatusPicker] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const delay = emojiStatus?.until ? (emojiStatus.until - getServerTime()) * 1000 : undefined;\n  useTimeout(loadCurrentUser, delay);\n\n  useEffectWithPrevDeps(([prevEmojiStatus]) => {\n    if (shouldShowEffect && emojiStatus && emojiStatus.documentId !== prevEmojiStatus?.documentId) {\n      showEffect();\n      unmarkShouldShowEffect();\n    }\n  }, [emojiStatus, shouldShowEffect, showEffect, unmarkShouldShowEffect]);\n\n  const handleEmojiStatusSet = useCallback((sticker: ApiSticker) => {\n    const collectibleStatus = collectibleStatuses?.find(\n      (status) => 'collectibleId' in status && status.documentId === sticker.id,\n    ) as ApiEmojiStatusCollectible | undefined;\n    markShouldShowEffect();\n    setEmojiStatus({\n      emojiStatus: collectibleStatus || { type: 'regular', documentId: sticker.id },\n    });\n  }, [markShouldShowEffect, setEmojiStatus, collectibleStatuses]);\n\n  useTimeout(hideEffect, isEffectShown ? EFFECT_DURATION_MS : undefined);\n\n  const handleEmojiStatusClick = useCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    openStatusPicker();\n  }, [openStatusPicker, isAccountFrozen]);\n\n  return (\n    <div className=\"StatusButton extra-spacing\">\n      {Boolean(isEffectShown && emojiStatus) && (\n        <CustomEmojiEffect\n          reaction={emojiStatus!}\n          isLottie\n          className=\"emoji-status-effect\"\n        />\n      )}\n      <Button\n        round\n        ref={buttonRef}\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className=\"emoji-status\"\n        onClick={handleEmojiStatusClick}\n      >\n        {emojiStatus ? (\n          <CustomEmoji\n            key={emojiStatus.documentId}\n            documentId={emojiStatus.documentId}\n            size={EMOJI_STATUS_SIZE}\n            loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n            withSparkles={emojiStatus?.type === 'collectible'}\n          />\n        ) : <StarIcon />}\n      </Button>\n      <StatusPickerMenu\n        statusButtonRef={buttonRef}\n        isOpen={isStatusPickerOpen}\n        onEmojiStatusSelect={handleEmojiStatusSet}\n        onClose={closeStatusPicker}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const { currentUserId } = global;\n  const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n  const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n  const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n  return {\n    emojiStatus: currentUser?.emojiStatus,\n    collectibleStatuses,\n    isAccountFrozen,\n  };\n})(StatusButton));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StatusPickerMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StatusPickerMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StatusPickerMenu = useModuleLoader(Bundles.Extra, 'StatusPickerMenu', !isOpen);\n\n  return StatusPickerMenu ? <StatusPickerMenu {...props} /> : undefined;\n};\n\nexport default StatusPickerMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './NewChat';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst NewChatAsync: FC<OwnProps> = (props) => {\n  const NewChat = useModuleLoader(Bundles.Extra, 'NewChat');\n\n  return NewChat ? <NewChat {...props} /> : <Loading />;\n};\n\nexport default NewChatAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './LeftSearch';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst LeftSearchAsync: FC<OwnProps> = (props) => {\n  const LeftSearch = useModuleLoader(Bundles.Extra, 'LeftSearch');\n\n  return LeftSearch ? <LeftSearch {...props} /> : <Loading />;\n};\n\nexport default LeftSearchAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './Settings';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst SettingsAsync: FC<OwnProps> = (props) => {\n  const Settings = useModuleLoader(Bundles.Extra, 'Settings');\n\n  return Settings ? <Settings {...props} /> : <Loading />;\n};\n\nexport default SettingsAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachBotRecipientPicker';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst AttachBotRecipientPickerAsync: FC<OwnProps> = (props) => {\n  const { requestedAttachBotInChat } = props;\n  const AttachBotRecipientPicker = useModuleLoader(\n    Bundles.Extra, 'AttachBotRecipientPicker', !requestedAttachBotInChat,\n  );\n\n  return AttachBotRecipientPicker ? <AttachBotRecipientPicker {...props} /> : undefined;\n};\n\nexport default AttachBotRecipientPickerAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './BotTrustModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst BotTrustModalAsync: FC<OwnProps> = (props) => {\n  const { bot } = props;\n  const BotTrustModal = useModuleLoader(Bundles.Extra, 'BotTrustModal', !bot);\n\n  return BotTrustModal ? <BotTrustModal {...props} /> : undefined;\n};\n\nexport default BotTrustModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteFolderDialog';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteFolderDialogAsync: FC<OwnProps> = (props) => {\n  const { folder } = props;\n  const DeleteFolderDialog = useModuleLoader(Bundles.Extra, 'DeleteFolderDialog', !folder);\n\n  return DeleteFolderDialog ? <DeleteFolderDialog {...props} /> : undefined;\n};\n\nexport default DeleteFolderDialogAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DialogsAsync: FC = ({ isOpen }) => {\n  const Dialogs = useModuleLoader(Bundles.Extra, 'Dialogs', !isOpen);\n\n  return Dialogs ? <Dialogs /> : undefined;\n};\n\nexport default DialogsAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { IS_OPFS_SUPPORTED, IS_SERVICE_WORKER_SUPPORTED, MAX_BUFFER_SIZE } from '../../util/browser/windowEnvironment';\nimport download from '../../util/download';\nimport generateUniqueId from '../../util/generateUniqueId';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useRunDebounced from '../../hooks/useRunDebounced';\n\ntype StateProps = {\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst GLOBAL_UPDATE_DEBOUNCE = 1000;\n\nconst processedHashes = new Set<string>();\nconst downloadedHashes = new Set<string>();\n\nconst DownloadManager: FC<StateProps> = ({\n  activeDownloads,\n}) => {\n  const { cancelMediaHashDownloads, showNotification } = getActions();\n\n  const runDebounced = useRunDebounced(GLOBAL_UPDATE_DEBOUNCE, true);\n\n  const handleMediaDownloaded = useLastCallback((hash: string) => {\n    downloadedHashes.add(hash);\n    runDebounced(() => {\n      if (downloadedHashes.size) {\n        cancelMediaHashDownloads({ mediaHashes: Array.from(downloadedHashes) });\n        downloadedHashes.clear();\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (!Object.keys(activeDownloads).length) {\n      processedHashes.clear();\n      return;\n    }\n\n    Object.entries(activeDownloads).forEach(([mediaHash, metadata]) => {\n      if (processedHashes.has(mediaHash)) {\n        return;\n      }\n      processedHashes.add(mediaHash);\n\n      const { size, filename, format: mediaFormat } = metadata;\n\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n\n      if (mediaData) {\n        download(mediaData, filename);\n        handleMediaDownloaded(mediaHash);\n        return;\n      }\n\n      if (size > MAX_BUFFER_SIZE && !IS_OPFS_SUPPORTED && !IS_SERVICE_WORKER_SUPPORTED) {\n        showNotification({\n          message: 'Downloading files bigger than 2GB is not supported in your browser.',\n        });\n        handleMediaDownloaded(mediaHash);\n        return;\n      }\n\n      const handleProgress = () => {\n        const currentDownloads = selectTabState(getGlobal()).activeDownloads;\n        if (!currentDownloads[mediaHash]) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n      };\n\n      mediaLoader.fetch(mediaHash, mediaFormat, true, handleProgress, generateUniqueId()).then((result) => {\n        if (mediaFormat === ApiMediaFormat.DownloadUrl) {\n          const url = new URL(result, window.document.baseURI);\n          url.searchParams.set('filename', encodeURIComponent(filename));\n          const downloadWindow = window.open(url.toString());\n          downloadWindow?.addEventListener('beforeunload', () => {\n            showNotification({\n              message: 'Download started. Please, do not close the app before it is finished.',\n            });\n          });\n        } else if (result) {\n          download(result, filename);\n        }\n\n        handleMediaDownloaded(mediaHash);\n      });\n    });\n  }, [activeDownloads]);\n\n  return undefined;\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const activeDownloads = selectTabState(global).activeDownloads;\n\n    return {\n      activeDownloads,\n    };\n  },\n)(DownloadManager));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DraftRecipientPicker';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DraftRecipientPickerAsync: FC<OwnProps> = (props) => {\n  const { requestedDraft } = props;\n  const DraftRecipientPicker = useModuleLoader(Bundles.Extra, 'DraftRecipientPicker', !requestedDraft);\n\n  return DraftRecipientPicker ? <DraftRecipientPicker {...props} /> : undefined;\n};\n\nexport default DraftRecipientPickerAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ForwardRecipientPicker';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ForwardRecipientPickerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ForwardRecipientPicker = useModuleLoader(Bundles.Extra, 'ForwardRecipientPicker', !isOpen);\n\n  return ForwardRecipientPicker ? <ForwardRecipientPicker {...props} /> : undefined;\n};\n\nexport default ForwardRecipientPickerAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport { getCanPostInChat } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\n\nimport Modal from '../ui/Modal';\n\nimport './GameModal.scss';\n\ntype GameEvents = { eventType: 'share_score' | 'share_game' };\n\nconst PLAY_GAME_ACTION_INTERVAL = 5000;\n\ntype OwnProps = {\n  openedGame?: TabState['openedGame'];\n  gameTitle?: string;\n};\n\ntype StateProps = {\n  canPost?: boolean;\n};\n\nconst GameModal: FC<OwnProps & StateProps> = ({ openedGame, gameTitle, canPost }) => {\n  const { closeGame, openForwardMenu } = getActions();\n  const lang = useOldLang();\n  const { url, chatId, messageId } = openedGame || {};\n  const isOpen = Boolean(url);\n\n  const sendMessageAction = useSendMessageAction(chatId);\n  useInterval(() => {\n    sendMessageAction({ type: 'playingGame' });\n  }, isOpen && canPost ? PLAY_GAME_ACTION_INTERVAL : undefined);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (!chatId || !messageId) return;\n    try {\n      const data = JSON.parse(event.data) as GameEvents;\n      if (data.eventType === 'share_score') {\n        openForwardMenu({ fromChatId: chatId, messageIds: [messageId], withMyScore: true });\n        closeGame();\n      }\n\n      if (data.eventType === 'share_game') {\n        openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n        closeGame();\n      }\n    } catch (e) {\n      // Ignore other messages\n    }\n  }, [chatId, closeGame, messageId, openForwardMenu]);\n\n  const handleLoad = useCallback((event: React.SyntheticEvent<HTMLIFrameElement>) => {\n    event.currentTarget.focus();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <Modal\n      className=\"GameModal\"\n      isOpen={isOpen}\n      onClose={closeGame}\n      title={gameTitle}\n      hasCloseButton\n    >\n      {isOpen && (\n        <iframe\n          className=\"game-frame\"\n          onLoad={handleLoad}\n          src={url}\n          title={lang('AttachGame')}\n          sandbox=\"allow-scripts allow-same-origin allow-orientation-lock\"\n          allow=\"fullscreen\"\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { openedGame }): StateProps => {\n    const { chatId } = openedGame || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const canPost = Boolean(chat) && getCanPostInChat(chat, undefined, undefined, chatFullInfo);\n\n    return {\n      canPost,\n    };\n  },\n)(GameModal));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HistoryCalendar';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HistoryCalendarAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HistoryCalendar = useModuleLoader(Bundles.Extra, 'HistoryCalendar', !isOpen);\n\n  return HistoryCalendar ? <HistoryCalendar {...props} /> : undefined;\n};\n\nexport default HistoryCalendarAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"bdKGCai4\",\"wrapper\":\"BIi4Pl4Z\",\"icon\":\"JwlsF2tF\",\"help\":\"VlXFyC_a\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { decryptSession, UnrecoverablePasscodeError } from '../../util/passcode';\nimport { LOCAL_TGS_URLS } from '../common/helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../common/AnimatedIconWithPreview';\nimport PasswordForm from '../common/PasswordForm';\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Link from '../ui/Link';\n\nimport styles from './LockScreen.module.scss';\n\nimport lockPreviewUrl from '../../assets/lock.png';\n\nexport type OwnProps = {\n  isLocked?: boolean;\n};\n\ntype StateProps = {\n  passcodeSettings: GlobalState['passcode'];\n};\n\nconst ICON_SIZE = 160;\n\nconst LockScreen: FC<OwnProps & StateProps> = ({\n  isLocked,\n  passcodeSettings,\n}) => {\n  const {\n    unlockScreen,\n    signOut,\n    logInvalidUnlockAttempt,\n    resetInvalidUnlockAttempts,\n  } = getActions();\n\n  const {\n    invalidAttemptsCount,\n    timeoutUntil,\n    isLoading,\n  } = passcodeSettings;\n\n  const lang = useOldLang();\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPasscode, setShouldShowPasscode] = useState(false);\n  const [isSignOutDialogOpen, openSignOutConfirmation, closeSignOutConfirmation] = useFlag(false);\n  const { shouldRender } = useShowTransitionDeprecated(isLocked);\n\n  useTimeout(resetInvalidUnlockAttempts, timeoutUntil ? timeoutUntil - Date.now() : undefined);\n\n  const handleClearError = useCallback(() => {\n    setValidationError('');\n  }, []);\n\n  const handleSubmit = useCallback((passcode: string) => {\n    if (timeoutUntil !== undefined) {\n      setValidationError(lang('FloodWait'));\n      return;\n    }\n\n    setValidationError('');\n    decryptSession(passcode).then(unlockScreen, (err) => {\n      if (err instanceof UnrecoverablePasscodeError) {\n        signOut({ forceInitApi: true });\n      }\n\n      logInvalidUnlockAttempt();\n      setValidationError(lang('lng_passcode_wrong'));\n    });\n  }, [lang, timeoutUntil]);\n\n  useEffect(() => {\n    if (timeoutUntil !== undefined) {\n      setValidationError(lang('FloodWait'));\n    } else if (invalidAttemptsCount === 0) {\n      setValidationError('');\n    }\n  }, [timeoutUntil, lang, invalidAttemptsCount]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderLogoutPrompt() {\n    return (\n      <div className={styles.help}>\n        <p>\n          <Link onClick={openSignOutConfirmation}>Log out</Link>\n          {' '}\n          if you don&apos;t remember your passcode.\n        </p>\n        <p>\n          <Button color=\"translucent\" size=\"tiny\" isText onClick={openSignOutConfirmation}>\n            {lang('AccountSettings.Logout')}\n          </Button>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper} dir={lang.isRtl ? 'rtl' : undefined}>\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={ICON_SIZE}\n          className={styles.icon}\n        />\n\n        <PasswordForm\n          key=\"password-form\"\n          shouldShowSubmit\n          shouldDisablePasswordManager\n          isLoading={isLoading}\n          error={validationError}\n          placeholder={lang('Passcode.EnterPasscodePlaceholder')}\n          submitLabel={lang('Next')}\n          clearError={handleClearError}\n          isPasswordVisible={shouldShowPasscode}\n          noRipple\n          onChangePasswordVisibility={setShouldShowPasscode}\n          onSubmit={handleSubmit}\n        />\n\n        {renderLogoutPrompt()}\n      </div>\n\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      passcodeSettings: global.passcode,\n    };\n  },\n)(LockScreen));\n","// extracted by mini-css-extract-plugin\nexport {};","import \"../../global/actions/all\";\n\nimport {\n  beginHeavyAnimation,\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"../../lib/teact/teact\";\nimport { addExtraClass } from \"../../lib/teact/teact-dom\";\nimport { getActions, getGlobal, withGlobal } from \"../../global\";\n\nimport type {\n  ApiChatFolder,\n  ApiLimitTypeWithModal,\n  ApiUser,\n} from \"../../api/types\";\nimport type { TabState } from \"../../global/types\";\nimport { ElectronEvent } from \"../../types/electron\";\n\nimport { BASE_EMOJI_KEYWORD_LANG, DEBUG, INACTIVE_MARKER } from \"../../config\";\nimport { requestNextMutation } from \"../../lib/fasterdom/fasterdom\";\nimport {\n  selectCanAnimateInterface,\n  selectChatFolder,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForwardModalOpen,\n  selectIsMediaViewerOpen,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectIsServiceChatReady,\n  selectIsStoryViewerOpen,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from \"../../global/selectors\";\nimport { selectSharedSettings } from \"../../global/selectors/sharedState\";\nimport {\n  IS_ANDROID,\n  IS_ELECTRON,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from \"../../util/browser/windowEnvironment\";\nimport buildClassName from \"../../util/buildClassName\";\nimport { waitForTransitionEnd } from \"../../util/cssAnimationEndListeners\";\nimport { processDeepLink } from \"../../util/deeplink\";\nimport { Bundles, loadBundle } from \"../../util/moduleLoader\";\nimport {\n  parseInitialLocationHash,\n  parseLocationHash,\n} from \"../../util/routing\";\nimport updateIcon from \"../../util/updateIcon\";\n\nimport useInterval from \"../../hooks/schedulers/useInterval\";\nimport useTimeout from \"../../hooks/schedulers/useTimeout\";\nimport useAppLayout from \"../../hooks/useAppLayout\";\nimport useForceUpdate from \"../../hooks/useForceUpdate\";\nimport useLang from \"../../hooks/useLang\";\nimport useLastCallback from \"../../hooks/useLastCallback\";\nimport usePreventPinchZoomGesture from \"../../hooks/usePreventPinchZoomGesture\";\nimport useShowTransition from \"../../hooks/useShowTransition\";\nimport useSyncEffect from \"../../hooks/useSyncEffect\";\nimport useBackgroundMode from \"../../hooks/window/useBackgroundMode\";\nimport useBeforeUnload from \"../../hooks/window/useBeforeUnload\";\nimport { useFullscreenStatus } from \"../../hooks/window/useFullscreen\";\n\nimport ActiveCallHeader from \"../calls/ActiveCallHeader.async\";\nimport GroupCall from \"../calls/group/GroupCall.async\";\nimport PhoneCall from \"../calls/phone/PhoneCall.async\";\nimport RatePhoneCallModal from \"../calls/phone/RatePhoneCallModal.async\";\nimport CustomEmojiSetsModal from \"../common/CustomEmojiSetsModal.async\";\nimport DeleteMessageModal from \"../common/DeleteMessageModal.async\";\nimport StickerSetModal from \"../common/StickerSetModal.async\";\nimport UnreadCount from \"../common/UnreadCounter\";\nimport LeftColumn from \"../left/LeftColumn\";\nimport MediaViewer from \"../mediaViewer/MediaViewer.async\";\nimport ReactionPicker from \"../middle/message/reactions/ReactionPicker.async\";\nimport MessageListHistoryHandler from \"../middle/MessageListHistoryHandler\";\nimport MiddleColumn from \"../middle/MiddleColumn\";\nimport AudioPlayer from \"../middle/panes/AudioPlayer\";\nimport ModalContainer from \"../modals/ModalContainer\";\nimport PaymentModal from \"../payment/PaymentModal.async\";\nimport ReceiptModal from \"../payment/ReceiptModal.async\";\nimport RightColumn from \"../right/RightColumn\";\nimport RightColumnProfile from \"../right/RightColumnProfile\";\nimport RightColumnTrading from \"../right/RightColumnTrading\";\nimport StoryViewer from \"../story/StoryViewer.async\";\nimport AttachBotRecipientPicker from \"./AttachBotRecipientPicker.async\";\nimport BotTrustModal from \"./BotTrustModal.async\";\nimport DeleteFolderDialog from \"./DeleteFolderDialog.async\";\nimport Dialogs from \"./Dialogs.async\";\nimport DownloadManager from \"./DownloadManager\";\nimport DraftRecipientPicker from \"./DraftRecipientPicker.async\";\nimport ForwardRecipientPicker from \"./ForwardRecipientPicker.async\";\nimport GameModal from \"./GameModal\";\nimport HistoryCalendar from \"./HistoryCalendar.async\";\nimport NewContactModal from \"./NewContactModal.async\";\nimport Notifications from \"./Notifications.async\";\nimport PremiumLimitReachedModal from \"./premium/common/PremiumLimitReachedModal.async\";\nimport GiveawayModal from \"./premium/GiveawayModal.async\";\nimport PremiumMainModal from \"./premium/PremiumMainModal.async\";\nimport StarsGiftingPickerModal from \"./premium/StarsGiftingPickerModal.async\";\nimport SafeLinkModal from \"./SafeLinkModal.async\";\nimport ConfettiContainer from \"./visualEffects/ConfettiContainer\";\nimport SnapEffectContainer from \"./visualEffects/SnapEffectContainer\";\nimport WaveContainer from \"./visualEffects/WaveContainer\";\n\nimport \"./Main.scss\";\n\nexport interface OwnProps {\n  isMobile?: boolean;\n}\n\ntype StateProps = {\n  isMasterTab?: boolean;\n  currentUserId?: string;\n  isLeftColumnOpen: boolean;\n  isMiddleColumnOpen: boolean;\n  isRightColumnOpen: boolean;\n  isTradingColumnOpen: boolean;\n  isMediaViewerOpen: boolean;\n  isStoryViewerOpen: boolean;\n  isForwardModalOpen: boolean;\n  hasNotifications: boolean;\n  hasDialogs: boolean;\n  safeLinkModalUrl?: string;\n  isHistoryCalendarOpen: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  openedStickerSetShortName?: string;\n  openedCustomEmojiSetIds?: string[];\n  activeGroupCallId?: string;\n  isServiceChatReady?: boolean;\n  wasTimeFormatSetManually?: boolean;\n  isPhoneCallActive?: boolean;\n  addedSetIds?: string[];\n  addedCustomEmojiIds?: string[];\n  newContactUserId?: string;\n  newContactByPhoneNumber?: boolean;\n  openedGame?: TabState[\"openedGame\"];\n  gameTitle?: string;\n  isRatePhoneCallModalOpen?: boolean;\n  isPremiumModalOpen?: boolean;\n  botTrustRequest?: TabState[\"botTrustRequest\"];\n  botTrustRequestBot?: ApiUser;\n  requestedAttachBotInChat?: TabState[\"requestedAttachBotInChat\"];\n  requestedDraft?: TabState[\"requestedDraft\"];\n  limitReached?: ApiLimitTypeWithModal;\n  deleteFolderDialog?: ApiChatFolder;\n  isPaymentModalOpen?: boolean;\n  isReceiptModalOpen?: boolean;\n  isReactionPickerOpen: boolean;\n  isGiveawayModalOpen?: boolean;\n  isDeleteMessageModalOpen?: boolean;\n  isStarsGiftingPickerModal?: boolean;\n  isCurrentUserPremium?: boolean;\n  noRightColumnAnimation?: boolean;\n  withInterfaceAnimations?: boolean;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  isAppConfigLoaded?: boolean;\n};\n\nconst APP_OUTDATED_TIMEOUT_MS = 5 * 60 * 1000; // 5 min\nconst CALL_BUNDLE_LOADING_DELAY_MS = 5000; // 5 sec\n\nlet DEBUG_isLogged = false;\n\nconst Main = ({\n  isMobile,\n  isLeftColumnOpen,\n  isMiddleColumnOpen,\n  isRightColumnOpen,\n  isTradingColumnOpen,\n  isMediaViewerOpen,\n  isStoryViewerOpen,\n  isForwardModalOpen,\n  hasNotifications,\n  hasDialogs,\n  activeGroupCallId,\n  safeLinkModalUrl,\n  isHistoryCalendarOpen,\n  shouldSkipHistoryAnimations,\n  limitReached,\n  openedStickerSetShortName,\n  openedCustomEmojiSetIds,\n  isServiceChatReady,\n  withInterfaceAnimations,\n  wasTimeFormatSetManually,\n  addedSetIds,\n  addedCustomEmojiIds,\n  isPhoneCallActive,\n  newContactUserId,\n  newContactByPhoneNumber,\n  openedGame,\n  gameTitle,\n  isRatePhoneCallModalOpen,\n  botTrustRequest,\n  botTrustRequestBot,\n  requestedAttachBotInChat,\n  requestedDraft,\n  isPremiumModalOpen,\n  isGiveawayModalOpen,\n  isDeleteMessageModalOpen,\n  isStarsGiftingPickerModal,\n  isPaymentModalOpen,\n  isReceiptModalOpen,\n  isReactionPickerOpen,\n  isCurrentUserPremium,\n  deleteFolderDialog,\n  isMasterTab,\n  noRightColumnAnimation,\n  isSynced,\n  currentUserId,\n  isAccountFrozen,\n  isAppConfigLoaded,\n}: OwnProps & StateProps) => {\n  const {\n    initMain,\n    loadAnimatedEmojis,\n    loadBirthdayNumbersStickers,\n    loadRestrictedEmojiStickers,\n    loadNotificationSettings,\n    loadNotificationExceptions,\n    updateIsOnline,\n    onTabFocusChange,\n    loadTopInlineBots,\n    loadEmojiKeywords,\n    loadCountryList,\n    loadAvailableReactions,\n    loadStickerSets,\n    loadPremiumGifts,\n    loadTonGifts,\n    loadStarGifts,\n    loadDefaultTopicIcons,\n    loadAddedStickers,\n    loadFavoriteStickers,\n    loadDefaultStatusIcons,\n    ensureTimeFormat,\n    closeStickerSetModal,\n    closeCustomEmojiSets,\n    checkVersionNotification,\n    loadConfig,\n    loadAppConfig,\n    loadAttachBots,\n    loadContactList,\n    loadCustomEmojis,\n    loadGenericEmojiEffects,\n    closePaymentModal,\n    clearReceipt,\n    checkAppVersion,\n    openThread,\n    toggleLeftColumn,\n    loadRecentEmojiStatuses,\n    loadUserCollectibleStatuses,\n    updatePageTitle,\n    loadTopReactions,\n    loadRecentReactions,\n    loadDefaultTagReactions,\n    loadFeaturedEmojiStickers,\n    setIsElectronUpdateAvailable,\n    loadAuthorizations,\n    loadPeerColors,\n    loadSavedReactionTags,\n    loadTimezones,\n    loadQuickReplies,\n    loadStarStatus,\n    loadAvailableEffects,\n    loadTopBotApps,\n    loadPaidReactionPrivacy,\n    loadPasswordInfo,\n    loadBotFreezeAppeal,\n    loadAllChats,\n    loadAllStories,\n    loadAllHiddenStories,\n    loadContentSettings,\n  } = getActions();\n\n  if (DEBUG && !DEBUG_isLogged) {\n    DEBUG_isLogged = true;\n    // eslint-disable-next-line no-console\n    console.log(\">>> RENDER MAIN\");\n  }\n\n  const lang = useLang();\n\n  // Preload Calls bundle to initialize sounds for iOS\n  useTimeout(() => {\n    void loadBundle(Bundles.Calls);\n  }, CALL_BUNDLE_LOADING_DELAY_MS);\n\n  const containerRef = useRef<HTMLDivElement>();\n  const leftColumnRef = useRef<HTMLDivElement>();\n\n  const { isDesktop } = useAppLayout();\n  useEffect(() => {\n    if (!isLeftColumnOpen && !isMiddleColumnOpen && !isDesktop) {\n      // Always display at least one column\n      toggleLeftColumn();\n    } else if (isLeftColumnOpen && isMiddleColumnOpen && isMobile) {\n      // Can't have two active columns at the same time\n      toggleLeftColumn();\n    }\n  }, [\n    isDesktop,\n    isLeftColumnOpen,\n    isMiddleColumnOpen,\n    isMobile,\n    toggleLeftColumn,\n  ]);\n\n  useInterval(\n    checkAppVersion,\n    isMasterTab ? APP_OUTDATED_TIMEOUT_MS : undefined,\n    true\n  );\n\n  useEffect(() => {\n    if (!IS_ELECTRON) {\n      return undefined;\n    }\n\n    const removeUpdateAvailableListener = window.electron!.on(\n      ElectronEvent.UPDATE_AVAILABLE,\n      () => {\n        setIsElectronUpdateAvailable({ isAvailable: true });\n      }\n    );\n\n    const removeUpdateErrorListener = window.electron!.on(\n      ElectronEvent.UPDATE_ERROR,\n      () => {\n        setIsElectronUpdateAvailable({ isAvailable: false });\n        removeUpdateAvailableListener?.();\n      }\n    );\n\n    return () => {\n      removeUpdateErrorListener?.();\n      removeUpdateAvailableListener?.();\n    };\n  }, []);\n\n  // Initial API calls\n  useEffect(() => {\n    if (isMasterTab && isSynced) {\n      updateIsOnline({ isOnline: true });\n      loadConfig();\n      loadAppConfig();\n      loadPeerColors();\n      initMain();\n      loadContactList();\n      checkAppVersion();\n      loadAuthorizations();\n      loadPasswordInfo();\n    }\n  }, [isMasterTab, isSynced]);\n\n  // Initial API calls\n  useEffect(() => {\n    if (isMasterTab && isSynced && isAppConfigLoaded && !isAccountFrozen) {\n      loadAllChats({ listType: \"saved\" });\n      loadAllStories();\n      loadAllHiddenStories();\n      loadContentSettings();\n      loadRecentReactions();\n      loadDefaultTagReactions();\n      loadAttachBots();\n      loadNotificationSettings();\n      loadNotificationExceptions();\n      loadTopInlineBots();\n      loadTopReactions();\n      loadStarStatus();\n      loadEmojiKeywords({ language: BASE_EMOJI_KEYWORD_LANG });\n      loadFeaturedEmojiStickers();\n      loadSavedReactionTags();\n      loadTopBotApps();\n      loadPaidReactionPrivacy();\n      loadDefaultTopicIcons();\n      loadAnimatedEmojis();\n      loadAvailableReactions();\n      loadUserCollectibleStatuses();\n      loadGenericEmojiEffects();\n      loadPremiumGifts();\n      loadTonGifts();\n      loadStarGifts();\n      loadAvailableEffects();\n      loadBirthdayNumbersStickers();\n      loadRestrictedEmojiStickers();\n      loadQuickReplies();\n      loadTimezones();\n    }\n  }, [isMasterTab, isSynced, isAppConfigLoaded, isAccountFrozen]);\n\n  // Initial Premium API calls\n  useEffect(() => {\n    if (\n      isMasterTab &&\n      isCurrentUserPremium &&\n      isAppConfigLoaded &&\n      !isAccountFrozen\n    ) {\n      loadDefaultStatusIcons();\n      loadRecentEmojiStatuses();\n    }\n  }, [isCurrentUserPremium, isMasterTab, isAppConfigLoaded, isAccountFrozen]);\n\n  // Language-based API calls\n  useEffect(() => {\n    if (isMasterTab) {\n      if (lang.code !== BASE_EMOJI_KEYWORD_LANG) {\n        loadEmojiKeywords({ language: lang.code });\n      }\n\n      loadCountryList({ langCode: lang.code });\n    }\n  }, [lang, isMasterTab]);\n\n  // Re-fetch cached saved emoji for `localDb`\n  useEffect(() => {\n    if (isMasterTab) {\n      loadCustomEmojis({\n        ids: Object.keys(getGlobal().customEmojis.byId),\n        ignoreCache: true,\n      });\n    }\n  }, [isMasterTab]);\n\n  // Sticker sets\n  useEffect(() => {\n    if (isMasterTab && isSynced && isAppConfigLoaded && !isAccountFrozen) {\n      if (!addedSetIds || !addedCustomEmojiIds) {\n        loadStickerSets();\n        loadFavoriteStickers();\n      }\n\n      if (addedSetIds && addedCustomEmojiIds) {\n        loadAddedStickers();\n      }\n    }\n  }, [\n    addedSetIds,\n    addedCustomEmojiIds,\n    isMasterTab,\n    isSynced,\n    isAppConfigLoaded,\n    isAccountFrozen,\n  ]);\n\n  useEffect(() => {\n    loadBotFreezeAppeal();\n  }, [isAppConfigLoaded]);\n\n  // Check version when service chat is ready\n  useEffect(() => {\n    if (isServiceChatReady && isMasterTab) {\n      checkVersionNotification();\n    }\n  }, [isServiceChatReady, isMasterTab]);\n\n  // Ensure time format\n  useEffect(() => {\n    if (!wasTimeFormatSetManually) {\n      ensureTimeFormat();\n    }\n  }, [wasTimeFormatSetManually]);\n\n  // Parse deep link\n  useEffect(() => {\n    if (!isSynced) return;\n    updatePageTitle();\n\n    const parsedInitialLocationHash = parseInitialLocationHash();\n    if (parsedInitialLocationHash?.tgaddr) {\n      processDeepLink(decodeURIComponent(parsedInitialLocationHash.tgaddr));\n    }\n  }, [isSynced]);\n\n  useEffect(() => {\n    return window.electron?.on(ElectronEvent.DEEPLINK, (link: string) => {\n      processDeepLink(decodeURIComponent(link));\n    });\n  }, []);\n\n  useEffect(() => {\n    const parsedLocationHash = parseLocationHash(currentUserId);\n    if (!parsedLocationHash) return;\n\n    openThread({\n      chatId: parsedLocationHash.chatId,\n      threadId: parsedLocationHash.threadId,\n      type: parsedLocationHash.type,\n    });\n  }, [currentUserId]);\n\n  // Restore Transition slide class after async rendering\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    if (container.parentNode!.childElementCount === 1) {\n      addExtraClass(container, \"Transition_slide-active\");\n    }\n  }, []);\n\n  useShowTransition({\n    ref: containerRef,\n    isOpen: isLeftColumnOpen,\n    noCloseTransition: shouldSkipHistoryAnimations,\n    prefix: \"left-column-\",\n  });\n  const willAnimateLeftColumnRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  // Handle opening middle column\n  useSyncEffect(\n    ([prevIsLeftColumnOpen]) => {\n      if (\n        prevIsLeftColumnOpen === undefined ||\n        isLeftColumnOpen === prevIsLeftColumnOpen ||\n        !withInterfaceAnimations\n      ) {\n        return;\n      }\n\n      willAnimateLeftColumnRef.current = true;\n\n      if (IS_ANDROID) {\n        requestNextMutation(() => {\n          document.body.classList.toggle(\n            \"android-left-blackout-open\",\n            !isLeftColumnOpen\n          );\n        });\n      }\n\n      const endHeavyAnimation = beginHeavyAnimation();\n\n      waitForTransitionEnd(document.getElementById(\"MiddleColumn\")!, () => {\n        endHeavyAnimation();\n        willAnimateLeftColumnRef.current = false;\n        forceUpdate();\n      });\n    },\n    [isLeftColumnOpen, withInterfaceAnimations, forceUpdate]\n  );\n\n  useShowTransition({\n    ref: containerRef,\n    isOpen: isRightColumnOpen,\n    noCloseTransition: shouldSkipHistoryAnimations,\n    prefix: \"right-column-\",\n  });\n  const willAnimateRightColumnRef = useRef(false);\n  const [isNarrowMessageList, setIsNarrowMessageList] =\n    useState(isRightColumnOpen);\n\n  const isFullscreen = useFullscreenStatus();\n\n  // Handle opening right column\n  useSyncEffect(\n    ([prevIsMiddleColumnOpen, prevIsRightColumnOpen]) => {\n      if (\n        prevIsRightColumnOpen === undefined ||\n        isRightColumnOpen === prevIsRightColumnOpen\n      ) {\n        return;\n      }\n\n      if (!prevIsMiddleColumnOpen || noRightColumnAnimation) {\n        setIsNarrowMessageList(isRightColumnOpen);\n        return;\n      }\n\n      willAnimateRightColumnRef.current = true;\n\n      const endHeavyAnimation = beginHeavyAnimation();\n\n      waitForTransitionEnd(document.getElementById(\"RightColumn\")!, () => {\n        endHeavyAnimation();\n        willAnimateRightColumnRef.current = false;\n        forceUpdate();\n        setIsNarrowMessageList(isRightColumnOpen);\n      });\n    },\n    [isMiddleColumnOpen, isRightColumnOpen, noRightColumnAnimation, forceUpdate]\n  );\n\n  const className = buildClassName(\n    willAnimateLeftColumnRef.current && \"left-column-animating\",\n    willAnimateRightColumnRef.current && \"right-column-animating\",\n    isNarrowMessageList && \"narrow-message-list\",\n    shouldSkipHistoryAnimations && \"history-animation-disabled\",\n    isFullscreen && \"is-fullscreen\",\n    isRightColumnOpen && \"right-column-shown\",\n    isRightColumnOpen && \"right-column-open\",\n    isTradingColumnOpen && \"trading-column-shown\",\n    // Always show Moonraker column for demo\n    \"moonraker-column-shown\"\n  );\n\n  console.log(\n    \"🏠 Main component render - isTradingColumnOpen:\",\n    isTradingColumnOpen\n  );\n  console.log(\"🎨 Main component render - className:\", className);\n\n  const handleBlur = useLastCallback(() => {\n    onTabFocusChange({ isBlurred: true });\n  });\n\n  const handleFocus = useLastCallback(() => {\n    onTabFocusChange({ isBlurred: false });\n\n    if (!document.title.includes(INACTIVE_MARKER)) {\n      updatePageTitle();\n    }\n\n    updateIcon(false);\n  });\n\n  const handleStickerSetModalClose = useLastCallback(() => {\n    closeStickerSetModal();\n  });\n\n  const handleCustomEmojiSetsModalClose = useLastCallback(() => {\n    closeCustomEmojiSets();\n  });\n\n  // Online status and browser tab indicators\n  useBackgroundMode(handleBlur, handleFocus, Boolean(IS_ELECTRON));\n  useBeforeUnload(handleBlur);\n  usePreventPinchZoomGesture(isMediaViewerOpen || isStoryViewerOpen);\n\n  return (\n    <div ref={containerRef} id=\"Main\" className={className}>\n      <LeftColumn ref={leftColumnRef} />\n      <MiddleColumn leftColumnRef={leftColumnRef} isMobile={isMobile} />\n      <RightColumn isMobile={isMobile} />\n      <div id=\"MoonrakerColumn\" className=\"moonraker-column\">\n        <RightColumnProfile isActive={true} onClose={() => {}} />\n      </div>\n      <RightColumnTrading isMobile={isMobile} />\n      <MediaViewer isOpen={isMediaViewerOpen} />\n      <StoryViewer isOpen={isStoryViewerOpen} />\n      <ForwardRecipientPicker isOpen={isForwardModalOpen} />\n      <DraftRecipientPicker requestedDraft={requestedDraft} />\n      <Notifications isOpen={hasNotifications} />\n      <Dialogs isOpen={hasDialogs} />\n      <AudioPlayer noUi />\n      <ModalContainer />\n      <SafeLinkModal url={safeLinkModalUrl} />\n      <HistoryCalendar isOpen={isHistoryCalendarOpen} />\n      <StickerSetModal\n        isOpen={Boolean(openedStickerSetShortName)}\n        onClose={handleStickerSetModalClose}\n        stickerSetShortName={openedStickerSetShortName}\n      />\n      <CustomEmojiSetsModal\n        customEmojiSetIds={openedCustomEmojiSetIds}\n        onClose={handleCustomEmojiSetsModalClose}\n      />\n      {activeGroupCallId && <GroupCall groupCallId={activeGroupCallId} />}\n      <ActiveCallHeader\n        isActive={Boolean(activeGroupCallId || isPhoneCallActive)}\n      />\n      <NewContactModal\n        isOpen={Boolean(newContactUserId || newContactByPhoneNumber)}\n        userId={newContactUserId}\n        isByPhoneNumber={newContactByPhoneNumber}\n      />\n      <GameModal openedGame={openedGame} gameTitle={gameTitle} />\n      <DownloadManager />\n      <ConfettiContainer />\n      {IS_WAVE_TRANSFORM_SUPPORTED && <WaveContainer />}\n      <SnapEffectContainer />\n      <PhoneCall isActive={isPhoneCallActive} />\n      <UnreadCount isForAppBadge />\n      <RatePhoneCallModal isOpen={isRatePhoneCallModalOpen} />\n      <BotTrustModal\n        bot={botTrustRequestBot}\n        type={botTrustRequest?.type}\n        shouldRequestWriteAccess={botTrustRequest?.shouldRequestWriteAccess}\n      />\n      <AttachBotRecipientPicker\n        requestedAttachBotInChat={requestedAttachBotInChat}\n      />\n      <MessageListHistoryHandler />\n      <PremiumMainModal isOpen={isPremiumModalOpen} />\n      <GiveawayModal isOpen={isGiveawayModalOpen} />\n      <StarsGiftingPickerModal isOpen={isStarsGiftingPickerModal} />\n      <PremiumLimitReachedModal limit={limitReached} />\n      <PaymentModal isOpen={isPaymentModalOpen} onClose={closePaymentModal} />\n      <ReceiptModal isOpen={isReceiptModalOpen} onClose={clearReceipt} />\n      <DeleteFolderDialog folder={deleteFolderDialog} />\n      <ReactionPicker isOpen={isReactionPickerOpen} />\n      <DeleteMessageModal isOpen={isDeleteMessageModalOpen} />\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global, { isMobile }): StateProps => {\n    const { currentUserId } = global;\n\n    const {\n      botTrustRequest,\n      requestedAttachBotInChat,\n      requestedDraft,\n      safeLinkModalUrl,\n      openedStickerSetShortName,\n      openedCustomEmojiSetIds,\n      shouldSkipHistoryAnimations,\n      openedGame,\n      isLeftColumnShown,\n      historyCalendarSelectedAt,\n      notifications,\n      dialogs,\n      newContact,\n      ratingPhoneCall,\n      premiumModal,\n      giveawayModal,\n      deleteMessageModal,\n      starsGiftingPickerModal,\n      isMasterTab,\n      payment,\n      limitReachedModal,\n      deleteFolderDialogModal,\n    } = selectTabState(global);\n\n    const { wasTimeFormatSetManually } = selectSharedSettings(global);\n\n    const gameMessage =\n      openedGame &&\n      selectChatMessage(global, openedGame.chatId, openedGame.messageId);\n    const gameTitle = gameMessage?.content.game?.title;\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const noRightColumnAnimation =\n      !selectPerformanceSettingsValue(global, \"rightColumnAnimations\") ||\n      !selectCanAnimateInterface(global);\n\n    const deleteFolderDialog = deleteFolderDialogModal\n      ? selectChatFolder(global, deleteFolderDialogModal)\n      : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      currentUserId,\n      isLeftColumnOpen: isLeftColumnShown,\n      isMiddleColumnOpen: Boolean(chatId),\n      isRightColumnOpen: selectIsRightColumnShown(global, isMobile),\n      isTradingColumnOpen: Boolean(selectTabState(global).isTradingColumnShown),\n      isMediaViewerOpen: selectIsMediaViewerOpen(global),\n      isStoryViewerOpen: selectIsStoryViewerOpen(global),\n      isForwardModalOpen: selectIsForwardModalOpen(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      hasNotifications: Boolean(notifications.length),\n      hasDialogs: Boolean(dialogs.length),\n      safeLinkModalUrl,\n      isHistoryCalendarOpen: Boolean(historyCalendarSelectedAt),\n      shouldSkipHistoryAnimations,\n      openedStickerSetShortName,\n      openedCustomEmojiSetIds,\n      isServiceChatReady: selectIsServiceChatReady(global),\n      activeGroupCallId: isMasterTab\n        ? global.groupCalls.activeGroupCallId\n        : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      wasTimeFormatSetManually,\n      isPhoneCallActive: isMasterTab ? Boolean(global.phoneCall) : undefined,\n      addedSetIds: global.stickers.added.setIds,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      newContactUserId: newContact?.userId,\n      newContactByPhoneNumber: newContact?.isByPhoneNumber,\n      openedGame,\n      gameTitle,\n      isRatePhoneCallModalOpen: Boolean(ratingPhoneCall),\n      botTrustRequest,\n      botTrustRequestBot:\n        botTrustRequest && selectUser(global, botTrustRequest.botId),\n      requestedAttachBotInChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isPremiumModalOpen: premiumModal?.isOpen,\n      isGiveawayModalOpen: giveawayModal?.isOpen,\n      isDeleteMessageModalOpen: Boolean(deleteMessageModal),\n      isStarsGiftingPickerModal: starsGiftingPickerModal?.isOpen,\n      limitReached: limitReachedModal?.limit,\n      isPaymentModalOpen: payment.isPaymentModalOpen,\n      isReceiptModalOpen: Boolean(payment.receipt),\n      deleteFolderDialog,\n      isMasterTab,\n      requestedDraft,\n      noRightColumnAnimation,\n      isSynced: global.isSynced,\n      isAccountFrozen,\n      isAppConfigLoaded: global.isAppConfigLoaded,\n    };\n  })(Main)\n);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './NewContactModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst NewContactModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const NewContactModal = useModuleLoader(Bundles.Extra, 'NewContactModal', !isOpen);\n\n  return NewContactModal ? <NewContactModal {...props} /> : undefined;\n};\n\nexport default NewContactModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst NotificationsAsync: FC = ({ isOpen }) => {\n  const Notifications = useModuleLoader(Bundles.Extra, 'Notifications', !isOpen);\n\n  return Notifications ? <Notifications /> : undefined;\n};\n\nexport default NotificationsAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './SafeLinkModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst SafeLinkModalAsync: FC<OwnProps> = (props) => {\n  const { url } = props;\n  const SafeLinkModal = useModuleLoader(Bundles.Extra, 'SafeLinkModal', !url);\n\n  return SafeLinkModal ? <SafeLinkModal {...props} /> : undefined;\n};\n\nexport default SafeLinkModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst WebAppsCloseConfirmationModalAsync: FC = (props) => {\n  const { modal } = props;\n  const WebAppsCloseConfirmationModal = useModuleLoader(Bundles.Extra, 'WebAppsCloseConfirmationModal', !modal);\n\n  return WebAppsCloseConfirmationModal ? <WebAppsCloseConfirmationModal isOpen={modal} /> : undefined;\n};\n\nexport default WebAppsCloseConfirmationModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiveawayModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst GiveawayModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const GiveawayModal = useModuleLoader(Bundles.Extra, 'GiveawayModal', !isOpen);\n\n  return GiveawayModal ? <GiveawayModal {...props} /> : undefined;\n};\n\nexport default GiveawayModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PremiumMainModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PremiumMainModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PremiumMainModal = useModuleLoader(Bundles.Extra, 'PremiumMainModal', !isOpen);\n\n  return PremiumMainModal ? <PremiumMainModal {...props} /> : undefined;\n};\n\nexport default PremiumMainModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StarsGiftingPickerModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StarsGiftingPickerModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StarsGiftingPickerModal = useModuleLoader(Bundles.Stars, 'StarsGiftingPickerModal', !isOpen);\n\n  return StarsGiftingPickerModal ? <StarsGiftingPickerModal {...props} /> : undefined;\n};\n\nexport default StarsGiftingPickerModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './PremiumLimitReachedModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst PremiumLimitReachedModalAsync: FC<OwnProps> = (props) => {\n  const { limit } = props;\n  const PremiumLimitReachedModal = useModuleLoader(Bundles.Extra, 'PremiumLimitReachedModal', !limit);\n\n  return PremiumLimitReachedModal ? <PremiumLimitReachedModal {...props} /> : undefined;\n};\n\nexport default PremiumLimitReachedModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YUAfqWPN\"};","import { memo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ConfettiStyle } from '../../../types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { selectTabState } from '../../../global/selectors';\nimport buildStyle from '../../../util/buildStyle';\nimport { pick } from '../../../util/iteratees';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport styles from './ConfettiContainer.module.scss';\n\ntype StateProps = {\n  confetti?: TabState['confetti'];\n};\n\ninterface Confetti {\n  pos: {\n    x: number;\n    y: number;\n  };\n  velocity: {\n    x: number;\n    y: number;\n  };\n  size: number;\n  color: string;\n  isStar?: boolean;\n  flicker: number;\n  flickerFrequency: number;\n  rotation: number;\n  lastDrawnAt: number;\n  frameCount: number;\n}\n\nconst CONFETTI_FADEOUT_TIMEOUT = 10000;\nconst DEFAULT_CONFETTI_SIZE = 10;\nconst CONFETTI_COLORS = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n// eslint-disable-next-line @stylistic/max-len\nconst STAR_PATH = new Path2D('M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z');\nconst STAR_SIZE_MULTIPLIER = 1.5;\n\nconst ConfettiContainer = ({ confetti }: StateProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const confettiRef = useRef<Confetti[]>([]);\n  const isRafStartedRef = useRef(false);\n  const windowSize = useWindowSize();\n  const forceUpdate = useForceUpdate();\n  const { isMobile } = useAppLayout();\n\n  const defaultConfettiAmount = isMobile ? 50 : 100;\n  const {\n    lastConfettiTime, top, width, left, height, style = 'poppers',\n  } = confetti || {};\n\n  const generateConfetti = useLastCallback((w: number, h: number, amount = defaultConfettiAmount) => {\n    for (let i = 0; i < amount; i++) {\n      const {\n        position, velocity,\n      } = generateRandomPositionData(style, w, h, i);\n\n      const size = DEFAULT_CONFETTI_SIZE + randomNumberAroundZero(DEFAULT_CONFETTI_SIZE / 2);\n\n      const randomColor = CONFETTI_COLORS[Math.floor(Math.random() * CONFETTI_COLORS.length)];\n      confettiRef.current.push({\n        pos: position,\n        size,\n        color: randomColor,\n        velocity,\n        flicker: size,\n        flickerFrequency: Math.random() * 0.2,\n        rotation: 0,\n        lastDrawnAt: Date.now(),\n        frameCount: 0,\n        isStar: confetti?.withStars && Math.random() > 0.8,\n      });\n    }\n  });\n\n  const updateCanvas = useLastCallback(() => {\n    if (!canvasRef.current || !isRafStartedRef.current) {\n      return;\n    }\n    const canvas = canvasRef.current;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    const { width: canvasWidth, height: canvasHeight } = canvas;\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    const confettiToRemove: Confetti[] = [];\n    confettiRef.current.forEach((c, i) => {\n      const {\n        pos,\n        velocity,\n        size,\n        color,\n        flicker,\n        flickerFrequency,\n        rotation,\n        lastDrawnAt,\n        frameCount,\n      } = c;\n      const diff = (Date.now() - lastDrawnAt) / 1000;\n\n      const newPos = {\n        x: pos.x + velocity.x * diff,\n        y: pos.y + velocity.y * diff,\n      };\n\n      const newVelocity = {\n        x: velocity.x * 0.5 ** (diff / 1), // Air Resistance\n        y: velocity.y += diff * 1000, // Gravity\n      };\n\n      const newFlicker = size * Math.abs(Math.sin(frameCount * flickerFrequency));\n      const newRotation = 5 * frameCount * flickerFrequency * (Math.PI / 180);\n\n      const newFrameCount = frameCount + 1;\n      const newLastDrawnAt = Date.now();\n\n      const shouldRemove = newPos.y > canvasHeight + c.size;\n      if (shouldRemove) {\n        confettiToRemove.push(c);\n        return;\n      }\n\n      const newConfetti = {\n        ...c,\n        pos: newPos,\n        velocity: newVelocity,\n        flicker: newFlicker,\n        rotation: newRotation,\n        lastDrawnAt: newLastDrawnAt,\n        frameCount: newFrameCount,\n      };\n\n      confettiRef.current[i] = newConfetti;\n      ctx.fillStyle = color;\n      if (c.isStar) {\n        ctx.save();\n        ctx.translate(pos.x, pos.y);\n        ctx.scale(\n          (size / DEFAULT_CONFETTI_SIZE) * STAR_SIZE_MULTIPLIER,\n          (size / DEFAULT_CONFETTI_SIZE) * STAR_SIZE_MULTIPLIER,\n        );\n        ctx.rotate(rotation);\n        ctx.fill(STAR_PATH);\n        ctx.restore();\n      } else {\n        ctx.beginPath();\n        ctx.ellipse(\n          pos.x,\n          pos.y,\n          size,\n          flicker,\n          rotation,\n          0,\n          2 * Math.PI,\n        );\n        ctx.fill();\n      }\n    });\n    confettiRef.current = confettiRef.current.filter((c) => !confettiToRemove.includes(c));\n    if (confettiRef.current.length) {\n      requestMeasure(updateCanvas);\n    } else {\n      isRafStartedRef.current = false;\n    }\n  });\n\n  useSyncEffect(([prevConfettiTime]) => {\n    let hideTimeout: ReturnType<typeof setTimeout>;\n    if (prevConfettiTime !== lastConfettiTime) {\n      generateConfetti(width || windowSize.width, height || windowSize.height);\n      hideTimeout = setTimeout(forceUpdate, CONFETTI_FADEOUT_TIMEOUT);\n      if (!isRafStartedRef.current) {\n        isRafStartedRef.current = true;\n        requestMeasure(updateCanvas);\n      }\n    }\n    return () => {\n      clearTimeout(hideTimeout);\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Old timeout should be cleared only if new confetti is generated\n  }, [lastConfettiTime, forceUpdate, updateCanvas]);\n\n  if (!lastConfettiTime || Date.now() - lastConfettiTime > CONFETTI_FADEOUT_TIMEOUT) {\n    return undefined;\n  }\n\n  const containerStyle = buildStyle(\n    Boolean(top) && `top: ${top}px`,\n    Boolean(left) && `left: ${left}px`,\n    Boolean(width) && `width: ${width}px`,\n    Boolean(height) && `height: ${height}px`,\n  );\n\n  return (\n    <div id=\"Confetti\" className={styles.root} style={containerStyle}>\n      <canvas ref={canvasRef} className={styles.canvas} width={windowSize.width} height={windowSize.height} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['confetti']),\n)(ConfettiContainer));\n\nfunction generateRandomPositionData(\n  style: ConfettiStyle, containerWidth: number, containerHeight: number, index: number,\n) {\n  if (style === 'poppers') {\n    const leftSide = index % 2;\n    const position = {\n      x: containerWidth * (leftSide ? -0.1 : 1.1),\n      y: containerHeight * 0.66,\n    };\n    const randomX = Math.random() * containerWidth;\n    const randomY = -containerHeight - randomNumberAroundZero(containerHeight * 0.75);\n    const velocity = {\n      x: leftSide ? randomX : randomX * -1,\n      y: randomY,\n    };\n\n    return {\n      position,\n      velocity,\n    };\n  } else {\n    const position = {\n      x: Math.random() * containerWidth,\n      y: -DEFAULT_CONFETTI_SIZE * 2,\n    };\n    const randomX = randomNumberAroundZero(containerWidth);\n    const randomY = -containerHeight * Math.random() * 1.25;\n    const velocity = {\n      x: randomX,\n      y: randomY,\n    };\n\n    return {\n      position,\n      velocity,\n    };\n  }\n}\n\nfunction randomNumberAroundZero(max: number = 1) {\n  return Math.random() * max - max / 2;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"RMsQzedH\",\"wave\":\"YLR2Oh2f\",\"waveGrow\":\"rqfv5Mai\"};","import {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { SVG_NAMESPACE } from '../../../config';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { addSvgDefinition, removeSvgDefinition } from '../../../util/svgController';\nimport windowSize from '../../../util/windowSize';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport styles from './WaveContainer.module.scss';\n\nimport waveRipple from '../../../assets/wave_ripple.jpg';\n\ntype StateProps = {\n  waveInfo?: TabState['wave'];\n};\n\ntype Wave = {\n  startTime: number;\n  waveWidth: number;\n  top: number;\n  left: number;\n};\n\nconst BASE_SIZE_MULTIPLIER = 1.73;\nconst FILTER_ID = 'wave-filter';\nconst FILTER_SCALE = '20';\nconst WAVE_COUNT_LIMIT = 7;\n\nconst WaveContainer = ({ waveInfo }: StateProps) => {\n  const [waves, setWaves] = useState<Wave[]>([]);\n\n  const addWave = useLastCallback((newWave: Wave) => {\n    if (waves.length >= WAVE_COUNT_LIMIT) return;\n\n    setWaves((prevWaves) => [...prevWaves, newWave]);\n  });\n\n  useEffect(() => {\n    if (!waveInfo) return;\n\n    const { startX, startY } = waveInfo;\n    const { width, height } = windowSize.get();\n\n    const maxSize = Math.max(width - startX, height - startY, startX, startY);\n    const overlaySize = maxSize * BASE_SIZE_MULTIPLIER;\n    const top = startY - overlaySize / 2;\n    const left = startX - overlaySize / 2;\n\n    addWave({\n      startTime: waveInfo.lastWaveTime,\n      waveWidth: overlaySize,\n      top,\n      left,\n    });\n  }, [waveInfo]);\n\n  useEffect(() => {\n    addSvgDefinition(\n      <filter x=\"0\" y=\"0\" width=\"1\" height=\"1\" color-interpolation-filters=\"sRGB\" xmlns={SVG_NAMESPACE}>\n        <feImage href={waveRipple} result=\"waveImage\" />\n        <feDisplacementMap\n          in=\"SourceGraphic\"\n          in2=\"waveImage\"\n          scale={FILTER_SCALE}\n          xChannelSelector=\"R\"\n          yChannelSelector=\"B\"\n        />\n      </filter>,\n      FILTER_ID,\n    );\n\n    return () => {\n      removeSvgDefinition(FILTER_ID);\n    };\n  }, []);\n\n  return (\n    <div className={buildClassName(styles.root)} teactFastList>\n      {waves.map((wave) => (\n        <div\n          className={styles.wave}\n          style={buildStyle(\n            `--wave-width: ${wave.waveWidth}px`,\n            `--wave-pos-top: ${wave.top}px`,\n            `--wave-pos-left: ${wave.left}px`,\n          )}\n          key={wave.startTime}\n          onAnimationEnd={() => setWaves((prevWaves) => prevWaves.filter((w) => w !== wave))}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    return {\n      waveInfo: tabState.wave,\n    };\n  },\n)(WaveContainer));\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\ninterface OwnProps {\n  isOpen: boolean;\n}\n\nconst MediaViewerAsync: FC<OwnProps> = ({ isOpen }) => {\n  const MediaViewer = useModuleLoader(Bundles.Extra, 'MediaViewer', !isOpen);\n\n  return MediaViewer ? <MediaViewer /> : undefined;\n};\n\nexport default MediaViewerAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatLanguageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatLanguageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatLanguageModal = useModuleLoader(Bundles.Extra, 'ChatLanguageModal', !isOpen);\n\n  return ChatLanguageModal ? <ChatLanguageModal {...props} /> : undefined;\n};\n\nexport default ChatLanguageModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"osdROIcA\",\"wrapper\":\"c3NtU3JZ\",\"explainer\":\"WIbO6rja\",\"title\":\"n2KO1cAv\",\"description\":\"MVSedxKc\",\"sticker\":\"qsfxNv7L\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBusinessIntro, ApiSticker, ApiUpdateConnectionStateType, ApiUser,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatLastMessage,\n  selectCurrentMessageList,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerView from '../common/StickerView';\n\nimport styles from './ContactGreeting.module.scss';\n\ntype OwnProps = {\n  userId: string;\n};\n\ntype StateProps = {\n  defaultStickers?: ApiSticker[];\n  lastUnreadMessageId?: number;\n  connectionState?: ApiUpdateConnectionStateType;\n  currentMessageList?: MessageList;\n  businessIntro?: ApiBusinessIntro;\n  user?: ApiUser;\n};\n\nconst ContactGreeting: FC<OwnProps & StateProps> = ({\n  defaultStickers,\n  connectionState,\n  lastUnreadMessageId,\n  currentMessageList,\n  businessIntro,\n  user,\n}) => {\n  const {\n    loadGreetingStickers,\n    sendMessage,\n    markMessageListRead,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  const sticker = useMemo(() => {\n    if (businessIntro?.sticker) return businessIntro.sticker;\n    if (!defaultStickers?.length) return undefined;\n\n    const randomIndex = Math.floor(Math.random() * defaultStickers.length);\n    return defaultStickers[randomIndex];\n  }, [businessIntro?.sticker, defaultStickers]);\n\n  useEffect(() => {\n    if (defaultStickers?.length || connectionState !== 'connectionStateReady') {\n      return;\n    }\n\n    loadGreetingStickers();\n  }, [connectionState, loadGreetingStickers, defaultStickers]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && lastUnreadMessageId) {\n      markMessageListRead({ maxId: lastUnreadMessageId });\n    }\n  }, [connectionState, markMessageListRead, lastUnreadMessageId]);\n\n  const handleStickerSelect = useLastCallback(() => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    sendMessage({\n      sticker: {\n        ...sticker!,\n        isPreloadedGlobally: true,\n      },\n      messageList: currentMessageList,\n    });\n  });\n\n  const title = businessIntro?.title || lang('Conversation.EmptyPlaceholder');\n  const description = businessIntro?.description || lang('Conversation.GreetingText');\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        <p className={styles.title} dir=\"auto\">{title}</p>\n        <p className={styles.description} dir=\"auto\">{description}</p>\n\n        <div ref={containerRef} className={styles.sticker} onClick={handleStickerSelect}>\n          {sticker && (\n            <StickerView\n              containerRef={containerRef}\n              sticker={sticker}\n              size={160}\n              shouldLoop\n            />\n          )}\n        </div>\n      </div>\n      {businessIntro && (\n        <div className={styles.explainer}>\n          {lang('Chat.EmptyStateIntroFooter', getUserFullName(user))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { stickers } = global.stickers.greeting;\n    const chat = selectChat(global, userId);\n    if (!chat) {\n      return {};\n    }\n\n    const user = selectUser(global, userId);\n    const fullInfo = selectUserFullInfo(global, userId);\n\n    const lastMessage = selectChatLastMessage(global, chat.id);\n\n    return {\n      defaultStickers: stickers,\n      lastUnreadMessageId: lastMessage && lastMessage.id !== chat.lastReadInboxMessageId\n        ? lastMessage.id\n        : undefined,\n      connectionState: global.connectionState,\n      currentMessageList: selectCurrentMessageList(global),\n      businessIntro: fullInfo?.businessIntro,\n      user,\n    };\n  },\n)(ContactGreeting));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiInteractionAnimation';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst EmojiInteractionAnimationAsync: FC<OwnProps> = (props) => {\n  const { activeEmojiInteraction } = props;\n  const EmojiInteractionAnimation = useModuleLoader(\n    Bundles.Extra, 'EmojiInteractionAnimation', !activeEmojiInteraction,\n  );\n\n  return EmojiInteractionAnimation ? <EmojiInteractionAnimation {...props} /> : undefined;\n};\n\nexport default EmojiInteractionAnimationAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VWoOZCD5\",\"hidden\":\"UMXbiYB3\",\"reactions\":\"eO_Fz8SD\",\"transform-down\":\"gn3iLVq1\",\"transformDown\":\"gn3iLVq1\",\"unread\":\"u62x81QI\",\"revealed\":\"iozW83la\",\"no-composer\":\"yzzjqibi\",\"noComposer\":\"yzzjqibi\",\"no-extra-shift\":\"wDwOdyQH\",\"noExtraShift\":\"wDwOdyQH\",\"hide-scroll-down\":\"UBa5kAK5\",\"hideScrollDown\":\"UBa5kAK5\",\"is-symbol-menu-open\":\"qoyRzwL6\",\"isSymbolMenuOpen\":\"qoyRzwL6\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { selectChat, selectCurrentMessageList, selectCurrentMiddleSearch } from '../../global/selectors';\nimport animateScroll from '../../util/animateScroll';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ScrollDownButton from './ScrollDownButton';\n\nimport styles from './FloatingActionButtons.module.scss';\n\ntype OwnProps = {\n  withScrollDown: boolean;\n  canPost?: boolean;\n  withExtraShift?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageListType?: MessageListType;\n  threadId?: ThreadId;\n  unreadCount?: number;\n  unreadReactions?: number[];\n  unreadMentions?: number[];\n  reactionsCount?: number;\n  mentionsCount?: number;\n};\n\nconst FOCUS_MARGIN = 20;\n\nconst FloatingActionButtons: FC<OwnProps & StateProps> = ({\n  withScrollDown,\n  canPost,\n  messageListType,\n  chatId,\n  threadId,\n  unreadCount,\n  unreadReactions,\n  unreadMentions,\n  reactionsCount,\n  mentionsCount,\n  withExtraShift,\n}) => {\n  const {\n    focusNextReply, focusNextReaction, focusNextMention, fetchUnreadReactions,\n    readAllMentions, readAllReactions, fetchUnreadMentions,\n  } = getActions();\n\n  const elementRef = useRef<HTMLDivElement>();\n\n  const hasUnreadReactions = Boolean(reactionsCount);\n  const hasUnreadMentions = Boolean(mentionsCount);\n\n  const handleReadAllReactions = useLastCallback(() => {\n    if (!chatId) return;\n    readAllReactions({ chatId, threadId });\n  });\n\n  const handleReadAllMentions = useLastCallback(() => {\n    if (!chatId) return;\n    readAllMentions({ chatId, threadId });\n  });\n\n  useEffect(() => {\n    if (hasUnreadReactions && chatId && !unreadReactions?.length) {\n      fetchUnreadReactions({ chatId });\n    }\n  }, [chatId, fetchUnreadReactions, hasUnreadReactions, unreadReactions?.length]);\n\n  useEffect(() => {\n    if (hasUnreadReactions && chatId) {\n      fetchUnreadReactions({ chatId });\n    }\n  }, [chatId, fetchUnreadReactions, hasUnreadReactions]);\n\n  useEffect(() => {\n    if (hasUnreadMentions && chatId && !unreadMentions?.length) {\n      fetchUnreadMentions({ chatId });\n    }\n  }, [chatId, fetchUnreadMentions, hasUnreadMentions, unreadMentions?.length]);\n\n  useEffect(() => {\n    if (hasUnreadMentions && chatId) {\n      fetchUnreadMentions({ chatId });\n    }\n  }, [chatId, fetchUnreadMentions, hasUnreadMentions]);\n\n  const handleScrollDownClick = useLastCallback(() => {\n    if (!withScrollDown) {\n      return;\n    }\n\n    if (messageListType === 'thread') {\n      focusNextReply();\n    } else {\n      const messagesContainer = elementRef.current!.parentElement!.querySelector<HTMLDivElement>(\n        '.Transition_slide-active > .MessageList',\n      )!;\n      const messageElements = messagesContainer.querySelectorAll<HTMLDivElement>('.message-list-item');\n      const lastMessageElement = messageElements[messageElements.length - 1];\n      if (!lastMessageElement) {\n        return;\n      }\n\n      animateScroll({\n        container: messagesContainer,\n        element: lastMessageElement,\n        position: 'end',\n        margin: FOCUS_MARGIN,\n      });\n    }\n  });\n\n  const fabClassName = buildClassName(\n    styles.root,\n    (withScrollDown || Boolean(reactionsCount) || Boolean(mentionsCount)) && styles.revealed,\n    (Boolean(reactionsCount) || Boolean(mentionsCount)) && !withScrollDown && styles.hideScrollDown,\n    !canPost && styles.noComposer,\n    !withExtraShift && styles.noExtraShift,\n  );\n\n  return (\n    <div ref={elementRef} className={fabClassName}>\n      <ScrollDownButton\n        icon=\"heart-outline\"\n        ariaLabelLang=\"AccDescrReactionMentionDown\"\n        onClick={focusNextReaction}\n        onReadAll={handleReadAllReactions}\n        unreadCount={reactionsCount}\n        className={buildClassName(\n          styles.reactions,\n          !hasUnreadReactions && styles.hidden,\n          !hasUnreadMentions && styles.transformDown,\n        )}\n      />\n\n      <ScrollDownButton\n        icon=\"mention\"\n        ariaLabelLang=\"AccDescrMentionDown\"\n        onClick={focusNextMention}\n        onReadAll={handleReadAllMentions}\n        unreadCount={mentionsCount}\n        className={!hasUnreadMentions && styles.hidden}\n      />\n\n      <ScrollDownButton\n        icon=\"arrow-down\"\n        ariaLabelLang=\"AccDescrPageDown\"\n        onClick={handleScrollDownClick}\n        unreadCount={unreadCount}\n        className={styles.unread}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n\n    const { chatId, threadId, type: messageListType } = currentMessageList;\n    const chat = selectChat(global, chatId);\n    const hasActiveMiddleSearch = Boolean(selectCurrentMiddleSearch(global));\n\n    const shouldShowCount = chat && threadId === MAIN_THREAD_ID && messageListType === 'thread'\n      && !hasActiveMiddleSearch;\n\n    return {\n      messageListType,\n      chatId,\n      threadId,\n      reactionsCount: shouldShowCount ? chat.unreadReactionsCount : undefined,\n      unreadReactions: shouldShowCount ? chat.unreadReactions : undefined,\n      unreadMentions: shouldShowCount ? chat.unreadMentions : undefined,\n      mentionsCount: shouldShowCount ? chat.unreadMentionsCount : undefined,\n      unreadCount: shouldShowCount ? chat.unreadCount : undefined,\n    };\n  },\n)(FloatingActionButtons));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GuZke_HG\",\"title\":\"oLWeN4mA\",\"subtitle\":\"ZxTe54MY\"};","import { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './FrozenAccountPlaceholder.module.scss';\n\nfunction FrozenAccountPlaceholder() {\n  const lang = useLang();\n\n  const { openFrozenAccountModal } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>{lang('ComposerTitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('ComposerSubtitleFrozenAccount')}</div>\n    </div>\n  );\n}\n\nexport default memo(FrozenAccountPlaceholder);\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport {\n  beginHeavyAnimation, memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChatFullInfo,\n  ApiMessage,\n  ApiRestrictionReason,\n  ApiTopic,\n} from '../../api/types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { LoadMoreDirection, type MessageListType, type ThreadId } from '../../types';\n\nimport {\n  ANIMATION_END_DELAY,\n  ANONYMOUS_USER_ID,\n  MESSAGE_LIST_SLICE,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { forceMeasure, requestForcedReflow, requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog,\n  getMessageHtmlId,\n  isAnonymousForwardsChat,\n  isChatChannel,\n  isChatGroup,\n  isChatMonoforum,\n  isSystemBot,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectChatLastMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMessageIds,\n  selectFirstUnreadId,\n  selectFocusedMessageId,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsViewportNewest,\n  selectLastScrollOffset,\n  selectMonoforumChannel,\n  selectPerformanceSettingsValue,\n  selectScrollOffset,\n  selectTabState,\n  selectThreadInfo,\n  selectTopic,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectIsChatRestricted } from '../../global/selectors/chats';\nimport { selectActiveRestrictionReasons } from '../../global/selectors/messages';\nimport animateScroll, { isAnimatingScroll, restartCurrentScrollAnimation } from '../../util/animateScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { orderBy } from '../../util/iteratees';\nimport { isLocalMessageId } from '../../util/keys/messageKey';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce, onTickEnd } from '../../util/schedulers';\nimport getOffsetToContainer from '../../util/visibility/getOffsetToContainer';\nimport { groupMessages } from './helpers/groupMessages';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useNativeCopySelectedMessages from '../../hooks/useNativeCopySelectedMessages';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport { isBackgroundModeActive } from '../../hooks/window/useBackgroundMode';\nimport useContainerHeight from './hooks/useContainerHeight';\nimport useStickyDates from './hooks/useStickyDates';\n\nimport Loading from '../ui/Loading';\nimport ContactGreeting from './ContactGreeting';\nimport MessageListAccountInfo from './MessageListAccountInfo';\nimport MessageListContent from './MessageListContent';\nimport NoMessages from './NoMessages';\nimport RequirementToContactMessage from './RequirementToContactMessage';\n\nimport './MessageList.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  type: MessageListType;\n  isComments?: boolean;\n  canPost: boolean;\n  isReady: boolean;\n  withBottomShift?: boolean;\n  withDefaultBg: boolean;\n  isContactRequirePremium?: boolean;\n  paidMessagesStars?: number;\n  onScrollDownToggle: BooleanToVoidFunction;\n  onNotchToggle: BooleanToVoidFunction;\n  onIntersectPinnedMessage: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  isChatLoaded?: boolean;\n  isChannelChat?: boolean;\n  isGroupChat?: boolean;\n  isChatMonoforum?: boolean;\n  isChatWithSelf?: boolean;\n  isSystemBotChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isCreator?: boolean;\n  isChannelWithAvatars?: boolean;\n  isBot?: boolean;\n  isNonContact?: boolean;\n  nameChangeDate?: number;\n  photoChangeDate?: number;\n  isSynced?: boolean;\n  messageIds?: number[];\n  messagesById?: Record<number, ApiMessage>;\n  firstUnreadId?: number;\n  isViewportNewest?: boolean;\n  isRestricted?: boolean;\n  restrictionReasons?: ApiRestrictionReason[];\n  focusingId?: number;\n  isSelectModeActive?: boolean;\n  lastMessage?: ApiMessage;\n  hasLinkedChat?: boolean;\n  topic?: ApiTopic;\n  noMessageSendingAnimation?: boolean;\n  isServiceNotificationsChat?: boolean;\n  isEmptyThread?: boolean;\n  isForum?: boolean;\n  currentUserId: string;\n  isAccountFrozen?: boolean;\n  areAdsEnabled?: boolean;\n  channelJoinInfo?: ApiChatFullInfo['joinInfo'];\n  isChatProtected?: boolean;\n  hasCustomGreeting?: boolean;\n  isAppConfigLoaded?: boolean;\n  monoforumChannelId?: string;\n  canTranslate?: boolean;\n  translationLanguage?: string;\n  shouldAutoTranslate?: boolean;\n};\n\nconst MESSAGE_REACTIONS_POLLING_INTERVAL = 20 * 1000;\nconst MESSAGE_COMMENTS_POLLING_INTERVAL = 20 * 1000;\nconst MESSAGE_FACT_CHECK_UPDATE_INTERVAL = 5 * 1000;\nconst MESSAGE_STORY_POLLING_INTERVAL = 5 * 60 * 1000;\nconst BOTTOM_THRESHOLD = 50;\nconst UNREAD_DIVIDER_TOP = 10;\nconst SCROLL_DEBOUNCE = 200;\nconst MESSAGE_ANIMATION_DURATION = 500;\nconst BOTTOM_FOCUS_MARGIN = 20;\nconst SELECT_MODE_ANIMATION_DURATION = 200;\nconst UNREAD_DIVIDER_CLASS = 'unread-divider';\n\nconst runDebouncedForScroll = debounce((cb) => cb(), SCROLL_DEBOUNCE, false);\n\nconst MessageList: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  type,\n  isChatLoaded,\n  isForum,\n  isChannelChat,\n  isGroupChat,\n  isChannelWithAvatars,\n  canPost,\n  isSynced,\n  isChatMonoforum,\n  isReady,\n  isChatWithSelf,\n  isSystemBotChat,\n  isAnonymousForwards,\n  isCreator,\n  isBot,\n  isNonContact,\n  nameChangeDate,\n  photoChangeDate,\n  messageIds,\n  messagesById,\n  firstUnreadId,\n  isComments,\n  isViewportNewest,\n  isRestricted,\n  restrictionReasons,\n  isEmptyThread,\n  focusingId,\n  isSelectModeActive,\n  lastMessage,\n  hasLinkedChat,\n  withBottomShift,\n  withDefaultBg,\n  topic,\n  noMessageSendingAnimation,\n  isServiceNotificationsChat,\n  currentUserId,\n  isContactRequirePremium,\n  paidMessagesStars,\n  areAdsEnabled,\n  channelJoinInfo,\n  isChatProtected,\n  isAccountFrozen,\n  hasCustomGreeting,\n  monoforumChannelId,\n  isAppConfigLoaded,\n  canTranslate,\n  translationLanguage,\n  shouldAutoTranslate,\n  onIntersectPinnedMessage,\n  onScrollDownToggle,\n  onNotchToggle,\n}) => {\n  const {\n    loadViewportMessages, setScrollOffset, loadSponsoredMessages, loadMessageReactions, copyMessagesByIds,\n    loadMessageViews, loadPeerStoriesByIds, loadFactChecks, requestChatTranslation,\n  } = getActions();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  // We update local cached `scrollOffsetRef` when opening chat.\n  // Then we update global version every second on scrolling.\n  const scrollOffsetRef = useRef<number>(\n    (type === 'thread' && selectScrollOffset(getGlobal(), chatId, threadId))\n    || selectLastScrollOffset(getGlobal(), chatId, threadId)\n    || 0,\n  );\n\n  const anchorIdRef = useRef<string>();\n  const anchorTopRef = useRef<number>();\n  const listItemElementsRef = useRef<HTMLDivElement[]>();\n  const memoFirstUnreadIdRef = useRef<number>();\n  const memoUnreadDividerBeforeIdRef = useRef<number | undefined>();\n  const memoFocusingIdRef = useRef<number>();\n  const isScrollTopJustUpdatedRef = useRef(false);\n  const shouldAnimateAppearanceRef = useRef(Boolean(lastMessage));\n\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n  const hasOpenChatButton = isSavedDialog && threadId !== ANONYMOUS_USER_ID;\n\n  const areMessagesLoaded = Boolean(messageIds);\n\n  const isPrivate = isUserId(chatId);\n  const withUsers = Boolean((!isPrivate && !isChannelChat)\n    || isChatWithSelf || isSystemBotChat || isAnonymousForwards || isChannelWithAvatars);\n\n  useSyncEffect(() => {\n    // We only need it first time when message list appears\n    if (areMessagesLoaded) {\n      onTickEnd(() => {\n        shouldAnimateAppearanceRef.current = false;\n      });\n    }\n  }, [areMessagesLoaded]);\n\n  // Updated every time (to be used from intersection callback closure)\n  useSyncEffect(() => {\n    memoFirstUnreadIdRef.current = firstUnreadId;\n  }, [firstUnreadId]);\n\n  useEffect(() => {\n    const canHaveAds = isChannelChat || isBot;\n    if (areAdsEnabled && canHaveAds && isSynced && isReady && isAppConfigLoaded) {\n      loadSponsoredMessages({ peerId: chatId });\n    }\n  }, [chatId, isSynced, isReady, isChannelChat, isBot, areAdsEnabled, isAppConfigLoaded]);\n\n  // Updated only once when messages are loaded (as we want the unread divider to keep its position)\n  useSyncEffect(() => {\n    if (areMessagesLoaded) {\n      memoUnreadDividerBeforeIdRef.current = memoFirstUnreadIdRef.current;\n    }\n  }, [areMessagesLoaded]);\n\n  useSyncEffect(() => {\n    memoFocusingIdRef.current = focusingId;\n  }, [focusingId]);\n\n  // Enable auto translation for the chat if it's available\n  useEffect(() => {\n    if (!shouldAutoTranslate || !canTranslate) return;\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  }, [shouldAutoTranslate, canTranslate, translationLanguage, chatId]);\n\n  useNativeCopySelectedMessages(copyMessagesByIds);\n\n  const messageGroups = useMemo(() => {\n    if (!messageIds?.length || !messagesById) {\n      return undefined;\n    }\n\n    const listedMessages: ApiMessage[] = [];\n    messageIds.forEach((id, index, arr) => {\n      const prevMessage = listedMessages[listedMessages.length - 1];\n\n      const message = messagesById[id];\n      if (!message) {\n        return;\n      }\n\n      const { shouldAppendJoinMessage, shouldAppendJoinMessageAfterCurrent } = (() => {\n        if (!channelJoinInfo || type !== 'thread') return undefined;\n        if (prevMessage\n          && prevMessage.date < channelJoinInfo.joinedDate && channelJoinInfo.joinedDate <= message.date) {\n          return { shouldAppendJoinMessage: true, shouldAppendJoinMessageAfterCurrent: false };\n        }\n\n        if (index === arr.length - 1 && message.date < channelJoinInfo.joinedDate) {\n          return {\n            shouldAppendJoinMessage: true,\n            shouldAppendJoinMessageAfterCurrent: true,\n          };\n        }\n\n        return undefined;\n      })() || {};\n\n      if (shouldAppendJoinMessageAfterCurrent) {\n        listedMessages.push(message);\n      }\n\n      if (shouldAppendJoinMessage) {\n        const lastMessageId = shouldAppendJoinMessageAfterCurrent ? message.id : (prevMessage?.id || (message.id - 1));\n        listedMessages.push({\n          id: generateChannelJoinMessageId(lastMessageId),\n          chatId: message.chatId,\n          date: channelJoinInfo!.joinedDate,\n          isOutgoing: false,\n          content: {\n            action: {\n              mediaType: 'action',\n              type: 'channelJoined',\n              inviterId: channelJoinInfo?.inviterId,\n              isViaRequest: channelJoinInfo?.isViaRequest || undefined,\n            },\n          },\n        } satisfies ApiMessage);\n      }\n\n      if (!shouldAppendJoinMessageAfterCurrent) {\n        listedMessages.push(message);\n      }\n    });\n\n    // Service notifications have local IDs which may be not in sync with real message history\n    const orderRule: (keyof ApiMessage)[] = type === 'scheduled' || isServiceNotificationsChat\n      ? ['date', 'id']\n      : ['id'];\n\n    return listedMessages.length\n      ? groupMessages(\n        orderBy(listedMessages, orderRule),\n        memoUnreadDividerBeforeIdRef.current,\n        !isForum ? Number(threadId) : undefined,\n        isChatWithSelf,\n        withUsers,\n      )\n      : undefined;\n  }, [withUsers,\n    messageIds, messagesById, type,\n    isServiceNotificationsChat, isForum,\n    threadId, isChatWithSelf, channelJoinInfo]);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || type === 'scheduled' || isAccountFrozen) return;\n    if (!isChannelChat && !isGroupChat) return;\n\n    const ids = messageIds.filter((id) => {\n      const message = messagesById[id];\n      return message && message.reactions?.results.length && !message.content.action;\n    });\n\n    if (!ids.length) return;\n\n    loadMessageReactions({ chatId, ids });\n  }, MESSAGE_REACTIONS_POLLING_INTERVAL);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || type === 'scheduled') {\n      return;\n    }\n    const storyDataList = messageIds.map((id) => messagesById[id]?.content.storyData).filter(Boolean);\n\n    if (!storyDataList.length) return;\n\n    const storiesByPeerIds = storyDataList.reduce((acc, storyData) => {\n      const { peerId, id } = storyData;\n      if (!acc[peerId]) {\n        acc[peerId] = [];\n      }\n      acc[peerId].push(id);\n      return acc;\n    }, {} as Record<string, number[]>);\n\n    Object.entries(storiesByPeerIds).forEach(([peerId, storyIds]) => {\n      loadPeerStoriesByIds({ peerId, storyIds });\n    });\n  }, MESSAGE_STORY_POLLING_INTERVAL);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || threadId !== MAIN_THREAD_ID || type === 'scheduled') {\n      return;\n    }\n    const global = getGlobal();\n    const ids = messageIds.filter((id) => selectThreadInfo(global, chatId, id)?.isCommentsInfo\n      || messagesById[id]?.viewsCount !== undefined);\n\n    if (!ids.length) return;\n\n    loadMessageViews({ chatId, ids });\n  }, MESSAGE_COMMENTS_POLLING_INTERVAL, true);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || threadId !== MAIN_THREAD_ID || type === 'scheduled') {\n      return;\n    }\n    const ids = messageIds.filter((id) => messagesById[id]?.factCheck?.shouldFetch);\n\n    if (!ids.length) return;\n\n    loadFactChecks({ chatId, ids });\n  }, MESSAGE_FACT_CHECK_UPDATE_INTERVAL);\n\n  const loadMoreAround = useMemo(() => {\n    if (type !== 'thread') {\n      return undefined;\n    }\n\n    return debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Around }), 1000, true, false);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [loadViewportMessages, messageIds]);\n\n  const { isScrolled, updateStickyDates } = useStickyDates();\n\n  const handleScroll = useLastCallback(() => {\n    if (isScrollTopJustUpdatedRef.current) {\n      isScrollTopJustUpdatedRef.current = false;\n      return;\n    }\n\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n\n    if (!memoFocusingIdRef.current) {\n      updateStickyDates(container);\n    }\n\n    runDebouncedForScroll(() => {\n      const global = getGlobal();\n\n      const isFocusing = Boolean(selectTabState(global).focusedMessage?.chatId);\n      if (!isFocusing) {\n        onIntersectPinnedMessage({ shouldCancelWaiting: true });\n      }\n\n      if (!container.parentElement) {\n        return;\n      }\n\n      scrollOffsetRef.current = container.scrollHeight - container.scrollTop;\n\n      if (type === 'thread') {\n        setScrollOffset({ chatId, threadId, scrollOffset: scrollOffsetRef.current });\n      }\n    });\n  });\n\n  const [getContainerHeight, prevContainerHeightRef] = useContainerHeight(containerRef, canPost && !isSelectModeActive);\n\n  // Initial message loading\n  useEffect(() => {\n    if (!loadMoreAround || !isChatLoaded || isRestricted || focusingId) {\n      return;\n    }\n\n    // Loading history while sending a message can return the same message and cause ambiguity\n    const isLastMessageLocal = messageIds && isLocalMessageId(messageIds[messageIds.length - 1]);\n    if (isLastMessageLocal) {\n      return;\n    }\n\n    const container = containerRef.current!;\n\n    if (!messageIds || messageIds.length === 1 || (\n      messageIds.length < MESSAGE_LIST_SLICE / 2\n      && (container.firstElementChild as HTMLDivElement).clientHeight <= container.offsetHeight\n    )) {\n      loadMoreAround();\n    }\n  }, [isChatLoaded, messageIds, loadMoreAround, focusingId, isRestricted]);\n\n  const rememberScrollPositionRef = useStateRef(() => {\n    if (!messageIds || !listItemElementsRef.current) {\n      return;\n    }\n\n    const preservedItemElements = listItemElementsRef.current\n      .filter((element) => messageIds.includes(Number(element.dataset.messageId)));\n\n    // We avoid the very first item as it may be a partly-loaded album\n    // and also because it may be removed when messages limit is reached\n    const anchor = preservedItemElements[1] || preservedItemElements[0];\n    if (!anchor) {\n      return;\n    }\n\n    anchorIdRef.current = anchor.id;\n    anchorTopRef.current = anchor.getBoundingClientRect().top;\n  });\n\n  useSyncEffect(\n    () => forceMeasure(() => rememberScrollPositionRef.current()),\n    // This will run before modifying content and should match deps for `useLayoutEffectWithPrevDeps` below\n    [messageIds, isViewportNewest, rememberScrollPositionRef],\n  );\n  useEffect(\n    () => rememberScrollPositionRef.current(),\n    // This is only needed to react on signal updates\n    [getContainerHeight, rememberScrollPositionRef],\n  );\n\n  // Handles updated message list, takes care of scroll repositioning\n  useLayoutEffectWithPrevDeps(([prevMessageIds, prevIsViewportNewest]) => {\n    if (process.env.APP_ENV === 'perf') {\n      // eslint-disable-next-line no-console\n      console.time('scrollTop');\n    }\n\n    const containerHeight = getContainerHeight();\n    const prevContainerHeight = prevContainerHeightRef.current;\n    prevContainerHeightRef.current = containerHeight;\n\n    // Skip initial resize observer callback\n    if (\n      messageIds === prevMessageIds\n      && isViewportNewest === prevIsViewportNewest\n      && containerHeight !== prevContainerHeight\n      && prevContainerHeight === undefined\n    ) {\n      return;\n    }\n\n    const container = containerRef.current!;\n    listItemElementsRef.current = Array.from(container.querySelectorAll<HTMLDivElement>('.message-list-item'));\n    const lastItemElement = listItemElementsRef.current[listItemElementsRef.current.length - 1];\n    const firstUnreadElement = memoFirstUnreadIdRef.current\n      ? container.querySelector<HTMLDivElement>(`#${getMessageHtmlId(memoFirstUnreadIdRef.current)}`)\n      : undefined;\n\n    const hasLastMessageChanged = (\n      messageIds && prevMessageIds && messageIds[messageIds.length - 1] !== prevMessageIds[prevMessageIds.length - 1]\n    );\n    const hasViewportShifted = (\n      messageIds?.[0] !== prevMessageIds?.[0] && messageIds?.length === (MESSAGE_LIST_SLICE / 2 + 1)\n    );\n    const wasMessageAdded = hasLastMessageChanged && !hasViewportShifted;\n\n    // Add extra height when few messages to allow scroll animation\n    if (\n      isViewportNewest\n      && wasMessageAdded\n      && (messageIds && messageIds.length < MESSAGE_LIST_SLICE / 2)\n      && !container.parentElement!.classList.contains('force-messages-scroll')\n      && forceMeasure(() => (\n        (container.firstElementChild as HTMLDivElement).clientHeight <= container.offsetHeight * 2\n      ))\n    ) {\n      addExtraClass(container.parentElement!, 'force-messages-scroll');\n      container.parentElement!.classList.add('force-messages-scroll');\n\n      setTimeout(() => {\n        if (container.parentElement) {\n          removeExtraClass(container.parentElement, 'force-messages-scroll');\n        }\n      }, MESSAGE_ANIMATION_DURATION);\n    }\n\n    requestForcedReflow(() => {\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const scrollOffset = scrollOffsetRef.current;\n\n      let bottomOffset = scrollOffset - (prevContainerHeight || offsetHeight);\n      if (wasMessageAdded) {\n        // If two new messages come at once (e.g. when bot responds) then the first message will update `scrollOffset`\n        // right away (before animation) which creates inconsistency until the animation completes. To work around that,\n        // we calculate `isAtBottom` with a \"buffer\" of the latest message height (this is approximate).\n        const lastItemHeight = lastItemElement ? lastItemElement.offsetHeight : 0;\n        bottomOffset -= lastItemHeight;\n      }\n      const isAtBottom = isViewportNewest && prevIsViewportNewest && bottomOffset <= BOTTOM_THRESHOLD;\n      const isAlreadyFocusing = messageIds && memoFocusingIdRef.current === messageIds[messageIds.length - 1];\n\n      // Animate incoming message, but if app is in background mode, scroll to the first unread\n      if (wasMessageAdded && isAtBottom && !isAlreadyFocusing) {\n        // Break out of `forceLayout`\n        requestMeasure(() => {\n          const shouldScrollToBottom = !isBackgroundModeActive() || !firstUnreadElement;\n          animateScroll({\n            container,\n            element: shouldScrollToBottom ? lastItemElement : firstUnreadElement,\n            position: shouldScrollToBottom ? 'end' : 'start',\n            margin: BOTTOM_FOCUS_MARGIN,\n            forceDuration: noMessageSendingAnimation ? 0 : undefined,\n          });\n        });\n      }\n\n      const isResized = prevContainerHeight !== undefined && prevContainerHeight !== containerHeight;\n      if (isResized && isAnimatingScroll()) {\n        return undefined;\n      }\n\n      const anchor = anchorIdRef.current && container.querySelector(`#${anchorIdRef.current}`);\n      const unreadDivider = (\n        !anchor\n        && memoUnreadDividerBeforeIdRef.current\n        && container.querySelector<HTMLDivElement>(`.${UNREAD_DIVIDER_CLASS}`)\n      );\n\n      let newScrollTop!: number;\n      if (isAtBottom && isResized) {\n        newScrollTop = scrollHeight - offsetHeight;\n      } else if (anchor) {\n        const newAnchorTop = anchor.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - (anchorTopRef.current || 0));\n      } else if (unreadDivider) {\n        newScrollTop = Math.min(\n          getOffsetToContainer(unreadDivider, container).top - UNREAD_DIVIDER_TOP,\n          scrollHeight - scrollOffset,\n        );\n      } else {\n        newScrollTop = scrollHeight - scrollOffset;\n      }\n\n      return () => {\n        resetScroll(container, Math.ceil(newScrollTop));\n        restartCurrentScrollAnimation();\n\n        scrollOffsetRef.current = Math.max(Math.ceil(scrollHeight - newScrollTop), offsetHeight);\n\n        if (!memoFocusingIdRef.current) {\n          isScrollTopJustUpdatedRef.current = true;\n\n          requestMeasure(() => {\n            isScrollTopJustUpdatedRef.current = false;\n          });\n        }\n\n        if (process.env.APP_ENV === 'perf') {\n          // eslint-disable-next-line no-console\n          console.timeEnd('scrollTop');\n        }\n      };\n    });\n    // This should match deps for `useSyncEffect` above\n  }, [messageIds, isViewportNewest, getContainerHeight, prevContainerHeightRef, noMessageSendingAnimation]);\n\n  useEffectWithPrevDeps(([prevIsSelectModeActive]) => {\n    if (prevIsSelectModeActive !== undefined) {\n      beginHeavyAnimation(SELECT_MODE_ANIMATION_DURATION + ANIMATION_END_DELAY);\n    }\n  }, [isSelectModeActive]);\n\n  const noAvatars = Boolean(!withUsers || (isChannelChat && !isChannelWithAvatars));\n  const shouldRenderGreeting = isUserId(chatId) && !isChatWithSelf && !isBot && !isAnonymousForwards\n    && type === 'thread'\n    && (\n      (\n        !messageGroups && !lastMessage && messageIds\n        // Used to avoid flickering when deleting a greeting that has just been sent\n        && (!listItemElementsRef.current || listItemElementsRef.current.length === 0)\n      )\n      || (messageIds?.length === 1 && messagesById?.[messageIds[0]]?.content.action?.type === 'contactSignUp')\n      || (lastMessage?.content?.action?.type === 'contactSignUp')\n    );\n\n  const isGroupChatJustCreated = isGroupChat && isCreator\n    && messageIds?.length === 1 && messagesById?.[messageIds[0]]?.content.action?.type === 'chatCreate';\n  const isEmptyTopic = messageIds?.length === 1\n    && messagesById?.[messageIds[0]]?.content.action?.type === 'topicCreate';\n\n  const className = buildClassName(\n    'MessageList custom-scroll',\n    noAvatars && 'no-avatars',\n    !canPost && 'no-composer',\n    type === 'pinned' && 'type-pinned',\n    withBottomShift && 'with-bottom-shift',\n    withDefaultBg && 'with-default-bg',\n    isSelectModeActive && 'select-mode-active',\n    isScrolled && 'scrolled',\n    !isReady && 'is-animating',\n    hasOpenChatButton && 'saved-dialog',\n    isChatProtected && 'hide-on-print',\n  );\n\n  const hasMessages = Boolean((messageIds && messageGroups) || lastMessage);\n\n  useEffect(() => {\n    if (hasMessages) return;\n\n    onScrollDownToggle(false);\n  }, [hasMessages, onScrollDownToggle]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      onMouseDown={preventMessageInputBlur}\n    >\n      {isRestricted ? (\n        <div className=\"empty\">\n          <span>\n            {restrictionReasons?.[0]?.text || `This is a private ${isChannelChat ? 'channel' : 'chat'}`}\n          </span>\n        </div>\n      ) : paidMessagesStars && !hasMessages && !hasCustomGreeting ? (\n        <RequirementToContactMessage paidMessagesStars={paidMessagesStars} peerId={monoforumChannelId || chatId} />\n      ) : isContactRequirePremium && !hasMessages ? (\n        <RequirementToContactMessage peerId={chatId} />\n      ) : (isBot || isNonContact) && !hasMessages ? (\n        <MessageListAccountInfo chatId={chatId} hasMessages={hasMessages} />\n      ) : shouldRenderGreeting ? (\n        <ContactGreeting key={chatId} userId={chatId} />\n      ) : messageIds && (!messageGroups || isGroupChatJustCreated || isEmptyTopic) ? (\n        <NoMessages\n          chatId={chatId}\n          topic={topic}\n          type={type}\n          isChatWithSelf={isChatWithSelf}\n          isGroupChatJustCreated={isGroupChatJustCreated}\n        />\n      ) : hasMessages ? (\n        <MessageListContent\n          canShowAds={areAdsEnabled && isChannelChat}\n          chatId={chatId}\n          isComments={isComments}\n          isChannelChat={isChannelChat}\n          isChatMonoforum={isChatMonoforum}\n          isSavedDialog={isSavedDialog}\n          messageIds={messageIds || [lastMessage!.id]}\n          messageGroups={messageGroups || groupMessages([lastMessage!])}\n          getContainerHeight={getContainerHeight}\n          isViewportNewest={Boolean(isViewportNewest)}\n          isUnread={Boolean(firstUnreadId)}\n          isEmptyThread={isEmptyThread}\n          withUsers={withUsers}\n          noAvatars={noAvatars}\n          containerRef={containerRef}\n          anchorIdRef={anchorIdRef}\n          memoUnreadDividerBeforeIdRef={memoUnreadDividerBeforeIdRef}\n          memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n          threadId={threadId}\n          type={type}\n          isReady={isReady}\n          hasLinkedChat={hasLinkedChat}\n          isSchedule={messageGroups ? type === 'scheduled' : false}\n          shouldRenderAccountInfo={isBot || isNonContact}\n          nameChangeDate={nameChangeDate}\n          photoChangeDate={photoChangeDate}\n          noAppearanceAnimation={!messageGroups || !shouldAnimateAppearanceRef.current}\n          onScrollDownToggle={onScrollDownToggle}\n          onNotchToggle={onNotchToggle}\n          onIntersectPinnedMessage={onIntersectPinnedMessage}\n          canPost={canPost}\n        />\n      ) : (\n        <Loading color=\"white\" backgroundColor=\"dark\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId, type }): StateProps => {\n    const currentUserId = global.currentUserId!;\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    if (!chat) {\n      return { currentUserId };\n    }\n\n    const messageIds = selectCurrentMessageIds(global, chatId, threadId, type);\n    const messagesById = type === 'scheduled'\n      ? selectChatScheduledMessages(global, chatId)\n      : selectChatMessages(global, chatId);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    if (\n      threadId !== MAIN_THREAD_ID && !isSavedDialog && !chat?.isForum\n      && !(messagesById && threadId && messagesById[Number(threadId)])\n    ) {\n      return { currentUserId };\n    }\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    const restrictionReasons = selectActiveRestrictionReasons(global, chat?.restrictionReasons);\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const focusingId = selectFocusedMessageId(global, chatId);\n\n    const withLastMessageWhenPreloading = (\n      threadId === MAIN_THREAD_ID\n      && !messageIds && !chat.unreadCount && !focusingId && lastMessage && !lastMessage.groupedId\n    );\n\n    const chatBot = selectBot(global, chatId);\n    const isNonContact = Boolean(userFullInfo?.settings?.canAddContact);\n    const nameChangeDate = userFullInfo?.settings?.nameChangeDate;\n    const photoChangeDate = userFullInfo?.settings?.photoChangeDate;\n\n    const topic = selectTopic(global, chatId, threadId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isEmptyThread = !selectThreadInfo(global, chatId, threadId)?.messagesCount;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const areAdsEnabled = !isCurrentUserPremium || selectUserFullInfo(global, currentUserId)?.areAdsEnabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const hasCustomGreeting = Boolean(userFullInfo?.businessIntro);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n\n    const monoforumChannelId = selectMonoforumChannel(global, chatId)?.id;\n    const canTranslate = selectCanTranslateChat(global, chatId) && !chatFullInfo?.isTranslationDisabled;\n    const shouldAutoTranslate = chat?.hasAutoTranslation;\n    const translationLanguage = selectTranslationLanguage(global);\n\n    return {\n      areAdsEnabled,\n      isChatLoaded: true,\n      isRestricted,\n      restrictionReasons,\n      isChannelChat: isChatChannel(chat),\n      isChatMonoforum: isChatMonoforum(chat),\n      isGroupChat: isChatGroup(chat),\n      isChannelWithAvatars: chat.areProfilesShown,\n      isCreator: chat.isCreator,\n      isChatWithSelf: selectIsChatWithSelf(global, chatId),\n      isSystemBotChat: isSystemBot(chatId),\n      isAnonymousForwards: isAnonymousForwardsChat(chatId),\n      isBot: Boolean(chatBot),\n      isNonContact,\n      nameChangeDate,\n      photoChangeDate,\n      isSynced: global.isSynced,\n      messageIds,\n      messagesById,\n      firstUnreadId: selectFirstUnreadId(global, chatId, threadId),\n      isViewportNewest: type !== 'thread' || selectIsViewportNewest(global, chatId, threadId),\n      focusingId,\n      isSelectModeActive: selectIsInSelectMode(global),\n      hasLinkedChat: chatFullInfo ? Boolean(chatFullInfo.linkedChatId) : undefined,\n      channelJoinInfo: chatFullInfo?.joinInfo,\n      topic,\n      noMessageSendingAnimation: !selectPerformanceSettingsValue(global, 'messageSendingAnimations'),\n      isServiceNotificationsChat: chatId === SERVICE_NOTIFICATIONS_USER_ID,\n      isForum: chat.isForum,\n      isEmptyThread,\n      currentUserId,\n      isChatProtected: selectIsChatProtected(global, chatId),\n      ...(withLastMessageWhenPreloading && { lastMessage }),\n      isAccountFrozen,\n      hasCustomGreeting,\n      isAppConfigLoaded,\n      monoforumChannelId,\n      canTranslate,\n      translationLanguage,\n      shouldAutoTranslate,\n    };\n  },\n)(MessageList));\n\nfunction generateChannelJoinMessageId(lastMessageId: number) {\n  return lastMessageId + 10e-7; // Smaller than smallest possible id with `getNextLocalMessageId`\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tFPZHCMt\",\"chatInfo\":\"ubFGDy3d\",\"chatBackground\":\"niS9Gfcl\",\"botBackground\":\"kXKBpNnb\",\"bot-info-description\":\"kpMdEhns\",\"botInfoDescription\":\"kpMdEhns\",\"bot-info-title\":\"H__cBlx8\",\"botInfoTitle\":\"H__cBlx8\",\"media\":\"mtKNWJmZ\",\"chatInfoTitle\":\"RyB2zw9K\",\"chatInfoSubtitle\":\"n9OcHdnh\",\"chatDescription\":\"TYJGFKqJ\",\"country\":\"WuX68A65\",\"chatNotVerified\":\"sCB3zhO3\",\"verifiedTitle\":\"dlaTjW_s\",\"link\":\"yIJ4jRxH\",\"linkInfo\":\"_MPDNfhr\",\"icon\":\"KYcoeDmo\",\"textColor\":\"BH_g_jqY\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiBotInfo, ApiChat, ApiCountryCode, ApiUserCommonChats, ApiUserFullInfo,\n} from '../../api/types';\n\nimport {\n  getBotCoverMediaHash,\n  getChatTitle,\n  getPhotoFullDimensions,\n  getVideoDimensions,\n  getVideoMediaHash,\n  isChatWithVerificationCodesBot,\n} from '../../global/helpers';\nimport {\n  selectBot, selectChat, selectPeer, selectUserCommonChats, selectUserFullInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { formatPastDatetime, formatRegistrationMonth } from '../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../util/emoji/emoji';\nimport { getCountryCodeByIso } from '../../util/phoneNumber';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport MiniTable, { type TableEntry } from '../common/MiniTable';\nimport Link from '../ui/Link';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './MessageListAccountInfo.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasMessages?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botInfo?: ApiBotInfo;\n  isLoadingFullUser?: boolean;\n  phoneCodeList?: ApiCountryCode[];\n  commonChats?: ApiUserCommonChats;\n  userFullInfo?: ApiUserFullInfo;\n};\n\nconst MessageListAccountInfo: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  botInfo,\n  isLoadingFullUser,\n  phoneCodeList,\n  commonChats,\n  userFullInfo,\n  hasMessages,\n}) => {\n  const { loadCommonChats, openChatWithInfo } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    phoneCountry,\n    registrationMonth,\n    nameChangeDate,\n    photoChangeDate,\n  } = userFullInfo?.settings || {};\n\n  useEffect(() => {\n    loadCommonChats({ userId: chatId });\n  }, [chatId]);\n\n  const country = useMemo(() => {\n    if (!phoneCodeList || !phoneCountry) return undefined;\n    return getCountryCodeByIso(phoneCodeList, phoneCountry);\n  }, [phoneCodeList, phoneCountry]);\n\n  const botInfoPhotoUrl = useMedia(botInfo?.photo ? getBotCoverMediaHash(botInfo.photo) : undefined);\n  const botInfoGifUrl = useMedia(botInfo?.gif ? getVideoMediaHash(botInfo.gif, 'full') : undefined);\n  const botInfoDimensions = botInfo?.photo ? getPhotoFullDimensions(botInfo.photo) : botInfo?.gif\n    ? getVideoDimensions(botInfo.gif) : undefined;\n  const isBotInfoEmpty = botInfo && !botInfo.description && !botInfo.gif && !botInfo.photo;\n  const isChatInfoEmpty = !country || !registrationMonth;\n\n  const isVerifyCodes = isChatWithVerificationCodesBot(chatId);\n\n  const { width, height } = botInfoDimensions || {};\n\n  const handleClick = useLastCallback((e: React.SyntheticEvent<any>) => {\n    stopEvent(e);\n    openChatWithInfo({\n      id: chatId, shouldReplaceHistory: true, profileTab: 'commonChats', forceScrollProfileTab: true,\n    });\n  });\n\n  const securityNameInfo = nameChangeDate && chat ? (\n    <div className=\"local-action-message\" key=\"security-name-message\">\n      <span>\n        {lang('UserUpdatedName', {\n          user: chat.title,\n          time: formatPastDatetime(lang, nameChangeDate),\n        }, { withNodes: true, withMarkdown: true })}\n      </span>\n    </div>\n  ) : undefined;\n\n  const securityPhotoInfo = photoChangeDate && chat ? (\n    <div className=\"local-action-message\" key=\"security-photo-message\">\n      <span>\n        {lang('UserUpdatedPhoto', {\n          user: chat.title,\n          time: formatPastDatetime(lang, photoChangeDate),\n        }, { withNodes: true, withMarkdown: true })}\n      </span>\n    </div>\n  ) : undefined;\n\n  const tableData = useMemo((): TableEntry[] => {\n    const entries: TableEntry[] = [];\n    if (country) {\n      entries.push([\n        oldLang('PrivacyPhone'),\n        <span className={styles.chatDescription}>\n          <span className={styles.country}>\n            {renderText(isoToEmoji(country?.iso2))}\n          </span>\n          {country?.defaultName}\n        </span>,\n      ]);\n    }\n    if (registrationMonth) {\n      entries.push([\n        lang('ContactInfoRegistration'),\n        formatRegistrationMonth(lang.code, registrationMonth),\n      ]);\n    }\n    if (userFullInfo?.commonChatsCount) {\n      const global = getGlobal();\n      const peers = commonChats?.ids.slice(0, 3).map((id) => selectPeer(global, id)!).filter(Boolean);\n      entries.push([\n        lang('ChatNonContactUserGroups'),\n        <Link className={styles.link} onClick={handleClick}>\n          <span className={styles.linkInfo}>\n            {lang('ChatGroups', {\n              count: userFullInfo.commonChatsCount,\n            }, {\n              pluralValue: userFullInfo.commonChatsCount,\n            })}\n          </span>\n          {Boolean(peers?.length) && <AvatarList size=\"micro\" peers={peers} />}\n          <Icon name=\"next\" className={styles.icon} />\n        </Link>,\n      ]);\n    }\n    return entries;\n  }, [lang, oldLang, country, registrationMonth, commonChats, userFullInfo]);\n\n  return (\n    <div className={buildClassName(styles.root, 'empty')}>\n      {isLoadingFullUser && isChatInfoEmpty && <span>{oldLang('Loading')}</span>}\n      {(isBotInfoEmpty && isChatInfoEmpty) && !isLoadingFullUser && !hasMessages && (\n        <span>{oldLang('NoMessages')}</span>\n      )}\n      {botInfo && (\n        <div\n          className={buildClassName(styles.chatInfo, styles.botBackground)}\n          style={buildStyle(\n            width ? `width: ${width}px` : undefined,\n          )}\n        >\n          {botInfoPhotoUrl && (\n            <img\n              className={styles.media}\n              src={botInfoPhotoUrl}\n              width={width}\n              height={height}\n              alt=\"Bot info\"\n            />\n          )}\n          {botInfoGifUrl && (\n            <OptimizedVideo\n              canPlay\n              className={styles.media}\n              src={botInfoGifUrl}\n              loop\n              disablePictureInPicture\n              muted\n              playsInline\n              style={buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`)}\n            />\n          )}\n          {botInfoDimensions && !botInfoPhotoUrl && !botInfoGifUrl && (\n            <Skeleton\n              className={styles.media}\n              width={width}\n              height={height}\n              forceAspectRatio\n            />\n          )}\n          {isVerifyCodes && (\n            <div className={styles.botInfoDescription}>\n              {oldLang('VerifyChatInfo')}\n            </div>\n          )}\n          {!isVerifyCodes && botInfo.description && (\n            <div className={styles.botInfoDescription}>\n              <p className={styles.botInfoTitle}>{oldLang('BotInfoTitle')}</p>\n              {renderText(botInfo.description, ['br', 'emoji', 'links'])}\n            </div>\n          )}\n        </div>\n      )}\n      {!isChatInfoEmpty && chat && (\n        <div\n          className={buildClassName(styles.chatInfo, styles.chatBackground)}\n        >\n          <h3 className={styles.chatInfoTitle}>{renderText(getChatTitle(lang, chat))}</h3>\n          <p className={buildClassName(styles.chatInfoSubtitle, styles.textColor)}>\n            {lang('ChatNonContactUserSubtitle')}\n          </p>\n          <MiniTable keyClassName={styles.textColor} data={tableData} />\n          {!chat?.isVerified && (\n            <div className={buildClassName(styles.chatNotVerified, styles.textColor)}>\n              <Icon name=\"info-filled\" />\n              <p className={styles.verifiedTitle}>{lang('ContactInfoNotVerified')}</p>\n            </div>\n          )}\n        </div>\n      )}\n      {securityNameInfo}\n      {securityPhotoInfo}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const {\n      countryList: { phoneCodes: phoneCodeList },\n    } = global;\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    const commonChats = selectUserCommonChats(global, chatId);\n    const chatBot = selectBot(global, chatId);\n\n    let isLoadingFullUser = false;\n    let botInfo;\n    if (chatBot) {\n      if (userFullInfo) {\n        botInfo = userFullInfo.botInfo;\n      } else {\n        isLoadingFullUser = true;\n      }\n    }\n\n    return {\n      chat,\n      userFullInfo,\n      botInfo,\n      isLoadingFullUser,\n      phoneCodeList,\n      commonChats,\n    };\n  },\n)(MessageListAccountInfo));\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport { getIsHeavyAnimating, memo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum, MessageListType, ThreadId } from '../../types';\nimport type { Signal } from '../../util/signals';\nimport type { MessageDateGroup } from './helpers/groupMessages';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../../config';\nimport {\n  getMessageHtmlId,\n  getMessageOriginalId,\n  getSuggestedChangesActionText,\n  getSuggestedChangesInfo,\n  isActionMessage,\n  isOwnMessage,\n  isServiceNotificationMessage,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectChatMessage, selectSender } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatHumanDate, formatScheduledDateTime } from '../../util/dates/dateFormat';\nimport { convertTonFromNanos } from '../../util/formatCurrency';\nimport { compact } from '../../util/iteratees';\nimport { formatStarsAsText, formatTonAsText } from '../../util/localization/format';\nimport { isAlbum } from './helpers/groupMessages';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\nimport { renderPeerLink } from './message/helpers/messageActions';\n\nimport useDerivedSignal from '../../hooks/useDerivedSignal';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useMessageObservers from './hooks/useMessageObservers';\nimport useScrollHooks from './hooks/useScrollHooks';\n\nimport MiniTable, { type TableEntry } from '../common/MiniTable';\nimport ActionMessage from './message/ActionMessage';\nimport Message from './message/Message';\nimport SenderGroupContainer from './message/SenderGroupContainer';\nimport SponsoredMessage from './message/SponsoredMessage';\nimport MessageListAccountInfo from './MessageListAccountInfo';\n\nimport actionMessageStyles from './message/ActionMessage.module.scss';\n\ninterface OwnProps {\n  canShowAds?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageIds: number[];\n  messageGroups: MessageDateGroup[];\n  getContainerHeight: Signal<number | undefined>;\n  isViewportNewest: boolean;\n  isUnread: boolean;\n  withUsers: boolean;\n  isChannelChat: boolean | undefined;\n  isChatMonoforum?: boolean;\n  isEmptyThread?: boolean;\n  isComments?: boolean;\n  noAvatars: boolean;\n  containerRef: ElementRef<HTMLDivElement>;\n  anchorIdRef: { current: string | undefined };\n  memoUnreadDividerBeforeIdRef: { current: number | undefined };\n  memoFirstUnreadIdRef: { current: number | undefined };\n  type: MessageListType;\n  isReady: boolean;\n  hasLinkedChat: boolean | undefined;\n  isSchedule: boolean;\n  shouldRenderAccountInfo?: boolean;\n  nameChangeDate?: number;\n  photoChangeDate?: number;\n  noAppearanceAnimation: boolean;\n  isSavedDialog?: boolean;\n  onScrollDownToggle: BooleanToVoidFunction;\n  onNotchToggle: AnyToVoidFunction;\n  onIntersectPinnedMessage: OnIntersectPinnedMessage;\n  canPost?: boolean;\n}\n\nconst UNREAD_DIVIDER_CLASS = 'unread-divider';\n\nconst MessageListContent: FC<OwnProps> = ({\n  canShowAds,\n  chatId,\n  threadId,\n  messageIds,\n  messageGroups,\n  getContainerHeight,\n  isViewportNewest,\n  isUnread,\n  isComments,\n  isEmptyThread,\n  withUsers,\n  isChannelChat,\n  isChatMonoforum,\n  noAvatars,\n  containerRef,\n  anchorIdRef,\n  memoUnreadDividerBeforeIdRef,\n  memoFirstUnreadIdRef,\n  type,\n  isReady,\n  hasLinkedChat,\n  isSchedule,\n  shouldRenderAccountInfo,\n  nameChangeDate,\n  photoChangeDate,\n  noAppearanceAnimation,\n  isSavedDialog,\n  onScrollDownToggle,\n  onNotchToggle,\n  onIntersectPinnedMessage,\n  canPost,\n}) => {\n  const { openHistoryCalendar } = getActions();\n\n  const getIsHeavyAnimating2 = getIsHeavyAnimating;\n  const getIsReady = useDerivedSignal(() => isReady && !getIsHeavyAnimating2(), [isReady, getIsHeavyAnimating2]);\n\n  const areDatesClickable = !isSavedDialog && !isSchedule;\n\n  const {\n    observeIntersectionForReading,\n    observeIntersectionForLoading,\n    observeIntersectionForPlaying,\n  } = useMessageObservers(type, containerRef, memoFirstUnreadIdRef, onIntersectPinnedMessage, chatId);\n\n  const {\n    withHistoryTriggers,\n    backwardsTriggerRef,\n    forwardsTriggerRef,\n    fabTriggerRef,\n  } = useScrollHooks(\n    type,\n    containerRef,\n    messageIds,\n    getContainerHeight,\n    isViewportNewest,\n    isUnread,\n    onScrollDownToggle,\n    onNotchToggle,\n    isReady,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const unreadDivider = (\n    <div className={buildClassName(UNREAD_DIVIDER_CLASS, 'local-action-message')} key=\"unread-messages\">\n      <span>{oldLang('UnreadMessages')}</span>\n    </div>\n  );\n  const renderPaidMessageAction = (message: ApiMessage, album?: IAlbum) => {\n    if (message.paidMessageStars) {\n      const messagesLength = album?.messages?.length || 1;\n      const amount = message.paidMessageStars * messagesLength;\n      return (\n        <div\n          className={buildClassName('local-action-message')}\n          key={`paid-messages-action-${message.id}`}\n        >\n          <span>\n            {\n              message.isOutgoing\n                ? lang('ActionPaidOneMessageOutgoing', {\n                  amount: formatStarsAsText(lang, amount),\n                })\n                : (() => {\n                  const sender = selectSender(getGlobal(), message);\n                  const userTitle = sender ? getPeerTitle(lang, sender) : '';\n                  return lang('ActionPaidOneMessageIncoming', {\n                    user: userTitle,\n                    amount: formatStarsAsText(lang, amount),\n                  });\n                })()\n            }\n          </span>\n        </div>\n      );\n    }\n    return undefined;\n  };\n\n  const renderSuggestedPostInfoAction = (message: ApiMessage) => {\n    if (message.suggestedPostInfo) {\n      const { price, scheduleDate } = message.suggestedPostInfo;\n      const sender = selectSender(getGlobal(), message);\n      const userTitle = sender ? getPeerTitle(lang, sender) : '';\n      const userLink = renderPeerLink(sender?.id, userTitle || lang('ActionFallbackUser'));\n\n      const originalMessage = message.replyInfo?.type === 'message' && message.replyInfo.replyToMsgId\n        ? selectChatMessage(getGlobal(), message.chatId, message.replyInfo.replyToMsgId)\n        : undefined;\n      const changesInfo = getSuggestedChangesInfo(message, originalMessage);\n\n      const titleText = changesInfo\n        ? getSuggestedChangesActionText(lang, message, originalMessage, message.isOutgoing, userLink)\n        : message.isOutgoing\n          ? lang('ActionSuggestedPostOutgoing', undefined, { withNodes: true, withMarkdown: true })\n          : lang('ActionSuggestedPostIncoming', { user: userLink }, { withNodes: true, withMarkdown: true });\n\n      const tableData: TableEntry[] = compact([\n        [lang('TitlePrice'), price ? (price.currency === 'TON'\n          ? formatTonAsText(lang, convertTonFromNanos(price.amount))\n          : formatStarsAsText(lang, price.amount)) : lang('SuggestMessageNoPrice')],\n        [lang('TitleTime'),\n          scheduleDate\n            ? formatScheduledDateTime(scheduleDate, lang, oldLang)\n            : lang('SuggestMessageAnytime'),\n        ],\n      ]);\n\n      return (\n        <div\n          className={buildClassName('local-action-message')}\n          key={`suggested-post-action-${message.id}`}\n        >\n          <span className={actionMessageStyles.suggestedPostContainer}>\n            <div\n              className={actionMessageStyles.suggestedPostTitle}\n            >\n              {titleText}\n            </div>\n            {Boolean(tableData.length) && (\n              <MiniTable\n                className={actionMessageStyles.suggestedPostInfo}\n                data={tableData}\n              />\n            )}\n          </span>\n        </div>\n      );\n    }\n    return undefined;\n  };\n\n  const messageCountToAnimate = noAppearanceAnimation ? 0 : messageGroups.reduce((acc, messageGroup) => {\n    return acc + messageGroup.senderGroups.flat().length;\n  }, 0);\n  let appearanceIndex = 0;\n\n  const prevMessageIds = usePreviousDeprecated(messageIds);\n  const isNewMessage = Boolean(\n    messageIds && prevMessageIds && messageIds[messageIds.length - 2] === prevMessageIds[prevMessageIds.length - 1],\n  );\n\n  function calculateSenderGroups(\n    dateGroup: MessageDateGroup, dateGroupIndex: number, dateGroupsArray: MessageDateGroup[],\n  ) {\n    return dateGroup.senderGroups.map((\n      senderGroup,\n      senderGroupIndex,\n      senderGroupsArray,\n    ) => {\n      if (\n        senderGroup.length === 1\n        && !isAlbum(senderGroup[0])\n        && isActionMessage(senderGroup[0])\n        && senderGroup[0].content.action?.type !== 'phoneCall'\n      ) {\n        const message = senderGroup[0];\n        const isLastInList = (\n          senderGroupIndex === senderGroupsArray.length - 1\n          && dateGroupIndex === dateGroupsArray.length - 1\n        );\n\n        return compact([\n          message.id === memoUnreadDividerBeforeIdRef.current && unreadDivider,\n          <ActionMessage\n            key={message.id}\n            message={message}\n            threadId={threadId}\n            observeIntersectionForBottom={observeIntersectionForReading}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n            appearanceOrder={messageCountToAnimate - ++appearanceIndex}\n            isJustAdded={isLastInList && isNewMessage}\n            isLastInList={isLastInList}\n            getIsMessageListReady={getIsReady}\n            onIntersectPinnedMessage={onIntersectPinnedMessage}\n          />,\n        ]);\n      }\n\n      let currentDocumentGroupId: string | undefined;\n\n      const senderGroupElements = senderGroup.map((\n        messageOrAlbum,\n        messageIndex,\n      ) => {\n        const message = isAlbum(messageOrAlbum) ? messageOrAlbum.mainMessage : messageOrAlbum;\n        const album = isAlbum(messageOrAlbum) ? messageOrAlbum : undefined;\n        const isOwn = isOwnMessage(message);\n        const isMessageAlbum = isAlbum(messageOrAlbum);\n        const nextMessage = senderGroup[messageIndex + 1];\n\n        if (message.previousLocalId && anchorIdRef.current === getMessageHtmlId(message.previousLocalId)) {\n          anchorIdRef.current = getMessageHtmlId(message.id);\n        }\n\n        const documentGroupId = !isMessageAlbum && message.groupedId ? message.groupedId : undefined;\n        const nextDocumentGroupId = nextMessage && !isAlbum(nextMessage) ? nextMessage.groupedId : undefined;\n        const isTopicTopMessage = message.id === threadId;\n\n        const position = {\n          isFirstInGroup: messageIndex === 0,\n          isLastInGroup: messageIndex === senderGroup.length - 1,\n          isFirstInDocumentGroup: Boolean(documentGroupId && documentGroupId !== currentDocumentGroupId),\n          isLastInDocumentGroup: Boolean(documentGroupId && documentGroupId !== nextDocumentGroupId),\n          isLastInList: (\n            messageIndex === senderGroup.length - 1\n            && senderGroupIndex === senderGroupsArray.length - 1\n            && dateGroupIndex === dateGroupsArray.length - 1\n          ),\n        };\n\n        currentDocumentGroupId = documentGroupId;\n\n        const originalId = getMessageOriginalId(message);\n        // Service notifications saved in cache in previous versions may share the same `previousLocalId`\n        const key = isServiceNotificationMessage(message) ? `${message.date}_${originalId}` : originalId;\n\n        const noComments = hasLinkedChat === false || !isChannelChat || Boolean(isChatMonoforum);\n\n        return compact([\n          message.id === memoUnreadDividerBeforeIdRef.current && unreadDivider,\n          message.paidMessageStars && !withUsers && renderPaidMessageAction(message, album),\n          message.suggestedPostInfo && renderSuggestedPostInfoAction(message),\n          <Message\n            key={key}\n            message={message}\n            observeIntersectionForBottom={observeIntersectionForReading}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            album={album}\n            noAvatars={noAvatars}\n            withAvatar={position.isLastInGroup && withUsers && !isOwn && (!isTopicTopMessage || !isComments)}\n            withSenderName={position.isFirstInGroup && withUsers && !isOwn}\n            threadId={threadId}\n            messageListType={type}\n            noComments={noComments}\n            noReplies={!noComments || threadId !== MAIN_THREAD_ID || type === 'scheduled'}\n            appearanceOrder={messageCountToAnimate - ++appearanceIndex}\n            isJustAdded={position.isLastInList && isNewMessage}\n            isFirstInGroup={position.isFirstInGroup}\n            isLastInGroup={position.isLastInGroup}\n            isFirstInDocumentGroup={position.isFirstInDocumentGroup}\n            isLastInDocumentGroup={position.isLastInDocumentGroup}\n            isLastInList={position.isLastInList}\n            memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n            onIntersectPinnedMessage={onIntersectPinnedMessage}\n            getIsMessageListReady={getIsReady}\n          />,\n          message.id === threadId && (\n            // eslint-disable-next-line react-x/no-duplicate-key\n            <div className=\"local-action-message\" key=\"discussion-started\">\n              <span>\n                {oldLang(isEmptyThread\n                  ? (isComments ? 'NoComments' : 'NoReplies') : 'DiscussionStarted')}\n              </span>\n            </div>\n          ),\n        ]);\n      }).flat();\n\n      if (!withUsers) return senderGroupElements;\n\n      const lastMessageOrAlbum = senderGroup[senderGroup.length - 1];\n      const lastMessage = isAlbum(lastMessageOrAlbum) ? lastMessageOrAlbum.mainMessage : lastMessageOrAlbum;\n      const lastMessageId = getMessageOriginalId(lastMessage);\n      const lastAppearanceOrder = messageCountToAnimate - appearanceIndex;\n\n      const isTopicTopMessage = lastMessage.id === threadId;\n      const isOwn = isOwnMessage(lastMessage);\n\n      const firstMessageOrAlbum = senderGroup[0];\n      const firstMessage = isAlbum(firstMessageOrAlbum) ? firstMessageOrAlbum.mainMessage : firstMessageOrAlbum;\n      const firstMessageId = getMessageOriginalId(firstMessage);\n\n      const key = `${firstMessageId}-${lastMessageId}`;\n      const id = (firstMessageId === lastMessageId) ? `message-group-${firstMessageId}`\n        : `message-group-${firstMessageId}-${lastMessageId}`;\n\n      const withAvatar = withUsers && !isOwn && (!isTopicTopMessage || !isComments);\n      return (\n        <SenderGroupContainer\n          key={key}\n          id={id}\n          message={lastMessage}\n          withAvatar={withAvatar}\n          appearanceOrder={lastAppearanceOrder}\n          canPost={canPost}\n        >\n          {senderGroupElements}\n        </SenderGroupContainer>\n      );\n    });\n  }\n\n  const dateGroups = messageGroups.map((\n    dateGroup: MessageDateGroup,\n    dateGroupIndex: number,\n    dateGroupsArray: MessageDateGroup[],\n  ) => {\n    const senderGroups = calculateSenderGroups(dateGroup, dateGroupIndex, dateGroupsArray);\n\n    return (\n      <div\n        className={buildClassName('message-date-group', !(nameChangeDate || photoChangeDate)\n        && dateGroupIndex === 0 && 'first-message-date-group')}\n        key={dateGroup.datetime}\n        onMouseDown={preventMessageInputBlur}\n        teactFastList\n      >\n        <div\n          className={buildClassName('sticky-date', areDatesClickable && 'interactive')}\n          key=\"date-header\"\n          onMouseDown={preventMessageInputBlur}\n          onClick={areDatesClickable ? () => openHistoryCalendar({ selectedAt: dateGroup.datetime }) : undefined}\n        >\n          <span dir=\"auto\">\n            {isSchedule && dateGroup.originalDate === SCHEDULED_WHEN_ONLINE && (\n              oldLang('MessageScheduledUntilOnline')\n            )}\n            {isSchedule && dateGroup.originalDate !== SCHEDULED_WHEN_ONLINE && (\n              oldLang('MessageScheduledOn', formatHumanDate(oldLang, dateGroup.datetime, undefined, true))\n            )}\n            {!isSchedule && formatHumanDate(oldLang, dateGroup.datetime)}\n          </span>\n        </div>\n        {senderGroups.flat()}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"messages-container\" teactFastList>\n      {withHistoryTriggers && <div ref={backwardsTriggerRef} key=\"backwards-trigger\" className=\"backwards-trigger\" />}\n      {shouldRenderAccountInfo\n        && <MessageListAccountInfo key={`account_info_${chatId}`} chatId={chatId} hasMessages />}\n      {dateGroups.flat()}\n      {withHistoryTriggers && (\n        <div\n          ref={forwardsTriggerRef}\n          key=\"forwards-trigger\"\n          className=\"forwards-trigger\"\n        />\n      )}\n      <div\n        ref={fabTriggerRef}\n        key=\"fab-trigger\"\n        className=\"fab-trigger\"\n      />\n      {canShowAds && isViewportNewest && (\n        <SponsoredMessage\n          key={chatId}\n          chatId={chatId}\n          containerRef={containerRef}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MessageListContent);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageList as GlobalMessageList } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { createLocationHash } from '../../util/routing';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\ntype StateProps = {\n  messageLists?: GlobalMessageList[];\n};\n\n// Actual `MessageList` components are unmounted when deep in the history,\n// so we need a separate component just for handling history\nconst MessageListHistoryHandler: FC<StateProps> = ({ messageLists }) => {\n  const { openChat } = getActions();\n\n  const closeChat = () => {\n    openChat({ id: undefined }, { forceSyncOnIOs: true });\n  };\n\n  const MessageHistoryRecord: FC<GlobalMessageList> = ({ chatId, type, threadId }) => {\n    useHistoryBack({\n      isActive: true,\n      hash: createLocationHash(chatId, type, threadId),\n      onBack: closeChat,\n    });\n  };\n\n  return (\n    <div>\n      {messageLists?.map((messageList, i) => (\n        <MessageHistoryRecord\n\n          key={`${messageList.chatId}_${messageList.threadId}_${messageList.type}_${i}`}\n\n          {...messageList}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      messageLists: selectTabState(global).messageLists,\n    };\n  },\n)(MessageListHistoryHandler));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MessageSelectToolbar';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MessageSelectToolbarAsync: FC<OwnProps> = (props) => {\n  const { isActive } = props;\n  const MessageSelectToolbar = useModuleLoader(Bundles.Extra, 'MessageSelectToolbar', !isActive);\n\n  return MessageSelectToolbar ? <MessageSelectToolbar {...props} /> : undefined;\n};\n\nexport default MessageSelectToolbarAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"C6IaXYew\",\"customBgImage\":\"K1xhz7U5\",\"customBgColor\":\"CwoXMwaR\",\"withTransition\":\"nXhZtCma\",\"draggable\":\"jMpPshUt\",\"blurred\":\"JBrOVLsX\",\"withRightColumn\":\"Lyw3O8XE\"};","// extracted by mini-css-extract-plugin\nexport {};","import type {\n  ElementRef } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatBannedRights, ApiInputMessageReplyInfo, ApiTopic,\n} from '../../api/types';\nimport type {\n  ActiveEmojiInteraction,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  ANIMATION_END_DELAY,\n  ANONYMOUS_USER_ID,\n  EDITABLE_INPUT_CSS_SELECTOR,\n  EDITABLE_INPUT_ID,\n  GENERAL_TOPIC_ID,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n  TMP_CHAT_ID,\n} from '../../config';\nimport { requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getCanPostInChat,\n  getForumComposerPlaceholder,\n  getHasAdminRight,\n  getIsSavedDialog,\n  getMessageSendingRestrictionReason,\n  isChatChannel,\n  isChatGroup,\n  isChatSuperGroup,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectDraft,\n  selectEditingId,\n  selectIsChatBotNotStarted,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsMonoforumAdmin,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectPeerPaidMessagesStars,\n  selectPinnedIds,\n  selectTabState,\n  selectTheme,\n  selectThemeValues,\n  selectThreadInfo,\n  selectTopic,\n  selectTopics,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_SAFARI, IS_TRANSLATION_SUPPORTED, MASK_IMAGE_DISABLED,\n} from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { isUserId } from '../../util/entities/ids';\nimport calculateMiddleFooterTransforms from './helpers/calculateMiddleFooterTransforms';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCustomBackground from '../../hooks/useCustomBackground';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { useResize } from '../../hooks/useResize';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport usePinnedMessage from './hooks/usePinnedMessage';\nimport useFluidBackgroundFilter from './message/hooks/useFluidBackgroundFilter';\n\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport PrivacySettingsNoticeModal from '../common/PrivacySettingsNoticeModal.async';\nimport SeenByModal from '../common/SeenByModal.async';\nimport UnpinAllMessagesModal from '../common/UnpinAllMessagesModal.async';\nimport Button from '../ui/Button';\nimport Transition from '../ui/Transition';\nimport ChatLanguageModal from './ChatLanguageModal.async';\nimport { DropAreaState } from './composer/DropArea';\nimport EmojiInteractionAnimation from './EmojiInteractionAnimation.async';\nimport FloatingActionButtons from './FloatingActionButtons';\nimport FrozenAccountPlaceholder from './FrozenAccountPlaceholder';\nimport MessageList from './MessageList';\nimport MessageSelectToolbar from './MessageSelectToolbar.async';\nimport MiddleHeader from './MiddleHeader';\nimport MiddleHeaderPanes from './MiddleHeaderPanes';\nimport PremiumRequiredPlaceholder from './PremiumRequiredPlaceholder';\nimport ReactorListModal from './ReactorListModal.async';\nimport MiddleSearch from './search/MiddleSearch.async';\n\nimport './MiddleColumn.scss';\nimport styles from './MiddleColumn.module.scss';\n\ninterface OwnProps {\n  leftColumnRef: ElementRef<HTMLDivElement>;\n  isMobile?: boolean;\n}\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  isComments?: boolean;\n  messageListType?: MessageListType;\n  chat?: ApiChat;\n  draftReplyInfo?: ApiInputMessageReplyInfo;\n  isPrivate?: boolean;\n  isPinnedMessageList?: boolean;\n  canPost?: boolean;\n  currentUserBannedRights?: ApiChatBannedRights;\n  defaultBannedRights?: ApiChatBannedRights;\n  pinnedMessagesCount?: number;\n  theme: ThemeKey;\n  customBackground?: string;\n  backgroundColor?: string;\n  patternColor?: string;\n  isLeftColumnShown?: boolean;\n  isRightColumnShown?: boolean;\n  isBackgroundBlurred?: boolean;\n  leftColumnWidth?: number;\n  hasActiveMiddleSearch?: boolean;\n  isSelectModeActive?: boolean;\n  isSeenByModalOpen: boolean;\n  isPrivacySettingsNoticeModalOpen: boolean;\n  isReactorListModalOpen: boolean;\n  isChatLanguageModalOpen?: boolean;\n  withInterfaceAnimations?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  currentTransitionKey: number;\n  isChannel?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  canSubscribe?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  shouldLoadFullChat?: boolean;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  pinnedIds?: number[];\n  canUnpin?: boolean;\n  canUnblock?: boolean;\n  isSavedDialog?: boolean;\n  canShowOpenChatButton?: boolean;\n  isContactRequirePremium?: boolean;\n  topics?: Record<number, ApiTopic>;\n  paidMessagesStars?: number;\n  isAccountFrozen?: boolean;\n  freezeAppealChat?: ApiChat;\n  shouldBlockSendInMonoforum?: boolean;\n};\n\nfunction isImage(item: DataTransferItem) {\n  return item.kind === 'file' && item.type && SUPPORTED_PHOTO_CONTENT_TYPES.has(item.type);\n}\n\nfunction isVideo(item: DataTransferItem) {\n  return item.kind === 'file' && item.type && SUPPORTED_VIDEO_CONTENT_TYPES.has(item.type);\n}\n\nconst LAYER_ANIMATION_DURATION_MS = 450 + ANIMATION_END_DELAY;\n\nfunction MiddleColumn({\n  leftColumnRef,\n  chatId,\n  threadId,\n  isComments,\n  messageListType,\n  isMobile,\n  chat,\n  draftReplyInfo,\n  isPrivate,\n  isPinnedMessageList,\n  canPost,\n  currentUserBannedRights,\n  defaultBannedRights,\n  pinnedMessagesCount,\n  customBackground,\n  theme,\n  backgroundColor,\n  patternColor,\n  isLeftColumnShown,\n  isRightColumnShown,\n  isBackgroundBlurred,\n  leftColumnWidth,\n  hasActiveMiddleSearch,\n  isSelectModeActive,\n  isSeenByModalOpen,\n  isPrivacySettingsNoticeModalOpen,\n  isReactorListModalOpen,\n  isChatLanguageModalOpen,\n  withInterfaceAnimations,\n  shouldSkipHistoryAnimations,\n  currentTransitionKey,\n  isChannel,\n  arePeerSettingsLoaded,\n  canSubscribe,\n  canStartBot,\n  canRestartBot,\n  activeEmojiInteractions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  shouldLoadFullChat,\n  pinnedIds,\n  canUnpin,\n  canUnblock,\n  isSavedDialog,\n  canShowOpenChatButton,\n  isContactRequirePremium,\n  topics,\n  paidMessagesStars,\n  isAccountFrozen,\n  freezeAppealChat,\n  shouldBlockSendInMonoforum,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    openPreviousChat,\n    unpinAllMessages,\n    loadUser,\n    loadPeerSettings,\n    exitMessageSelectMode,\n    joinChannel,\n    sendBotCommand,\n    restartBot,\n    showNotification,\n    loadFullChat,\n    setLeftColumnWidth,\n    resetLeftColumnWidth,\n    unblockUser,\n  } = getActions();\n\n  const { width: windowWidth } = useWindowSize();\n  const { isTablet, isDesktop } = useAppLayout();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [dropAreaState, setDropAreaState] = useState(DropAreaState.None);\n  const [isScrollDownNeeded, setIsScrollDownShown] = useState(false);\n  const isScrollDownShown = isScrollDownNeeded && (!isMobile || !hasActiveMiddleSearch);\n  const [isNotchShown, setIsNotchShown] = useState<boolean | undefined>();\n  const [isUnpinModalOpen, setIsUnpinModalOpen] = useState(false);\n\n  const {\n    handleIntersectPinnedMessage,\n    handleFocusPinnedMessage,\n    getCurrentPinnedIndex,\n    getLoadingPinnedId,\n  } = usePinnedMessage(chatId, threadId, pinnedIds);\n\n  const closeAnimationDuration = isMobile ? LAYER_ANIMATION_DURATION_MS : undefined;\n\n  const renderingChatId = usePrevDuringAnimation(chatId, closeAnimationDuration);\n  const renderingThreadId = usePrevDuringAnimation(threadId, closeAnimationDuration);\n  const renderingMessageListType = usePrevDuringAnimation(messageListType, closeAnimationDuration);\n  const renderingCanSubscribe = usePrevDuringAnimation(canSubscribe, closeAnimationDuration);\n  const renderingCanStartBot = usePrevDuringAnimation(canStartBot, closeAnimationDuration);\n  const renderingCanRestartBot = usePrevDuringAnimation(canRestartBot, closeAnimationDuration);\n  const renderingCanUnblock = usePrevDuringAnimation(canUnblock, closeAnimationDuration);\n  const renderingCanPost = usePrevDuringAnimation(canPost, closeAnimationDuration)\n    && !renderingCanRestartBot && !renderingCanStartBot && !renderingCanSubscribe && !renderingCanUnblock\n    && chatId !== TMP_CHAT_ID && !isContactRequirePremium;\n  const renderingIsScrollDownShown = usePrevDuringAnimation(\n    isScrollDownShown, closeAnimationDuration,\n  ) && chatId !== TMP_CHAT_ID;\n  const renderingIsChannel = usePrevDuringAnimation(isChannel, closeAnimationDuration);\n  const renderingShouldJoinToSend = usePrevDuringAnimation(shouldJoinToSend, closeAnimationDuration);\n  const renderingShouldSendJoinRequest = usePrevDuringAnimation(shouldSendJoinRequest, closeAnimationDuration);\n  const renderingHandleIntersectPinnedMessage = usePrevDuringAnimation(\n    chatId ? handleIntersectPinnedMessage : undefined,\n    closeAnimationDuration,\n  );\n\n  const prevTransitionKey = usePreviousDeprecated(currentTransitionKey);\n\n  const cleanupExceptionKey = (\n    prevTransitionKey !== undefined && prevTransitionKey < currentTransitionKey ? prevTransitionKey : undefined\n  );\n\n  const { isReady, handleCssTransitionEnd, handleSlideTransitionStop } = useIsReady(\n    !shouldSkipHistoryAnimations && withInterfaceAnimations,\n    currentTransitionKey,\n    prevTransitionKey,\n    chatId,\n    isMobile,\n  );\n\n  useEffect(() => {\n    return chatId\n      ? captureEscKeyListener(() => {\n        openChat({ id: undefined });\n      })\n      : undefined;\n  }, [chatId, openChat]);\n\n  useSyncEffect(() => {\n    setDropAreaState(DropAreaState.None);\n    setIsNotchShown(undefined);\n  }, [chatId]);\n\n  // Fix for mobile virtual keyboard\n  useEffect(() => {\n    if (!IS_IOS && !IS_ANDROID) {\n      return undefined;\n    }\n\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const handleResize = () => {\n      const isFixNeeded = visualViewport.height !== document.documentElement.clientHeight;\n\n      requestMutation(() => {\n        document.body.classList.toggle('keyboard-visible', isFixNeeded);\n\n        requestMeasure(() => {\n          if (!isFixNeeded && visualViewport.offsetTop) {\n            requestMutation(() => {\n              window.scrollTo({ top: 0 });\n            });\n          }\n        });\n      });\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  });\n\n  useEffect(() => {\n    if (isPrivate) {\n      loadUser({ userId: chatId! });\n    }\n  }, [chatId, isPrivate, loadUser]);\n\n  useEffect(() => {\n    if (!arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId: chatId! });\n    }\n  }, [chatId, isPrivate, arePeerSettingsLoaded]);\n\n  useEffect(() => {\n    if (chatId && shouldLoadFullChat && isReady) {\n      loadFullChat({ chatId });\n    }\n  }, [shouldLoadFullChat, chatId, isReady, loadFullChat]);\n\n  const {\n    initResize, resetResize, handleMouseUp,\n  } = useResize(leftColumnRef, (n) => setLeftColumnWidth({\n    leftColumnWidth: n,\n  }), resetLeftColumnWidth, leftColumnWidth, '--left-column-width');\n\n  const handleDragEnter = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { items } = e.dataTransfer || {};\n    // In Safari, the e.dataTransfer.items list may be empty during dragenter/dragover events,\n    // preventing the ability to determine file types in advance. More details: https://bugs.webkit.org/show_bug.cgi?id=223517\n    const shouldDrawQuick = IS_SAFARI || (items && items.length > 0 && Array.from(items)\n      // Filter unnecessary element for drag and drop images in Firefox (https://github.com/Ajaxy/telegram-tt/issues/49)\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#image\n      .filter((item) => item.type !== 'text/uri-list')\n      .every((item) => isImage(item) || isVideo(item)));\n\n    setDropAreaState(shouldDrawQuick ? DropAreaState.QuickFile : DropAreaState.Document);\n  });\n\n  const handleHideDropArea = useLastCallback(() => {\n    setDropAreaState(DropAreaState.None);\n  });\n\n  const handleOpenUnpinModal = useLastCallback(() => {\n    setIsUnpinModalOpen(true);\n  });\n\n  const closeUnpinModal = useLastCallback(() => {\n    setIsUnpinModalOpen(false);\n  });\n\n  const handleOpenChatFromSaved = useLastCallback(() => {\n    openChat({ id: String(threadId) });\n  });\n\n  const handleUnpinAllMessages = useLastCallback(() => {\n    unpinAllMessages({ chatId: chatId!, threadId: threadId! });\n    closeUnpinModal();\n    openPreviousChat();\n  });\n\n  const handleTabletFocus = useLastCallback(() => {\n    openChat({ id: chatId });\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId: chatId! });\n    if (renderingShouldSendJoinRequest) {\n      showNotification({\n        message: isChannel\n          ? oldLang('RequestToJoinChannelSentDescription') : oldLang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId: chatId! });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId! });\n  });\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const className = buildClassName(\n    MASK_IMAGE_DISABLED ? 'mask-image-disabled' : 'mask-image-enabled',\n  );\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n    isRightColumnShown && styles.withRightColumn,\n    IS_ELECTRON && !(renderingChatId && renderingThreadId) && styles.draggable,\n  );\n\n  const messagingDisabledClassName = buildClassName(\n    'messaging-disabled',\n    !isSelectModeActive && 'shown',\n  );\n\n  const messageSendingRestrictionReason = getMessageSendingRestrictionReason(\n    oldLang, currentUserBannedRights, defaultBannedRights,\n  );\n  const forumComposerPlaceholder = getForumComposerPlaceholder(\n    oldLang, chat, threadId, topics, Boolean(draftReplyInfo),\n  );\n\n  const composerRestrictionMessage = messageSendingRestrictionReason\n    || forumComposerPlaceholder\n    || (shouldBlockSendInMonoforum ? lang('MonoforumComposerPlaceholder') : undefined)\n    || (isContactRequirePremium ? <PremiumRequiredPlaceholder userId={chatId!} /> : undefined)\n    || (isAccountFrozen && freezeAppealChat?.id !== chatId ? <FrozenAccountPlaceholder /> : undefined);\n\n  // CSS Variables calculation doesn't work properly with transforms, so we calculate transform values in JS\n  const {\n    composerHiddenScale, toolbarHiddenScale,\n    composerTranslateX, toolbarTranslateX,\n    unpinHiddenScale, toolbarForUnpinHiddenScale,\n  } = useMemo(\n    () => calculateMiddleFooterTransforms(windowWidth, renderingCanPost),\n    [renderingCanPost, windowWidth],\n  );\n\n  const footerClassName = buildClassName(\n    'middle-column-footer',\n    !renderingCanPost && 'no-composer',\n    renderingCanPost && isNotchShown && !isSelectModeActive && 'with-notch',\n  );\n\n  useHistoryBack({\n    isActive: isSelectModeActive,\n    onBack: exitMessageSelectMode,\n  });\n\n  // Prepare filter beforehand to avoid flickering\n  useFluidBackgroundFilter(patternColor);\n\n  const isMessagingDisabled = Boolean(\n    !isPinnedMessageList && !isSavedDialog && !renderingCanPost && !renderingCanRestartBot && !renderingCanStartBot\n    && !renderingCanSubscribe && composerRestrictionMessage,\n  ) || (isAccountFrozen && freezeAppealChat?.id !== chatId);\n  const withMessageListBottomShift = Boolean(\n    renderingCanRestartBot || renderingCanSubscribe || renderingShouldSendJoinRequest || renderingCanStartBot\n    || (isPinnedMessageList && canUnpin) || canShowOpenChatButton || renderingCanUnblock,\n  );\n  const withExtraShift = Boolean(isMessagingDisabled || isSelectModeActive);\n\n  return (\n    <div\n      id=\"MiddleColumn\"\n      className={className}\n      onTransitionEnd={handleCssTransitionEnd}\n      style={buildStyle(\n        `--composer-hidden-scale: ${composerHiddenScale}`,\n        `--toolbar-hidden-scale: ${toolbarHiddenScale}`,\n        `--unpin-hidden-scale: ${unpinHiddenScale}`,\n        `--toolbar-unpin-hidden-scale: ${toolbarForUnpinHiddenScale},`,\n        `--composer-translate-x: ${composerTranslateX}px`,\n        `--toolbar-translate-x: ${toolbarTranslateX}px`,\n        `--pattern-color: ${patternColor}`,\n        backgroundColor && `--theme-background-color: ${backgroundColor}`,\n      )}\n      onClick={(isTablet && isLeftColumnShown) ? handleTabletFocus : undefined}\n    >\n      {isDesktop && (\n        <div\n          className=\"resize-handle\"\n          onMouseDown={initResize}\n          onMouseUp={handleMouseUp}\n          onDoubleClick={resetResize}\n        />\n      )}\n      <div\n        className={bgClassName}\n        style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n      />\n      <div id=\"middle-column-portals\" />\n      {Boolean(renderingChatId && renderingThreadId) && (\n        <>\n          <div className=\"messages-layout\" onDragEnter={renderingCanPost ? handleDragEnter : undefined}>\n            <MiddleHeaderPanes\n              key={renderingChatId}\n              chatId={renderingChatId!}\n              threadId={renderingThreadId!}\n              messageListType={renderingMessageListType!}\n              getCurrentPinnedIndex={getCurrentPinnedIndex}\n              getLoadingPinnedId={getLoadingPinnedId}\n              onFocusPinnedMessage={handleFocusPinnedMessage}\n            />\n            <MiddleHeader\n              chatId={renderingChatId!}\n              threadId={renderingThreadId!}\n              messageListType={renderingMessageListType!}\n              isComments={isComments}\n              isMobile={isMobile}\n              getCurrentPinnedIndex={getCurrentPinnedIndex}\n              getLoadingPinnedId={getLoadingPinnedId}\n              onFocusPinnedMessage={handleFocusPinnedMessage}\n            />\n            <Transition\n              name={shouldSkipHistoryAnimations ? 'none' : withInterfaceAnimations ? 'slide' : 'fade'}\n              activeKey={currentTransitionKey}\n              shouldCleanup\n              cleanupExceptionKey={cleanupExceptionKey}\n              isBlockingAnimation\n              onStop={handleSlideTransitionStop}\n            >\n              <MessageList\n                key={`${renderingChatId}-${renderingThreadId}-${renderingMessageListType}`}\n                chatId={renderingChatId!}\n                threadId={renderingThreadId!}\n                type={renderingMessageListType!}\n                isComments={isComments}\n                canPost={renderingCanPost!}\n                onScrollDownToggle={setIsScrollDownShown}\n                onNotchToggle={setIsNotchShown}\n                isReady={isReady}\n                isContactRequirePremium={isContactRequirePremium}\n                paidMessagesStars={paidMessagesStars}\n                withBottomShift={withMessageListBottomShift}\n                withDefaultBg={Boolean(!customBackground && !backgroundColor)}\n                onIntersectPinnedMessage={renderingHandleIntersectPinnedMessage!}\n              />\n              <div className={footerClassName}>\n                {renderingCanPost && (\n                  <Composer\n                    type=\"messageList\"\n                    chatId={renderingChatId!}\n                    threadId={renderingThreadId!}\n                    messageListType={renderingMessageListType!}\n                    dropAreaState={dropAreaState}\n                    onDropHide={handleHideDropArea}\n                    isReady={isReady}\n                    isMobile={isMobile}\n                    editableInputId={EDITABLE_INPUT_ID}\n                    editableInputCssSelector={EDITABLE_INPUT_CSS_SELECTOR}\n                    inputId=\"message-input-text\"\n                  />\n                )}\n                {isPinnedMessageList && canUnpin && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      color=\"secondary\"\n                      className=\"composer-button unpin-all-button\"\n                      onClick={handleOpenUnpinModal}\n                    >\n                      <Icon name=\"unpin\" />\n                      <span>{oldLang('Chat.Pinned.UnpinAll', pinnedMessagesCount, 'i')}</span>\n                    </Button>\n                  </div>\n                )}\n                {canShowOpenChatButton && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      color=\"secondary\"\n                      className=\"composer-button open-chat-button\"\n                      onClick={handleOpenChatFromSaved}\n                    >\n                      <span>{oldLang('SavedOpenChat')}</span>\n                    </Button>\n                  </div>\n                )}\n                {isMessagingDisabled && (\n                  <div className={messagingDisabledClassName}>\n                    <div className=\"messaging-disabled-inner\">\n                      <span>\n                        {composerRestrictionMessage}\n                      </span>\n                    </div>\n                  </div>\n                )}\n                {(\n                  isMobile && (renderingCanSubscribe || (renderingShouldJoinToSend && !renderingShouldSendJoinRequest))\n                ) && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      ripple\n                      className=\"composer-button join-subscribe-button\"\n                      onClick={handleSubscribeClick}\n                    >\n                      {oldLang(renderingIsChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n                    </Button>\n                  </div>\n                )}\n                {isMobile && renderingShouldSendJoinRequest && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      ripple\n                      className=\"composer-button join-subscribe-button\"\n                      onClick={handleSubscribeClick}\n                    >\n                      {oldLang('ChannelJoinRequest')}\n                    </Button>\n                  </div>\n                )}\n                {isMobile && renderingCanStartBot && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      ripple\n                      className=\"composer-button join-subscribe-button\"\n                      onClick={handleStartBot}\n                    >\n                      {oldLang('BotStart')}\n                    </Button>\n                  </div>\n                )}\n                {isMobile && renderingCanRestartBot && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      ripple\n                      className=\"composer-button join-subscribe-button\"\n                      onClick={handleRestartBot}\n                    >\n                      {oldLang('BotRestart')}\n                    </Button>\n                  </div>\n                )}\n                {isMobile && renderingCanUnblock && (\n                  <div className=\"middle-column-footer-button-container\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                    <Button\n                      size=\"tiny\"\n                      fluid\n                      ripple\n                      className=\"composer-button join-subscribe-button\"\n                      onClick={handleUnblock}\n                    >\n                      {oldLang('Unblock')}\n                    </Button>\n                  </div>\n                )}\n                <MessageSelectToolbar\n                  messageListType={renderingMessageListType}\n                  isActive={isSelectModeActive}\n                  canPost={renderingCanPost}\n                />\n                <SeenByModal isOpen={isSeenByModalOpen} />\n                <PrivacySettingsNoticeModal isOpen={isPrivacySettingsNoticeModalOpen} />\n                <ReactorListModal isOpen={isReactorListModalOpen} />\n                {IS_TRANSLATION_SUPPORTED && <ChatLanguageModal isOpen={isChatLanguageModalOpen} />}\n              </div>\n            </Transition>\n\n            <FloatingActionButtons\n              withScrollDown={renderingIsScrollDownShown}\n              canPost={renderingCanPost}\n              withExtraShift={withExtraShift}\n            />\n          </div>\n          <MiddleSearch isActive={Boolean(hasActiveMiddleSearch)} />\n        </>\n      )}\n      {chatId && (\n        <UnpinAllMessagesModal\n          isOpen={isUnpinModalOpen}\n          chatId={chatId}\n          pinnedMessagesCount={pinnedMessagesCount}\n          onClose={closeUnpinModal}\n          onUnpin={handleUnpinAllMessages}\n        />\n      )}\n      <div teactFastList>\n        {activeEmojiInteractions?.map((activeEmojiInteraction, i) => (\n          <EmojiInteractionAnimation\n            teactOrderKey={i}\n            key={activeEmojiInteraction.id}\n            activeEmojiInteraction={activeEmojiInteraction}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isMobile }): StateProps => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred, background: customBackground, backgroundColor, patternColor,\n    } = selectThemeValues(global, theme) || {};\n\n    const {\n      messageLists, isLeftColumnShown, activeEmojiInteractions,\n      seenByModal, reactorModal, shouldSkipHistoryAnimations,\n      chatLanguageModal, privacySettingsNoticeModal,\n    } = selectTabState(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { leftColumnWidth } = global;\n\n    const state: StateProps = {\n      theme,\n      customBackground,\n      backgroundColor,\n      patternColor,\n      isLeftColumnShown,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isBackgroundBlurred,\n      hasActiveMiddleSearch: Boolean(selectCurrentMiddleSearch(global)),\n      isSelectModeActive: selectIsInSelectMode(global),\n      isSeenByModalOpen: Boolean(seenByModal),\n      isPrivacySettingsNoticeModalOpen: Boolean(privacySettingsNoticeModal),\n      isReactorListModalOpen: Boolean(reactorModal),\n      isChatLanguageModalOpen: Boolean(chatLanguageModal),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      currentTransitionKey: Math.max(0, messageLists.length - 1),\n      activeEmojiInteractions,\n      leftColumnWidth,\n    };\n\n    if (!currentMessageList) {\n      return state;\n    }\n\n    const { chatId, threadId, type: messageListType } = currentMessageList;\n    const isPrivate = isUserId(chatId);\n    const chat = selectChat(global, chatId);\n    const bot = selectBot(global, chatId);\n    const pinnedIds = selectPinnedIds(global, chatId, threadId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = chatId ? selectUserFullInfo(global, chatId) : undefined;\n\n    const editingId = selectEditingId(global, chatId, threadId);\n\n    const threadInfo = selectThreadInfo(global, chatId, threadId);\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = selectTopic(global, chatId, threadId);\n    const canPost = chat && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n    const isBotNotStarted = selectIsChatBotNotStarted(global, chatId);\n    const isPinnedMessageList = messageListType === 'pinned';\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const canSubscribe = Boolean(\n      chat && isMainThread && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined && !chat.joinRequests\n      && !chat.isMonoforum,\n    );\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && isBotNotStarted;\n    const canUnblock = isUserBlocked && !bot;\n    const shouldLoadFullChat = Boolean(\n      chat && isChatGroup(chat) && !chatFullInfo,\n    );\n    const draftReplyInfo = selectDraft(global, chatId, threadId)?.replyInfo;\n    const shouldBlockSendInForum = chat?.isForum\n      ? threadId === MAIN_THREAD_ID && !draftReplyInfo && (selectTopic(global, chatId, GENERAL_TOPIC_ID)?.isClosed)\n      : false;\n    const isMonoforumAdmin = selectIsMonoforumAdmin(global, chatId);\n    const shouldBlockSendInMonoforum = Boolean(chat?.isMonoforum && !draftReplyInfo && isMonoforumAdmin && !editingId);\n    const topics = selectTopics(global, chatId);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const canShowOpenChatButton = isSavedDialog && threadId !== ANONYMOUS_USER_ID;\n\n    const canUnpin = chat && (\n      isPrivate || (\n        chat?.isCreator || (!isChannel && !isUserRightBanned(chat, 'pinMessages'))\n        || getHasAdminRight(chat, 'pinMessages')\n      )\n    );\n\n    const userFull = selectUserFullInfo(global, chatId);\n\n    const isContactRequirePremium = userFull?.isContactRequirePremium;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const botFreezeAppealId = global.botFreezeAppealId;\n    const freezeAppealChat = botFreezeAppealId\n      ? selectChat(global, botFreezeAppealId) : undefined;\n\n    return {\n      ...state,\n      chatId,\n      threadId,\n      messageListType,\n      chat,\n      draftReplyInfo,\n      isPrivate,\n      arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n      isComments: isMessageThread,\n      canPost:\n        !isPinnedMessageList\n        && (!chat || canPost)\n        && !isBotNotStarted\n        && !(shouldJoinToSend && chat?.isNotJoined)\n        && !shouldBlockSendInForum\n        && !shouldBlockSendInMonoforum\n        && !isSavedDialog\n        && (!isAccountFrozen || freezeAppealChat?.id === chatId),\n      isPinnedMessageList,\n      currentUserBannedRights: chat?.currentUserBannedRights,\n      defaultBannedRights: chat?.defaultBannedRights,\n      pinnedMessagesCount: pinnedIds ? pinnedIds.length : 0,\n      shouldSkipHistoryAnimations,\n      isChannel,\n      canSubscribe,\n      canStartBot,\n      canRestartBot,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      shouldLoadFullChat,\n      pinnedIds,\n      canUnpin,\n      canUnblock,\n      isSavedDialog,\n      canShowOpenChatButton,\n      isContactRequirePremium,\n      topics,\n      paidMessagesStars,\n      isAccountFrozen,\n      freezeAppealChat,\n      shouldBlockSendInMonoforum,\n    };\n  },\n)(MiddleColumn));\n\nfunction useIsReady(\n  withAnimations?: boolean,\n  currentTransitionKey?: number,\n  prevTransitionKey?: number,\n  chatId?: string,\n  isMobile?: boolean,\n) {\n  const [isReady, setIsReady] = useState(!isMobile);\n  const forceUpdate = useForceUpdate();\n\n  const willSwitchMessageList = prevTransitionKey !== undefined && prevTransitionKey !== currentTransitionKey;\n  if (willSwitchMessageList) {\n    if (withAnimations) {\n      setIsReady(false);\n\n      // Make sure to end even if end callback was not called (which was some hardly-reproducible bug)\n      setTimeout(() => {\n        setIsReady(true);\n      }, LAYER_ANIMATION_DURATION_MS);\n    } else {\n      forceUpdate();\n    }\n  }\n\n  useSyncEffect(() => {\n    if (!withAnimations) {\n      setIsReady(true);\n    }\n  }, [withAnimations]);\n\n  function handleCssTransitionEnd(e: React.TransitionEvent<HTMLDivElement>) {\n    if (e.propertyName === 'transform' && e.target === e.currentTarget) {\n      setIsReady(Boolean(chatId));\n    }\n  }\n\n  function handleSlideTransitionStop() {\n    setIsReady(true);\n  }\n\n  return {\n    isReady: isReady && !willSwitchMessageList,\n    handleCssTransitionEnd: withAnimations ? handleCssTransitionEnd : undefined,\n    handleSlideTransitionStop: withAnimations ? handleSlideTransitionStop : undefined,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { type MessageListType, StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  EDITABLE_INPUT_CSS_SELECTOR,\n  MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN,\n} from '../../config';\nimport {\n  getIsSavedDialog,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectPeer,\n  selectPinnedIds,\n  selectScheduledIds,\n  selectTabState,\n  selectThreadInfo,\n  selectThreadParam,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useConnectionStatus from '../../hooks/useConnectionStatus';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport UnreadCounter from '../common/UnreadCounter';\nimport Button from '../ui/Button';\nimport Transition from '../ui/Transition';\nimport HeaderActions from './HeaderActions';\nimport AudioPlayer from './panes/AudioPlayer';\nimport HeaderPinnedMessage from './panes/HeaderPinnedMessage';\n\nimport './MiddleHeader.scss';\n\nconst BACK_BUTTON_INACTIVE_TIME = 450;\nconst EMOJI_STATUS_SIZE = 22;\nconst SEARCH_LONGTAP_THRESHOLD = 500;\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  isComments?: boolean;\n  isMobile?: boolean;\n  getCurrentPinnedIndex: Signal<number>;\n  getLoadingPinnedId: Signal<number | undefined>;\n  onFocusPinnedMessage: (messageId: number) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSavedDialog?: boolean;\n  typingStatus?: ApiTypingStatus;\n  isSelectModeActive?: boolean;\n  isLeftColumnShown?: boolean;\n  isRightColumnShown?: boolean;\n  audioMessage?: ApiMessage;\n  messagesCount?: number;\n  isChatWithSelf?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  currentTransitionKey: number;\n  connectionState?: GlobalState['connectionState'];\n  isSyncing?: boolean;\n  isFetchingDifference?: boolean;\n  emojiStatusSticker?: ApiSticker;\n  emojiStatusSlug?: string;\n};\n\nconst MiddleHeader: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  messageListType,\n  isMobile,\n  typingStatus,\n  isSelectModeActive,\n  isLeftColumnShown,\n  audioMessage,\n  chat,\n  messagesCount,\n  isComments,\n  isChatWithSelf,\n  shouldSkipHistoryAnimations,\n  currentTransitionKey,\n  connectionState,\n  isSyncing,\n  isFetchingDifference,\n  getCurrentPinnedIndex,\n  getLoadingPinnedId,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  isSavedDialog,\n  onFocusPinnedMessage,\n}) => {\n  const {\n    openThreadWithInfo,\n    openChat,\n    openPreviousChat,\n    toggleLeftColumn,\n    exitMessageSelectMode,\n    openPremiumModal,\n    openStickerSet,\n    updateMiddleSearch,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n  const isBackButtonActive = useRef(true);\n  const { isTablet } = useAppLayout();\n\n  const { width: windowWidth } = useWindowSize();\n\n  const { isDesktop } = useAppLayout();\n\n  const isLeftColumnHideable = windowWidth <= MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN;\n  const shouldShowCloseButton = isTablet && isLeftColumnShown;\n\n  const componentRef = useRef<HTMLDivElement>();\n\n  const handleOpenSearch = useLastCallback(() => {\n    updateMiddleSearch({ chatId, threadId, update: {} });\n  });\n\n  const handleOpenChat = useLastCallback((event: React.MouseEvent | React.TouchEvent) => {\n    if ((event.target as Element).closest('.title > .custom-emoji')) return;\n\n    openThreadWithInfo({ chatId, threadId });\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleOpenSearch,\n    onClick: handleOpenChat,\n    threshold: SEARCH_LONGTAP_THRESHOLD,\n  });\n\n  const setBackButtonActive = useLastCallback(() => {\n    setTimeout(() => {\n      isBackButtonActive.current = true;\n    }, BACK_BUTTON_INACTIVE_TIME);\n  });\n\n  const handleUserStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    openPremiumModal({ fromUserId: chatId });\n  });\n\n  const handleChannelStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    openStickerSet({\n      stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n    });\n  });\n\n  const handleBackClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (!isBackButtonActive.current) return;\n\n    // Workaround for missing UI when quickly clicking the Back button\n    isBackButtonActive.current = false;\n    if (isMobile) {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      messageInput?.blur();\n    }\n\n    if (isSelectModeActive) {\n      exitMessageSelectMode();\n      setBackButtonActive();\n      return;\n    }\n\n    if (messageListType === 'thread' && currentTransitionKey === 0) {\n      if (!isTablet || shouldShowCloseButton) {\n        e.stopPropagation(); // Stop propagation to prevent chat re-opening on tablets\n        openChat({ id: undefined }, { forceOnHeavyAnimation: true });\n      } else {\n        toggleLeftColumn();\n      }\n\n      setBackButtonActive();\n\n      return;\n    }\n\n    openPreviousChat();\n    setBackButtonActive();\n  });\n\n  const prevTransitionKey = usePreviousDeprecated(currentTransitionKey);\n  const cleanupExceptionKey = (\n    prevTransitionKey !== undefined && prevTransitionKey < currentTransitionKey ? prevTransitionKey : undefined\n  );\n\n  const isAudioPlayerActive = Boolean(audioMessage);\n  const isAudioPlayerRendering = isDesktop && isAudioPlayerActive;\n  const isPinnedMessagesFullWidth = isAudioPlayerActive || !isDesktop;\n\n  const { connectionStatusText } = useConnectionStatus(lang, connectionState, isSyncing || isFetchingDifference, true);\n\n  function renderInfo() {\n    if (messageListType === 'thread') {\n      if (threadId === MAIN_THREAD_ID || isSavedDialog || chat?.isForum) {\n        return renderChatInfo();\n      }\n    }\n\n    return (\n      <>\n        {renderBackButton()}\n        <h3>\n          {messagesCount !== undefined ? (\n            messageListType === 'thread' ? (\n              (messagesCount\n                ? lang(isComments ? 'Comments' : 'Replies', messagesCount, 'i')\n                : lang(isComments ? 'CommentsTitle' : 'RepliesTitle')))\n              : messageListType === 'pinned' ? (lang('PinnedMessagesCount', messagesCount, 'i'))\n                : messageListType === 'scheduled' ? (\n                  isChatWithSelf ? lang('Reminders') : lang('messages', messagesCount, 'i')\n                ) : undefined\n          ) : lang('Loading')}\n        </h3>\n      </>\n    );\n  }\n\n  function renderChatInfo() {\n    // TODO Implement count\n    const savedMessagesStatus = isSavedDialog ? lang('SavedMessages') : undefined;\n\n    const realChatId = isSavedDialog ? String(threadId) : chatId;\n\n    const displayChatId = chat?.isMonoforum ? chat.linkedMonoforumId! : realChatId;\n    return (\n      <>\n        {(isLeftColumnHideable || currentTransitionKey > 0) && renderBackButton(shouldShowCloseButton, !isSavedDialog)}\n        <div\n          className=\"chat-info-wrapper\"\n          onMouseDown={handleLongPressMouseDown}\n          onMouseUp={handleLongPressMouseUp}\n          onMouseLeave={handleLongPressMouseLeave}\n          onTouchStart={handleLongPressTouchStart}\n          onTouchEnd={handleLongPressTouchEnd}\n        >\n          {isUserId(displayChatId) ? (\n            <PrivateChatInfo\n              key={displayChatId}\n              userId={displayChatId}\n              typingStatus={typingStatus}\n              status={connectionStatusText || savedMessagesStatus}\n              withDots={Boolean(connectionStatusText)}\n              withFullInfo\n              withMediaViewer\n              withStory={!isChatWithSelf}\n              withUpdatingStatus\n              isSavedDialog={isSavedDialog}\n              storyViewerOrigin={StoryViewerOrigin.MiddleHeaderAvatar}\n              emojiStatusSize={EMOJI_STATUS_SIZE}\n              noRtl\n              onEmojiStatusClick={handleUserStatusClick}\n            />\n          ) : (\n            <GroupChatInfo\n              key={displayChatId}\n              chatId={displayChatId}\n              threadId={!isSavedDialog ? threadId : undefined}\n              typingStatus={typingStatus}\n              withMonoforumStatus={chat?.isMonoforum}\n              status={connectionStatusText || savedMessagesStatus}\n              withDots={Boolean(connectionStatusText)}\n              withMediaViewer={threadId === MAIN_THREAD_ID}\n              withFullInfo={threadId === MAIN_THREAD_ID}\n              withUpdatingStatus\n              withStory\n              isSavedDialog={isSavedDialog}\n              storyViewerOrigin={StoryViewerOrigin.MiddleHeaderAvatar}\n              emojiStatusSize={EMOJI_STATUS_SIZE}\n              onEmojiStatusClick={handleChannelStatusClick}\n              noRtl\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n\n  function renderBackButton(asClose = false, withUnreadCounter = false) {\n    return (\n      <div className=\"back-button\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleBackClick}\n          ariaLabel={lang(asClose ? 'Close' : 'Back')}\n        >\n          <div className={buildClassName('animated-close-icon', !asClose && 'state-back')} />\n        </Button>\n        {withUnreadCounter && <UnreadCounter />}\n      </div>\n    );\n  }\n\n  useElectronDrag(componentRef);\n\n  return (\n    <div className=\"MiddleHeader\" ref={componentRef}>\n      <Transition\n        name={shouldSkipHistoryAnimations ? 'none' : 'slideFade'}\n        activeKey={currentTransitionKey}\n        shouldCleanup\n        cleanupExceptionKey={cleanupExceptionKey}\n      >\n        {renderInfo()}\n      </Transition>\n      {!isPinnedMessagesFullWidth && (\n        <HeaderPinnedMessage\n          key={chatId}\n          chatId={chatId}\n          threadId={threadId}\n          messageListType={messageListType}\n          onFocusPinnedMessage={onFocusPinnedMessage}\n          getLoadingPinnedId={getLoadingPinnedId}\n          getCurrentPinnedIndex={getCurrentPinnedIndex}\n        />\n      )}\n\n      <div className=\"header-tools\">\n        {isAudioPlayerRendering && (\n          <AudioPlayer />\n        )}\n        <HeaderActions\n          chatId={chatId}\n          threadId={threadId}\n          messageListType={messageListType}\n          isMobile={isMobile}\n          canExpandActions={!isAudioPlayerRendering}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const {\n      isLeftColumnShown, shouldSkipHistoryAnimations, audioPlayer, messageLists,\n    } = selectTabState(global);\n    const chat = selectChat(global, chatId);\n    const peer = selectPeer(global, chatId);\n\n    const { chatId: audioChatId, messageId: audioMessageId } = audioPlayer;\n    const audioMessage = audioChatId && audioMessageId\n      ? selectChatMessage(global, audioChatId, audioMessageId)\n      : undefined;\n\n    let messagesCount: number | undefined;\n    if (messageListType === 'pinned') {\n      const pinnedIds = selectPinnedIds(global, chatId, threadId);\n      messagesCount = pinnedIds?.length;\n    } else if (messageListType === 'scheduled') {\n      const scheduledIds = selectScheduledIds(global, chatId, threadId);\n      messagesCount = scheduledIds?.length;\n    } else if (messageListType === 'thread' && threadId !== MAIN_THREAD_ID) {\n      const threadInfo = selectThreadInfo(global, chatId, threadId);\n      messagesCount = threadInfo?.messagesCount || 0;\n    }\n\n    const typingStatus = selectThreadParam(global, chatId, threadId, 'typingStatus');\n\n    const emojiStatus = peer?.emojiStatus;\n    const emojiStatusSticker = emojiStatus && global.customEmojis.byId[emojiStatus.documentId];\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    return {\n      typingStatus,\n      isLeftColumnShown,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      audioMessage,\n      chat,\n      messagesCount,\n      isChatWithSelf: selectIsChatWithSelf(global, chatId),\n      shouldSkipHistoryAnimations,\n      currentTransitionKey: Math.max(0, messageLists.length - 1),\n      connectionState: global.connectionState,\n      isSyncing: global.isSyncing,\n      isFetchingDifference: global.isFetchingDifference,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      isSavedDialog,\n    };\n  },\n)(MiddleHeader));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oCUr3DTX\"};","import {\n  memo, useRef, useSignal,\n} from '../../lib/teact/teact';\nimport { setExtraStyles } from '../../lib/teact/teact-dom';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUserFullInfo } from '../../api/types';\nimport type { MessageListType, ThreadId } from '../../types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectCurrentMiddleSearch, selectTabState, selectUserFullInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useEffectOnce from '../../hooks/useEffectOnce';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport { applyAnimationState, type PaneState } from './hooks/useHeaderPane';\n\nimport GroupCallTopPane from '../calls/group/GroupCallTopPane';\nimport AudioPlayer from './panes/AudioPlayer';\nimport BotAdPane from './panes/BotAdPane';\nimport BotVerificationPane from './panes/BotVerificationPane';\nimport ChatReportPane from './panes/ChatReportPane';\nimport HeaderPinnedMessage from './panes/HeaderPinnedMessage';\nimport PaidMessageChargePane from './panes/PaidMessageChargePane';\n\nimport styles from './MiddleHeaderPanes.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  getCurrentPinnedIndex: Signal<number>;\n  getLoadingPinnedId: Signal<number | undefined>;\n  onFocusPinnedMessage: (messageId: number) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  isAudioPlayerRendered?: boolean;\n  isMiddleSearchOpen?: boolean;\n};\n\nconst FALLBACK_PANE_STATE = { height: 0 };\n\nconst MiddleHeaderPanes = ({\n  className,\n  chatId,\n  threadId,\n  messageListType,\n  chat,\n  userFullInfo,\n  getCurrentPinnedIndex,\n  getLoadingPinnedId,\n  isAudioPlayerRendered,\n  isMiddleSearchOpen,\n  onFocusPinnedMessage,\n}: OwnProps & StateProps) => {\n  const { settings } = userFullInfo || {};\n\n  const { isDesktop } = useAppLayout();\n  const [getAudioPlayerState, setAudioPlayerState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n  const [getPinnedState, setPinnedState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n  const [getGroupCallState, setGroupCallState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n  const [getChatReportState, setChatReportState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n  const [getBotAdState, setBotAdState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n  const [getBotVerificationState, setBotVerificationState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n  const [getPaidMessageChargeState, setPaidMessageChargeState] = useSignal<PaneState>(FALLBACK_PANE_STATE);\n\n  const isPinnedMessagesFullWidth = isAudioPlayerRendered || !isDesktop;\n\n  const isFirstRenderRef = useRef(true);\n  const {\n    shouldRender,\n    ref,\n  } = useShowTransition({\n    isOpen: !isMiddleSearchOpen,\n    withShouldRender: true,\n    noMountTransition: true,\n  });\n\n  useEffectOnce(() => {\n    isFirstRenderRef.current = false;\n  });\n\n  useSignalEffect(() => {\n    const audioPlayerState = getAudioPlayerState();\n    const botVerificationState = getBotVerificationState();\n    const pinnedState = getPinnedState();\n    const groupCallState = getGroupCallState();\n    const chatReportState = getChatReportState();\n    const botAdState = getBotAdState();\n    const paidMessageState = getPaidMessageChargeState();\n\n    // Keep in sync with the order of the panes in the DOM\n    const stateArray = [audioPlayerState, groupCallState,\n      chatReportState, botVerificationState, pinnedState, botAdState, paidMessageState];\n\n    const isFirstRender = isFirstRenderRef.current;\n    const totalHeight = stateArray.reduce((acc, state) => acc + state.height, 0);\n\n    const middleColumn = document.getElementById('MiddleColumn');\n    if (!middleColumn) return;\n\n    applyAnimationState(stateArray, isFirstRender);\n\n    setExtraStyles(middleColumn, {\n      '--middle-header-panes-height': `${totalHeight}px`,\n    });\n  }, [getAudioPlayerState, getGroupCallState, getPinnedState,\n    getChatReportState, getBotAdState, getBotVerificationState, getPaidMessageChargeState]);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div ref={ref} className={buildClassName(styles.root, className)}>\n      <AudioPlayer\n        isFullWidth\n        onPaneStateChange={setAudioPlayerState}\n        isHidden={isDesktop}\n      />\n      {threadId === MAIN_THREAD_ID && !chat?.isForum && (\n        <GroupCallTopPane\n          chatId={chatId}\n          onPaneStateChange={setGroupCallState}\n        />\n      )}\n      <ChatReportPane\n        chatId={chatId}\n        canAddContact={settings?.canAddContact}\n        canBlockContact={settings?.canBlockContact}\n        canReportSpam={settings?.canReportSpam}\n        isAutoArchived={settings?.isAutoArchived}\n        onPaneStateChange={setChatReportState}\n      />\n      <BotVerificationPane\n        peerId={chatId}\n        onPaneStateChange={setBotVerificationState}\n      />\n      <PaidMessageChargePane\n        peerId={chatId}\n        onPaneStateChange={setPaidMessageChargeState}\n      />\n      <HeaderPinnedMessage\n        chatId={chatId}\n        threadId={threadId}\n        messageListType={messageListType}\n        onFocusPinnedMessage={onFocusPinnedMessage}\n        getLoadingPinnedId={getLoadingPinnedId}\n        getCurrentPinnedIndex={getCurrentPinnedIndex}\n        onPaneStateChange={setPinnedState}\n        isFullWidth\n        shouldHide={!isPinnedMessagesFullWidth}\n      />\n      <BotAdPane\n        chatId={chatId}\n        messageListType={messageListType}\n        onPaneStateChange={setBotAdState}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId,\n  }): StateProps => {\n    const { audioPlayer } = selectTabState(global);\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n\n    const { chatId: audioChatId, messageId: audioMessageId } = audioPlayer;\n    const audioMessage = audioChatId && audioMessageId\n      ? selectChatMessage(global, audioChatId, audioMessageId)\n      : undefined;\n\n    const isMiddleSearchOpen = Boolean(selectCurrentMiddleSearch(global));\n\n    return {\n      chat,\n      userFullInfo,\n      isAudioPlayerRendered: Boolean(audioMessage),\n      isMiddleSearchOpen,\n    };\n  },\n)(MiddleHeaderPanes));\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { MessageListType } from '../../types';\n\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\n\nimport './NoMessages.scss';\n\nconst ICON_SIZE = 3 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  isChatWithSelf?: boolean;\n  type: MessageListType;\n  isGroupChatJustCreated?: boolean;\n  topic?: ApiTopic;\n};\n\nconst NoMessages: FC<OwnProps> = ({\n  isChatWithSelf,\n  type,\n  isGroupChatJustCreated,\n  topic,\n}) => {\n  const lang = useOldLang();\n\n  if (type === 'scheduled') {\n    return renderScheduled(lang);\n  }\n\n  if (isChatWithSelf) {\n    return renderSavedMessages(lang);\n  }\n\n  if (isGroupChatJustCreated) {\n    return renderGroup(lang);\n  }\n\n  if (topic) {\n    return renderTopic(lang, topic);\n  }\n\n  return (\n    <div className=\"empty\"><span>{lang('NoMessages')}</span></div>\n  );\n};\n\nfunction renderTopic(lang: OldLangFn, topic: ApiTopic) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\">\n        <TopicIcon\n          topic={topic}\n          size={ICON_SIZE}\n          className=\"no-messages-icon topic-icon\"\n        />\n        <h3 className=\"title\">{lang('Chat.EmptyTopicPlaceholder.Title')}</h3>\n        <p className=\"description topic-description\">{renderText(lang('Chat.EmptyTopicPlaceholder.Text'), ['br'])}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction renderScheduled(lang: OldLangFn) {\n  return (\n    <div className=\"empty\"><span>{lang('ScheduledMessages.EmptyPlaceholder')}</span></div>\n  );\n}\n\nfunction renderSavedMessages(lang: OldLangFn) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\">\n        <Icon name=\"cloud-download\" className=\"no-messages-icon\" />\n        <h3 className=\"title\">{lang('Conversation.CloudStorageInfo.Title')}</h3>\n        <ul className=\"description\">\n          <li>{lang('Conversation.ClousStorageInfo.Description1')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description2')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description3')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description4')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nfunction renderGroup(lang: OldLangFn) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <h3 className=\"title\">{lang('EmptyGroupInfo.Title')}</h3>\n        <p className=\"description\">{lang('EmptyGroupInfo.Subtitle')}</p>\n        <ul className=\"list-checkmarks\">\n          <li>{lang('EmptyGroupInfo.Line1')}</li>\n          <li>{lang('EmptyGroupInfo.Line2')}</li>\n          <li>{lang('EmptyGroupInfo.Line3')}</li>\n          <li>{lang('EmptyGroupInfo.Line4')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(NoMessages);\n","// extracted by mini-css-extract-plugin\nexport default {\"pinned-message-border\":\"L5TQCriM\",\"pinnedMessageBorder\":\"L5TQCriM\",\"pinned-message-border-wrapper-1\":\"v5sJGzfS\",\"pinnedMessageBorderWrapper1\":\"v5sJGzfS\",\"pinned-message-border-wrapper\":\"p6PQhvds\",\"pinnedMessageBorderWrapper\":\"p6PQhvds\",\"pinned-message-border-mark\":\"M2PQZgBd\",\"pinnedMessageBorderMark\":\"M2PQZgBd\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './PinnedMessageNavigation.module.scss';\n\ntype OwnProps = {\n  count: number;\n  index: number;\n};\n\nconst BORDER_MASK_LEVEL = 4;\n\nconst PinnedMessageNavigation: FC<OwnProps> = ({\n  count, index,\n}) => {\n  const containerRef = useRef<HTMLDivElement>();\n\n  const markupParams = useMemo(() => {\n    return calculateMarkup(count, index);\n  }, [count, index]);\n\n  useLayoutEffect(() => {\n    if (!containerRef.current) {\n      return;\n    }\n\n    const {\n      trackHeight,\n      trackTranslateY,\n      markHeight,\n      markTranslateY,\n      clipPathId,\n      clipPath,\n    } = markupParams;\n\n    const firstChild = containerRef.current.firstElementChild;\n    if (containerRef?.current) {\n      const currentElement = containerRef.current;\n      const { style } = currentElement;\n      style.height = `${trackHeight}px`;\n      style.transform = `translateY(-${trackTranslateY}px)`;\n      style.clipPath = `url(\"#${clipPathId}\")`;\n      const svg = currentElement.querySelector('svg');\n      const div = currentElement.querySelector('div');\n      const defs = currentElement.querySelector('defs');\n      if (!svg) {\n        if (firstChild) {\n          firstChild.innerHTML = `<svg height=\"0\" width=\"0\"><defs> ${clipPath} </defs></svg>`;\n        }\n      }\n      if (defs) {\n        defs.innerHTML = clipPath;\n      }\n      if (div) {\n        div.style.height = `${markHeight}px`;\n        div.style.transform = `translateY(${markTranslateY}px)`;\n      }\n    }\n  }, [markupParams]);\n\n  if (count === 1) {\n    return (\n      <div className={styles.pinnedMessageBorder}>\n        <div\n          className={styles.pinnedMessageBorderWrapper1}\n          ref={containerRef}\n        />\n      </div>\n    );\n  }\n\n  const {\n    trackHeight, trackTranslateY, markHeight, markTranslateY, clipPathId,\n  } = markupParams;\n\n  return (\n    <div className={buildClassName(\n      styles.pinnedMessageBorder,\n      count > BORDER_MASK_LEVEL && styles.pinnedMessageBorderMask,\n    )}\n    >\n      <div\n        className={styles.pinnedMessageBorderWrapper}\n        ref={containerRef}\n        style={\n          `clip-path: url(\"#${clipPathId}\"); width: 2px;\n          height: ${trackHeight}px; transform: translateY(-${trackTranslateY}px);`\n        }\n      >\n        <span />\n        <div\n          className={styles.pinnedMessageBorderMark}\n          style={`--height: ${markHeight}px; --translate-y: ${markTranslateY}px; `\n            + `--translate-track: ${trackTranslateY}px;`}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction calculateMarkup(count: number, index: number) {\n  const reverseIndex = count - index - 1;\n  const barHeight = getBarHeight(count);\n  const markHeight = getMarkHeight(count, reverseIndex);\n  const trackHeight = getTrackHeight(count, barHeight);\n\n  const clipPathId = `clipPath${count}`;\n  const clipPath = getClipPath(clipPathId, barHeight, count);\n\n  const markTranslateY = getMarkTranslateY(reverseIndex, barHeight, count);\n  const trackTranslateY = getTrackTranslateY(reverseIndex, count, barHeight, trackHeight);\n  return {\n    markHeight,\n    clipPath,\n    markTranslateY,\n    trackTranslateY,\n    trackHeight,\n    clipPathId,\n  };\n}\n\nfunction getBarHeight(count: number): number {\n  let barHeight = 8;\n  if (count === 1) {\n    barHeight = 36;\n  } else if (count === 2) {\n    barHeight = 17;\n  } else if (count === 3) {\n    barHeight = 11;\n  } else if (count === 4) {\n    barHeight = 7.5;\n  } else if (count > 3) {\n    barHeight = 7.5;\n  }\n\n  return barHeight;\n}\n\nfunction getMarkHeight(count: number, index: number) {\n  let barHeight = 36;\n  if (count === 1) {\n    barHeight = 36;\n  } else if (count === 2) {\n    barHeight = 17;\n  } else if (count === 3) {\n    barHeight = index === 1 ? 12 : 11;\n  } else if (count === 4) {\n    barHeight = 7.5;\n  } else if (count > 3) {\n    barHeight = 7.5;\n  }\n\n  return barHeight;\n}\n\nfunction getTrackHeight(count: number, barHeight: number) {\n  return count <= 3 ? 36 : barHeight * count + 2 * (count - 1);\n}\n\nfunction getClipPath(id: string, barHeight: number, count: number) {\n  const radius = 1;\n\n  let d = '';\n  if (count === 3) {\n    d = drawRect(0, 0, 2, barHeight, radius)\n      + drawRect(0, 12, 2, barHeight + 1, radius)\n      + drawRect(0, 25, 2, barHeight, radius);\n  } else {\n    for (let i = 0; i < count; i++) {\n      d += drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n    }\n  }\n\n  return (\n    `<clipPath id=\"${id}\">\n      <path d=\"${d}\" />\n    </clipPath>`\n  );\n}\n\nfunction drawRect(x: number, y: number, width: number, height: number, radius: number) {\n  return `M${x},${y + radius}a${radius},${radius},0,0,1,\n  ${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n}\n\nfunction getMarkTranslateY(index: number, barHeight: number, count: number) {\n  if (count === 1) {\n    return 0;\n  } else if (count === 2) {\n    return index === 0 ? 0 : barHeight + 2;\n  }\n\n  if (count === 3) {\n    if (index === 0) {\n      return 0;\n    } else if (index === 1) {\n      return 12;\n    }\n\n    return 25;\n  } else {\n    return (barHeight + 2) * index;\n  }\n}\n\nfunction getTrackTranslateY(index: number, count: number, barHeight: number, trackHeight: number) {\n  if (count <= 4) {\n    return 0;\n  }\n\n  if (index <= 1) {\n    return 0;\n  } else if (index >= count - 2) {\n    return trackHeight - 36;\n  }\n\n  return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n}\n\nexport default memo(PinnedMessageNavigation);\n","import { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\n\ntype OwnProps = {\n  userId: string;\n};\n\ntype StateProps = {\n  userName?: string;\n};\n\nfunction PremiumRequiredPlaceholder({ userName }: StateProps) {\n  const lang = useOldLang();\n  const { openPremiumModal } = getActions();\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  return (\n    <div>\n      <div>{lang('Chat.MessagingRestrictedPlaceholder', userName)}</div>\n      <Link isPrimary onClick={handleOpenPremiumModal}>{lang('Chat.MessagingRestrictedPlaceholderAction')}</Link>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      userName: getUserFirstOrLastName(user),\n    };\n  },\n)(PremiumRequiredPlaceholder));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ReactorListModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ReactorListModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ReactorListModal = useModuleLoader(Bundles.Extra, 'ReactorListModal', !isOpen);\n\n  return ReactorListModal ? <ReactorListModal {...props} /> : undefined;\n};\n\nexport default ReactorListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2RfusJI\",\"button\":\"Nz8BOo0i\",\"disabled\":\"zHsizIwX\",\"inner\":\"C90W_KKX\",\"icons-container\":\"Qi7tZATP\",\"iconsContainer\":\"Qi7tZATP\",\"animated-unlock\":\"lfcZJyxp\",\"animatedUnlock\":\"lfcZJyxp\",\"comments-icon\":\"zd5EAc5e\",\"commentsIcon\":\"zd5EAc5e\",\"description\":\"E_YZ3IQs\",\"starIconContainer\":\"IL_EHscS\",\"starIcon\":\"C_e1ij6A\"};","import { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../global/helpers/peers';\nimport { selectPeer, selectTheme, selectThemeValues } from '../../global/selectors';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { LOCAL_TGS_URLS } from '../common/helpers/animatedAssets';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../common/AnimatedIconWithPreview';\nimport Icon from '../common/icons/Icon';\nimport Sparkles from '../common/Sparkles';\nimport Button from '../ui/Button';\n\nimport styles from './RequirementToContactMessage.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  patternColor?: string;\n  peer?: ApiPeer;\n};\n\nfunction RequirementToContactMessage({\n  patternColor, peer, paidMessagesStars,\n}: OwnProps & StateProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { openPremiumModal, openStarsBalanceModal } = getActions();\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  if (!peer) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.inner}>\n        <div className={styles.iconsContainer}>\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Unlock}\n            size={54}\n            color={patternColor}\n            className={styles.animatedUnlock}\n          />\n          <Icon name=\"comments-sticker\" className={styles.commentsIcon} />\n        </div>\n        <span className={styles.description}>\n          {\n            paidMessagesStars\n              ? lang(isApiPeerUser(peer) ? 'MessagesPlaceholderPaidUser' : 'MessagesPlaceholderPaidChannel', {\n                peer: getPeerTitle(lang, peer),\n                amount: formatStarsAsIcon(lang,\n                  paidMessagesStars,\n                  {\n                    asFont: true,\n                    className: styles.starIcon,\n                    containerClassName: styles.starIconContainer,\n                  }),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : renderText(oldLang('MessageLockedPremium', getPeerTitle(lang, peer)), ['simple_markdown'])\n          }\n        </span>\n        <Button\n          color=\"translucent-black\"\n          size=\"default\"\n          pill\n          onClick={paidMessagesStars ? handleGetMoreStars : handleOpenPremiumModal}\n          className={styles.button}\n        >\n          {\n            paidMessagesStars\n              ? (\n                <>\n                  {lang('ButtonBuyStars')}\n                  <Sparkles preset=\"button\" />\n                </>\n              )\n              : oldLang('MessagePremiumUnlock')\n          }\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { peerId: userId }): StateProps => {\n    const theme = selectTheme(global);\n    const { patternColor } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, userId);\n\n    return {\n      patternColor,\n      peer,\n    };\n  })(RequirementToContactMessage),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y2NKrpKj\",\"button\":\"cxwA6gDO\",\"icon\":\"F4zNUFhH\",\"unread-count\":\"GovSzpfQ\",\"unreadCount\":\"GovSzpfQ\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './ScrollDownButton.module.scss';\n\ntype OwnProps = {\n  icon: IconName;\n  ariaLabelLang: string;\n  unreadCount?: number;\n  onClick: VoidFunction;\n  onReadAll?: VoidFunction;\n  className?: string;\n};\n\nconst ScrollDownButton: FC<OwnProps> = ({\n  icon,\n  ariaLabelLang,\n  unreadCount,\n  onClick,\n  onReadAll,\n  className,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !onReadAll);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={ref}>\n      <Button\n        color=\"secondary\"\n        round\n        className={styles.button}\n        onClick={onClick}\n        onContextMenu={handleContextMenu}\n        ariaLabel={oldLang(ariaLabelLang)}\n      >\n        <Icon name={icon} className={styles.icon} />\n      </Button>\n      {Boolean(unreadCount) && <div className={styles.unreadCount}>{formatIntegerCompact(lang, unreadCount)}</div>}\n      {onReadAll && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          autoClose\n          positionX=\"right\"\n          positionY=\"bottom\"\n        >\n          <MenuItem icon=\"readchats\" onClick={onReadAll}>{oldLang('MarkAllAsRead')}</MenuItem>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ScrollDownButton);\n","import {\n  MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN,\n  MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN,\n  MOBILE_SCREEN_MAX_WIDTH,\n} from '../../../config';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nconst MAX_TOOLBAR_WIDTH = 32 * REM;\nconst MAX_MESSAGES_LIST_WIDTH = 45.5 * REM;\nexport const SIDE_COLUMN_MAX_WIDTH = 26.5 * REM;\nexport const MIN_LEFT_COLUMN_WIDTH = 16 * REM;\nconst UNPIN_BUTTON_WIDTH = 16.125 * REM;\n\nexport default function calculateMiddleFooterTransforms(windowWidth: number, canPost?: boolean) {\n  const sidePadding = windowWidth <= MOBILE_SCREEN_MAX_WIDTH\n    ? REM\n    : 2 * REM;\n  const messageListWidth = getMessageListWidth(windowWidth);\n  const sendButtonWidth = windowWidth <= MOBILE_SCREEN_MAX_WIDTH\n    ? 3.375 * REM\n    : 4 * REM;\n\n  const composerWidth = canPost\n    ? messageListWidth - sidePadding - sendButtonWidth\n    : messageListWidth - sidePadding;\n  const toolbarWidth = windowWidth > MOBILE_SCREEN_MAX_WIDTH\n    ? Math.min(messageListWidth - sidePadding, MAX_TOOLBAR_WIDTH)\n    : messageListWidth - sidePadding;\n\n  const composerHiddenScale = toolbarWidth / composerWidth;\n  const toolbarHiddenScale = composerWidth / toolbarWidth;\n  const unpinHiddenScale = toolbarWidth / UNPIN_BUTTON_WIDTH;\n  const toolbarForUnpinHiddenScale = UNPIN_BUTTON_WIDTH / toolbarWidth;\n\n  const composerTranslateX = canPost\n    ? (sendButtonWidth / 2) * toolbarHiddenScale\n    : 0;\n\n  const toolbarTranslateX = canPost\n    ? (sendButtonWidth / 2) * -1 * composerHiddenScale\n    : 0;\n\n  return {\n    composerHiddenScale,\n    toolbarHiddenScale,\n    composerTranslateX,\n    toolbarTranslateX,\n    unpinHiddenScale,\n    toolbarForUnpinHiddenScale,\n  };\n}\n\nfunction getMessageListWidth(windowWidth: number) {\n  if (windowWidth > MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN) {\n    const leftColumnWidth = Math.min(\n      Math.max(windowWidth * 0.25, MIN_LEFT_COLUMN_WIDTH),\n      SIDE_COLUMN_MAX_WIDTH,\n    );\n\n    const rightColumnWidth = Math.min(\n      windowWidth * 0.25,\n      SIDE_COLUMN_MAX_WIDTH,\n    );\n\n    return Math.min(\n      windowWidth - leftColumnWidth - rightColumnWidth,\n      MAX_MESSAGES_LIST_WIDTH,\n    );\n  }\n\n  if (windowWidth > MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN) {\n    const leftColumnWidth = Math.min(\n      Math.max(windowWidth * 0.4, MIN_LEFT_COLUMN_WIDTH),\n      SIDE_COLUMN_MAX_WIDTH,\n    );\n\n    return Math.min(\n      windowWidth - leftColumnWidth,\n      MAX_MESSAGES_LIST_WIDTH,\n    );\n  }\n\n  if (windowWidth > MAX_MESSAGES_LIST_WIDTH) {\n    return MAX_MESSAGES_LIST_WIDTH;\n  }\n\n  return windowWidth;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { IAlbum } from '../../../types';\n\nimport { isActionMessage } from '../../../global/helpers';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\n\ntype SenderGroup = (ApiMessage | IAlbum)[];\n\nconst GROUP_INTERVAL_SECONDS = 600; // 10 minutes\n\nexport type MessageDateGroup = {\n  originalDate: number;\n  datetime: number;\n  senderGroups: SenderGroup[];\n};\n\nexport function isAlbum(messageOrAlbum: ApiMessage | IAlbum): messageOrAlbum is IAlbum {\n  return 'albumId' in messageOrAlbum;\n}\n\nexport function groupMessages(\n  messages: ApiMessage[], firstUnreadId?: number, topMessageId?: number, isChatWithSelf?: boolean, withUsers?: boolean,\n) {\n  const initDateGroup: MessageDateGroup = {\n    originalDate: messages[0].date,\n    datetime: getDayStartAt(messages[0].date * 1000),\n    senderGroups: [[]],\n  };\n  let currentAlbum: IAlbum | undefined;\n\n  const dateGroups: MessageDateGroup[] = [initDateGroup];\n\n  messages.forEach((message, index) => {\n    const currentDateGroup = dateGroups[dateGroups.length - 1];\n    const currentSenderGroup = currentDateGroup.senderGroups[currentDateGroup.senderGroups.length - 1];\n    if (message.isInAlbum) {\n      if (!currentAlbum) {\n        currentAlbum = {\n          albumId: message.groupedId!,\n          messages: [message],\n          mainMessage: message,\n          hasMultipleCaptions: false,\n        } satisfies IAlbum;\n      } else {\n        currentAlbum.messages.push(message);\n        if (message.hasComments) {\n          currentAlbum.commentsMessage = message;\n        }\n        if (message.content.text && !currentAlbum.hasMultipleCaptions) {\n          if (currentAlbum.captionMessage) {\n            currentAlbum.hasMultipleCaptions = true;\n            currentAlbum.captionMessage = undefined;\n          } else {\n            currentAlbum.captionMessage = message;\n          }\n        }\n      }\n    } else if ((message.content.paidMedia?.extendedMedia.length || 0) > 1) {\n      currentSenderGroup.push({\n        albumId: `paid-${message.id}`,\n        messages: [message],\n        mainMessage: message,\n        hasMultipleCaptions: false,\n        isPaidMedia: true,\n      } satisfies IAlbum);\n    } else {\n      currentSenderGroup.push(message);\n    }\n\n    const nextMessage = messages[index + 1];\n\n    if (\n      currentAlbum\n      && (!nextMessage || !nextMessage.groupedId || nextMessage.groupedId !== currentAlbum.albumId)\n    ) {\n      currentSenderGroup.push(currentAlbum);\n      currentAlbum = undefined;\n    }\n\n    const lastMessageInSenderGroup = currentSenderGroup[currentSenderGroup.length - 1];\n    if (nextMessage && !currentAlbum) {\n      const nextMessageDayStartsAt = getDayStartAt(nextMessage.date * 1000);\n      if (currentDateGroup.datetime !== nextMessageDayStartsAt) {\n        const newDateGroup: MessageDateGroup = {\n          originalDate: nextMessage.date,\n          datetime: nextMessageDayStartsAt,\n          senderGroups: [[]],\n        };\n        dateGroups.push(newDateGroup);\n      } else if (\n        nextMessage.id === firstUnreadId\n        || message.senderId !== nextMessage.senderId\n        || (!withUsers && message.paidMessageStars)\n        || (nextMessage.suggestedPostInfo)\n        || message.isOutgoing !== nextMessage.isOutgoing\n        || message.postAuthorTitle !== nextMessage.postAuthorTitle\n        || (isActionMessage(message) && message.content.action?.type !== 'phoneCall')\n        || (isActionMessage(nextMessage) && nextMessage.content.action?.type !== 'phoneCall')\n        || message.inlineButtons\n        || nextMessage.inlineButtons\n        || (nextMessage.date - message.date) > GROUP_INTERVAL_SECONDS\n        || (topMessageId\n          && (message.id === topMessageId\n            || (lastMessageInSenderGroup\n              && 'mainMessage' in lastMessageInSenderGroup\n              && lastMessageInSenderGroup.mainMessage?.id === topMessageId))\n            && nextMessage.id !== topMessageId)\n          || (isChatWithSelf && message.forwardInfo?.fromId !== nextMessage.forwardInfo?.fromId)\n      ) {\n        currentDateGroup.senderGroups.push([]);\n      }\n    }\n  });\n\n  return dateGroups;\n}\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect, useRef, useSignal } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nexport default function useContainerHeight(containerRef: ElementRef<HTMLDivElement>, isComposerVisible: boolean) {\n  const [getContainerHeight, setContainerHeight] = useSignal<number | undefined>();\n\n  // Container resize observer (caused by Composer reply/webpage panels)\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setContainerHeight(entry.contentRect.height);\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const currentNormalHeight = Number(containerRef.current!.dataset.normalHeight) || 0;\n    const containerHeight = getContainerHeight();\n\n    if (containerHeight && containerHeight > currentNormalHeight && isComposerVisible) {\n      containerRef.current!.dataset.normalHeight = String(containerHeight);\n    }\n  }, [isComposerVisible, containerRef, getContainerHeight]);\n\n  const prevContainerHeight = useRef<number>();\n\n  return [getContainerHeight, prevContainerHeight] as const;\n}\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { MessageListType } from '../../../types';\nimport type { OnIntersectPinnedMessage } from './usePinnedMessage';\n\nimport { IS_ANDROID } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useBackgroundMode, { isBackgroundModeActive } from '../../../hooks/window/useBackgroundMode';\n\nconst INTERSECTION_THROTTLE_FOR_READING = 150;\nconst INTERSECTION_THROTTLE_FOR_MEDIA = IS_ANDROID ? 1000 : 350;\n\nexport default function useMessageObservers(\n  type: MessageListType,\n  containerRef: ElementRef<HTMLDivElement>,\n  memoFirstUnreadIdRef: { current: number | undefined },\n  onIntersectPinnedMessage: OnIntersectPinnedMessage,\n  chatId: string,\n) {\n  const {\n    markMessageListRead, markMentionsRead, animateUnreadReaction,\n    scheduleForViewsIncrement,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const INTERSECTION_MARGIN_FOR_LOADING = isMobile ? 300 : 500;\n\n  const {\n    observe: observeIntersectionForReading, freeze: freezeForReading, unfreeze: unfreezeForReading,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_READING,\n  }, (entries) => {\n    if (type !== 'thread' || isBackgroundModeActive()) {\n      return;\n    }\n\n    let maxId = 0;\n    const mentionIds: number[] = [];\n    const reactionIds: number[] = [];\n    const viewportPinnedIdsToAdd: number[] = [];\n    const viewportPinnedIdsToRemove: number[] = [];\n    const scheduledToUpdateViews: number[] = [];\n\n    entries.forEach((entry) => {\n      const { isIntersecting, target } = entry;\n\n      const { dataset } = target as HTMLDivElement;\n      const messageId = Number(dataset.lastMessageId || dataset.messageId);\n      const shouldUpdateViews = dataset.shouldUpdateViews === 'true';\n      const albumMainId = dataset.albumMainId ? Number(dataset.albumMainId) : undefined;\n\n      if (!isIntersecting) {\n        if (dataset.isPinned) {\n          viewportPinnedIdsToRemove.push(albumMainId || messageId);\n        }\n        return;\n      }\n\n      if (messageId > maxId) {\n        maxId = messageId;\n      }\n\n      if (dataset.hasUnreadMention) {\n        mentionIds.push(messageId);\n      }\n\n      if (dataset.hasUnreadReaction) {\n        reactionIds.push(messageId);\n      }\n\n      if (dataset.isPinned) {\n        viewportPinnedIdsToAdd.push(albumMainId || messageId);\n      }\n\n      if (shouldUpdateViews) {\n        scheduledToUpdateViews.push(albumMainId || messageId);\n      }\n    });\n\n    if (memoFirstUnreadIdRef.current && maxId >= memoFirstUnreadIdRef.current) {\n      markMessageListRead({ maxId });\n    }\n\n    if (mentionIds.length) {\n      markMentionsRead({ chatId, messageIds: mentionIds });\n    }\n\n    if (reactionIds.length) {\n      animateUnreadReaction({ messageIds: reactionIds });\n    }\n\n    if (viewportPinnedIdsToAdd.length || viewportPinnedIdsToRemove.length) {\n      onIntersectPinnedMessage({ viewportPinnedIdsToAdd, viewportPinnedIdsToRemove });\n    }\n\n    if (scheduledToUpdateViews.length) {\n      scheduleForViewsIncrement({ chatId, ids: scheduledToUpdateViews });\n    }\n  });\n\n  useBackgroundMode(freezeForReading, unfreezeForReading);\n\n  const {\n    observe: observeIntersectionForLoading,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_MEDIA,\n    margin: INTERSECTION_MARGIN_FOR_LOADING,\n  });\n\n  const { observe: observeIntersectionForPlaying } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_MEDIA,\n  });\n\n  return {\n    observeIntersectionForReading,\n    observeIntersectionForLoading,\n    observeIntersectionForPlaying,\n  };\n}\n","import { useEffect, useSignal } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ThreadId } from '../../../types';\n\nimport { selectFocusedMessageId, selectListedIds, selectOutlyingListByMessageId } from '../../../global/selectors';\nimport cycleRestrict from '../../../util/cycleRestrict';\nimport { unique } from '../../../util/iteratees';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nexport type OnIntersectPinnedMessage = (params: {\n  viewportPinnedIdsToAdd?: number[];\n  viewportPinnedIdsToRemove?: number[];\n  shouldCancelWaiting?: boolean;\n}) => void;\n\nlet viewportPinnedIds: number[] | undefined;\nlet lastFocusedId: number | undefined;\n\nexport default function usePinnedMessage(\n  chatId?: string, threadId?: ThreadId, pinnedIds?: number[],\n) {\n  const [getPinnedIndexByKey, setPinnedIndexByKey] = useSignal<Record<string, number>>({});\n  const [getLoadingPinnedId, setLoadingPinnedId] = useSignal<number | undefined>();\n  const key = chatId ? `${chatId}_${threadId}` : undefined;\n  const getCurrentPinnedIndex = useDerivedSignal(\n    () => (getPinnedIndexByKey()[key!] ?? 0),\n    [getPinnedIndexByKey, key],\n  );\n\n  // Reset when switching chat\n  useEffect(() => {\n    viewportPinnedIds = undefined;\n    setLoadingPinnedId(undefined);\n  }, [\n    chatId, setPinnedIndexByKey, setLoadingPinnedId, threadId,\n  ]);\n\n  useEffect(() => {\n    if (!key) return;\n    const currentPinnedIndex = getPinnedIndexByKey()[key];\n    const pinnedLength = pinnedIds?.length || 0;\n    if (currentPinnedIndex >= pinnedLength) {\n      setPinnedIndexByKey({\n        ...getPinnedIndexByKey(),\n        [key]: clampIndex(pinnedLength - 1),\n      });\n    }\n  }, [getPinnedIndexByKey, key, pinnedIds?.length, setPinnedIndexByKey]);\n\n  const handleIntersectPinnedMessage: OnIntersectPinnedMessage = useLastCallback(({\n    viewportPinnedIdsToAdd = [],\n    viewportPinnedIdsToRemove = [],\n    shouldCancelWaiting,\n  }) => {\n    if (!chatId || !threadId || !key || !pinnedIds?.length) return;\n\n    if (shouldCancelWaiting) {\n      lastFocusedId = undefined;\n      setLoadingPinnedId(undefined);\n      return;\n    }\n\n    const loadingPinnedId = getLoadingPinnedId();\n    if (loadingPinnedId) {\n      const newPinnedIndex = pinnedIds.indexOf(loadingPinnedId);\n      setPinnedIndexByKey({\n        ...getPinnedIndexByKey(),\n        [key]: clampIndex(newPinnedIndex),\n      });\n      setLoadingPinnedId(undefined);\n    }\n\n    viewportPinnedIds = unique(\n      (viewportPinnedIds?.filter((id) => !viewportPinnedIdsToRemove.includes(id)) ?? [])\n        .concat(viewportPinnedIdsToAdd),\n    );\n\n    // Sometimes this callback is called after focus has been reset in global, so we leverage `lastFocusedId`\n    const focusedMessageId = selectFocusedMessageId(getGlobal(), chatId) || lastFocusedId;\n\n    if (lastFocusedId && viewportPinnedIds.includes(lastFocusedId)) {\n      lastFocusedId = undefined;\n    }\n\n    if (focusedMessageId) {\n      const pinnedIndexAboveFocused = pinnedIds.findIndex((id) => id < focusedMessageId);\n\n      setPinnedIndexByKey({\n        ...getPinnedIndexByKey(),\n        [key]: clampIndex(pinnedIndexAboveFocused),\n      });\n    } else if (viewportPinnedIds.length) {\n      const maxViewportPinnedId = Math.max(...viewportPinnedIds);\n      const newIndex = pinnedIds.indexOf(maxViewportPinnedId);\n\n      setPinnedIndexByKey({\n        ...getPinnedIndexByKey(),\n        [key]: clampIndex(newIndex),\n      });\n    }\n  });\n\n  const handleFocusPinnedMessage = useLastCallback((messageId: number) => {\n    // Focusing on a post in comments\n    if (!chatId || !threadId || !pinnedIds?.length) {\n      return;\n    }\n\n    lastFocusedId = messageId;\n\n    const global = getGlobal();\n    const listedIds = selectListedIds(global, chatId, threadId);\n    const isMessageLoaded = listedIds?.includes(messageId)\n      || selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n\n    const currentIndex = pinnedIds.indexOf(messageId);\n    const newIndex = cycleRestrict(pinnedIds.length, currentIndex + 1);\n\n    if (isMessageLoaded) {\n      setPinnedIndexByKey({\n        ...getPinnedIndexByKey(),\n        [key!]: newIndex,\n      });\n    } else {\n      setLoadingPinnedId(pinnedIds[newIndex]);\n    }\n  });\n\n  return {\n    handleIntersectPinnedMessage,\n    handleFocusPinnedMessage,\n    getCurrentPinnedIndex,\n    getLoadingPinnedId,\n  };\n}\n\nfunction clampIndex(id: number) {\n  return Math.max(0, id);\n}\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { MessageListType } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { MESSAGE_LIST_SENSITIVE_AREA } from '../../../util/browser/windowEnvironment';\nimport { debounce } from '../../../util/schedulers';\n\nimport { useDebouncedSignal } from '../../../hooks/useAsyncResolvers';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useSignalEffect } from '../../../hooks/useSignalEffect';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst FAB_THRESHOLD = 50;\nconst NOTCH_THRESHOLD = 1; // Notch has zero height so we at least need a 1px margin to intersect\nconst CONTAINER_HEIGHT_DEBOUNCE = 200;\nconst TOOLS_FREEZE_TIMEOUT = 350; // Approximate message sending animation duration\n\nexport default function useScrollHooks(\n  type: MessageListType,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageIds: number[],\n  getContainerHeight: Signal<number | undefined>,\n  isViewportNewest: boolean,\n  isUnread: boolean,\n  onScrollDownToggle: BooleanToVoidFunction,\n  onNotchToggle: BooleanToVoidFunction,\n  isReady: boolean,\n) {\n  const { loadViewportMessages } = getActions();\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(\n    () => (type === 'thread' ? [\n      debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Backwards }), 1000, true, false),\n      debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Forwards }), 1000, true, false),\n    ] : []),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [loadViewportMessages, messageIds],\n  );\n\n  const backwardsTriggerRef = useRef<HTMLDivElement>();\n  const forwardsTriggerRef = useRef<HTMLDivElement>();\n  const fabTriggerRef = useRef<HTMLDivElement>();\n\n  const toggleScrollTools = useLastCallback(() => {\n    if (!isReady) return;\n\n    if (!messageIds?.length) {\n      onScrollDownToggle(false);\n      onNotchToggle(false);\n      return;\n    }\n\n    if (!isViewportNewest) {\n      onScrollDownToggle(true);\n      onNotchToggle(true);\n      return;\n    }\n\n    const container = containerRef.current;\n    const fabTrigger = fabTriggerRef.current;\n    if (!container || !fabTrigger) return;\n\n    const { offsetHeight, scrollHeight, scrollTop } = container;\n    const fabOffsetTop = fabTrigger.offsetTop;\n    const scrollBottom = Math.round(fabOffsetTop - scrollTop - offsetHeight);\n    const isNearBottom = scrollBottom <= FAB_THRESHOLD;\n    const isAtBottom = scrollBottom <= NOTCH_THRESHOLD;\n\n    if (scrollHeight === 0) return;\n\n    onScrollDownToggle(isUnread ? !isAtBottom : !isNearBottom);\n    onNotchToggle(!isAtBottom);\n  });\n\n  const {\n    observe: observeIntersectionForHistory,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: MESSAGE_LIST_SENSITIVE_AREA,\n  }, (entries) => {\n    if (!loadMoreForwards || !loadMoreBackwards) {\n      return;\n    }\n\n    entries.forEach(({ isIntersecting, target }) => {\n      if (!isIntersecting) return;\n\n      if (target.className === 'backwards-trigger') {\n        loadMoreBackwards();\n      }\n\n      if (target.className === 'forwards-trigger') {\n        loadMoreForwards();\n      }\n    });\n  });\n\n  const withHistoryTriggers = messageIds && messageIds.length > 1;\n\n  useOnIntersect(backwardsTriggerRef, withHistoryTriggers ? observeIntersectionForHistory : undefined);\n  useOnIntersect(forwardsTriggerRef, withHistoryTriggers ? observeIntersectionForHistory : undefined);\n\n  const {\n    observe: observeIntersectionForFab,\n    freeze: freezeForFab,\n    unfreeze: unfreezeForFab,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: FAB_THRESHOLD * 2,\n    throttleScheduler: requestMeasure,\n  }, toggleScrollTools);\n\n  useOnIntersect(fabTriggerRef, observeIntersectionForFab);\n\n  const {\n    observe: observeIntersectionForNotch,\n    freeze: freezeForNotch,\n    unfreeze: unfreezeForNotch,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: NOTCH_THRESHOLD,\n    throttleScheduler: requestMeasure,\n  }, toggleScrollTools);\n\n  useOnIntersect(fabTriggerRef, observeIntersectionForNotch);\n\n  useEffect(() => {\n    if (isReady) {\n      toggleScrollTools();\n    }\n  }, [isReady, toggleScrollTools]);\n\n  const freezeShortly = useLastCallback(() => {\n    freezeForFab();\n    freezeForNotch();\n\n    setTimeout(() => {\n      unfreezeForNotch();\n      unfreezeForFab();\n    }, TOOLS_FREEZE_TIMEOUT);\n  });\n\n  // Workaround for FAB and notch flickering with tall incoming message\n  useSyncEffect(freezeShortly, [freezeShortly, messageIds]);\n\n  // Workaround for notch flickering when opening Composer Embedded Message\n  const getContainerHeightDebounced = useDebouncedSignal(getContainerHeight, CONTAINER_HEIGHT_DEBOUNCE);\n  useSignalEffect(freezeShortly, [freezeShortly, getContainerHeightDebounced]);\n\n  return {\n    withHistoryTriggers,\n    backwardsTriggerRef,\n    forwardsTriggerRef,\n    fabTriggerRef,\n  };\n}\n","import { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nconst DEBOUNCE = 1000;\nconst STICKY_TOP = 10;\n\nexport default function useStickyDates() {\n  // For some reason we can not synchronously hide a sticky element (from `useLayoutEffect`) when chat opens\n  // so we will add `position: sticky` only after first scroll. There would be no animation on the first show though.\n  const [isScrolled, markIsScrolled] = useFlag(false);\n\n  const runDebounced = useRunDebounced(DEBOUNCE, true);\n\n  const updateStickyDates = useLastCallback((container: HTMLDivElement) => {\n    markIsScrolled();\n\n    if (!document.body.classList.contains('is-scrolling-messages')) {\n      requestMutation(() => {\n        document.body.classList.add('is-scrolling-messages');\n      });\n    }\n\n    runDebounced(() => {\n      const stuckDateEl = findStuckDate(container);\n\n      requestMutation(() => {\n        const currentStuck = document.querySelector('.stuck');\n        if (currentStuck) {\n          currentStuck.classList.remove('stuck');\n        }\n\n        if (stuckDateEl) {\n          stuckDateEl.classList.add('stuck');\n        }\n\n        document.body.classList.remove('is-scrolling-messages');\n      });\n    });\n  });\n\n  return {\n    isScrolled,\n    updateStickyDates,\n  };\n}\n\nfunction findStuckDate(container: HTMLElement) {\n  const allElements = container.querySelectorAll<HTMLDivElement>('.sticky-date');\n  const containerTop = container.scrollTop;\n\n  const computedStyle = getComputedStyle(container);\n  const headerActionsHeight = parseInt(computedStyle.getPropertyValue('--middle-header-panes-height'), 10);\n\n  return Array.from(allElements).find((el) => {\n    const { offsetTop, offsetHeight } = el;\n    const top = offsetTop - containerTop;\n    return -offsetHeight <= top && top <= headerActionsHeight + STICKY_TOP;\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tk8btfOT\",\"avatarContainer\":\"UPrRM3Ks\",\"senderAvatar\":\"jdvqXfYh\",\"contextMenu\":\"FHxnbOg6\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport {\n  EDITABLE_INPUT_CSS_SELECTOR,\n  MESSAGE_APPEARANCE_DELAY,\n} from '../../../config';\nimport {\n  getMainUsername,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectSender,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './SenderGroupContainer.module.scss';\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    withAvatar?: boolean;\n    children: React.ReactNode;\n    id: string;\n    appearanceOrder: number;\n    canPost?: boolean;\n  };\n\n  type StateProps = {\n    sender?: ApiPeer;\n    canShowSender: boolean;\n    originSender?: ApiPeer;\n    isChatWithSelf?: boolean;\n    isRepliesChat?: boolean;\n    isAnonymousForwards?: boolean;\n  };\n\nconst SenderGroupContainer: FC<OwnProps & StateProps> = ({\n  message,\n  withAvatar,\n  children,\n  id,\n  appearanceOrder,\n  sender,\n  canShowSender,\n  originSender,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  canPost,\n}) => {\n  const { openChat, updateInsertingPeerIdMention } = getActions();\n  const ref = useRef<HTMLDivElement>();\n\n  const { forwardInfo } = message;\n\n  const messageSender = canShowSender ? sender : undefined;\n  const lang = useLang();\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n  const isAvatarPeerUser = avatarPeer && isApiPeerUser(avatarPeer);\n\n  const handleOpenChat = useLastCallback(() => {\n    if (!avatarPeer) {\n      return;\n    }\n\n    openChat({ id: avatarPeer.id });\n  });\n\n  const handleMention = useLastCallback(() => {\n    if (!avatarPeer) {\n      return;\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n    if (messageInput) {\n      updateInsertingPeerIdMention({ peerId: avatarPeer.id });\n    }\n  });\n\n  const handleAvatarClick = useLastCallback(() => {\n    handleOpenChat();\n  });\n\n  const {\n    ref: avatarRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen: withAvatar && isShown,\n    withShouldRender: true,\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => avatarRef.current);\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n  const getMenuElement = useLastCallback(\n    () => ref?.current?.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const canMention = canPost && avatarPeer && (isAvatarPeerUser || Boolean(getMainUsername(avatarPeer)));\n  const shouldRenderContextMenu = Boolean(contextMenuAnchor) && (isAvatarPeerUser || canMention);\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getLayout={getLayout}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        withPortal\n        autoClose\n      >\n        <>\n          {isAvatarPeerUser && (\n            <MenuItem\n              icon=\"comments\"\n              onClick={handleOpenChat}\n            >\n              {lang('SendMessage')}\n            </MenuItem>\n          )}\n          {canMention && (\n            <MenuItem\n              icon=\"mention\"\n              onClick={handleMention}\n            >\n              {lang('ContextMenuItemMention')}\n            </MenuItem>\n          )}\n        </>\n      </Menu>\n    );\n  }\n\n  function renderAvatar() {\n    const hiddenName = (!avatarPeer && forwardInfo) ? forwardInfo.hiddenUserName : undefined;\n\n    return (\n      <Avatar\n        size=\"small\"\n        className={styles.senderAvatar}\n        peer={avatarPeer}\n        text={hiddenName}\n        onClick={avatarPeer ? handleAvatarClick : undefined}\n        onContextMenu={handleContextMenu}\n      />\n    );\n  }\n\n  const className = buildClassName(\n    'sender-group-container',\n    styles.root,\n  );\n\n  return (\n    <div id={id} className={className} ref={ref}>\n      {shouldRender && (\n        <div ref={avatarRef} className={styles.avatarContainer}>\n          {renderAvatar()}\n        </div>\n      )}\n      {children}\n      {shouldRenderContextMenu && renderContextMenu()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      message, withAvatar,\n    } = ownProps;\n    const { chatId } = message;\n\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n\n    return {\n      sender,\n      canShowSender,\n      originSender,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n    };\n  },\n)(SenderGroupContainer));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SponsoredContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SponsoredContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SponsoredContextMenuContainer = useModuleLoader(\n    Bundles.Extra, 'SponsoredContextMenuContainer', !isOpen,\n  );\n\n  return SponsoredContextMenuContainer ? <SponsoredContextMenuContainer {...props} /> : undefined;\n};\n\nexport default SponsoredContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getIsDownloading,\n  getMessageContent,\n  getMessageDownloadableMedia,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads, selectCanAutoLoadMedia, selectCanAutoPlayMedia,\n  selectSponsoredMessage,\n  selectTheme,\n} from '../../../global/selectors';\nimport { IS_ANDROID } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from '../helpers/preventMessageInputBlur';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { type ObserveFn, useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport MessageAppendix from './MessageAppendix';\nimport Photo from './Photo';\nimport SponsoredContextMenuContainer from './SponsoredContextMenuContainer.async';\nimport Video from './Video';\n\nimport './SponsoredMessage.scss';\n\ntype OwnProps = {\n  chatId: string;\n  containerRef: ElementRef<HTMLDivElement>;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  theme: ThemeKey;\n  isDownloading?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\n\nconst SponsoredMessage: FC<OwnProps & StateProps> = ({\n  chatId,\n  message,\n  containerRef,\n  theme,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n}) => {\n  const {\n    viewSponsored,\n    openUrl,\n    hideSponsored,\n    clickSponsored,\n    openMediaViewer,\n    openAboutAdsModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const contentRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const shouldObserve = Boolean(message);\n\n  const { isMobile } = useAppLayout();\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    threshold: 1,\n  });\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, undefined, true, IS_ANDROID);\n\n  useEffect(() => {\n    return shouldObserve ? observeIntersection(contentRef.current!, (target) => {\n      if (target.isIntersecting && message?.randomId) {\n        viewSponsored({ randomId: message.randomId });\n      }\n    }) : undefined;\n  }, [message?.randomId, shouldObserve, observeIntersection, viewSponsored]);\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleHideSponsoredMessage = useLastCallback(() => {\n    hideSponsored();\n  });\n\n  const {\n    photo, video,\n  } = message ? getMessageContent(message) : { photo: undefined, video: undefined };\n\n  const isGif = video?.isGif;\n  const hasMedia = Boolean(photo || video);\n\n  const handleClick = useLastCallback(() => {\n    if (!message) return;\n\n    clickSponsored({ randomId: message.randomId, isMedia: photo || isGif ? true : undefined });\n    openUrl({ url: message.url, shouldSkipModal: true });\n  });\n\n  const handleOpenMedia = useLastCallback(() => {\n    if (!message) return;\n    clickSponsored({ randomId: message.randomId, isMedia: true });\n    openMediaViewer({\n      origin: MediaViewerOrigin.SponsoredMessage,\n      chatId,\n      isSponsoredMessage: true,\n    });\n  });\n\n  const handleOpenAboutAdsModal = useLastCallback(() => {\n    if (!message) return;\n    openAboutAdsModal({\n      randomId: message.randomId,\n      canReport: message.canReport,\n      additionalInfo: message.additionalInfo,\n      sponsorInfo: message.sponsorInfo,\n    });\n  });\n\n  const extraPadding = 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    const noMediaCorners = false;\n    let style = '';\n\n    if (photo || video) {\n      let width: number | undefined;\n      if (photo) {\n        width = calculateMediaDimensions({\n          media: photo,\n          isMobile,\n        }).width;\n      } else if (video) {\n        width = calculateMediaDimensions({\n          media: video,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(), width);\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth + extraPadding}px`;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style,\n    };\n  }, [photo, video, isMobile]);\n\n  const {\n    contentWidth, style,\n  } = sizeCalculations;\n\n  if (!message || !message.content) {\n    return undefined;\n  }\n\n  function renderContent() {\n    if (!message) return undefined;\n    return (\n      <>\n        <div className=\"message-title message-peer\" dir=\"auto\">{message.title}</div>\n        {Boolean(message.content?.text) && (\n          <div className=\"text-content with-meta\" dir=\"auto\" ref={contentRef}>\n            <span className=\"text-content-inner\" dir=\"auto\">\n              {renderTextWithEntities({\n                text: message.content.text.text,\n                entities: message.content.text.entities,\n              })}\n            </span>\n          </div>\n        )}\n\n        <Button\n          className=\"SponsoredMessage__button\"\n          size=\"tiny\"\n          color=\"translucent\"\n          isRectangular\n          onClick={handleClick}\n        >\n          {message.buttonText}\n        </Button>\n      </>\n    );\n  }\n\n  function renderMediaContent() {\n    if (!message) return undefined;\n\n    if (photo) {\n      return (\n        <Photo\n          photo={photo}\n          theme={theme}\n          canAutoLoad={canAutoLoadMedia}\n          isDownloading={isDownloading}\n          observeIntersection={observeIntersectionForLoading}\n          noAvatars\n          onClick={handleClick}\n          forcedWidth={contentWidth}\n        />\n      );\n    }\n    if (video) {\n      return (\n        <Video\n          video={video}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          noAvatars\n          canAutoLoad={canAutoLoadMedia}\n          canAutoPlay={canAutoPlayMedia}\n          isDownloading={isDownloading}\n          onClick={isGif ? handleClick : handleOpenMedia}\n          forcedWidth={contentWidth}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div\n      ref={ref}\n      key=\"sponsored-message\"\n      className=\"SponsoredMessage Message open sponsored-media-preview\"\n    >\n      <div\n        className=\"message-content media has-shadow has-solid-background has-appendix\"\n        dir=\"auto\"\n        style={style}\n        onMouseDown={handleMouseDown}\n        onContextMenu={handleContextMenu}\n      >\n        <PeerColorWrapper peerColor={message.peerColor} className=\"content-inner\" dir=\"auto\">\n          {renderMediaContent()}\n          {message.photo && (\n            <Avatar\n              size=\"large\"\n              photo={message.photo}\n              className={buildClassName('channel-avatar', lang.isRtl && 'is-rtl')}\n            />\n          )}\n          <span className={buildClassName('message-title message-type', hasMedia && 'has-media')}>\n            {message.isRecommended ? lang('Message.RecommendedLabel') : lang('SponsoredMessage')}\n            <BadgeButton onClick={handleOpenAboutAdsModal} className=\"ad-about\">\n              {lang('SponsoredMessageAdWhatIsThis')}\n            </BadgeButton>\n          </span>\n          {renderContent()}\n        </PeerColorWrapper>\n        <MessageAppendix />\n        <div className=\"message-action-buttons\">\n          <Button\n            className=\"message-action-button\"\n            color=\"translucent-white\"\n            round\n            size=\"tiny\"\n            ariaLabel={lang('Close')}\n            onClick={handleHideSponsoredMessage}\n          >\n            <Icon name=\"close\" className=\"sponsored-action-icon\" />\n          </Button>\n          {message.canReport && (\n            <Button\n              className=\"message-action-button\"\n              color=\"translucent-white\"\n              round\n              size=\"tiny\"\n              ariaLabel={lang('More')}\n              onClick={handleContextMenu}\n              onContextMenu={handleContextMenu}\n            >\n              <Icon name=\"more\" className=\"sponsored-action-icon\" />\n            </Button>\n          )}\n        </div>\n      </div>\n      {contextMenuAnchor && (\n        <SponsoredContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={message.randomId}\n          canReport={message.canReport}\n          sponsorInfo={message.sponsorInfo}\n          additionalInfo={message.additionalInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const message = selectSponsoredMessage(global, chatId);\n\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = message ? getMessageDownloadableMedia(message) : undefined;\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    return {\n      message,\n      theme: selectTheme(global),\n      isDownloading,\n      canAutoLoadMedia: message ? selectCanAutoLoadMedia(global, message) : undefined,\n      canAutoPlayMedia: message ? selectCanAutoPlayMedia(global, message) : undefined,\n    };\n  },\n)(SponsoredMessage));\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './ReactionPicker';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst ReactionPickerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ReactionPicker = useModuleLoader(Bundles.Extra, 'ReactionPicker', !isOpen);\n\n  return ReactionPicker ? <ReactionPicker {...props} /> : undefined;\n};\n\nexport default ReactionPickerAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../../lib/teact/teact';\nimport { useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAudio, ApiChat, ApiMessage, ApiPeer,\n  MediaContent,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../../../config';\nimport {\n  getMediaDuration, getMessageContent, getMessageMediaHash, isMessageLocal,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectChat, selectChatMessage, selectSender, selectTabState,\n} from '../../../global/selectors';\nimport { makeTrackId } from '../../../util/audioPlayer';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { clearMediaSession } from '../../../util/mediaSession';\nimport renderText from '../../common/helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useAudioPlayer from '../../../hooks/useAudioPlayer';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMessageMediaMetadata from '../../../hooks/useMessageMediaMetadata';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useHeaderPane, { type PaneState } from '../hooks/useHeaderPane';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport RangeSlider from '../../ui/RangeSlider';\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport './AudioPlayer.scss';\n\ntype OwnProps = {\n  className?: string;\n  noUi?: boolean;\n  isFullWidth?: boolean;\n  isHidden?: boolean;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  chat?: ApiChat;\n  volume: number;\n  playbackRate: number;\n  isPlaybackRateActive?: boolean;\n  isMuted: boolean;\n  timestamp?: number;\n};\n\nconst PLAYBACK_RATES: Record<number, number> = {\n  0.5: 0.66,\n  0.75: 0.8,\n  1: 1,\n  1.5: 1.4,\n  2: 1.8,\n};\nconst PLAYBACK_RATE_VALUES = Object.keys(PLAYBACK_RATES).sort().map(Number);\n\nconst REGULAR_PLAYBACK_RATE = 1;\nconst DEFAULT_FAST_PLAYBACK_RATE = 2;\n\nconst AudioPlayer: FC<OwnProps & StateProps> = ({\n  message,\n  className,\n  noUi,\n  sender,\n  chat,\n  volume,\n  playbackRate,\n  isPlaybackRateActive,\n  isMuted,\n  isFullWidth,\n  timestamp,\n  onPaneStateChange,\n}) => {\n  const {\n    setAudioPlayerVolume,\n    setAudioPlayerPlaybackRate,\n    setAudioPlayerMuted,\n    focusMessage,\n    closeAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const renderingMessage = useCurrentOrPrev(message);\n\n  const { audio, voice, video } = renderingMessage ? getMessageContent(renderingMessage) : {} satisfies MediaContent;\n  const isVoice = Boolean(voice || video);\n  const shouldRenderPlaybackButton = isVoice || (audio?.duration || 0) > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION;\n  const senderName = sender ? getPeerTitle(lang, sender) : undefined;\n\n  const mediaHash = renderingMessage && getMessageMediaHash(renderingMessage, 'inline');\n  const mediaData = mediaHash && mediaLoader.getFromMemory(mediaHash);\n  const mediaMetadata = useMessageMediaMetadata(renderingMessage, sender, chat);\n\n  const {\n    playPause,\n    stop,\n    isPlaying,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setVolume,\n    toggleMuted,\n    setPlaybackRate,\n    setCurrentTime,\n  } = useAudioPlayer(\n    message && makeTrackId(message),\n    message ? getMediaDuration(message)! : 0,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    undefined,\n    mediaMetadata,\n    undefined,\n    true,\n    undefined,\n    undefined,\n    message && isMessageLocal(message),\n    true,\n  );\n\n  const isOpen = Boolean(message);\n  const {\n    ref: transitionRef,\n  } = useShowTransition({\n    isOpen,\n    shouldForceOpen: isFullWidth, // Use pane animation instead\n  });\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen,\n    isDisabled: !isFullWidth,\n    ref: transitionRef,\n    onStateChange: onPaneStateChange,\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(transitionRef, !shouldRender);\n\n  useEffect(() => {\n    if (timestamp) {\n      setCurrentTime(timestamp);\n    }\n  }, [timestamp, setCurrentTime]);\n\n  const handleClick = useLastCallback(() => {\n    const { chatId, id } = renderingMessage!;\n    focusMessage({ chatId, messageId: id });\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (!stop) {\n      return;\n    }\n    if (isPlaying) {\n      playPause();\n    }\n    closeAudioPlayer();\n    clearMediaSession();\n    stop();\n  });\n\n  const handleVolumeChange = useLastCallback((value: number) => {\n    if (!setVolume) {\n      return;\n    }\n    setAudioPlayerVolume({ volume: value / 100 });\n    setVolume(value / 100);\n  });\n\n  const handleVolumeClick = useLastCallback(() => {\n    if (IS_TOUCH_ENV && !IS_IOS) return;\n    if (!toggleMuted) {\n      return;\n    }\n    toggleMuted();\n    setAudioPlayerMuted({ isMuted: !isMuted });\n  });\n\n  const updatePlaybackRate = useLastCallback((newRate: number, isActive = true) => {\n    if (!setPlaybackRate) {\n      return;\n    }\n    const rate = PLAYBACK_RATES[newRate];\n    const shouldBeActive = newRate !== REGULAR_PLAYBACK_RATE && isActive;\n    setAudioPlayerPlaybackRate({ playbackRate: rate, isPlaybackRateActive: shouldBeActive });\n    setPlaybackRate(shouldBeActive ? rate : REGULAR_PLAYBACK_RATE);\n  });\n\n  const handlePlaybackClick = useLastCallback(() => {\n    handleContextMenuClose();\n    const oldRate = Number(Object.entries(PLAYBACK_RATES).find(([, rate]) => rate === playbackRate)?.[0])\n      || REGULAR_PLAYBACK_RATE;\n    const newIsActive = !isPlaybackRateActive;\n\n    updatePlaybackRate(\n      newIsActive && oldRate === REGULAR_PLAYBACK_RATE ? DEFAULT_FAST_PLAYBACK_RATE : oldRate,\n      newIsActive,\n    );\n  });\n\n  const PlaybackRateButton = useLastCallback(() => {\n    const displayRate = Object.entries(PLAYBACK_RATES).find(([, rate]) => rate === playbackRate)?.[0]\n      || REGULAR_PLAYBACK_RATE;\n    const text = `${playbackRate === REGULAR_PLAYBACK_RATE ? DEFAULT_FAST_PLAYBACK_RATE : displayRate}Х`;\n    return (\n      <div className=\"playback-wrapper\">\n        {isContextMenuOpen && <div className=\"playback-backdrop\" onClick={handleContextMenuClose} />}\n\n        <Button\n          round\n          className={buildClassName(\n            'playback-button', isPlaybackRateActive && 'applied', isContextMenuOpen && 'on-top',\n          )}\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel=\"Playback Rate\"\n          ripple={!isMobile}\n          onMouseEnter={handleContextMenu}\n          onClick={handlePlaybackClick}\n          onMouseDown={handleBeforeContextMenu}\n          onContextMenu={handleContextMenu}\n        >\n          <span className={buildClassName(\n            'playback-button-inner',\n            text.length === 4 && 'small',\n            text.length === 5 && 'tiny',\n          )}\n          >\n            {text}\n          </span>\n        </Button>\n      </div>\n    );\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  if (noUi || !shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName('AudioPlayer', isFullWidth ? 'full-width-player' : 'mini-player', className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      ref={ref}\n    >\n      <div className=\"AudioPlayer-content\" onClick={handleClick}>\n        {audio ? renderAudio(audio) : renderVoice(lang('AttachAudio'), senderName)}\n        <RippleEffect />\n      </div>\n\n      <Button\n        round\n        ripple={!isMobile}\n        color=\"translucent\"\n        size=\"smaller\"\n        className=\"player-button\"\n        disabled={isFirst?.()}\n        onClick={requestPreviousTrack}\n        ariaLabel=\"Previous track\"\n      >\n        <Icon name=\"skip-previous\" />\n      </Button>\n      <Button\n        round\n        ripple={!isMobile}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={buildClassName('toggle-play', 'player-button', isPlaying ? 'pause' : 'play')}\n        onClick={playPause}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n      >\n        <Icon name=\"play\" />\n        <Icon name=\"pause\" />\n      </Button>\n      <Button\n        round\n        ripple={!isMobile}\n        color=\"translucent\"\n        size=\"smaller\"\n        className=\"player-button\"\n        disabled={isLast?.()}\n        onClick={requestNextTrack}\n        ariaLabel=\"Next track\"\n      >\n        <Icon name=\"skip-next\" />\n      </Button>\n\n      <div className=\"volume-button-wrapper\">\n        <Button\n          round\n          className=\"player-button volume-button\"\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel=\"Volume\"\n          onClick={handleVolumeClick}\n          ripple={!isMobile}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n\n        {!IS_IOS && (\n          <div className=\"volume-slider-wrapper\">\n            <div className=\"volume-slider-spacer\" />\n            <div className=\"volume-slider\">\n              <RangeSlider bold value={isMuted ? 0 : volume * 100} onChange={handleVolumeChange} />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldRenderPlaybackButton && (\n        <DropdownMenu\n          forceOpen={isContextMenuOpen}\n          positionX=\"right\"\n          positionY=\"top\"\n          className=\"playback-rate-menu\"\n          trigger={PlaybackRateButton}\n          onClose={handleContextMenuClose}\n          onHide={handleContextMenuHide}\n          onMouseEnterBackdrop={handleContextMenuClose}\n        >\n          {PLAYBACK_RATE_VALUES.map((rate) => {\n            return renderPlaybackRateMenuItem(rate, playbackRate, updatePlaybackRate, isPlaybackRateActive);\n          })}\n        </DropdownMenu>\n      )}\n\n      <Button\n        round\n        className=\"player-close\"\n        color=\"translucent\"\n        size=\"smaller\"\n        onClick={handleClose}\n        ariaLabel=\"Close player\"\n      >\n        <Icon name=\"close\" />\n      </Button>\n    </div>\n  );\n};\n\nfunction renderAudio(audio: ApiAudio) {\n  const { title, performer, fileName } = audio;\n\n  return (\n    <>\n      <div className=\"title\" dir=\"auto\">{renderText(title || fileName)}</div>\n      {performer && (\n        <div className=\"subtitle\" dir=\"auto\">{renderText(performer)}</div>\n      )}\n    </>\n  );\n}\n\nfunction renderVoice(subtitle: string, senderName?: string) {\n  return (\n    <>\n      <div className=\"title\" dir=\"auto\">{senderName && renderText(senderName)}</div>\n      <div className=\"subtitle\" dir=\"auto\">{subtitle}</div>\n    </>\n  );\n}\n\nfunction renderPlaybackRateMenuItem(\n  rate: number, currentRate: number, onClick: (rate: number) => void,\n  isPlaybackRateActive?: boolean,\n) {\n  const isSelected = (currentRate === PLAYBACK_RATES[rate] && isPlaybackRateActive)\n    || (rate === REGULAR_PLAYBACK_RATE && !isPlaybackRateActive);\n  return (\n    <MenuItem\n      key={rate}\n\n      onClick={() => onClick(rate)}\n      icon={isSelected ? 'check' : undefined}\n      customIcon={!isSelected ? <Icon name=\"placeholder\" /> : undefined}\n    >\n      {rate}\n      X\n    </MenuItem>\n  );\n}\n\nexport default withGlobal<OwnProps>(\n  (global, { isHidden }): StateProps => {\n    const { audioPlayer } = selectTabState(global);\n    const { chatId, messageId } = audioPlayer;\n    const message = !isHidden && chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    const sender = message && selectSender(global, message);\n    const chat = message && selectChat(global, message.chatId);\n    const {\n      volume, playbackRate, isMuted, isPlaybackRateActive, timestamp,\n    } = selectTabState(global).audioPlayer;\n\n    return {\n      message,\n      sender,\n      chat,\n      volume,\n      playbackRate,\n      isPlaybackRateActive,\n      isMuted,\n      timestamp,\n    };\n  },\n)(AudioPlayer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yMkfzjus\",\"content\":\"__w9Ejd3\",\"info\":\"wdU19Be7\",\"avatar\":\"AQFE1t4V\",\"title\":\"u2vIptvT\",\"text\":\"SVG6BaX3\",\"aboutAd\":\"SrgXYpPk\"};","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { MessageListType } from '../../../types';\n\nimport { selectBot, selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useHeaderPane, { type PaneState } from '../hooks/useHeaderPane';\n\nimport Avatar from '../../common/Avatar';\nimport BadgeButton from '../../common/BadgeButton';\nimport SponsoredMessageContextMenuContainer from '../message/SponsoredContextMenuContainer';\n\nimport styles from './BotAdPane.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  messageListType: MessageListType;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  isBot?: boolean;\n  sponsoredMessage?: ApiSponsoredMessage;\n};\n\nconst BotAdPane = ({\n  chatId,\n  isBot,\n  messageListType,\n  sponsoredMessage,\n  onPaneStateChange,\n}: OwnProps & StateProps) => {\n  const {\n    viewSponsored,\n    openUrl,\n    clickSponsored,\n    openAboutAdsModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(isBot && sponsoredMessage && messageListType === 'thread');\n\n  const renderingSponsoredMessage = useCurrentOrPrev(sponsoredMessage);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen,\n    withResizeObserver: true,\n    onStateChange: onPaneStateChange,\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !shouldRender, true);\n\n  const handleClick = useLastCallback(() => {\n    if (!renderingSponsoredMessage) return;\n\n    clickSponsored({ randomId: renderingSponsoredMessage.randomId });\n    openUrl({ url: renderingSponsoredMessage.url, shouldSkipModal: true });\n  });\n\n  const handleAboutClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!renderingSponsoredMessage) return;\n    const {\n      randomId, additionalInfo, canReport, sponsorInfo,\n    } = renderingSponsoredMessage;\n    e.stopPropagation();\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n  });\n\n  useEffect(() => {\n    if (shouldRender && renderingSponsoredMessage) {\n      viewSponsored({ randomId: renderingSponsoredMessage.randomId });\n    }\n  }, [shouldRender, renderingSponsoredMessage, chatId]);\n\n  if (!shouldRender || !renderingSponsoredMessage) {\n    return undefined;\n  }\n\n  const {\n    randomId, canReport, additionalInfo, sponsorInfo,\n  } = renderingSponsoredMessage;\n\n  const {\n    peerColor,\n    content,\n    photo,\n    title,\n  } = renderingSponsoredMessage;\n\n  return (\n    <>\n      <div\n        ref={ref}\n        className={styles.root}\n        onClick={handleClick}\n        onMouseDown={handleBeforeContextMenu}\n        onContextMenu={handleContextMenu}\n      >\n        <div className={buildClassName(styles.content, peerColor && getApiPeerColorClass(peerColor))}>\n          <span className={styles.info}>\n            {lang('SponsoredMessageAd')}\n            <BadgeButton onClick={handleAboutClick} className={styles.aboutAd}>\n              {lang('SponsoredMessageAdWhatIsThis')}\n            </BadgeButton>\n          </span>\n          <div className={styles.title}>{title}</div>\n          {content.text && (\n            <div className={styles.text}>\n              {renderTextWithEntities({\n                text: content.text.text,\n                entities: content.text.entities,\n              })}\n            </div>\n          )}\n        </div>\n        {photo && (\n          <Avatar\n            size=\"large\"\n            photo={photo}\n            className={styles.avatar}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <SponsoredMessageContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={randomId}\n          additionalInfo={additionalInfo}\n          canReport={canReport}\n          sponsorInfo={sponsorInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const bot = selectBot(global, chatId);\n    const sponsoredMessage = selectSponsoredMessage(global, chatId);\n    return {\n      isBot: Boolean(bot),\n      sponsoredMessage,\n    };\n  },\n)(BotAdPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sAWttcxl\",\"icon\":\"tK9d2y8u\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotVerification } from '../../../api/types';\n\nimport {\n  selectPeerFullInfo,\n} from '../../../global/selectors';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useHeaderPane, { type PaneState } from '../hooks/useHeaderPane';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './BotVerificationPane.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  wasShown: boolean;\n  botVerification?: ApiBotVerification;\n};\nconst BOT_VERIFICATION_ICON_SIZE = 16;\nconst DISPLAY_DURATION_MS = 5000; // 5 sec\n\nconst BotVerificationPane: FC<OwnProps & StateProps> = ({\n  peerId,\n  wasShown,\n  botVerification,\n  onPaneStateChange,\n}) => {\n  const isOpen = Boolean(!wasShown && botVerification);\n\n  const {\n    markBotVerificationInfoShown,\n  } = getActions();\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen,\n    onStateChange: onPaneStateChange,\n  });\n\n  const markAsShowed = useLastCallback(() => {\n    markBotVerificationInfoShown({ peerId });\n  });\n  useTimeout(markAsShowed, !wasShown ? DISPLAY_DURATION_MS : undefined);\n\n  if (!shouldRender || !botVerification) return undefined;\n\n  return (\n    <div ref={ref} className={styles.root}>\n      <span className={styles.icon}>\n        <CustomEmoji\n          documentId={botVerification.iconId}\n          size={BOT_VERIFICATION_ICON_SIZE}\n        />\n      </span>\n      {botVerification.description}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const peerFullInfo = selectPeerFullInfo(global, peerId);\n\n    const botVerification = peerFullInfo?.botVerification;\n    const wasShown = global.settings.botVerificationShownPeerIds.includes(peerId);\n\n    return {\n      botVerification,\n      wasShown,\n    };\n  },\n)(BotVerificationPane));\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFirstOrLastName, getUserFullName, isChatBasicGroup,\n} from '../../../global/helpers';\nimport { isApiPeerChat, isApiPeerUser } from '../../../global/helpers/peers';\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../hooks/useHeaderPane';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport './ChatReportPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  isAutoArchived?: boolean;\n  canReportSpam?: boolean;\n  canAddContact?: boolean;\n  canBlockContact?: boolean;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  peer?: ApiPeer;\n};\n\nconst ChatReportPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  className,\n  isAutoArchived,\n  canReportSpam,\n  canAddContact,\n  canBlockContact,\n  peer,\n  currentUserId,\n  onPaneStateChange,\n}) => {\n  const {\n    openAddContactDialog,\n    blockUser,\n    reportSpam,\n    deleteChat,\n    leaveChannel,\n    deleteChatUser,\n    deleteHistory,\n    toggleChatArchived,\n    hidePeerSettingsBar,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const [shouldReportSpam, setShouldReportSpam] = useState<boolean>(true);\n  const [shouldDeleteChat, setShouldDeleteChat] = useState<boolean>(true);\n\n  const renderingPeer = useCurrentOrPrev(peer);\n  const chat = renderingPeer && isApiPeerChat(renderingPeer) ? renderingPeer : undefined;\n  const user = renderingPeer && isApiPeerUser(renderingPeer) ? renderingPeer : undefined;\n  const isBasicGroup = chat && isChatBasicGroup(chat);\n\n  const renderingCanAddContact = useCurrentOrPrev(canAddContact);\n  const renderingCanBlockContact = useCurrentOrPrev(canBlockContact);\n  const renderingCanReportSpam = useCurrentOrPrev(canReportSpam);\n  const renderingIsAutoArchived = useCurrentOrPrev(isAutoArchived);\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    if (renderingIsAutoArchived) {\n      toggleChatArchived({ id: chatId });\n    }\n  });\n\n  const handleConfirmBlock = useLastCallback(() => {\n    closeBlockUserModal();\n    blockUser({ userId: chatId });\n    if (renderingCanReportSpam && shouldReportSpam) {\n      reportSpam({ chatId });\n    }\n    if (shouldDeleteChat) {\n      deleteChat({ chatId });\n    }\n  });\n\n  const handleCloseReportPane = useLastCallback(() => {\n    hidePeerSettingsBar({ peerId: chatId });\n  });\n\n  const handleChatReportSpam = useLastCallback(() => {\n    closeBlockUserModal();\n    reportSpam({ chatId });\n    if (isBasicGroup) {\n      deleteChatUser({ chatId, userId: currentUserId! });\n      deleteHistory({ chatId, shouldDeleteForAll: false });\n    } else {\n      leaveChannel({ chatId });\n    }\n  });\n\n  const hasAnyButton = canAddContact || canBlockContact || canReportSpam;\n\n  const isRendering = Boolean(hasAnyButton && peer);\n\n  useEffect(() => {\n    if (!isRendering) {\n      closeBlockUserModal();\n    }\n  }, [isRendering]);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('ChatReportPane', className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {renderingCanAddContact && (\n        <Button\n          isText\n          fluid\n          size=\"tiny\"\n          className=\"ChatReportPane--Button\"\n          onClick={handleAddContact}\n        >\n          {lang('lng_new_contact_add')}\n        </Button>\n      )}\n      {renderingCanBlockContact && (\n        <Button\n          color=\"danger\"\n          isText\n          fluid\n          size=\"tiny\"\n          className=\"ChatReportPane--Button\"\n          onClick={openBlockUserModal}\n        >\n          {lang('lng_new_contact_block')}\n        </Button>\n      )}\n      {renderingCanReportSpam && !renderingCanBlockContact && (\n        <Button\n          color=\"danger\"\n          isText\n          fluid\n          size=\"tiny\"\n          className=\"ChatReportPane--Button\"\n          onClick={openBlockUserModal}\n        >\n          {lang('lng_report_spam_and_leave')}\n        </Button>\n      )}\n      <Button\n        round\n        ripple\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={handleCloseReportPane}\n        ariaLabel={lang('Close')}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <ConfirmDialog\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n        title={lang('BlockUserTitle', user ? getUserFirstOrLastName(user) : getChatTitle(lang, chat!))}\n        text={user\n          ? lang('UserInfo.BlockConfirmationTitle', getUserFullName(user))\n          : lang('Chat.Confirm.ReportSpam.Channel')}\n        confirmIsDestructive\n        confirmLabel={lang('Block')}\n        confirmHandler={user ? handleConfirmBlock : handleChatReportSpam}\n      >\n        {user && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('DeleteThisChat')}\n            checked={shouldDeleteChat}\n            onCheck={setShouldDeleteChat}\n          />\n        )}\n        {user && canReportSpam && (\n          <Checkbox\n            className=\"ChatReportPane--Checkbox dialog-checkbox\"\n            label={lang('ReportChat')}\n            checked={shouldReportSpam}\n            onCheck={setShouldReportSpam}\n          />\n        )}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => ({\n    currentUserId: global.currentUserId,\n    peer: selectPeer(global, chatId),\n  }),\n)(ChatReportPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tE8PJzpv\",\"mini\":\"lrBhOgvf\",\"fullWidth\":\"gutn4asD\",\"pinnedMessage\":\"ayLUtX1S\",\"messageText\":\"ETMw73qH\",\"loading\":\"yvd9_9PF\",\"pinListIcon\":\"LFRysfVa\",\"pinListIconHidden\":\"E_C4DXKN\",\"no-hover\":\"WVjde2rq\",\"noHover\":\"WVjde2rq\",\"messageTextTransition\":\"mA1i07pG\",\"withMedia\":\"BWZytkCB\",\"title\":\"IWpRWVBg\",\"summary\":\"k19QLKaH\",\"inlineButton\":\"fpQMpARI\",\"pictogramTransition\":\"Gp431jU4\",\"pinnedThumb\":\"XjjZeOUy\",\"pinnedThumbImage\":\"ljzqevcj\"};","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  getIsSavedDialog,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageSingleInlineButton,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectForwardedSender,\n  selectPinnedIds,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport cycleRestrict from '../../../util/cycleRestrict';\nimport { getPictogramDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useHeaderPane, { type PaneState } from '../hooks/useHeaderPane';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport MessageSummary from '../../common/MessageSummary';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\nimport PinnedMessageNavigation from '../PinnedMessageNavigation';\n\nimport styles from './HeaderPinnedMessage.module.scss';\n\nconst MAX_LENGTH = 256;\nconst SHOW_LOADER_DELAY = 450;\nconst EMOJI_SIZE = 1.125 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n\n  messageListType: MessageListType;\n  className?: string;\n  isFullWidth?: boolean;\n  shouldHide?: boolean;\n  getLoadingPinnedId: Signal<number | undefined>;\n  getCurrentPinnedIndex: Signal<number>;\n  onFocusPinnedMessage: (messageId: number) => void;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  pinnedMessageIds?: number[] | number;\n  messagesById?: Record<number, ApiMessage>;\n  canUnpin?: boolean;\n  topMessageSender?: ApiPeer;\n  isSynced?: boolean;\n};\n\nconst HeaderPinnedMessage = ({\n  chatId,\n  threadId,\n  canUnpin,\n  getLoadingPinnedId,\n  pinnedMessageIds,\n  messagesById,\n  isFullWidth,\n  topMessageSender,\n  getCurrentPinnedIndex,\n  className,\n  chat,\n  isSynced,\n  shouldHide,\n  onPaneStateChange,\n  onFocusPinnedMessage,\n}: OwnProps & StateProps) => {\n  const {\n    clickBotInlineButton, focusMessage, openThread, pinMessage, loadPinnedMessages,\n  } = getActions();\n  const lang = useLang();\n\n  const currentPinnedIndex = useDerivedState(getCurrentPinnedIndex);\n  const pinnedMessageId = Array.isArray(pinnedMessageIds) ? pinnedMessageIds[currentPinnedIndex] : pinnedMessageIds;\n  const pinnedMessage = messagesById && pinnedMessageId ? messagesById[pinnedMessageId] : undefined;\n  const pinnedMessagesCount = Array.isArray(pinnedMessageIds)\n    ? pinnedMessageIds.length : (pinnedMessageIds ? 1 : 0);\n  const pinnedMessageNumber = Math.max(pinnedMessagesCount - currentPinnedIndex, 1);\n\n  const topMessageTitle = topMessageSender ? getPeerTitle(lang, topMessageSender) : undefined;\n\n  const video = pinnedMessage && getMessageVideo(pinnedMessage);\n  const gif = video?.isGif ? video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaThumbnail = useThumbnail(pinnedMessage);\n  const mediaHash = pinnedMessage && getMessageMediaHash(pinnedMessage, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash);\n  const isSpoiler = pinnedMessage && getMessageIsSpoiler(pinnedMessage);\n\n  const isLoading = Boolean(useDerivedState(getLoadingPinnedId));\n  const canRenderLoader = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n  const shouldShowLoader = canRenderLoader && isLoading;\n\n  const renderingPinnedMessage = useCurrentOrPrev(pinnedMessage, true);\n\n  useEffect(() => {\n    if (isSynced && (threadId === MAIN_THREAD_ID || chat?.isForum)) {\n      loadPinnedMessages({ chatId, threadId });\n    }\n  }, [chatId, threadId, isSynced, chat?.isForum]);\n\n  useEnsureMessage(chatId, pinnedMessageId, pinnedMessage);\n\n  const isOpen = Boolean(pinnedMessage) && !shouldHide;\n  const {\n    ref: transitionRef,\n  } = useShowTransition({\n    isOpen,\n    noOpenTransition: true,\n    shouldForceOpen: isFullWidth, // Use pane animation instead\n  });\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen,\n    isDisabled: !isFullWidth,\n    ref: transitionRef,\n    onStateChange: onPaneStateChange,\n  });\n\n  const [isUnpinDialogOpen, openUnpinDialog, closeUnpinDialog] = useFlag();\n\n  const handleUnpinMessage = useLastCallback(() => {\n    closeUnpinDialog();\n    pinMessage({ chatId, messageId: pinnedMessage!.id, isUnpin: true });\n  });\n\n  const inlineButton = pinnedMessage && getMessageSingleInlineButton(pinnedMessage);\n\n  const handleInlineButtonClick = useLastCallback(() => {\n    if (inlineButton) {\n      clickBotInlineButton({ chatId: pinnedMessage.chatId, messageId: pinnedMessage.id, button: inlineButton });\n    }\n  });\n\n  const handleAllPinnedClick = useLastCallback(() => {\n    openThread({ chatId, threadId, type: 'pinned' });\n  });\n\n  const handleMessageClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    const nextMessageId = e.shiftKey && Array.isArray(pinnedMessageIds)\n      ? pinnedMessageIds[cycleRestrict(pinnedMessageIds.length, pinnedMessageIds.indexOf(pinnedMessageId!) - 2)]\n      : pinnedMessageId!;\n\n    if (!getLoadingPinnedId()) {\n      focusMessage({\n        chatId, threadId, messageId: nextMessageId, noForumTopicPanel: true,\n      });\n      onFocusPinnedMessage(nextMessageId);\n    }\n  });\n\n  const [noHoverColor, markNoHoverColor, unmarkNoHoverColor] = useFlag();\n\n  const { handleClick, handleMouseDown } = useFastClick(handleMessageClick);\n\n  function renderPictogram(thumbDataUri?: string, blobUrl?: string, isFullVideo?: boolean, asSpoiler?: boolean) {\n    const { width, height } = getPictogramDimensions();\n    const srcUrl = blobUrl || thumbDataUri;\n    const shouldRenderVideo = isFullVideo && blobUrl;\n\n    return (\n      <div className={styles.pinnedThumb}>\n        {thumbDataUri && !asSpoiler && !shouldRenderVideo && (\n          <img\n            className={styles.pinnedThumbImage}\n            src={srcUrl}\n            width={width}\n            height={height}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {shouldRenderVideo && !asSpoiler && (\n          <video\n            src={blobUrl}\n            width={width}\n            height={height}\n            playsInline\n            disablePictureInPicture\n            className={styles.pinnedThumbImage}\n          />\n        )}\n        {thumbDataUri\n          && <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(asSpoiler)} width={width} height={height} />}\n      </div>\n    );\n  }\n\n  if (!shouldRender || !renderingPinnedMessage) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'HeaderPinnedMessageWrapper', styles.root, isFullWidth ? styles.fullWidth : styles.mini, className,\n      )}\n    >\n      {(pinnedMessagesCount > 1 || shouldShowLoader) && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          ariaLabel={lang('EventLogFilterPinnedMessages')}\n          onClick={!shouldShowLoader ? handleAllPinnedClick : undefined}\n        >\n          {isLoading && (\n            <Spinner\n              color=\"blue\"\n              className={buildClassName(\n                styles.loading, styles.pinListIcon, !shouldShowLoader && styles.pinListIconHidden,\n              )}\n            />\n          )}\n          <Icon\n            name=\"pin-list\"\n            className={buildClassName(\n              styles.pinListIcon, shouldShowLoader && styles.pinListIconHidden,\n            )}\n          />\n        </Button>\n      )}\n      {canUnpin && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          ariaLabel={lang('UnpinMessageAlertTitle')}\n          onClick={openUnpinDialog}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <ConfirmDialog\n        isOpen={isUnpinDialogOpen}\n        onClose={closeUnpinDialog}\n        text={lang('PinnedConfirmUnpin')}\n        confirmLabel={lang('DialogUnpin')}\n        confirmHandler={handleUnpinMessage}\n      />\n      <div\n        className={buildClassName(styles.pinnedMessage, noHoverColor && styles.noHover)}\n        onClick={handleClick}\n        onMouseDown={handleMouseDown}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        <PinnedMessageNavigation\n          count={pinnedMessagesCount}\n          index={currentPinnedIndex}\n        />\n        <Transition activeKey={renderingPinnedMessage.id} name=\"slideVertical\" className={styles.pictogramTransition}>\n          {renderPictogram(\n            mediaThumbnail,\n            mediaBlobUrl,\n            isVideoThumbnail,\n            isSpoiler,\n          )}\n        </Transition>\n        <div\n          className={buildClassName(styles.messageText, mediaThumbnail && styles.withMedia)}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          <div className={styles.title} dir={lang.isRtl ? 'rtl' : undefined}>\n            {!topMessageTitle && (\n              <AnimatedCounter\n                text={pinnedMessagesCount === 1\n                  ? lang('PinnedMessageTitleSingle')\n                  : lang('PinnedMessageTitle', { index: pinnedMessageNumber }, { pluralValue: pinnedMessagesCount })}\n              />\n            )}\n\n            {topMessageTitle && renderText(topMessageTitle)}\n          </div>\n          <Transition\n            activeKey={renderingPinnedMessage.id}\n            name=\"slideVerticalFade\"\n            className={styles.messageTextTransition}\n          >\n            <p dir=\"auto\" className={styles.summary}>\n              <MessageSummary\n                message={renderingPinnedMessage}\n                truncateLength={MAX_LENGTH}\n                noEmoji={Boolean(mediaThumbnail)}\n                emojiSize={EMOJI_SIZE}\n              />\n            </p>\n          </Transition>\n        </div>\n        <RippleEffect />\n        {inlineButton && (\n          <Button\n            size=\"tiny\"\n            className={styles.inlineButton}\n            onClick={handleInlineButtonClick}\n            shouldStopPropagation\n            onMouseEnter={!IS_TOUCH_ENV ? markNoHoverColor : undefined}\n            onMouseLeave={!IS_TOUCH_ENV ? unmarkNoHoverColor : undefined}\n          >\n            {renderKeyboardButtonText(lang, inlineButton)}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    const isSynced = global.isSynced;\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const messagesById = selectChatMessages(global, chatId);\n\n    const state = {\n      chat,\n      isSynced,\n    };\n\n    if (messageListType !== 'thread' || !messagesById) {\n      return state;\n    }\n\n    if (threadId !== MAIN_THREAD_ID && !isSavedDialog && !chat?.isForum) {\n      const pinnedMessageId = Number(threadId);\n      const message = pinnedMessageId ? selectChatMessage(global, chatId, pinnedMessageId) : undefined;\n      const topMessageSender = message ? selectForwardedSender(global, message) : undefined;\n\n      return {\n        ...state,\n        pinnedMessageIds: pinnedMessageId,\n        messagesById,\n        canUnpin: false,\n        topMessageSender,\n      };\n    }\n\n    const pinnedMessageIds = !isSavedDialog ? selectPinnedIds(global, chatId, threadId) : undefined;\n    if (pinnedMessageIds?.length) {\n      const firstPinnedMessage = messagesById[pinnedMessageIds[0]];\n      const {\n        canUnpin = false,\n      } = (\n        firstPinnedMessage\n        && pinnedMessageIds.length === 1\n        && selectAllowedMessageActionsSlow(global, firstPinnedMessage, threadId)\n      ) || {};\n\n      return {\n        ...state,\n        pinnedMessageIds,\n        messagesById,\n        canUnpin,\n      };\n    }\n\n    return state;\n  },\n)(HeaderPinnedMessage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xqcWnBH4\",\"message\":\"CJhqoyif\",\"messageStars\":\"sZR8zqEk\",\"messageStarIcon\":\"AKXOpk8S\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n} from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectChat,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\n// import useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useHeaderPane, { type PaneState } from '../hooks/useHeaderPane';\n\nimport Button from '../../ui/Button';\n\n// import CustomEmoji from '../../common/CustomEmoji';\nimport styles from './PaidMessageChargePane.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  chargedPaidMessageStars?: number;\n  chat?: ApiChat;\n};\n\nconst PaidMessageChargePane: FC<OwnProps & StateProps> = ({\n  chargedPaidMessageStars,\n  chat,\n  peerId,\n  onPaneStateChange,\n}) => {\n  const isOpen = Boolean(chargedPaidMessageStars);\n  const lang = useLang();\n\n  const {\n    openChatRefundModal,\n  } = getActions();\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen,\n    onStateChange: onPaneStateChange,\n  });\n\n  const handleRefund = useLastCallback(() => {\n    openChatRefundModal({ userId: peerId });\n  });\n\n  if (!shouldRender || !chargedPaidMessageStars) return undefined;\n\n  const peerName = chat ? getPeerTitle(lang, chat) : undefined;\n\n  const message = lang('PaneMessagePaidMessageCharge', {\n    peer: peerName,\n    amount: formatStarsAsIcon(lang,\n      chargedPaidMessageStars,\n      { asFont: true, className: styles.messageStarIcon, containerClassName: styles.messageStars }),\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n  });\n\n  return (\n    <div ref={ref} className={styles.root}>\n      <div className={styles.message}>\n        {message}\n      </div>\n      <Button\n        isText\n        noForcedUpperCase\n        pill\n        fluid\n        size=\"tiny\"\n        className={styles.button}\n        onClick={handleRefund}\n      >\n        {lang('RemoveFeeTitle')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const chat = selectChat(global, peerId);\n    const peerFullInfo = selectUserFullInfo(global, peerId);\n    const chargedPaidMessageStars = peerFullInfo?.settings?.chargedPaidMessageStars;\n\n    return {\n      chargedPaidMessageStars,\n      chat,\n    };\n  },\n)(PaidMessageChargePane));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MiddleSearch';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MiddleSearchAsync: FC<OwnProps> = (props) => {\n  const { isActive } = props;\n  const MiddleSearch = useModuleLoader(Bundles.Extra, 'MiddleSearch', !isActive, true);\n\n  return MiddleSearch ? <MiddleSearch {...props} /> : undefined;\n};\n\nexport default MiddleSearchAsync;\n","import type React from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport VerificationMonetizationModal from '../common/VerificationMonetizationModal.async';\nimport WebAppsCloseConfirmationModal from '../main/WebAppsCloseConfirmationModal.async';\nimport AboutAdsModal from './aboutAds/AboutAdsModal.async';\nimport AgeVerificationModal from './ageVerification/AgeVerificationModal.async';\nimport AttachBotInstallModal from './attachBotInstall/AttachBotInstallModal.async';\nimport BoostModal from './boost/BoostModal.async';\nimport ChatInviteModal from './chatInvite/ChatInviteModal.async';\nimport ChatlistModal from './chatlist/ChatlistModal.async';\nimport CollectibleInfoModal from './collectible/CollectibleInfoModal.async';\nimport DeleteAccountModal from './deleteAccount/DeleteAccountModal.async';\nimport EmojiStatusAccessModal from './emojiStatusAccess/EmojiStatusAccessModal.async';\nimport FrozenAccountModal from './frozenAccount/FrozenAccountModal.async';\nimport PremiumGiftModal from './gift/GiftModal.async';\nimport GiftInfoModal from './gift/info/GiftInfoModal.async';\nimport GiftRecipientPicker from './gift/recipient/GiftRecipientPicker.async';\nimport GiftResalePriceComposerModal from './gift/resale/GiftResalePriceComposerModal.async';\nimport GiftStatusInfoModal from './gift/status/GiftStatusInfoModal.async';\nimport GiftTransferModal from './gift/transfer/GiftTransferModal.async';\nimport GiftUpgradeModal from './gift/upgrade/GiftUpgradeModal.async';\nimport GiftWithdrawModal from './gift/withdraw/GiftWithdrawModal.async';\nimport GiftCodeModal from './giftcode/GiftCodeModal.async';\nimport InviteViaLinkModal from './inviteViaLink/InviteViaLinkModal.async';\nimport LocationAccessModal from './locationAccess/LocationAccessModal.async';\nimport MapModal from './map/MapModal.async';\nimport OneTimeMediaModal from './oneTimeMedia/OneTimeMediaModal.async';\nimport PaidReactionModal from './paidReaction/PaidReactionModal.async';\nimport PreparedMessageModal from './preparedMessage/PreparedMessageModal.async';\nimport ReportAdModal from './reportAd/ReportAdModal.async';\nimport ReportModal from './reportModal/ReportModal.async';\nimport SharePreparedMessageModal from './sharePreparedMessage/SharePreparedMessageModal.async';\nimport ChatRefundModal from './stars/chatRefund/ChatRefundModal.async';\nimport StarsGiftModal from './stars/gift/StarsGiftModal.async';\nimport StarsBalanceModal from './stars/StarsBalanceModal.async';\nimport StarsPaymentModal from './stars/StarsPaymentModal.async';\nimport StarsSubscriptionModal from './stars/subscription/StarsSubscriptionModal.async';\nimport StarsTransactionInfoModal from './stars/transaction/StarsTransactionModal.async';\nimport SuggestedPostApprovalModal from './suggestedPostApproval/SuggestedPostApprovalModal.async';\nimport SuggestedStatusModal from './suggestedStatus/SuggestedStatusModal.async';\nimport SuggestMessageModal from './suggestMessage/SuggestMessageModal.async';\nimport UrlAuthModal from './urlAuth/UrlAuthModal.async';\nimport WebAppModal from './webApp/WebAppModal.async';\n\n// `Pick` used only to provide tab completion\ntype ModalKey = keyof Pick<TabState,\n  'giftCodeModal' |\n  'boostModal' |\n  'chatlistModal' |\n  'urlAuth' |\n  'mapModal' |\n  'oneTimeMediaModal' |\n  'inviteViaLinkModal' |\n  'requestedAttachBotInstall' |\n  'collectibleInfoModal' |\n  'reportAdModal' |\n  'reportModal' |\n  'starsBalanceModal' |\n  'starsPayment' |\n  'starsTransactionModal' |\n  'paidReactionModal' |\n  'suggestMessageModal' |\n  'suggestedPostApprovalModal' |\n  'webApps' |\n  'chatInviteModal' |\n  'starsSubscriptionModal' |\n  'starsGiftModal' |\n  'giftModal' |\n  'isGiftRecipientPickerOpen' |\n  'isWebAppsCloseConfirmationModalOpen' |\n  'giftInfoModal' |\n  'giftResalePriceComposerModal' |\n  'suggestedStatusModal' |\n  'emojiStatusAccessModal' |\n  'locationAccessModal' |\n  'aboutAdsModal' |\n  'giftUpgradeModal' |\n  'monetizationVerificationModal' |\n  'giftWithdrawModal' |\n  'preparedMessageModal' |\n  'sharePreparedMessageModal' |\n  'giftStatusInfoModal' |\n  'giftTransferModal' |\n  'chatRefundModal' |\n  'isFrozenAccountModalOpen' |\n  'deleteAccountModal' |\n  'isAgeVerificationModalOpen'\n>;\n\ntype StateProps = {\n  [K in ModalKey]?: TabState[K];\n};\ntype ModalRegistry = {\n  [K in ModalKey]: React.FC<{\n    modal: TabState[K];\n  }>;\n};\ntype Entries<T> = {\n  [K in keyof T]: [K, T[K]];\n}[keyof T][];\n\nconst MODALS: ModalRegistry = {\n  giftCodeModal: GiftCodeModal,\n  boostModal: BoostModal,\n  chatlistModal: ChatlistModal,\n  urlAuth: UrlAuthModal,\n  oneTimeMediaModal: OneTimeMediaModal,\n  inviteViaLinkModal: InviteViaLinkModal,\n  requestedAttachBotInstall: AttachBotInstallModal,\n  reportAdModal: ReportAdModal,\n  reportModal: ReportModal,\n  webApps: WebAppModal,\n  collectibleInfoModal: CollectibleInfoModal,\n  mapModal: MapModal,\n  starsPayment: StarsPaymentModal,\n  starsBalanceModal: StarsBalanceModal,\n  starsTransactionModal: StarsTransactionInfoModal,\n  chatInviteModal: ChatInviteModal,\n  paidReactionModal: PaidReactionModal,\n  suggestMessageModal: SuggestMessageModal,\n  suggestedPostApprovalModal: SuggestedPostApprovalModal,\n  starsSubscriptionModal: StarsSubscriptionModal,\n  starsGiftModal: StarsGiftModal,\n  giftModal: PremiumGiftModal,\n  isGiftRecipientPickerOpen: GiftRecipientPicker,\n  isWebAppsCloseConfirmationModalOpen: WebAppsCloseConfirmationModal,\n  giftInfoModal: GiftInfoModal,\n  giftResalePriceComposerModal: GiftResalePriceComposerModal,\n  suggestedStatusModal: SuggestedStatusModal,\n  emojiStatusAccessModal: EmojiStatusAccessModal,\n  locationAccessModal: LocationAccessModal,\n  aboutAdsModal: AboutAdsModal,\n  giftUpgradeModal: GiftUpgradeModal,\n  monetizationVerificationModal: VerificationMonetizationModal,\n  giftWithdrawModal: GiftWithdrawModal,\n  giftStatusInfoModal: GiftStatusInfoModal,\n  preparedMessageModal: PreparedMessageModal,\n  sharePreparedMessageModal: SharePreparedMessageModal,\n  giftTransferModal: GiftTransferModal,\n  chatRefundModal: ChatRefundModal,\n  isFrozenAccountModalOpen: FrozenAccountModal,\n  deleteAccountModal: DeleteAccountModal,\n  isAgeVerificationModalOpen: AgeVerificationModal,\n};\nconst MODAL_KEYS = Object.keys(MODALS) as ModalKey[];\nconst MODAL_ENTRIES = Object.entries(MODALS) as Entries<ModalRegistry>;\n\nconst ModalContainer = (modalProps: StateProps) => {\n  return MODAL_ENTRIES.map(([key, ModalComponent]) => (\n    // @ts-ignore -- TS does not preserve tuple types in `map` callbacks\n    <ModalComponent key={key} modal={modalProps[key]} />\n  ));\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => (\n    pick(selectTabState(global), MODAL_KEYS)\n  ),\n)(ModalContainer));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AboutAdsModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AboutAdsModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const AboutAdsModal = useModuleLoader(Bundles.Extra, 'AboutAdsModal', !modal);\n\n  return AboutAdsModal ? <AboutAdsModal {...props} /> : undefined;\n};\n\nexport default AboutAdsModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AgeVerificationModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AgeVerificationModalAsync: FC<OwnProps> = memo((props) => {\n  const { modal } = props;\n\n  const AgeVerificationModal = useModuleLoader(Bundles.Extra, 'AgeVerificationModal', !modal);\n\n  return AgeVerificationModal ? <AgeVerificationModal {...props} /> : undefined;\n});\n\nexport default AgeVerificationModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachBotInstallModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachBotInstallModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const AttachBotInstallModal = useModuleLoader(Bundles.Extra, 'AttachBotInstallModal', !modal);\n\n  return AttachBotInstallModal ? <AttachBotInstallModal {...props} /> : undefined;\n};\n\nexport default AttachBotInstallModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BoostModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BoostModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const BoostModal = useModuleLoader(Bundles.Extra, 'BoostModal', !modal);\n\n  return BoostModal ? <BoostModal {...props} /> : undefined;\n};\n\nexport default BoostModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatInviteModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatInviteModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ChatInviteModal = useModuleLoader(Bundles.Extra, 'ChatInviteModal', !modal);\n\n  return ChatInviteModal ? <ChatInviteModal {...props} /> : undefined;\n};\n\nexport default ChatInviteModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatlistModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatlistModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ChatlistModal = useModuleLoader(Bundles.Extra, 'ChatlistModal', !modal);\n\n  return ChatlistModal ? <ChatlistModal {...props} /> : undefined;\n};\n\nexport default ChatlistModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CollectibleInfoModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CollectibleInfoModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const CollectibleInfoModal = useModuleLoader(Bundles.Extra, 'CollectibleInfoModal', !modal);\n\n  return CollectibleInfoModal ? <CollectibleInfoModal {...props} /> : undefined;\n};\n\nexport default CollectibleInfoModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteAccountModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DeleteAccountModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const DeleteAccountModal = useModuleLoader(Bundles.Extra, 'DeleteAccountModal', !modal);\n\n  return DeleteAccountModal ? <DeleteAccountModal {...props} /> : undefined;\n};\n\nexport default DeleteAccountModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiStatusAccessModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiStatusAccessModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const EmojiStatusAccessModal = useModuleLoader(Bundles.Extra, 'EmojiStatusAccessModal', !modal);\n\n  return EmojiStatusAccessModal ? <EmojiStatusAccessModal {...props} /> : undefined;\n};\n\nexport default EmojiStatusAccessModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './FrozenAccountModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst FrozenAccountModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const FrozenAccountModal = useModuleLoader(Bundles.Extra, 'FrozenAccountModal', modal);\n\n  return FrozenAccountModal ? <FrozenAccountModal {...props} /> : undefined;\n};\n\nexport default FrozenAccountModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst GiftModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftModal = useModuleLoader(Bundles.Stars, 'GiftModal', !modal);\n\n  return GiftModal ? <GiftModal {...props} /> : undefined;\n};\n\nexport default GiftModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftInfoModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftInfoModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftInfoModal = useModuleLoader(Bundles.Stars, 'GiftInfoModal', !modal);\n\n  return GiftInfoModal ? <GiftInfoModal {...props} /> : undefined;\n};\n\nexport default GiftInfoModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftRecipientPicker';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftRecipientPickerAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftRecipientPicker = useModuleLoader(Bundles.Stars, 'GiftRecipientPicker', !modal);\n\n  return GiftRecipientPicker ? <GiftRecipientPicker {...props} /> : undefined;\n};\n\nexport default GiftRecipientPickerAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftResalePriceComposerModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftResalePriceComposerModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftResalePriceComposerModal = useModuleLoader(Bundles.Stars, 'GiftResalePriceComposerModal', !modal);\n\n  return GiftResalePriceComposerModal ? <GiftResalePriceComposerModal {...props} /> : undefined;\n};\n\nexport default GiftResalePriceComposerModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftStatusInfoModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftStatusInfoModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftStatusInfoModal = useModuleLoader(Bundles.Stars, 'GiftStatusInfoModal', !modal);\n\n  return GiftStatusInfoModal ? <GiftStatusInfoModal {...props} /> : undefined;\n};\n\nexport default GiftStatusInfoModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftTransferModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftTransferModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftTransferModal = useModuleLoader(Bundles.Stars, 'GiftTransferModal', !modal);\n\n  return GiftTransferModal ? <GiftTransferModal {...props} /> : undefined;\n};\n\nexport default GiftTransferModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftUpgradeModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftUpgradeModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftUpgradeModal = useModuleLoader(Bundles.Stars, 'GiftUpgradeModal', !modal);\n\n  return GiftUpgradeModal ? <GiftUpgradeModal {...props} /> : undefined;\n};\n\nexport default GiftUpgradeModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftWithdrawModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst GiftWithdrawModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftWithdrawModal = useModuleLoader(Bundles.Stars, 'GiftWithdrawModal', !modal);\n\n  return GiftWithdrawModal ? <GiftWithdrawModal {...props} /> : undefined;\n};\n\nexport default GiftWithdrawModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './GiftCodeModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst GiftCodeModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const GiftCodeModal = useModuleLoader(Bundles.Extra, 'GiftCodeModal', !modal);\n\n  return GiftCodeModal ? <GiftCodeModal {...props} /> : undefined;\n};\n\nexport default GiftCodeModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InviteViaLinkModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InviteViaLinkModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const InviteViaLinkModal = useModuleLoader(Bundles.Extra, 'InviteViaLinkModal', !modal);\n\n  return InviteViaLinkModal ? <InviteViaLinkModal {...props} /> : undefined;\n};\n\nexport default InviteViaLinkModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './LocationAccessModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst LocationAccessModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const LocationAccessModal = useModuleLoader(Bundles.Extra, 'LocationAccessModal', !modal);\n\n  return LocationAccessModal ? <LocationAccessModal {...props} /> : undefined;\n};\n\nexport default LocationAccessModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MapModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MapModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const MapModal = useModuleLoader(Bundles.Extra, 'MapModal', !modal);\n\n  return MapModal ? <MapModal {...props} /> : undefined;\n};\n\nexport default MapModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './OneTimeMediaModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst OneTimeMediaModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const OneTimeMediaModal = useModuleLoader(Bundles.Extra, 'OneTimeMediaModal', !modal);\n\n  return OneTimeMediaModal ? <OneTimeMediaModal {...props} /> : undefined;\n};\n\nexport default OneTimeMediaModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PaidReactionModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PaidReactionModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const PaidReactionModal = useModuleLoader(Bundles.Stars, 'PaidReactionModal', !modal);\n\n  return PaidReactionModal ? <PaidReactionModal {...props} /> : undefined;\n};\n\nexport default PaidReactionModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PreparedMessageModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PreparedMessageModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const PreparedMessageModal = useModuleLoader(Bundles.Extra, 'PreparedMessageModal', !modal);\n\n  return PreparedMessageModal ? <PreparedMessageModal {...props} /> : undefined;\n};\n\nexport default PreparedMessageModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ReportAdModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ReportAdModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ReportAdModal = useModuleLoader(Bundles.Extra, 'ReportAdModal', !modal);\n\n  return ReportAdModal ? <ReportAdModal {...props} /> : undefined;\n};\n\nexport default ReportAdModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ReportModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ReportModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ReportModal = useModuleLoader(Bundles.Extra, 'ReportModal', !modal);\n\n  return ReportModal ? <ReportModal {...props} /> : undefined;\n};\n\nexport default ReportModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SharePreparedMessageModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SharePreparedMessageModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const SharePreparedMessageModal = useModuleLoader(Bundles.Extra, 'SharePreparedMessageModal', !modal);\n\n  return SharePreparedMessageModal ? <SharePreparedMessageModal {...props} /> : undefined;\n};\n\nexport default SharePreparedMessageModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StarsBalanceModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StarsBalanceModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const StarsBalanceModal = useModuleLoader(Bundles.Stars, 'StarsBalanceModal', !modal);\n\n  return StarsBalanceModal ? <StarsBalanceModal {...props} /> : undefined;\n};\n\nexport default StarsBalanceModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StarsPaymentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StarPaymentModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const StarPaymentModal = useModuleLoader(Bundles.Stars, 'StarPaymentModal', !modal);\n\n  return StarPaymentModal ? <StarPaymentModal {...props} /> : undefined;\n};\n\nexport default StarPaymentModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatRefundModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst ChatRefundModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ChatRefundModal = useModuleLoader(Bundles.Stars, 'ChatRefundModal', !modal);\n\n  return ChatRefundModal ? <ChatRefundModal {...props} /> : undefined;\n};\n\nexport default ChatRefundModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './StarsGiftModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst StarsGiftModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const StarsGiftModal = useModuleLoader(Bundles.Stars, 'StarsGiftModal', !modal);\n\n  return StarsGiftModal ? <StarsGiftModal {...props} /> : undefined;\n};\n\nexport default StarsGiftModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './StarsSubscriptionModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst StarsSubscriptionModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const StarsSubscriptionModal = useModuleLoader(Bundles.Stars, 'StarsSubscriptionModal', !modal);\n\n  return StarsSubscriptionModal ? <StarsSubscriptionModal {...props} /> : undefined;\n};\n\nexport default StarsSubscriptionModalAsync;\n","import type { FC } from '../../../../lib/teact/teact';\n\nimport type { OwnProps } from './StarsTransactionModal';\n\nimport { Bundles } from '../../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../../hooks/useModuleLoader';\n\nconst StarsTransactionModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const StarsTransactionModal = useModuleLoader(Bundles.Stars, 'StarsTransactionInfoModal', !modal);\n\n  return StarsTransactionModal ? <StarsTransactionModal {...props} /> : undefined;\n};\n\nexport default StarsTransactionModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SuggestMessageModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst SuggestMessageModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const SuggestMessageModal = useModuleLoader(Bundles.Extra, 'SuggestMessageModal', !modal);\n\n  return SuggestMessageModal ? <SuggestMessageModal {...props} /> : <Loading />;\n};\n\nexport default SuggestMessageModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SuggestedPostApprovalModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst SuggestedPostApprovalModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const SuggestedPostApprovalModal = useModuleLoader(Bundles.Extra, 'SuggestedPostApprovalModal', !modal);\n\n  return SuggestedPostApprovalModal ? <SuggestedPostApprovalModal {...props} /> : <Loading />;\n};\n\nexport default SuggestedPostApprovalModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SuggestedStatusModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SuggestedStatusModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const SuggestedStatusModal = useModuleLoader(Bundles.Extra, 'SuggestedStatusModal', !modal);\n\n  return SuggestedStatusModal ? <SuggestedStatusModal {...props} /> : undefined;\n};\n\nexport default SuggestedStatusModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './UrlAuthModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst UrlAuthModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const UrlAuthModal = useModuleLoader(Bundles.Extra, 'UrlAuthModal', !modal);\n\n  return UrlAuthModal ? <UrlAuthModal {...props} /> : undefined;\n};\n\nexport default UrlAuthModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './WebAppModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst WebAppModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const WebAppModal = useModuleLoader(Bundles.Extra, 'WebAppModal', !modal);\n\n  return WebAppModal ? <WebAppModal {...props} /> : undefined;\n};\n\nexport default WebAppModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PaymentModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PaymentModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PaymentModal = useModuleLoader(Bundles.Extra, 'PaymentModal', !isOpen);\n\n  return PaymentModal ? <PaymentModal {...props} /> : undefined;\n};\n\nexport default PaymentModalAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ReceiptModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ReceiptModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ReceiptModal = useModuleLoader(Bundles.Extra, 'ReceiptModal', !isOpen);\n\n  return ReceiptModal ? <ReceiptModal {...props} /> : undefined;\n};\n\nexport default ReceiptModalAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember,\n} from '../../api/types';\nimport { NewChatMembersProgress } from '../../types';\n\nimport {\n  isChatChannel, isUserBot,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from '../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport PeerPicker from '../common/pickers/PeerPicker';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport Spinner from '../ui/Spinner';\n\nimport './AddChatMembers.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onNextStep: (memberIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  isChannel?: boolean;\n  members?: ApiChatMember[];\n  currentUserId?: string;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isLoading: boolean;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst AddChatMembers: FC<OwnProps & StateProps> = ({\n  isChannel,\n  members,\n  onNextStep,\n  currentUserId,\n  localContactIds,\n  isLoading,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n  onClose,\n  isActive,\n}) => {\n  const { setUserSearchQuery } = getActions();\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n  const prevSelectedMemberIds = usePreviousDeprecated(selectedMemberIds);\n  const noPickerScrollRestore = prevSelectedMemberIds === selectedMemberIds;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    return members ? members.map((member) => member.userId) : [];\n  }, [members]);\n\n  const handleFilterChange = useCallback((query: string) => {\n    setUserSearchQuery({ query });\n  }, [setUserSearchQuery]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...(localContactIds || []),\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]),\n      query: searchQuery,\n      type: 'user',\n    });\n\n    return sortChatIds(\n      filteredIds.filter((userId) => {\n        const user = usersById[userId];\n\n        // The user can be added to the chat if the following conditions are met:\n        // the user has not yet been added to the current chat\n        // AND it is not the current user,\n        // AND (it is not found (user from global search) OR it is not a bot OR it is a bot,\n        // but the current chat is not a channel AND the appropriate permission is set).\n        return (\n          !memberIds.includes(userId)\n          && userId !== currentUserId\n          && (!user || !isUserBot(user) || (!isChannel && user.canBeInvitedToGroup))\n        );\n      }),\n    );\n  }, [localContactIds, searchQuery, localUserIds, globalUserIds, currentUserId, memberIds, isChannel]);\n\n  const handleNextStep = useCallback(() => {\n    if (selectedMemberIds.length) {\n      setUserSearchQuery({ query: '' });\n      onNextStep(selectedMemberIds);\n    }\n  }, [selectedMemberIds, setUserSearchQuery, onNextStep]);\n\n  return (\n    <div className=\"AddChatMembers\">\n      <div className=\"AddChatMembers-inner\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('lng_channel_add_users')}\n          searchInputId=\"new-members-picker-search\"\n          isLoading={isSearching}\n          onSelectedIdsChange={setSelectedMemberIds}\n          onFilterChange={handleFilterChange}\n          isSearchable\n          withDefaultPadding\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n\n        <FloatingActionButton\n          isShown={Boolean(selectedMemberIds.length)}\n          disabled={isLoading}\n          ariaLabel={lang('lng_channel_add_users')}\n          onClick={handleNextStep}\n        >\n          {isLoading ? (\n            <Spinner color=\"white\" />\n          ) : (\n            <Icon name=\"arrow-right\" />\n          )}\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { userIds: localContactIds } = global.contactList || {};\n    const { newChatMembersProgress } = selectTabState(global);\n    const { currentUserId } = global;\n    const isChannel = chat && isChatChannel(chat);\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      isChannel,\n      members: selectChatFullInfo(global, chatId)?.members,\n      currentUserId,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      isLoading: newChatMembersProgress === NewChatMembersProgress.Loading,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(AddChatMembers));\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CreateTopic';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nimport Loading from '../ui/Loading';\n\nconst CreateTopicAsync: FC<OwnProps> = (props) => {\n  const CreateTopic = useModuleLoader(Bundles.Extra, 'CreateTopic');\n\n  return CreateTopic ? <CreateTopic {...props} /> : <Loading />;\n};\n\nexport default CreateTopicAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './EditTopic';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nimport Loading from '../ui/Loading';\n\nconst EditTopicAsync: FC<OwnProps> = (props) => {\n  const EditTopic = useModuleLoader(Bundles.Extra, 'EditTopic');\n\n  return EditTopic ? <EditTopic {...props} /> : <Loading />;\n};\n\nexport default EditTopicAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nimport Loading from '../ui/Loading';\n\nconst GifSearchAsync: FC = () => {\n  const GifSearch = useModuleLoader(Bundles.Extra, 'GifSearch');\n\n  return GifSearch ? <GifSearch /> : <Loading />;\n};\n\nexport default GifSearchAsync;\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nimport Loading from '../ui/Loading';\n\nconst PollResultsAsync: FC = () => {\n  const PollResults = useModuleLoader(Bundles.Extra, 'PollResults');\n\n  return PollResults ? <PollResults /> : <Loading />;\n};\n\nexport default PollResultsAsync;\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback,\n  useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBotPreviewMedia,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiSavedStarGift,\n  ApiTypeStory,\n  ApiUser,\n  ApiUserStatus,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type {\n  ProfileState, ProfileTabType, SharedMediaType, ThemeKey, ThreadId,\n} from '../../types';\nimport type { RegularLangKey } from '../../types/language';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { AudioOrigin, MediaViewerOrigin, NewChatMembersProgress } from '../../types';\n\nimport {\n  MEMBERS_SLICE,\n  PROFILE_SENSITIVE_AREA,\n  SHARED_MEDIA_SLICE,\n  SLIDE_TRANSITION_DURATION,\n} from '../../config';\nimport {\n  getHasAdminRight,\n  getIsDownloading,\n  getIsSavedDialog,\n  getMessageDocument,\n  getMessageDownloadableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatGroup,\n  isUserBot,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getSavedGiftKey } from '../../global/helpers/stars';\nimport {\n  selectActiveDownloads,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectCurrentSharedMediaSearch,\n  selectIsChatRestricted,\n  selectIsCurrentUserPremium,\n  selectIsRightColumnShown,\n  selectMonoforumChannel,\n  selectPeerStories,\n  selectSimilarBotsIds,\n  selectSimilarChannelIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserCommonChats,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectPremiumLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { isUserId } from '../../util/entities/ids';\nimport { LOCAL_TGS_URLS } from '../common/helpers/animatedAssets';\nimport renderText from '../common/helpers/renderText';\nimport { getSenderName } from '../left/search/helpers/getSenderName';\n\nimport { useViewTransition } from '../../hooks/animations/useViewTransition';\nimport usePeerStoriesPolling from '../../hooks/polling/usePeerStoriesPolling';\nimport useCacheBuster from '../../hooks/useCacheBuster';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useAsyncRendering from './hooks/useAsyncRendering';\nimport useProfileState from './hooks/useProfileState';\nimport useProfileViewportIds from './hooks/useProfileViewportIds';\nimport useTransitionFixes from './hooks/useTransitionFixes';\n\nimport AnimatedIconWithPreview from '../common/AnimatedIconWithPreview';\nimport Audio from '../common/Audio';\nimport Document from '../common/Document';\nimport SavedGift from '../common/gift/SavedGift';\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport Icon from '../common/icons/Icon';\nimport Media from '../common/Media';\nimport NothingFound from '../common/NothingFound';\nimport PreviewMedia from '../common/PreviewMedia';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ChatExtra from '../common/profile/ChatExtra';\nimport ProfileInfo from '../common/ProfileInfo';\nimport WebLink from '../common/WebLink';\nimport ChatList from '../left/main/ChatList';\nimport MediaStory from '../story/MediaStory';\nimport Button from '../ui/Button';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Link from '../ui/Link';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\nimport Spinner from '../ui/Spinner';\nimport TabList from '../ui/TabList';\nimport Transition from '../ui/Transition';\nimport DeleteMemberModal from './DeleteMemberModal';\n\nimport './Profile.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  profileState: ProfileState;\n  isMobile?: boolean;\n  isActive: boolean;\n  onProfileStateChange: (state: ProfileState) => void;\n};\n\ntype StateProps = {\n  monoforumChannel?: ApiChat;\n  theme: ThemeKey;\n  isChannel?: boolean;\n  isBot?: boolean;\n  currentUserId?: string;\n  messagesById?: Record<number, ApiMessage>;\n  foundIds?: number[];\n  mediaSearchType?: SharedMediaType;\n  hasCommonChatsTab?: boolean;\n  hasStoriesTab?: boolean;\n  hasMembersTab?: boolean;\n  hasPreviewMediaTab?: boolean;\n  hasGiftsTab?: boolean;\n  gifts?: ApiSavedStarGift[];\n  areMembersHidden?: boolean;\n  canAddMembers?: boolean;\n  canDeleteMembers?: boolean;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  commonChatIds?: string[];\n  storyIds?: number[];\n  pinnedStoryIds?: number[];\n  archiveStoryIds?: number[];\n  storyByIds?: Record<number, ApiTypeStory>;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  isRightColumnShown: boolean;\n  isRestricted?: boolean;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  nextProfileTab?: ProfileTabType;\n  shouldWarnAboutSvg?: boolean;\n  similarChannels?: string[];\n  similarBots?: string[];\n  botPreviewMedia?: ApiBotPreviewMedia[];\n  isCurrentUserPremium?: boolean;\n  limitSimilarPeers: number;\n  isTopicInfo?: boolean;\n  isSavedDialog?: boolean;\n  forceScrollProfileTab?: boolean;\n  isSynced?: boolean;\n};\n\ntype TabProps = {\n  type: ProfileTabType;\n  key: RegularLangKey;\n};\n\nconst TABS: TabProps[] = [\n  { type: 'media', key: 'ProfileTabMedia' },\n  { type: 'documents', key: 'ProfileTabFiles' },\n  { type: 'links', key: 'ProfileTabLinks' },\n  { type: 'audio', key: 'ProfileTabMusic' },\n];\n\nconst HIDDEN_RENDER_DELAY = 1000;\nconst INTERSECTION_THROTTLE = 500;\n\nconst Profile: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  threadId,\n  profileState,\n  theme,\n  monoforumChannel,\n  isChannel,\n  isBot,\n  currentUserId,\n  messagesById,\n  foundIds,\n  storyIds,\n  pinnedStoryIds,\n  archiveStoryIds,\n  storyByIds,\n  mediaSearchType,\n  hasCommonChatsTab,\n  hasStoriesTab,\n  hasMembersTab,\n  hasPreviewMediaTab,\n  hasGiftsTab,\n  gifts,\n  botPreviewMedia,\n  areMembersHidden,\n  canAddMembers,\n  canDeleteMembers,\n  commonChatIds,\n  members,\n  adminMembersById,\n  usersById,\n  userStatusesById,\n  chatsById,\n  isRightColumnShown,\n  isRestricted,\n  activeDownloads,\n  isChatProtected,\n  nextProfileTab,\n  shouldWarnAboutSvg,\n  similarChannels,\n  similarBots,\n  isCurrentUserPremium,\n  limitSimilarPeers,\n  isTopicInfo,\n  isSavedDialog,\n  forceScrollProfileTab,\n  isSynced,\n  onProfileStateChange,\n}) => {\n  const {\n    setSharedMediaSearchType,\n    loadMoreMembers,\n    loadCommonChats,\n    openChat,\n    searchSharedMediaMessages,\n    openMediaViewer,\n    openAudioPlayer,\n    focusMessage,\n    setNewChatMembersDialogState,\n    loadPeerProfileStories,\n    loadStoriesArchive,\n    openPremiumModal,\n    loadChannelRecommendations,\n    loadBotRecommendations,\n    loadPreviewMedias,\n    loadPeerSavedGifts,\n    resetGiftProfileFilter,\n  } = getActions();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const transitionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const profileId = isSavedDialog ? String(threadId) : chatId;\n  const isSavedMessages = profileId === currentUserId && !isSavedDialog;\n\n  const tabs = useMemo(() => {\n    const arr: TabProps[] = [];\n    if (isSavedMessages && !isSavedDialog) {\n      arr.push({ type: 'dialogs', key: 'ProfileTabSavedDialogs' });\n    }\n\n    if (hasStoriesTab) {\n      arr.push({ type: 'stories', key: 'ProfileTabStories' });\n    }\n\n    if (hasStoriesTab && isSavedMessages) {\n      arr.push({ type: 'storiesArchive', key: 'ProfileTabStoriesArchive' });\n    }\n\n    if (hasGiftsTab) {\n      arr.push({ type: 'gifts', key: 'ProfileTabGifts' });\n    }\n\n    if (hasMembersTab) {\n      arr.push({ type: 'members', key: isChannel ? 'ProfileTabSubscribers' : 'ProfileTabMembers' });\n    }\n\n    if (hasPreviewMediaTab) {\n      arr.push({ type: 'previewMedia', key: 'ProfileTabBotPreview' });\n    }\n\n    arr.push(...TABS);\n\n    // Voice messages filter currently does not work in forum topics. Return it when it's fixed on the server side.\n    if (!isTopicInfo) {\n      arr.push({ type: 'voice', key: 'ProfileTabVoice' });\n    }\n\n    if (hasCommonChatsTab) {\n      arr.push({ type: 'commonChats', key: 'ProfileTabSharedGroups' });\n    }\n\n    if (isChannel && similarChannels?.length) {\n      arr.push({ type: 'similarChannels', key: 'ProfileTabSimilarChannels' });\n    }\n\n    if (isBot && similarBots?.length) {\n      arr.push({ type: 'similarBots', key: 'ProfileTabSimilarBots' });\n    }\n\n    return arr.map((tab) => ({\n      type: tab.type,\n      title: lang(tab.key),\n    }));\n  }, [\n    isSavedMessages, isSavedDialog, hasStoriesTab, hasGiftsTab, hasMembersTab, hasPreviewMediaTab, isTopicInfo,\n    hasCommonChatsTab, isChannel, isBot, similarChannels?.length, similarBots?.length, lang,\n  ]);\n\n  const initialTab = useMemo(() => {\n    if (!nextProfileTab) {\n      return 0;\n    }\n\n    const index = tabs.findIndex(({ type }) => type === nextProfileTab);\n    return index === -1 ? 0 : index;\n  }, [nextProfileTab, tabs]);\n\n  const [allowAutoScrollToTabs, startAutoScrollToTabsIfNeeded, stopAutoScrollToTabs] = useFlag(false);\n\n  const [activeTab, setActiveTab] = useState(initialTab);\n\n  useEffect(() => {\n    if (!nextProfileTab) return;\n    const index = tabs.findIndex(({ type }) => type === nextProfileTab);\n\n    if (index === -1) return;\n    setActiveTab(index);\n  }, [nextProfileTab, tabs]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    startAutoScrollToTabsIfNeeded();\n    setActiveTab(index);\n  }, []);\n\n  useEffect(() => {\n    if (hasPreviewMediaTab && !botPreviewMedia) {\n      loadPreviewMedias({ botId: chatId });\n    }\n  }, [chatId, botPreviewMedia, hasPreviewMediaTab]);\n\n  useEffect(() => {\n    if (isChannel && !similarChannels && isSynced) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, isChannel, similarChannels, isSynced]);\n\n  useEffect(() => {\n    if (isBot && !similarBots && isSynced) {\n      loadBotRecommendations({ userId: chatId });\n    }\n  }, [chatId, isBot, similarBots, isSynced]);\n\n  const [renderingGifts, setRenderingGifts] = useState(gifts);\n  const { startViewTransition, shouldApplyVtn } = useViewTransition();\n\n  const giftIds = useMemo(() => renderingGifts?.map((gift) => getSavedGiftKey(gift)), [renderingGifts]);\n\n  const renderingActiveTab = activeTab > tabs.length - 1 ? tabs.length - 1 : activeTab;\n  const tabType = tabs[renderingActiveTab].type;\n  const handleLoadCommonChats = useCallback(() => {\n    loadCommonChats({ userId: chatId });\n  }, [chatId]);\n  const handleLoadPeerStories = useCallback(({ offsetId }: { offsetId: number }) => {\n    loadPeerProfileStories({ peerId: chatId, offsetId });\n  }, [chatId]);\n  const handleLoadStoriesArchive = useCallback(({ offsetId }: { offsetId: number }) => {\n    loadStoriesArchive({ peerId: chatId, offsetId });\n  }, [chatId]);\n  const handleLoadGifts = useCallback(() => {\n    loadPeerSavedGifts({ peerId: chatId });\n  }, [chatId]);\n  const handleLoadMoreMembers = useCallback(() => {\n    loadMoreMembers({ chatId });\n  }, [chatId, loadMoreMembers]);\n\n  useEffectWithPrevDeps(([prevGifts]) => {\n    if (!gifts || !prevGifts) {\n      setRenderingGifts(gifts);\n      return;\n    }\n\n    const prevGiftIds = prevGifts.map((gift) => getSavedGiftKey(gift));\n    const newGiftIds = gifts.map((gift) => getSavedGiftKey(gift));\n    const hasOrderChanged = prevGiftIds.some((id, index) => id !== newGiftIds[index]);\n\n    if (hasOrderChanged) {\n      startViewTransition(() => {\n        setRenderingGifts(gifts);\n      });\n    } else {\n      setRenderingGifts(gifts);\n    }\n  }, [gifts, startViewTransition]);\n\n  const [resultType, viewportIds, getMore, noProfileInfo] = useProfileViewportIds({\n    loadMoreMembers: handleLoadMoreMembers,\n    searchMessages: searchSharedMediaMessages,\n    loadStories: handleLoadPeerStories,\n    loadStoriesArchive: handleLoadStoriesArchive,\n    loadMoreGifts: handleLoadGifts,\n    loadCommonChats: handleLoadCommonChats,\n    tabType,\n    mediaSearchType,\n    groupChatMembers: members,\n    commonChatIds,\n    usersById,\n    userStatusesById,\n    chatsById,\n    chatMessages: messagesById,\n    foundIds,\n    threadId,\n    storyIds,\n    giftIds,\n    pinnedStoryIds,\n    archiveStoryIds,\n    similarChannels,\n    similarBots,\n  });\n  const isFirstTab = (isSavedMessages && resultType === 'dialogs')\n    || (hasStoriesTab && resultType === 'stories')\n    || resultType === 'members'\n    || (!hasMembersTab && resultType === 'media');\n  const activeKey = tabs.findIndex(({ type }) => type === resultType);\n\n  usePeerStoriesPolling(resultType === 'members' ? viewportIds as string[] : undefined);\n\n  const handleStopAutoScrollToTabs = useLastCallback(() => {\n    stopAutoScrollToTabs();\n  });\n\n  const { handleScroll } = useProfileState(\n    containerRef,\n    resultType,\n    profileState,\n    onProfileStateChange,\n    forceScrollProfileTab,\n    allowAutoScrollToTabs,\n    handleStopAutoScrollToTabs,\n  );\n\n  const { applyTransitionFix, releaseTransitionFix } = useTransitionFixes(containerRef);\n\n  const [cacheBuster, resetCacheBuster] = useCacheBuster();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleTransitionStop = useLastCallback(() => {\n    releaseTransitionFix();\n    resetCacheBuster();\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  // Update search type when switching tabs or forum topics\n  useEffect(() => {\n    setSharedMediaSearchType({ mediaType: tabType as SharedMediaType });\n  }, [setSharedMediaSearchType, tabType, threadId]);\n\n  const handleSelectMedia = useLastCallback((messageId: number) => {\n    openMediaViewer({\n      chatId: profileId,\n      threadId: MAIN_THREAD_ID,\n      messageId,\n      origin: MediaViewerOrigin.SharedMedia,\n    });\n  });\n\n  const handleSelectPreviewMedia = useLastCallback((index: number) => {\n    openMediaViewer({\n      standaloneMedia: botPreviewMedia?.flatMap((item) => item?.content.photo\n        || item?.content.video).filter(Boolean),\n      origin: MediaViewerOrigin.PreviewMedia,\n      mediaIndex: index,\n    });\n  });\n\n  const handlePlayAudio = useLastCallback((messageId: number) => {\n    openAudioPlayer({ chatId: profileId, messageId });\n  });\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    openChat({ id });\n  });\n\n  const handleMessageFocus = useLastCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  useEffectWithPrevDeps(([prevHasMemberTabs]) => {\n    if (prevHasMemberTabs === undefined || activeTab === 0 || prevHasMemberTabs === hasMembersTab) {\n      return;\n    }\n\n    const newActiveTab = activeTab + (hasMembersTab ? 1 : -1);\n\n    setActiveTab(Math.min(newActiveTab, tabs.length - 1));\n  }, [hasMembersTab, activeTab, tabs]);\n\n  const handleResetGiftsFilter = useLastCallback(() => {\n    resetGiftProfileFilter({ peerId: chatId });\n  });\n\n  useEffect(() => {\n    if (!transitionRef.current || !IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(transitionRef.current, {\n      selectorToPreventScroll: '.Profile',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          setActiveTab(Math.min(renderingActiveTab + 1, tabs.length - 1));\n          return true;\n        } else if (direction === SwipeDirection.Right) {\n          setActiveTab(Math.max(0, renderingActiveTab - 1));\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [renderingActiveTab, tabs.length]);\n\n  let renderingDelay;\n  // @optimization Used to unparallelize rendering of message list and profile media\n  if (isFirstTab) {\n    renderingDelay = !isRightColumnShown ? HIDDEN_RENDER_DELAY : 0;\n    // @optimization Used to delay first render of secondary tabs while animating\n  } else if (!viewportIds && !botPreviewMedia) {\n    renderingDelay = SLIDE_TRANSITION_DURATION;\n  }\n  const canRenderContent = useAsyncRendering([chatId, threadId, resultType, renderingActiveTab], renderingDelay);\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: oldLang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderNothingFoundGiftsWithFilter() {\n    return (\n      <div className=\"nothing-found-gifts\">\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.SearchingDuck}\n          nonInteractive\n          noLoop\n        />\n        <div className=\"description\">\n          {lang('GiftSearchEmpty')}\n        </div>\n        <Link\n          className=\"date\"\n          onClick={handleResetGiftsFilter}\n        >\n          {lang('GiftSearchReset')}\n        </Link>\n      </div>\n    );\n  }\n\n  function renderContent() {\n    if (resultType === 'dialogs') {\n      return (\n        <ChatList className=\"saved-dialogs\" folderType=\"saved\" isActive />\n      );\n    }\n\n    if ((!viewportIds && !botPreviewMedia) || !canRenderContent || !messagesById) {\n      const noSpinner = isFirstTab && !canRenderContent;\n      const forceRenderHiddenMembers = Boolean(resultType === 'members' && areMembersHidden);\n\n      return (\n        <div\n          className=\"content empty-list\"\n        >\n          {!noSpinner && !forceRenderHiddenMembers && <Spinner />}\n          {forceRenderHiddenMembers && <NothingFound text=\"You have no access to group members list.\" />}\n        </div>\n      );\n    }\n\n    const isViewportIdsEmpty = viewportIds && !viewportIds?.length;\n\n    if (isViewportIdsEmpty && resultType === 'gifts') {\n      return renderNothingFoundGiftsWithFilter();\n    }\n\n    if (isViewportIdsEmpty) {\n      let text: string;\n\n      switch (resultType) {\n        case 'members':\n          text = areMembersHidden ? 'You have no access to group members list.' : 'No members found';\n          break;\n        case 'commonChats':\n          text = oldLang('NoGroupsInCommon');\n          break;\n        case 'documents':\n          text = oldLang('lng_media_file_empty');\n          break;\n        case 'links':\n          text = oldLang('lng_media_link_empty');\n          break;\n        case 'audio':\n          text = oldLang('lng_media_song_empty');\n          break;\n        case 'voice':\n          text = oldLang('lng_media_audio_empty');\n          break;\n        case 'stories':\n          text = oldLang('StoryList.SavedEmptyState.Title');\n          break;\n        case 'storiesArchive':\n          text = oldLang('StoryList.ArchivedEmptyState.Title');\n          break;\n        default:\n          text = oldLang('SharedMedia.EmptyTitle');\n      }\n\n      return (\n        <div className=\"content empty-list\">\n          <NothingFound text={text} />\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={`content ${resultType}-list`}\n        dir={oldLang.isRtl && resultType === 'media' ? 'rtl' : undefined}\n        teactFastList\n      >\n        {resultType === 'media' ? (\n          (viewportIds as number[]).map((id) => messagesById[id] && (\n            <Media\n              key={id}\n              message={messagesById[id]}\n              isProtected={isChatProtected || messagesById[id].isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onClick={handleSelectMedia}\n            />\n          ))\n        ) : (resultType === 'stories' || resultType === 'storiesArchive') ? (\n          (viewportIds as number[]).map((id, i) => storyByIds?.[id] && (\n            <MediaStory\n              teactOrderKey={i}\n              key={`${resultType}_${id}`}\n              story={storyByIds[id]}\n              isArchive={resultType === 'storiesArchive'}\n            />\n          ))\n        ) : resultType === 'documents' ? (\n          (viewportIds as number[]).map((id) => messagesById[id] && (\n            <Document\n              key={id}\n              document={getMessageDocument(messagesById[id])!}\n              withDate\n              smaller\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, getMessageDocument(messagesById[id])!)}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n              message={messagesById[id]}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n            />\n          ))\n        ) : resultType === 'links' ? (\n          (viewportIds as number[]).map((id) => messagesById[id] && (\n            <WebLink\n              key={id}\n              message={messagesById[id]}\n              isProtected={isChatProtected || messagesById[id].isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          ))\n        ) : resultType === 'audio' ? (\n          (viewportIds as number[]).map((id) => messagesById[id] && (\n            <Audio\n              key={id}\n              theme={theme}\n              message={messagesById[id]}\n              origin={AudioOrigin.SharedMedia}\n              date={messagesById[id].date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!isChatProtected && !messagesById[id].isProtected}\n              isDownloading={getIsDownloading(activeDownloads, messagesById[id].content.audio!)}\n            />\n          ))\n        ) : resultType === 'voice' ? (\n          (viewportIds as number[]).map((id) => {\n            const message = messagesById[id];\n            if (!message) return undefined;\n            const media = messagesById[id] && getMessageDownloadableMedia(message)!;\n            return messagesById[id] && (\n              <Audio\n                key={id}\n                theme={theme}\n                message={messagesById[id]}\n                senderTitle={getSenderName(oldLang, messagesById[id], chatsById, usersById)}\n                origin={AudioOrigin.SharedMedia}\n                date={messagesById[id].date}\n                className=\"scroll-item\"\n                onPlay={handlePlayAudio}\n                onDateClick={handleMessageFocus}\n                canDownload={!isChatProtected && !messagesById[id].isProtected}\n                isDownloading={getIsDownloading(activeDownloads, media)}\n              />\n            );\n          })\n        ) : resultType === 'members' ? (\n          (viewportIds as string[]).map((id, i) => (\n            <ListItem\n              key={id}\n              teactOrderKey={i}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n\n              onClick={() => handleMemberClick(id)}\n              contextActions={getMemberContextAction(id)}\n            >\n              <PrivateChatInfo userId={id} adminMember={adminMembersById?.[id]} forceShowSelf withStory />\n            </ListItem>\n          ))\n        ) : resultType === 'commonChats' ? (\n          (viewportIds as string[]).map((id, i) => (\n            <ListItem\n              key={id}\n              teactOrderKey={i}\n              className=\"chat-item-clickable scroll-item small-icon\"\n\n              onClick={() => openChat({ id })}\n            >\n              <GroupChatInfo chatId={id} />\n            </ListItem>\n          ))\n        ) : resultType === 'previewMedia' ? (\n          botPreviewMedia!.map((media, i) => (\n            <PreviewMedia\n              key={media.date}\n              media={media}\n              isProtected={isChatProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onClick={handleSelectPreviewMedia}\n              index={i}\n            />\n          ))\n        ) : resultType === 'similarChannels' ? (\n          <div key={resultType}>\n            {(viewportIds as string[]).map((channelId, i) => (\n              <ListItem\n                key={channelId}\n                teactOrderKey={i}\n                className={buildClassName(\n                  'chat-item-clickable search-result',\n                  !isCurrentUserPremium && i === similarChannels!.length - 1 && 'blured',\n                )}\n\n                onClick={() => openChat({ id: channelId })}\n              >\n                <GroupChatInfo avatarSize=\"large\" chatId={channelId} withFullInfo />\n              </ListItem>\n            ))}\n            {!isCurrentUserPremium && (\n              <>\n                {}\n                <Button className=\"show-more-channels\" size=\"smaller\" onClick={() => openPremiumModal()}>\n                  {oldLang('UnlockSimilar')}\n                  <Icon name=\"unlock-badge\" />\n                </Button>\n                <div className=\"more-similar\">\n                  {renderText(oldLang('MoreSimilarText', limitSimilarPeers), ['simple_markdown'])}\n                </div>\n              </>\n            )}\n          </div>\n        ) : resultType === 'similarBots' ? (\n          <div key={resultType}>\n            {(viewportIds as string[]).map((userId, i) => (\n              <ListItem\n                key={userId}\n                teactOrderKey={i}\n                className={buildClassName(\n                  'chat-item-clickable search-result',\n                  !isCurrentUserPremium && i === similarBots!.length - 1 && 'blured',\n                )}\n\n                onClick={() => openChat({ id: userId })}\n              >\n                {isUserId(userId) ? (\n                  <PrivateChatInfo\n                    userId={userId}\n                    avatarSize=\"medium\"\n                  />\n                ) : (\n                  <GroupChatInfo\n                    chatId={userId}\n                    avatarSize=\"medium\"\n                  />\n                )}\n              </ListItem>\n            ))}\n            {!isCurrentUserPremium && (\n              <>\n                {}\n                <Button className=\"show-more-bots\" size=\"smaller\" onClick={() => openPremiumModal()}>\n                  {lang('UnlockMoreSimilarBots')}\n                  <Icon name=\"unlock-badge\" />\n                </Button>\n                <div className=\"more-similar\">\n                  {renderText(lang('MoreSimilarBotsDescription', { count: limitSimilarPeers }, {\n                    withNodes: true,\n                    withMarkdown: true,\n                    pluralValue: limitSimilarPeers,\n                  }))}\n                </div>\n              </>\n            )}\n          </div>\n        ) : resultType === 'gifts' ? (\n          (renderingGifts?.map((gift) => {\n            return (\n              <SavedGift\n                peerId={chatId}\n                key={getSavedGiftKey(gift)}\n                style={shouldApplyVtn ? `view-transition-name: vt${getSavedGiftKey(gift)}` : undefined}\n                gift={gift}\n                observeIntersection={observeIntersectionForMedia}\n              />\n            );\n          }))\n        ) : undefined}\n      </div>\n    );\n  }\n\n  const activeListSelector = `.shared-media-transition > .Transition_slide-active.${resultType}-list`;\n  const itemSelector = `${activeListSelector} > .scroll-item`;\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"Profile custom-scroll\"\n      itemSelector={itemSelector}\n      items={canRenderContent ? viewportIds : undefined}\n      cacheBuster={cacheBuster}\n      sensitiveArea={PROFILE_SENSITIVE_AREA}\n      preloadBackwards={canRenderContent ? (resultType === 'members' ? MEMBERS_SLICE : SHARED_MEDIA_SLICE) : 0}\n      // To prevent scroll jumps caused by reordering member list\n      noScrollRestoreOnTop\n      noFastList\n      onLoadMore={getMore}\n      onScroll={handleScroll}\n    >\n      {!noProfileInfo && !isSavedMessages && (\n        renderProfileInfo(\n          monoforumChannel?.id || profileId,\n          isRightColumnShown && canRenderContent,\n          isSavedDialog,\n          Boolean(monoforumChannel),\n        )\n      )}\n      {!isRestricted && (\n        <div\n          className=\"shared-media\"\n        >\n          <Transition\n            ref={transitionRef}\n            name={oldLang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n            activeKey={activeKey}\n            renderCount={tabs.length}\n            shouldRestoreHeight\n            className=\"shared-media-transition\"\n            onStart={applyTransitionFix}\n            onStop={handleTransitionStop}\n          >\n            {renderContent()}\n          </Transition>\n          <TabList activeTab={renderingActiveTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n        </div>\n      )}\n\n      {canAddMembers && (\n        <FloatingActionButton\n          className={buildClassName(!isActive && 'hidden')}\n          isShown={canRenderContent}\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={oldLang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nfunction renderProfileInfo(profileId: string, isReady: boolean, isSavedDialog?: boolean, isForMonoforum?: boolean) {\n  return (\n    <div className=\"profile-info\">\n      <ProfileInfo peerId={profileId} canPlayVideo={isReady} isForMonoforum={isForMonoforum} />\n      <ChatExtra chatOrUserId={profileId} isSavedDialog={isSavedDialog} />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, isMobile,\n  }): StateProps => {\n    const user = selectUser(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    const messagesById = selectChatMessages(global, chatId);\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n\n    const { currentType: mediaSearchType, resultsByType } = selectCurrentSharedMediaSearch(global) || {};\n    const { foundIds } = (resultsByType && mediaSearchType && resultsByType[mediaSearchType]) || {};\n\n    const isTopicInfo = Boolean(chat?.isForum && threadId && threadId !== MAIN_THREAD_ID);\n\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isGroup = chat && isChatGroup(chat);\n    const isChannel = chat && isChatChannel(chat);\n    const isBot = user && isUserBot(user);\n    const hasMembersTab = !isTopicInfo && !isSavedDialog\n      && (isGroup || (isChannel && isChatAdmin(chat))) && !chat?.isMonoforum;\n    const members = chatFullInfo?.members;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const areMembersHidden = hasMembersTab && chat\n      && (chat.isForbidden || (chatFullInfo && !chatFullInfo.canViewMembers));\n    const canAddMembers = hasMembersTab && chat\n      && (getHasAdminRight(chat, 'inviteUsers') || (!isChannel && !isUserRightBanned(chat, 'inviteUsers'))\n        || chat.isCreator);\n    const canDeleteMembers = hasMembersTab && chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n    const activeDownloads = selectActiveDownloads(global);\n    const { similarChannelIds } = selectSimilarChannelIds(global, chatId) || {};\n    const { similarBotsIds } = selectSimilarBotsIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const peer = user || chat;\n    const peerFullInfo = userFullInfo || chatFullInfo;\n\n    const hasCommonChatsTab = user && !user.isSelf && !isUserBot(user) && !isSavedDialog\n      && Boolean(userFullInfo?.commonChatsCount);\n    const commonChats = selectUserCommonChats(global, chatId);\n\n    const hasPreviewMediaTab = userFullInfo?.botInfo?.hasPreviewMedia;\n    const botPreviewMedia = global.users.previewMediaByBotId[chatId];\n\n    const hasStoriesTab = peer && (user?.isSelf || (!peer.areStoriesHidden && peerFullInfo?.hasPinnedStories))\n      && !isSavedDialog;\n    const peerStories = hasStoriesTab ? selectPeerStories(global, peer.id) : undefined;\n    const storyIds = peerStories?.profileIds;\n    const pinnedStoryIds = peerStories?.pinnedIds;\n    const storyByIds = peerStories?.byId;\n    const archiveStoryIds = peerStories?.archiveIds;\n\n    const hasGiftsTab = Boolean(peerFullInfo?.starGiftCount) && !isSavedDialog;\n    const peerGifts = selectTabState(global).savedGifts.giftsByPeerId[chatId];\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n    const isRestricted = chat && selectIsChatRestricted(global, chat.id);\n\n    return {\n      theme: selectTheme(global),\n      isChannel,\n      isBot,\n      messagesById,\n      foundIds,\n      mediaSearchType,\n      hasCommonChatsTab,\n      hasStoriesTab,\n      hasMembersTab,\n      hasPreviewMediaTab,\n      areMembersHidden,\n      canAddMembers,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isRestricted,\n      activeDownloads,\n      usersById,\n      userStatusesById,\n      chatsById,\n      storyIds,\n      hasGiftsTab,\n      gifts: peerGifts?.gifts,\n      pinnedStoryIds,\n      archiveStoryIds,\n      storyByIds,\n      isChatProtected: chat?.isProtected,\n      nextProfileTab: selectTabState(global).nextProfileTab,\n      forceScrollProfileTab: selectTabState(global).forceScrollProfileTab,\n      shouldWarnAboutSvg,\n      similarChannels: similarChannelIds,\n      similarBots: similarBotsIds,\n      botPreviewMedia,\n      isCurrentUserPremium,\n      isTopicInfo,\n      isSavedDialog,\n      isSynced: global.isSynced,\n      limitSimilarPeers: selectPremiumLimit(global, 'recommendedChannels'),\n      ...(hasMembersTab && members && { members, adminMembersById }),\n      ...(hasCommonChatsTab && user && { commonChatIds: commonChats?.ids }),\n      monoforumChannel,\n    };\n  },\n)(Profile));\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ProfileTabType, ThreadId } from '../../types';\nimport {\n  ManagementScreens, NewChatMembersProgress, ProfileState, RightColumnContent,\n} from '../../types';\n\nimport { ANIMATION_END_DELAY, MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN } from '../../config';\nimport { getIsSavedDialog } from '../../global/helpers';\nimport {\n  selectAreActiveChatsLoaded,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectRightColumnContentKey,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useMarkScrolled from '../../hooks/useMarkScrolled/useMarkScrolled';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Transition from '../ui/Transition';\nimport AddChatMembers from './AddChatMembers';\nimport CreateTopic from './CreateTopic.async';\nimport EditTopic from './EditTopic.async';\nimport GifSearch from './GifSearch.async';\nimport Management from './management/Management.async';\nimport PollResults from './PollResults.async';\nimport Profile from './Profile';\nimport RightHeader from './RightHeader';\nimport BoostStatistics from './statistics/BoostStatistics';\nimport MessageStatistics from './statistics/MessageStatistics.async';\nimport MonetizationStatistics from './statistics/MonetizationStatistics';\nimport Statistics from './statistics/Statistics.async';\nimport StoryStatistics from './statistics/StoryStatistics.async';\nimport StickerSearch from './StickerSearch.async';\n\nimport './RightColumn.scss';\n\ninterface OwnProps {\n  isMobile?: boolean;\n}\n\ntype StateProps = {\n  contentKey?: RightColumnContent;\n  chatId?: string;\n  threadId?: ThreadId;\n  isInsideTopic?: boolean;\n  isChatSelected: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  nextManagementScreen?: ManagementScreens;\n  nextProfileTab?: ProfileTabType;\n  shouldCloseRightColumn?: boolean;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n};\n\nconst ANIMATION_DURATION = 450 + ANIMATION_END_DELAY;\nconst MAIN_SCREENS_COUNT = Object.keys(RightColumnContent).length / 2;\nconst MANAGEMENT_SCREENS_COUNT = Object.keys(ManagementScreens).length / 2;\n\nfunction blurSearchInput() {\n  const searchInput = document.querySelector('.RightHeader .SearchInput input') as HTMLInputElement;\n  if (searchInput) {\n    searchInput.blur();\n  }\n}\n\nconst RightColumn: FC<OwnProps & StateProps> = ({\n  contentKey,\n  chatId,\n  threadId,\n  isMobile,\n  isChatSelected,\n  shouldSkipHistoryAnimations,\n  nextManagementScreen,\n  nextProfileTab,\n  shouldCloseRightColumn,\n  isSavedMessages,\n  isSavedDialog,\n}) => {\n  const {\n    toggleChatInfo,\n    toggleManagement,\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    closePollResults,\n    addChatMembers,\n    setNewChatMembersDialogState,\n    setEditingExportedInvite,\n    toggleStatistics,\n    toggleMessageStatistics,\n    toggleStoryStatistics,\n    setOpenedInviteInfo,\n    requestNextManagementScreen,\n    resetNextProfileTab,\n    closeCreateTopicPanel,\n    closeEditTopicPanel,\n    closeBoostStatistics,\n    setShouldCloseRightColumn,\n    closeMonetizationStatistics,\n  } = getActions();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  const { width: windowWidth } = useWindowSize();\n  const [profileState, setProfileState] = useState<ProfileState>(\n    isSavedMessages && !isSavedDialog ? ProfileState.SavedDialogs : ProfileState.Profile,\n  );\n  const [managementScreen, setManagementScreen] = useState<ManagementScreens>(ManagementScreens.Initial);\n  const [selectedChatMemberId, setSelectedChatMemberId] = useState<string | undefined>();\n  const [isPromotedByCurrentUser, setIsPromotedByCurrentUser] = useState<boolean | undefined>();\n  const isScrolledDown = profileState !== ProfileState.Profile;\n\n  const isOpen = contentKey !== undefined;\n  const isProfile = contentKey === RightColumnContent.ChatInfo;\n  const isManagement = contentKey === RightColumnContent.Management;\n  const isStatistics = contentKey === RightColumnContent.Statistics;\n  const isMessageStatistics = contentKey === RightColumnContent.MessageStatistics;\n  const isStoryStatistics = contentKey === RightColumnContent.StoryStatistics;\n  const isBoostStatistics = contentKey === RightColumnContent.BoostStatistics;\n  const isMonetizationStatistics = contentKey === RightColumnContent.MonetizationStatistics;\n  const isStickerSearch = contentKey === RightColumnContent.StickerSearch;\n  const isGifSearch = contentKey === RightColumnContent.GifSearch;\n  const isPollResults = contentKey === RightColumnContent.PollResults;\n  const isAddingChatMembers = contentKey === RightColumnContent.AddingMembers;\n  const isCreatingTopic = contentKey === RightColumnContent.CreateTopic;\n  const isEditingTopic = contentKey === RightColumnContent.EditTopic;\n  const isOverlaying = windowWidth <= MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN;\n\n  const [shouldSkipTransition, setShouldSkipTransition] = useState(!isOpen);\n\n  const renderingContentKey = useCurrentOrPrev(contentKey, true, !isChatSelected) ?? -1;\n\n  useMarkScrolled({\n    containerRef,\n    selector: ':scope .custom-scroll, :scope .panel-content',\n  }, [contentKey, managementScreen, chatId, threadId]);\n\n  const close = useLastCallback((shouldScrollUp = true) => {\n    switch (contentKey) {\n      case RightColumnContent.AddingMembers:\n        setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Closed });\n        break;\n      case RightColumnContent.ChatInfo:\n        if (isScrolledDown && shouldScrollUp && !isSavedMessages) {\n          setProfileState(ProfileState.Profile);\n          break;\n        }\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        break;\n      case RightColumnContent.Management: {\n        switch (managementScreen) {\n          case ManagementScreens.Initial:\n            toggleManagement();\n            break;\n          case ManagementScreens.ChatPrivacyType:\n          case ManagementScreens.Discussion:\n          case ManagementScreens.GroupPermissions:\n          case ManagementScreens.GroupType:\n          case ManagementScreens.ChatAdministrators:\n          case ManagementScreens.ChannelSubscribers:\n          case ManagementScreens.GroupMembers:\n          case ManagementScreens.Invites:\n          case ManagementScreens.Reactions:\n          case ManagementScreens.JoinRequests:\n          case ManagementScreens.ChannelRemovedUsers:\n            setManagementScreen(ManagementScreens.Initial);\n            break;\n          case ManagementScreens.GroupUserPermissionsCreate:\n          case ManagementScreens.GroupRemovedUsers:\n          case ManagementScreens.GroupUserPermissions:\n            setManagementScreen(ManagementScreens.GroupPermissions);\n            setSelectedChatMemberId(undefined);\n            setIsPromotedByCurrentUser(undefined);\n            break;\n          case ManagementScreens.NewDiscussionGroup:\n            setManagementScreen(ManagementScreens.Discussion);\n            break;\n          case ManagementScreens.ChatAdminRights:\n          case ManagementScreens.ChatNewAdminRights:\n          case ManagementScreens.GroupAddAdmins:\n          case ManagementScreens.GroupRecentActions:\n            setManagementScreen(ManagementScreens.ChatAdministrators);\n            break;\n          case ManagementScreens.EditInvite:\n          case ManagementScreens.InviteInfo:\n            setManagementScreen(ManagementScreens.Invites);\n            setOpenedInviteInfo({ chatId: chatId!, invite: undefined });\n            setEditingExportedInvite({ chatId: chatId!, invite: undefined });\n            break;\n        }\n\n        break;\n      }\n      case RightColumnContent.MessageStatistics:\n        toggleMessageStatistics();\n        break;\n      case RightColumnContent.StoryStatistics:\n        toggleStoryStatistics();\n        break;\n      case RightColumnContent.Statistics:\n        toggleStatistics();\n        break;\n      case RightColumnContent.BoostStatistics:\n        closeBoostStatistics();\n        break;\n      case RightColumnContent.MonetizationStatistics:\n        closeMonetizationStatistics();\n        break;\n      case RightColumnContent.StickerSearch:\n        blurSearchInput();\n        setStickerSearchQuery({ query: undefined });\n        break;\n      case RightColumnContent.GifSearch: {\n        blurSearchInput();\n        setGifSearchQuery({ query: undefined });\n        break;\n      }\n      case RightColumnContent.PollResults:\n        closePollResults();\n        break;\n      case RightColumnContent.CreateTopic:\n        closeCreateTopicPanel();\n        break;\n      case RightColumnContent.EditTopic:\n        closeEditTopicPanel();\n        break;\n    }\n  });\n\n  const handleSelectChatMember = useLastCallback((memberId, isPromoted) => {\n    setSelectedChatMemberId(memberId);\n    setIsPromotedByCurrentUser(isPromoted);\n  });\n\n  const handleAppendingChatMembers = useLastCallback((memberIds: string[]) => {\n    addChatMembers({ chatId: chatId!, memberIds });\n  });\n\n  useEffect(() => (isOpen && chatId ? captureEscKeyListener(close) : undefined), [isOpen, close, chatId]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShouldSkipTransition(!isOpen);\n    }, ANIMATION_DURATION);\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (nextManagementScreen) {\n      setManagementScreen(nextManagementScreen);\n      requestNextManagementScreen(undefined);\n    }\n  }, [nextManagementScreen]);\n\n  useEffect(() => {\n    if (!nextProfileTab) return;\n\n    resetNextProfileTab();\n  }, [nextProfileTab]);\n\n  useEffect(() => {\n    if (shouldCloseRightColumn) {\n      close();\n      setShouldCloseRightColumn({ value: undefined });\n    }\n  }, [shouldCloseRightColumn]);\n\n  // Close Right Column when it transforms into overlayed state on screen resize\n  useEffect(() => {\n    if (isOpen && isOverlaying) {\n      close();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isOverlaying]);\n\n  // We need to clear profile state and management screen state, when changing chats\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId]) => {\n    if (prevChatId !== chatId || prevThreadId !== threadId) {\n      setProfileState(\n        isSavedMessages && !isSavedDialog ? ProfileState.SavedDialogs : ProfileState.Profile,\n      );\n      setManagementScreen(ManagementScreens.Initial);\n    }\n  }, [chatId, threadId, isSavedDialog, isSavedMessages]);\n\n  useHistoryBack({\n    isActive: isChatSelected && (\n      contentKey === RightColumnContent.ChatInfo\n      || contentKey === RightColumnContent.Management\n      || contentKey === RightColumnContent.AddingMembers\n      || contentKey === RightColumnContent.CreateTopic\n      || contentKey === RightColumnContent.EditTopic),\n    onBack: () => close(false),\n  });\n\n  function renderContent(isActive: boolean) {\n    if (renderingContentKey === -1) {\n      return undefined;\n    }\n\n    switch (renderingContentKey) {\n      case RightColumnContent.AddingMembers:\n        return (\n          <AddChatMembers\n            key={`add_chat_members_${chatId!}`}\n            chatId={chatId!}\n            isActive={isOpen && isActive}\n            onNextStep={handleAppendingChatMembers}\n            onClose={close}\n          />\n        );\n      case RightColumnContent.ChatInfo:\n        return (\n          <Profile\n            key={`profile_${chatId!}_${threadId}`}\n            chatId={chatId!}\n            threadId={threadId}\n            profileState={profileState}\n            isMobile={isMobile}\n            isActive={isOpen && isActive}\n            onProfileStateChange={setProfileState}\n          />\n        );\n      case RightColumnContent.Management:\n        return (\n          <Management\n            key={`management_${chatId!}_${managementScreen}`}\n            chatId={chatId!}\n            currentScreen={managementScreen}\n            isPromotedByCurrentUser={isPromotedByCurrentUser}\n            selectedChatMemberId={selectedChatMemberId}\n            isActive={isOpen && isActive}\n            onScreenSelect={setManagementScreen}\n            onChatMemberSelect={handleSelectChatMember}\n            onClose={close}\n          />\n        );\n\n      case RightColumnContent.Statistics:\n        return <Statistics chatId={chatId!} />;\n      case RightColumnContent.BoostStatistics:\n        return <BoostStatistics />;\n      case RightColumnContent.MonetizationStatistics:\n        return <MonetizationStatistics />;\n      case RightColumnContent.MessageStatistics:\n        return <MessageStatistics chatId={chatId!} isActive={isOpen && isActive} />;\n      case RightColumnContent.StoryStatistics:\n        return <StoryStatistics chatId={chatId!} isActive={isOpen && isActive} />;\n      case RightColumnContent.StickerSearch:\n        return <StickerSearch onClose={close} isActive={isOpen && isActive} />;\n      case RightColumnContent.GifSearch:\n        return <GifSearch onClose={close} isActive={isOpen && isActive} />;\n      case RightColumnContent.PollResults:\n        return <PollResults onClose={close} isActive={isOpen && isActive} />;\n      case RightColumnContent.CreateTopic:\n        return <CreateTopic onClose={close} isActive={isOpen && isActive} />;\n      case RightColumnContent.EditTopic:\n        return <EditTopic onClose={close} isActive={isOpen && isActive} />;\n    }\n\n    return undefined; // Unreachable\n  }\n\n  return (\n    <div\n      id=\"RightColumn-wrapper\"\n      className={!isChatSelected ? 'is-hidden' : undefined}\n    >\n      {isOverlaying && (\n        <div className=\"overlay-backdrop\" onClick={close} />\n      )}\n      <div id=\"RightColumn\">\n        <RightHeader\n          chatId={chatId}\n          threadId={threadId}\n          isColumnOpen={isOpen}\n          isProfile={isProfile}\n          isManagement={isManagement}\n          isStatistics={isStatistics}\n          isBoostStatistics={isBoostStatistics}\n          isMonetizationStatistics={isMonetizationStatistics}\n          isMessageStatistics={isMessageStatistics}\n          isStoryStatistics={isStoryStatistics}\n          isStickerSearch={isStickerSearch}\n          isGifSearch={isGifSearch}\n          isPollResults={isPollResults}\n          isCreatingTopic={isCreatingTopic}\n          isEditingTopic={isEditingTopic}\n          isAddingChatMembers={isAddingChatMembers}\n          profileState={profileState}\n          managementScreen={managementScreen}\n          onClose={close}\n          onScreenSelect={setManagementScreen}\n        />\n        <Transition\n          ref={containerRef}\n          name={(shouldSkipTransition || shouldSkipHistoryAnimations) ? 'none' : 'zoomFade'}\n          renderCount={MAIN_SCREENS_COUNT + MANAGEMENT_SCREENS_COUNT}\n          activeKey={isManagement ? MAIN_SCREENS_COUNT + managementScreen : renderingContentKey}\n          shouldCleanup\n          cleanupExceptionKey={\n            (renderingContentKey === RightColumnContent.MessageStatistics\n              || renderingContentKey === RightColumnContent.StoryStatistics)\n              ? RightColumnContent.Statistics : undefined\n          }\n        >\n          {renderContent}\n        </Transition>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isMobile }): StateProps => {\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n\n    const areActiveChatsLoaded = selectAreActiveChatsLoaded(global);\n    const {\n      management, shouldSkipHistoryAnimations, nextProfileTab, shouldCloseRightColumn,\n    } = selectTabState(global);\n    const nextManagementScreen = chatId ? management.byChatId[chatId]?.nextScreen : undefined;\n\n    const isSavedMessages = chatId ? selectIsChatWithSelf(global, chatId) : undefined;\n    const isSavedDialog = chatId ? getIsSavedDialog(chatId, threadId, global.currentUserId) : undefined;\n\n    return {\n      contentKey: selectRightColumnContentKey(global, isMobile),\n      chatId,\n      threadId,\n      isChatSelected: Boolean(chatId && areActiveChatsLoaded),\n      shouldSkipHistoryAnimations,\n      nextManagementScreen,\n      nextProfileTab,\n      shouldCloseRightColumn,\n      isSavedMessages,\n      isSavedDialog,\n    };\n  },\n)(RightColumn));\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from \"../../lib/teact/teact\";\nimport { memo, useMemo, useState, useEffect } from \"../../lib/teact/teact\";\nimport { getActions, withGlobal } from \"../../global\";\n\nimport type { ApiUser } from \"../../api/types\";\n\nimport { selectUser } from \"../../global/selectors\";\nimport { selectTabState } from \"../../global/selectors/tabs\";\nimport buildClassName from \"../../util/buildClassName\";\n\nimport useLang from \"../../hooks/useLang\";\nimport useAsync from \"../../hooks/useAsync\";\nimport { formatNumber } from \"../../util/formatNumber\";\n\nimport Button from \"../ui/Button\";\n\nimport \"./RightColumnProfile.scss\";\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n  isTradingColumnShown?: boolean;\n  currentUserId?: string;\n};\n\ntype WalletData = {\n  walletAddress: string;\n  balance: number;\n  balanceLamports: number;\n  telegramUserId: string;\n  message: string;\n};\n\ntype TokenData = {\n  mintAddress: string;\n  symbol?: string;\n  name?: string;\n  decimals?: number;\n  logoUri?: string;\n  price?: string;\n  liquidity?: string;\n  marketCap?: string;\n  holders?: number;\n  website?: string;\n  twitter?: string;\n};\n\ntype AggregatedPipelineItem = {\n  id: string;\n  mintAddress: string;\n  activeCount: number;\n  createdAt: string;\n  lastModifiedAt: string;\n  tokenData?: TokenData;\n};\n\ntype PaginationMeta = {\n  currentPage: number;\n  limit: number;\n  totalItems: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n};\n\ntype AggregatedPipelineResponse = {\n  telegramUserId: string;\n  data: AggregatedPipelineItem[];\n  pagination: PaginationMeta;\n  message: string;\n};\n\ntype AggregatedPipelineCountResponse = {\n  telegramUserId: string;\n  count: number;\n  message: string;\n};\n\nconst RightColumnProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  onClose,\n  currentUser,\n  isTradingColumnShown,\n  currentUserId,\n}) => {\n  const { openTradingColumn } = getActions();\n  const lang = useLang();\n  const [isCoinsExpanded, setIsCoinsExpanded] = useState(true);\n  const [selectedCoinId, setSelectedCoinId] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coinsPerPage] = useState(10);\n  const [logoLoadErrors, setLogoLoadErrors] = useState<Set<string>>(new Set());\n\n  const className = buildClassName(\"RightColumnProfile\", isActive && \"active\");\n\n  // Fetch wallet balance function\n  const fetchWalletBalance = async (): Promise<WalletData | undefined> => {\n    if (!currentUserId) {\n      return undefined;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:8888/user/get-balance\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          telegramUserId: currentUserId,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Failed to fetch wallet balance:\", error);\n      throw error;\n    }\n  };\n\n  // Fetch aggregated pipeline count function\n  const fetchAggregatedPipelineCount = async (): Promise<\n    AggregatedPipelineCountResponse | undefined\n  > => {\n    if (!currentUserId) {\n      return undefined;\n    }\n\n    try {\n      const response = await fetch(\n        \"http://localhost:8888/user/get-aggregated-pipeline-count\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            telegramUserId: currentUserId,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Failed to fetch aggregated pipeline count:\", error);\n      throw error;\n    }\n  };\n\n  // Fetch aggregated pipeline data function\n  const fetchAggregatedPipelineData = async (): Promise<\n    AggregatedPipelineResponse | undefined\n  > => {\n    if (!currentUserId) {\n      return undefined;\n    }\n\n    try {\n      const response = await fetch(\n        \"http://localhost:8888/user/get-aggregated-pipeline\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            telegramUserId: currentUserId,\n            page: currentPage,\n            limit: coinsPerPage,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Failed to fetch aggregated pipeline data:\", error);\n      throw error;\n    }\n  };\n\n  // Use async hook to fetch wallet data\n  const {\n    result: walletData,\n    isLoading: isWalletLoading,\n    error: walletError,\n  } = useAsync(fetchWalletBalance, [currentUserId]);\n\n  // Use async hook to fetch aggregated pipeline count\n  const {\n    result: countData,\n    isLoading: isCountLoading,\n    error: countError,\n  } = useAsync(fetchAggregatedPipelineCount, [currentUserId]);\n\n  // Use async hook to fetch aggregated pipeline data\n  const {\n    result: pipelineData,\n    isLoading: isPipelineLoading,\n    error: pipelineError,\n  } = useAsync(fetchAggregatedPipelineData, [\n    currentUserId,\n    currentPage,\n    coinsPerPage,\n  ]);\n\n  // Helper function to shorten wallet address\n  const shortenAddress = (address: string) => {\n    if (!address) return \"\";\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  // Get display values\n  const displayAddress = walletData?.walletAddress || \"\";\n  const shortAddress = shortenAddress(displayAddress);\n  const displayBalance = formatNumber(walletData?.balance);\n\n  const toggleCoinsVisibility = () => {\n    setIsCoinsExpanded(!isCoinsExpanded);\n  };\n\n  const handleCoinClick = (item: AggregatedPipelineItem) => {\n    setSelectedCoinId(item.id);\n\n    const coinData = {\n      id: item.id,\n      name: item.tokenData?.name || item.tokenData?.symbol || \"Unknown Token\",\n      subtitle: `Mint: ${item.mintAddress.slice(0, 8)}...`,\n      time: \"Active\",\n      comments: formatNumber(item.activeCount),\n      score: formatNumber(item.activeCount),\n      cap: formatNumber(item.tokenData?.liquidity),\n      holders: item.tokenData?.holders || 0,\n      volume: formatNumber(item.tokenData?.marketCap),\n      change: formatNumber(item.tokenData?.price),\n    };\n\n    openTradingColumn({\n      coin: coinData,\n      mintAddress: item.mintAddress,\n    });\n\n    console.log(\"✅ openTradingColumn action dispatched\");\n  };\n\n  // Deselect coin when trading column closes\n  useEffect(() => {\n    if (!isTradingColumnShown && selectedCoinId) {\n      setSelectedCoinId(null);\n    }\n  }, [isTradingColumnShown, selectedCoinId]);\n\n  return (\n    <div className={className}>\n      {/* Header Section - Following AppSidebar design */}\n      <div className=\"sidebar-header\">\n        <div className=\"brand-section\">\n          <span className=\"moonraker-brand-text\">Moonraker</span>\n        </div>\n\n        <div className=\"wallet-section\">\n          <div className=\"wallet-column\">\n            <span className=\"wallet-label\">Wallet address</span>\n            <div className=\"wallet-value-group\">\n              {isWalletLoading ? (\n                <span className=\"wallet-address loading\">Loading...</span>\n              ) : walletError ? (\n                <span className=\"wallet-address error\">\n                  Error loading wallet\n                </span>\n              ) : (\n                <span className=\"wallet-address\" title={displayAddress}>\n                  {shortAddress || \"No wallet found\"}\n                </span>\n              )}\n              <button\n                className=\"copy-button\"\n                aria-label=\"Copy wallet address\"\n                onClick={() => {\n                  if (displayAddress) {\n                    navigator.clipboard.writeText(displayAddress);\n                  }\n                }}\n                disabled={!displayAddress}\n              >\n                <svg\n                  className=\"copy-icon\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                >\n                  <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n                  <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"balance-column\">\n            <span className=\"balance-label\">Balance</span>\n            <div className=\"balance-value-group\">\n              {isWalletLoading ? (\n                <span className=\"balance-amount loading\">Loading...</span>\n              ) : walletError ? (\n                <span className=\"balance-amount error\">Error</span>\n              ) : (\n                <span className=\"balance-amount\">{displayBalance}</span>\n              )}\n              <img\n                className=\"balance-icon\"\n                src=\"/solana/Solana (SOL).svg\"\n                alt=\"Solana\"\n                width=\"12\"\n                height=\"10\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content Section */}\n      <div className=\"sidebar-content\">\n        <div className=\"search-section\">\n          <div className=\"search-input-wrapper\">\n            <svg\n              className=\"search-icon\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n            >\n              <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n              <path d=\"m21 21-4.35-4.35\"></path>\n            </svg>\n            <input\n              type=\"text\"\n              placeholder=\"Search coins\"\n              className=\"search-input\"\n            />\n          </div>\n        </div>\n\n        <div className=\"coins-group\">\n          <div className=\"group-label\" onClick={toggleCoinsVisibility}>\n            <span>\n              Scanned coins (\n              {isCountLoading\n                ? \"...\"\n                : countError\n                ? \"0\"\n                : countData?.count || 0}\n              )\n            </span>\n            <svg\n              className={buildClassName(\n                \"chevron-icon\",\n                !isCoinsExpanded && \"collapsed\"\n              )}\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n            >\n              <polyline points=\"6,9 12,15 18,9\"></polyline>\n            </svg>\n          </div>\n          {isCoinsExpanded && (\n            <div className=\"coins-content\">\n              {isPipelineLoading ? (\n                <div className=\"loading-state\">Loading scanned coins...</div>\n              ) : pipelineError ? (\n                <div className=\"error-state\">Error loading coins</div>\n              ) : !pipelineData?.data?.length ? (\n                <div className=\"empty-state\">No scanned coins found</div>\n              ) : (\n                <>\n                  <div className=\"coins-list\">\n                    {pipelineData.data.map((item) => (\n                      <div\n                        key={item.id}\n                        className={buildClassName(\n                          \"coin-item\",\n                          \"clickable\",\n                          selectedCoinId === item.id && \"selected\"\n                        )}\n                        onClick={() => handleCoinClick(item)}\n                      >\n                        {/* Top row: Avatar, Name with copy icon, Time, and Metrics */}\n                        <div className=\"coin-top-row\">\n                          <div className=\"coin-left\">\n                            <div className=\"\">\n                              {item.tokenData?.logoUri &&\n                              !logoLoadErrors.has(item.id) ? (\n                                <img\n                                  src={item.tokenData.logoUri}\n                                  alt=\"Token logo\"\n                                  className=\"token-logo\"\n                                  width=\"24\"\n                                  height=\"24\"\n                                  onError={() => {\n                                    setLogoLoadErrors((prev) =>\n                                      new Set(prev).add(item.id)\n                                    );\n                                  }}\n                                />\n                              ) : (\n                                <div className=\"coin-avatar\" />\n                              )}\n                            </div>\n                            <div className=\"coin-content\">\n                              <div className=\"coin-info\">\n                                <span className=\"coin-name\">\n                                  {item.tokenData?.name ||\n                                    item.tokenData?.symbol ||\n                                    \"Unknown Token\"}\n                                </span>\n                                <svg\n                                  className=\"coin-copy-icon\"\n                                  width=\"12\"\n                                  height=\"12\"\n                                  viewBox=\"0 0 24 24\"\n                                  fill=\"none\"\n                                  stroke=\"currentColor\"\n                                  strokeWidth=\"2\"\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    navigator.clipboard.writeText(\n                                      item.mintAddress\n                                    );\n                                  }}\n                                >\n                                  <rect\n                                    x=\"9\"\n                                    y=\"9\"\n                                    width=\"13\"\n                                    height=\"13\"\n                                    rx=\"2\"\n                                    ry=\"2\"\n                                  ></rect>\n                                  <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\n                                </svg>\n                              </div>\n                              <div className=\"coin-subtitle-row\">\n                                <p className=\"coin-subtitle\">\n                                  {item.mintAddress.slice(0, 8)}...\n                                  {item.mintAddress.slice(-4)}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"coin-metrics\">\n                            <div className=\"metric-badge\">\n                              <img\n                                src=\"/svg/chat.svg\"\n                                alt=\"chat\"\n                                className=\"message-icon\"\n                                width=\"14\"\n                                height=\"14\"\n                              />\n                              <span className=\"metric-value\">\n                                {formatNumber(item.activeCount)}\n                              </span>\n                            </div>\n                            {/* <div className=\"metric-badge\">\n                              <img\n                                src=\"/svg/radar.svg\"\n                                alt=\"radar\"\n                                className=\"sparkles-icon\"\n                                width=\"14\"\n                                height=\"14\"\n                              />\n                              <span className=\"metric-value\">\n                                {formatNumber(item.activeCount)}\n                              </span>\n                            </div> */}\n                          </div>\n                        </div>\n\n                        {/* Bottom row: Stats */}\n                        <div className=\"coin-stats-row\">\n                          <div className=\"stat-item left-aligned\">\n                            <img\n                              src=\"/svg/liq.svg\"\n                              alt=\"liquidity\"\n                              className=\"stat-icon\"\n                              width=\"11\"\n                              height=\"10\"\n                            />\n                            <span className=\"stat-value\">\n                              {formatNumber(item.tokenData?.liquidity)}\n                            </span>\n                          </div>\n\n                          <div className=\"stats-right-group\">\n                            <div className=\"stat-item\">\n                              <img\n                                src=\"/svg/people.svg\"\n                                alt=\"people\"\n                                className=\"stat-icon\"\n                                width=\"11\"\n                                height=\"10\"\n                              />\n                              <span className=\"stat-value\">\n                                {formatNumber(item.tokenData?.holders)}\n                              </span>\n                            </div>\n                            <span className=\"stat-separator\">|</span>\n                            <div className=\"stat-item\">\n                              <span className=\"stat-value\">$</span>\n                              <span className=\"stat-value change-value\">\n                                {formatNumber(item.tokenData?.price)}\n                              </span>\n                            </div>\n                            {/* <span className=\"stat-separator\">|</span>\n                            <div className=\"stat-item\">\n                              <img\n                                src=\"/svg/chart.svg\"\n                                alt=\"volume\"\n                                className=\"stat-icon\"\n                                width=\"11\"\n                                height=\"10\"\n                              />\n                              <span className=\"stat-value\">\n                                {formatNumber(item.tokenData?.marketCap)}\n                              </span>\n                            </div> */}\n                            <span className=\"stat-separator\">|</span>\n                            <div className=\"stat-item mc-group\">\n                              <span className=\"stat-value\">MC</span>\n                              <img\n                                src=\"/svg/mc.svg\"\n                                alt=\"market cap\"\n                                className=\"stat-icon\"\n                                width=\"11\"\n                                height=\"10\"\n                              />\n                              <span className=\"stat-value change-value\">\n                                {formatNumber(item.tokenData?.marketCap)}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Pagination Controls */}\n                  {pipelineData.pagination.totalPages > 1 && (\n                    <div className=\"pagination-controls\">\n                      <button\n                        className=\"pagination-button\"\n                        onClick={() => setCurrentPage(currentPage - 1)}\n                        disabled={!pipelineData.pagination.hasPrevious}\n                      >\n                        Previous\n                      </button>\n                      <span className=\"pagination-info\">\n                        Page {pipelineData.pagination.currentPage} of{\" \"}\n                        {pipelineData.pagination.totalPages}\n                      </span>\n                      <button\n                        className=\"pagination-button\"\n                        onClick={() => setCurrentPage(currentPage + 1)}\n                        disabled={!pipelineData.pagination.hasNext}\n                      >\n                        Next\n                      </button>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Footer Section */}\n      <div className=\"sidebar-footer\">\n        <div className=\"footer-left\">\n          <button className=\"footer-action-button clear-button\">\n            <svg\n              className=\"clear-icon\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n            >\n              <path d=\"M3 6h18M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6m3 0V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\n            </svg>\n            Clear coins\n          </button>\n        </div>\n        <div className=\"footer-right\">\n          <button className=\"footer-action-button buy-button\">\n            <svg\n              className=\"zap-icon\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n            >\n              <polygon points=\"13,2 3,14 12,14 11,22 21,10 12,10 13,2\"></polygon>\n            </svg>\n            Buy\n          </button>\n          <div className=\"input-menu-container\">\n            <input\n              type=\"text\"\n              className=\"buy-amount-input\"\n              placeholder=\"0.1\"\n              defaultValue=\"0.1\"\n            />\n            <button className=\"menu-button\" aria-label=\"Menu\">\n              <img\n                className=\"solana-icon\"\n                src=\"/solana/Solana (SOL)-grey.svg\"\n                alt=\"Solana\"\n                width=\"12\"\n                height=\"10\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const currentUser = global.currentUserId\n      ? selectUser(global, global.currentUserId)\n      : undefined;\n\n    const tabState = selectTabState(global);\n\n    return {\n      currentUser,\n      currentUserId: global.currentUserId,\n      isTradingColumnShown: tabState.isTradingColumnShown,\n    };\n  })(RightColumnProfile)\n);\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from \"../../lib/teact/teact\";\nimport {\n  memo,\n  useRef,\n  useEffect,\n  useState,\n  useMemo,\n} from \"../../lib/teact/teact\";\nimport { getActions, withGlobal } from \"../../global\";\n\nimport { selectTabState } from \"../../global/selectors\";\nimport captureEscKeyListener from \"../../util/captureEscKeyListener\";\n\nimport useHistoryBack from \"../../hooks/useHistoryBack\";\nimport useLastCallback from \"../../hooks/useLastCallback\";\n\nimport TVChart from \"../tradingview/TVChart/TVChart\";\nimport type {\n  HMPoolTokenMetadata,\n  M7TokenMetadataResponse,\n} from \"../../hooks/hellomoon/hmApi\";\nimport {\n  fetchPoolTokenMetadata,\n  fetchTokenMetadata,\n} from \"../../hooks/hellomoon/hmApi\";\n\nimport \"./RightColumnTrading.scss\";\n\ninterface OwnProps {\n  isMobile?: boolean;\n}\n\ninterface CoinData {\n  id: string;\n  name: string;\n  subtitle: string;\n  time: string;\n  comments: string;\n  score: string;\n  cap: string;\n  holders: number;\n  volume: string;\n  change: string;\n}\n\ntype StateProps = {\n  isOpen: boolean;\n  selectedCoin?: CoinData;\n  selectedMintAddress?: string;\n};\n\nconst RightColumnTrading: FC<OwnProps & StateProps> = ({\n  isMobile,\n  isOpen,\n  selectedCoin,\n  selectedMintAddress,\n}) => {\n  const { closeTradingColumn } = getActions();\n  const containerRef = useRef<HTMLDivElement>(null!);\n\n  // Token metadata state\n  const [tokenMetadata, setTokenMetadata] = useState<\n    M7TokenMetadataResponse | undefined\n  >();\n  const [isLoadingTokenMetadata, setIsLoadingTokenMetadata] = useState(false);\n  const [tokenMetadataError, setTokenMetadataError] = useState<string | null>(\n    null\n  );\n\n  // TVChart state and logic\n  const [poolMetadata, setPoolMetadata] = useState<\n    HMPoolTokenMetadata | undefined\n  >();\n  const [isLoadingChart, setIsLoadingChart] = useState(false);\n  const [chartError, setChartError] = useState<string | null>(null);\n\n  // Trading state\n  const [tradeType, setTradeType] = useState<\"buy\" | \"sell\">(\"buy\");\n  const [selectedPoolTab, setSelectedPoolTab] = useState<\"P1\" | \"P2\" | \"P3\">(\n    \"P1\"\n  );\n\n  // Image loading state\n  const [logoLoadError, setLogoLoadError] = useState(false);\n\n  // Fetch token metadata when mintAddress changes\n  useEffect(() => {\n    if (!selectedMintAddress) {\n      setTokenMetadata(undefined);\n      setTokenMetadataError(null);\n      setLogoLoadError(false);\n      return;\n    }\n\n    console.log(\n      \"[TokenMetadata] Fetching token metadata for:\",\n      selectedMintAddress\n    );\n    setIsLoadingTokenMetadata(true);\n    setTokenMetadataError(null);\n\n    fetchTokenMetadata(selectedMintAddress)\n      .then((data) => {\n        setTokenMetadata(data);\n        setIsLoadingTokenMetadata(false);\n        setLogoLoadError(false);\n        console.log(\"[TokenMetadata] Successfully fetched:\", data);\n      })\n      .catch((err) => {\n        console.error(\"[TokenMetadata] Failed to load token metadata\", err);\n        setTokenMetadataError(err.message || \"Failed to load token metadata\");\n        setIsLoadingTokenMetadata(false);\n      });\n  }, [selectedMintAddress]);\n\n  // Use hardcoded pool address\n  const poolAddress = \"0x337b56d87a6185cd46af3ac2cdf03cbc37070c30\";\n\n  useEffect(() => {\n    if (!poolAddress) return;\n\n    console.log(\"[TVChart] Fetching pool metadata for:\", poolAddress);\n    setIsLoadingChart(true);\n    setChartError(null);\n\n    fetchPoolTokenMetadata(poolAddress)\n      .then((data) => {\n        setPoolMetadata(data);\n        setIsLoadingChart(false);\n      })\n      .catch((err) => {\n        console.error(\"[TVChart] Failed to load pool metadata\", err);\n        setChartError(err.message || \"Failed to load chart data\");\n        setIsLoadingChart(false);\n      });\n  }, [poolAddress]);\n\n  const TVChartElem = useMemo(() => {\n    if (!poolMetadata) return null;\n    return (\n      <TVChart\n        poolMetadata={poolMetadata}\n        settings={{ chartType: \"price\", currency: \"usd\" }}\n      />\n    );\n  }, [poolMetadata]);\n\n  const handleClose = useLastCallback(() => {\n    closeTradingColumn();\n  });\n\n  // Handle ESC key\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: handleClose,\n  });\n\n  // Capture ESC key\n  captureEscKeyListener(() => {\n    if (isOpen) {\n      handleClose();\n    }\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"RightColumnTrading\"\n      id=\"RightColumnTrading\"\n    >\n      {(selectedCoin || tokenMetadata) && (\n        <div className=\"trading-content\">\n          <div className=\"coin-item trading-header\">\n            {/* Loading State */}\n            {isLoadingTokenMetadata && (\n              <div className=\"token-loading-state\">\n                Loading token metadata...\n              </div>\n            )}\n\n            {/* Error State */}\n            {tokenMetadataError && (\n              <div className=\"token-error-state\">\n                Error: {tokenMetadataError}\n              </div>\n            )}\n\n            {/* Token Data */}\n            {!isLoadingTokenMetadata &&\n              !tokenMetadataError &&\n              (tokenMetadata?.found || selectedCoin) && (\n                <>\n                  {/* Top row: Avatar, Name with copy icon, Time, and Metrics */}\n                  <div className=\"coin-top-row\">\n                    <div className=\"coin-left\">\n                      <div className=\"coin-avatar\">\n                        {tokenMetadata?.tokenData?.logoUri && !logoLoadError ? (\n                          <img\n                            src={tokenMetadata.tokenData.logoUri}\n                            alt=\"Token logo\"\n                            className=\"token-logo\"\n                            width=\"24\"\n                            height=\"24\"\n                            onError={() => {\n                              setLogoLoadError(true);\n                            }}\n                          />\n                        ) : null}\n                      </div>\n                      <div className=\"coin-content\">\n                        <div className=\"coin-info\">\n                          <span className=\"coin-name\">\n                            {tokenMetadata?.tokenData?.name ||\n                              tokenMetadata?.tokenData?.symbol ||\n                              selectedCoin?.name ||\n                              \"Unknown Token\"}\n                          </span>\n                          <svg\n                            className=\"coin-copy-icon\"\n                            width=\"12\"\n                            height=\"12\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                          >\n                            <rect\n                              x=\"9\"\n                              y=\"9\"\n                              width=\"13\"\n                              height=\"13\"\n                              rx=\"2\"\n                              ry=\"2\"\n                            ></rect>\n                            <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\n                          </svg>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"coin-metrics-and-close\">\n                      <button\n                        type=\"button\"\n                        className=\"trading-close-button\"\n                        onClick={handleClose}\n                        aria-label=\"Close\"\n                      >\n                        <svg\n                          width=\"18\"\n                          height=\"18\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"2\"\n                        >\n                          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Bottom row: Stats */}\n                  <div className=\"coin-stats-row\">\n                    <div className=\"stat-item left-aligned\">\n                      <img\n                        src=\"/svg/liq.svg\"\n                        alt=\"liquidity\"\n                        className=\"stat-icon\"\n                        width=\"11\"\n                        height=\"10\"\n                      />\n                      <span className=\"stat-value\">\n                        {tokenMetadata?.tokenData?.liquidity?.toLocaleString() ||\n                          selectedCoin?.cap ||\n                          \"N/A\"}\n                      </span>\n                    </div>\n\n                    <div className=\"stats-right-group\">\n                      <div className=\"stat-item\">\n                        <img\n                          src=\"/svg/people.svg\"\n                          alt=\"people\"\n                          className=\"stat-icon\"\n                          width=\"11\"\n                          height=\"10\"\n                        />\n                        <span className=\"stat-value\">\n                          {tokenMetadata?.tokenData?.holders?.toLocaleString() ||\n                            selectedCoin?.holders?.toLocaleString() ||\n                            \"N/A\"}\n                        </span>\n                      </div>\n                      <span className=\"stat-separator\">|</span>\n                      <div className=\"stat-item\">\n                        <img\n                          src=\"/svg/wallet.svg\"\n                          alt=\"wallet\"\n                          className=\"stat-icon\"\n                          width=\"11\"\n                          height=\"10\"\n                        />\n                        <span className=\"stat-value\">\n                          {tokenMetadata?.tokenData?.price?.toFixed(6) ||\n                            selectedCoin?.score ||\n                            \"N/A\"}\n                        </span>\n                      </div>\n                      <span className=\"stat-separator\">|</span>\n                      {/* <div className=\"stat-item\">\n                        <img\n                          src=\"/svg/chart.svg\"\n                          alt=\"volume\"\n                          className=\"stat-icon\"\n                          width=\"11\"\n                          height=\"10\"\n                        />\n                        <span className=\"stat-value\">\n                          {tokenMetadata?.tokenData?.marketCap?.toLocaleString() ||\n                            selectedCoin?.volume ||\n                            \"N/A\"}\n                        </span>\n                      </div> */}\n                      <span className=\"stat-separator\">|</span>\n                      <div className=\"stat-item mc-group\">\n                        <span className=\"stat-value\">MC</span>\n                        <img\n                          src=\"/svg/mc.svg\"\n                          alt=\"market cap\"\n                          className=\"stat-icon\"\n                          width=\"11\"\n                          height=\"10\"\n                        />\n                        <span className=\"stat-value change-value\">\n                          {tokenMetadata?.tokenData?.marketCap?.toLocaleString() ||\n                            selectedCoin?.change ||\n                            \"N/A\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n          </div>\n\n          {/* TVChart Component */}\n          <div className=\"chart-container\">\n            {isLoadingChart && (\n              <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; color: #3DCEC5;\">\n                Loading chart...\n              </div>\n            )}\n            {chartError && (\n              <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; color: #ff6b6b;\">\n                Error: {chartError}\n              </div>\n            )}\n            {TVChartElem && TVChartElem}\n          </div>\n\n          {/* Trade Sidebar */}\n          <div className=\"trade-sidebar\">\n            {/* Quick trade section */}\n            <div className=\"trade-section\">\n              <div className=\"trade-section-content\">\n                <div className=\"trade-buttons\">\n                  <button\n                    className={`trade-button trade-button-buy ${\n                      tradeType === \"buy\" ? \"active\" : \"\"\n                    }`}\n                    onClick={() => setTradeType(\"buy\")}\n                  >\n                    Buy\n                  </button>\n                  <button\n                    className={`trade-button trade-button-sell ${\n                      tradeType === \"sell\" ? \"active\" : \"\"\n                    }`}\n                    onClick={() => setTradeType(\"sell\")}\n                  >\n                    Sell\n                  </button>\n                </div>\n\n                <div className=\"amount-container\">\n                  <div className=\"amount-input-group\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"0.00\"\n                      className=\"amount-input\"\n                    />\n                    <svg\n                      className=\"solana-icon\"\n                      width=\"12\"\n                      height=\"12\"\n                      viewBox=\"0 0 13 11\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M2.61661 7.97555C2.68902 7.90314 2.78858 7.8609 2.89418 7.8609H12.4703C12.6453 7.8609 12.7328 8.07209 12.6091 8.19579L10.7174 10.0875C10.645 10.1599 10.5454 10.2021 10.4398 10.2021H0.863708C0.68872 10.2021 0.601225 9.99093 0.724924 9.86724L2.61661 7.97555Z\"\n                        fill=\"#686A6D\"\n                      />\n                      <path\n                        d=\"M2.61661 0.912591C2.69204 0.840182 2.7916 0.797943 2.89418 0.797943H12.4703C12.6453 0.797943 12.7328 1.00914 12.6091 1.13284L10.7174 3.02452C10.645 3.09693 10.5454 3.13917 10.4398 3.13917H0.863708C0.68872 3.13917 0.601225 2.92798 0.724924 2.80428L2.61661 0.912591Z\"\n                        fill=\"#686A6D\"\n                      />\n                      <path\n                        d=\"M10.7174 4.42144C10.645 4.34903 10.5454 4.30679 10.4398 4.30679H0.863708C0.68872 4.30679 0.601225 4.51799 0.724924 4.64169L2.61661 6.53337C2.68902 6.60578 2.78858 6.64802 2.89418 6.64802H12.4703C12.6453 6.64802 12.7328 6.43683 12.6091 6.31313L10.7174 4.42144Z\"\n                        fill=\"#686A6D\"\n                      />\n                    </svg>\n                  </div>\n                  <div className=\"percentage-buttons\">\n                    <button className=\"percentage-button\">0.01</button>\n                    <button className=\"percentage-button\">0.01</button>\n                    <button className=\"percentage-button\">0.5</button>\n                    <button className=\"percentage-button\">1</button>\n                    <button className=\"percentage-button edit-button\">\n                      <svg\n                        width=\"14\"\n                        height=\"14\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                        />\n                        <path\n                          d=\"m18.5 2.5 a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n\n                <button className=\"buy-now-button\">\n                  <svg\n                    className=\"buy-now-icon\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                  >\n                    <polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"></polygon>\n                  </svg>\n                  Buy now\n                </button>\n\n                <div className=\"trade-stats\">\n                  <div className=\"trade-stat\">\n                    <svg\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M14 11V8C14 6.34 12.66 5 11 5H4C2.34 5 1 6.34 1 8V11C1 12.66 2.34 14 4 14H6L8 17H10L8 14H11C12.66 14 14 12.66 14 11Z\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        fill=\"none\"\n                      />\n                      <path\n                        d=\"M21 16V19C21 20.1 20.1 21 19 21H16C14.9 21 14 20.1 14 19V16C14 14.9 14.9 14 16 14H19C20.1 14 21 14.9 21 16Z\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        fill=\"none\"\n                      />\n                    </svg>\n                    <span className=\"trade-stat-value\">0.01</span>\n                  </div>\n                  <div className=\"trade-stat\">\n                    <svg\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <circle\n                        cx=\"12\"\n                        cy=\"12\"\n                        r=\"10\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                      />\n                      <path\n                        d=\"M16 8L8 16\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                      />\n                      <path\n                        d=\"M8 8H16V16\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                      />\n                    </svg>\n                    <span className=\"trade-stat-value\">30%</span>\n                  </div>\n                  <div className=\"trade-stat\">\n                    <svg\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        d=\"M7 10V12C7 13.1 7.9 14 9 14H12V17L17 12L12 7V10H7Z\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        fill=\"none\"\n                      />\n                    </svg>\n                    <span className=\"trade-stat-value\">0.01</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Pools section */}\n            <div className=\"trade-section\">\n              <div className=\"trade-section-content\">\n                <div className=\"pools-tabs\">\n                  <button\n                    className={`pool-tab ${\n                      selectedPoolTab === \"P1\" ? \"pool-tab-active\" : \"\"\n                    }`}\n                    onClick={() => setSelectedPoolTab(\"P1\")}\n                  >\n                    P1\n                  </button>\n                  <button\n                    className={`pool-tab ${\n                      selectedPoolTab === \"P2\" ? \"pool-tab-active\" : \"\"\n                    }`}\n                    onClick={() => setSelectedPoolTab(\"P2\")}\n                  >\n                    P2\n                  </button>\n                  <button\n                    className={`pool-tab ${\n                      selectedPoolTab === \"P3\" ? \"pool-tab-active\" : \"\"\n                    }`}\n                    onClick={() => setSelectedPoolTab(\"P3\")}\n                  >\n                    P3\n                  </button>\n                </div>\n\n                <div className=\"pool-metrics\">\n                  <div className=\"pool-metric\">\n                    <span className=\"pool-metric-label\">Liquidity</span>\n                    <span className=\"pool-metric-value\">$1.2M</span>\n                  </div>\n                  <div className=\"pool-metric\">\n                    <span className=\"pool-metric-label\">24h Volume</span>\n                    <span className=\"pool-metric-value\">$320K</span>\n                  </div>\n                  <div className=\"pool-metric\">\n                    <span className=\"pool-metric-label\">FDV</span>\n                    <span className=\"pool-metric-value\">$8.4M</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const tabState = selectTabState(global);\n\n    return {\n      isOpen: Boolean(tabState.isTradingColumnShown),\n      selectedCoin: tabState.selectedTradingCoin,\n      selectedMintAddress: tabState.selectedTradingMintAddress,\n    };\n  })(RightColumnTrading)\n);\n","// extracted by mini-css-extract-plugin\nexport {};","import type { FC } from '../../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiExportedInvite } from '../../api/types';\nimport type { GiftProfileFilterOptions, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens, ProfileState } from '../../types';\n\nimport { ANIMATION_END_DELAY, SAVED_FOLDER_ID } from '../../config';\nimport {\n  getCanAddContact, getCanManageTopic, isChatChannel, isUserBot,\n} from '../../global/helpers';\nimport {\n  selectCanManage,\n  selectCanUseGiftProfileAdminFilter,\n  selectCanUseGiftProfileFilter,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentStickerSearch,\n  selectIsChatWithSelf,\n  selectTabState,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport { useFolderManagerForChatsCount } from '../../hooks/useFolderManager';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport SearchInput from '../ui/SearchInput';\nimport Transition from '../ui/Transition';\n\nimport './RightHeader.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  isColumnOpen?: boolean;\n  isProfile?: boolean;\n  isManagement?: boolean;\n  isStatistics?: boolean;\n  isBoostStatistics?: boolean;\n  isMessageStatistics?: boolean;\n  isMonetizationStatistics?: boolean;\n  isStoryStatistics?: boolean;\n  isStickerSearch?: boolean;\n  isGifSearch?: boolean;\n  isPollResults?: boolean;\n  isCreatingTopic?: boolean;\n  isEditingTopic?: boolean;\n  isAddingChatMembers?: boolean;\n  profileState?: ProfileState;\n  managementScreen?: ManagementScreens;\n  onClose: (shouldScrollUp?: boolean) => void;\n  onScreenSelect: (screen: ManagementScreens) => void;\n};\n\ntype StateProps = {\n  canAddContact?: boolean;\n  canManage?: boolean;\n  canViewStatistics?: boolean;\n  isChannel?: boolean;\n  userId?: string;\n  isSelf?: boolean;\n  stickerSearchQuery?: string;\n  gifSearchQuery?: string;\n  isEditingInvite?: boolean;\n  currentInviteInfo?: ApiExportedInvite;\n  shouldSkipHistoryAnimations?: boolean;\n  isBot?: boolean;\n  canEditBot?: boolean;\n  giftProfileFilter: GiftProfileFilterOptions;\n  canUseGiftFilter?: boolean;\n  canUseGiftAdminFilter?: boolean;\n  isInsideTopic?: boolean;\n  canEditTopic?: boolean;\n  isSavedMessages?: boolean;\n};\n\nconst COLUMN_ANIMATION_DURATION = 450 + ANIMATION_END_DELAY;\n\nenum HeaderContent {\n  Profile,\n  MemberList,\n  GiftList,\n  SharedMedia,\n  StoryList,\n  Search,\n  Statistics,\n  MessageStatistics,\n  StoryStatistics,\n  BoostStatistics,\n  MonetizationStatistics,\n  Management,\n  ManageInitial,\n  ManageChannelSubscribers,\n  ManageChatAdministrators,\n  ManageChatPrivacyType,\n  ManageDiscussion,\n  ManageGroupPermissions,\n  ManageGroupRemovedUsers,\n  ManageChannelRemovedUsers,\n  ManageGroupUserPermissionsCreate,\n  ManageGroupUserPermissions,\n  ManageGroupRecentActions,\n  ManageGroupAdminRights,\n  ManageGroupNewAdminRights,\n  ManageGroupMembers,\n  ManageGroupAddAdmins,\n  StickerSearch,\n  GifSearch,\n  PollResults,\n  AddingMembers,\n  ManageInvites,\n  ManageEditInvite,\n  ManageReactions,\n  ManageInviteInfo,\n  ManageJoinRequests,\n  CreateTopic,\n  EditTopic,\n  SavedDialogs,\n  NewDiscussionGroup,\n}\n\nconst RightHeader: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isColumnOpen,\n  isProfile,\n  isManagement,\n  isStatistics,\n  isMessageStatistics,\n  isStoryStatistics,\n  isMonetizationStatistics,\n  isBoostStatistics,\n  isStickerSearch,\n  isGifSearch,\n  isPollResults,\n  isCreatingTopic,\n  isEditingTopic,\n  isAddingChatMembers,\n  profileState,\n  managementScreen,\n  canAddContact,\n  userId,\n  isSelf,\n  canManage,\n  isChannel,\n  stickerSearchQuery,\n  gifSearchQuery,\n  isEditingInvite,\n  canViewStatistics,\n  currentInviteInfo,\n  shouldSkipHistoryAnimations,\n  isBot,\n  isInsideTopic,\n  canEditTopic,\n  isSavedMessages,\n  canEditBot,\n  giftProfileFilter,\n  canUseGiftFilter,\n  canUseGiftAdminFilter,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    toggleManagement,\n    openAddContactDialog,\n    toggleStatistics,\n    setEditingExportedInvite,\n    deleteExportedChatInvite,\n    openEditTopicPanel,\n    updateGiftProfileFilter,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const {\n    sortType: giftsSortType,\n    shouldIncludeUnlimited: shouldIncludeUnlimitedGifts,\n    shouldIncludeLimited: shouldIncludeLimitedGifts,\n    shouldIncludeUnique: shouldIncludeUniqueGifts,\n    shouldIncludeDisplayed: shouldIncludeDisplayedGifts,\n    shouldIncludeHidden: shouldIncludeHiddenGifts,\n  } = giftProfileFilter;\n\n  const foldersChatCount = useFolderManagerForChatsCount();\n\n  const handleEditInviteClick = useLastCallback(() => {\n    setEditingExportedInvite({ chatId: chatId!, invite: currentInviteInfo! });\n    onScreenSelect(ManagementScreens.EditInvite);\n  });\n\n  const handleDeleteInviteClick = useLastCallback(() => {\n    deleteExportedChatInvite({ chatId: chatId!, link: currentInviteInfo!.link });\n    onScreenSelect(ManagementScreens.Invites);\n    closeDeleteDialog();\n  });\n\n  const handleStickerSearchQueryChange = useLastCallback((query: string) => {\n    setStickerSearchQuery({ query });\n  });\n\n  const handleGifSearchQueryChange = useLastCallback((query: string) => {\n    setGifSearchQuery({ query });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId });\n  });\n\n  const toggleEditTopic = useLastCallback(() => {\n    if (!chatId || !threadId) return;\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n  });\n\n  const handleToggleManagement = useLastCallback(() => {\n    toggleManagement();\n  });\n\n  const handleToggleStatistics = useLastCallback(() => {\n    toggleStatistics();\n  });\n\n  const handleClose = useLastCallback(() => {\n    onClose(!isSavedMessages);\n  });\n\n  const [shouldSkipTransition, setShouldSkipTransition] = useState(!isColumnOpen);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShouldSkipTransition(!isColumnOpen);\n    }, COLUMN_ANIMATION_DURATION);\n  }, [isColumnOpen]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const contentKey = isProfile ? (\n    profileState === ProfileState.Profile ? (\n      HeaderContent.Profile\n    ) : profileState === ProfileState.SharedMedia ? (\n      HeaderContent.SharedMedia\n    ) : profileState === ProfileState.MemberList ? (\n      HeaderContent.MemberList\n    ) : profileState === ProfileState.GiftList ? (\n      HeaderContent.GiftList\n    ) : profileState === ProfileState.StoryList ? (\n      HeaderContent.StoryList\n    ) : profileState === ProfileState.SavedDialogs ? (\n      HeaderContent.SavedDialogs\n    ) : -1 // Never reached\n  ) : isPollResults ? (\n    HeaderContent.PollResults\n  ) : isStickerSearch ? (\n    HeaderContent.StickerSearch\n  ) : isGifSearch ? (\n    HeaderContent.GifSearch\n  ) : isAddingChatMembers ? (\n    HeaderContent.AddingMembers\n  ) : isManagement ? (\n    managementScreen === ManagementScreens.Initial ? (\n      HeaderContent.ManageInitial\n    ) : managementScreen === ManagementScreens.ChatPrivacyType ? (\n      HeaderContent.ManageChatPrivacyType\n    ) : managementScreen === ManagementScreens.Discussion ? (\n      HeaderContent.ManageDiscussion\n    ) : managementScreen === ManagementScreens.ChannelSubscribers ? (\n      HeaderContent.ManageChannelSubscribers\n    ) : managementScreen === ManagementScreens.GroupPermissions ? (\n      HeaderContent.ManageGroupPermissions\n    ) : managementScreen === ManagementScreens.ChatAdministrators ? (\n      HeaderContent.ManageChatAdministrators\n    ) : managementScreen === ManagementScreens.GroupRemovedUsers ? (\n      HeaderContent.ManageGroupRemovedUsers\n    ) : managementScreen === ManagementScreens.ChannelRemovedUsers ? (\n      HeaderContent.ManageChannelRemovedUsers\n    ) : managementScreen === ManagementScreens.GroupUserPermissionsCreate ? (\n      HeaderContent.ManageGroupUserPermissionsCreate\n    ) : managementScreen === ManagementScreens.GroupUserPermissions ? (\n      HeaderContent.ManageGroupUserPermissions\n    ) : managementScreen === ManagementScreens.GroupRecentActions ? (\n      HeaderContent.ManageGroupRecentActions\n    ) : managementScreen === ManagementScreens.ChatAdminRights ? (\n      HeaderContent.ManageGroupAdminRights\n    ) : managementScreen === ManagementScreens.ChatNewAdminRights ? (\n      HeaderContent.ManageGroupNewAdminRights\n    ) : managementScreen === ManagementScreens.GroupMembers ? (\n      HeaderContent.ManageGroupMembers\n    ) : managementScreen === ManagementScreens.Invites ? (\n      HeaderContent.ManageInvites\n    ) : managementScreen === ManagementScreens.EditInvite ? (\n      HeaderContent.ManageEditInvite\n    ) : managementScreen === ManagementScreens.GroupAddAdmins ? (\n      HeaderContent.ManageGroupAddAdmins\n    ) : managementScreen === ManagementScreens.Reactions ? (\n      HeaderContent.ManageReactions\n    ) : managementScreen === ManagementScreens.InviteInfo ? (\n      HeaderContent.ManageInviteInfo\n    ) : managementScreen === ManagementScreens.JoinRequests ? (\n      HeaderContent.ManageJoinRequests\n    ) : managementScreen === ManagementScreens.NewDiscussionGroup ? (\n      HeaderContent.NewDiscussionGroup\n    ) : undefined // Never reached\n  ) : isStatistics ? (\n    HeaderContent.Statistics\n  ) : isMessageStatistics ? (\n    HeaderContent.MessageStatistics\n  ) : isStoryStatistics ? (\n    HeaderContent.StoryStatistics\n  ) : isBoostStatistics ? (\n    HeaderContent.BoostStatistics\n  ) : isCreatingTopic ? (\n    HeaderContent.CreateTopic\n  ) : isEditingTopic ? (\n    HeaderContent.EditTopic\n  ) : isMonetizationStatistics ? (\n    HeaderContent.MonetizationStatistics\n  ) : undefined; // When column is closed\n\n  const renderingContentKey = useCurrentOrPrev(contentKey, true) ?? -1;\n\n  function getHeaderTitle() {\n    if (isSavedMessages) {\n      return oldLang('SavedMessages');\n    }\n\n    if (isInsideTopic) {\n      return oldLang('AccDescrTopic');\n    }\n\n    if (isChannel) {\n      return oldLang('Channel.TitleInfo');\n    }\n\n    if (userId) {\n      return oldLang(isBot ? 'lng_info_bot_title' : 'lng_info_user_title');\n    }\n\n    return oldLang('GroupInfo.Title');\n  }\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  function renderHeaderContent() {\n    if (renderingContentKey === -1) {\n      return undefined;\n    }\n\n    switch (renderingContentKey) {\n      case HeaderContent.PollResults:\n        return <h3 className=\"title\">{oldLang('PollResults')}</h3>;\n      case HeaderContent.AddingMembers:\n        return <h3 className=\"title\">{oldLang(isChannel ? 'ChannelAddSubscribers' : 'GroupAddMembers')}</h3>;\n      case HeaderContent.ManageInitial:\n        return <h3 className=\"title\">{oldLang('Edit')}</h3>;\n      case HeaderContent.ManageChatPrivacyType:\n        return <h3 className=\"title\">{oldLang(isChannel ? 'ChannelTypeHeader' : 'GroupTypeHeader')}</h3>;\n      case HeaderContent.ManageDiscussion:\n        return <h3 className=\"title\">{oldLang('Discussion')}</h3>;\n      case HeaderContent.ManageChatAdministrators:\n        return <h3 className=\"title\">{oldLang('ChannelAdministrators')}</h3>;\n      case HeaderContent.ManageGroupRecentActions:\n        return <h3 className=\"title\">{oldLang('Group.Info.AdminLog')}</h3>;\n      case HeaderContent.ManageGroupAdminRights:\n        return <h3 className=\"title\">{oldLang('EditAdminRights')}</h3>;\n      case HeaderContent.ManageGroupNewAdminRights:\n        return <h3 className=\"title\">{oldLang('SetAsAdmin')}</h3>;\n      case HeaderContent.ManageGroupPermissions:\n        return <h3 className=\"title\">{oldLang('ChannelPermissions')}</h3>;\n      case HeaderContent.ManageGroupRemovedUsers:\n        return <h3 className=\"title\">{oldLang('BlockedUsers')}</h3>;\n      case HeaderContent.ManageChannelRemovedUsers:\n        return <h3 className=\"title\">{oldLang('ChannelBlockedUsers')}</h3>;\n      case HeaderContent.ManageGroupUserPermissionsCreate:\n        return <h3 className=\"title\">{oldLang('ChannelAddException')}</h3>;\n      case HeaderContent.ManageGroupUserPermissions:\n        return <h3 className=\"title\">{oldLang('UserRestrictions')}</h3>;\n      case HeaderContent.ManageInvites:\n        return <h3 className=\"title\">{oldLang('lng_group_invite_title')}</h3>;\n      case HeaderContent.ManageEditInvite:\n        return <h3 className=\"title\">{isEditingInvite ? oldLang('EditLink') : oldLang('NewLink')}</h3>;\n      case HeaderContent.ManageInviteInfo:\n        return (\n          <>\n            <h3 className=\"title\">{oldLang('InviteLink')}</h3>\n            <section className=\"tools\">\n              {currentInviteInfo && !currentInviteInfo.isRevoked && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  size=\"smaller\"\n                  ariaLabel={oldLang('Edit')}\n                  onClick={handleEditInviteClick}\n                >\n                  <Icon name=\"edit\" />\n                </Button>\n              )}\n              {currentInviteInfo && currentInviteInfo.isRevoked && (\n                <>\n                  <Button\n                    round\n                    color=\"danger\"\n                    size=\"smaller\"\n                    ariaLabel={oldLang('Delete')}\n                    onClick={openDeleteDialog}\n                  >\n                    <Icon name=\"delete\" />\n                  </Button>\n                  <ConfirmDialog\n                    isOpen={isDeleteDialogOpen}\n                    onClose={closeDeleteDialog}\n                    title={oldLang('DeleteLink')}\n                    text={oldLang('DeleteLinkHelp')}\n                    confirmIsDestructive\n                    confirmLabel={oldLang('Delete')}\n                    confirmHandler={handleDeleteInviteClick}\n                  />\n                </>\n              )}\n            </section>\n          </>\n        );\n      case HeaderContent.ManageJoinRequests:\n        return <h3 className=\"title\">{isChannel ? oldLang('SubscribeRequests') : oldLang('MemberRequests')}</h3>;\n      case HeaderContent.ManageGroupAddAdmins:\n        return <h3 className=\"title\">{oldLang('Channel.Management.AddModerator')}</h3>;\n      case HeaderContent.StickerSearch:\n        return (\n          <SearchInput\n            value={stickerSearchQuery}\n            placeholder={oldLang('SearchStickersHint')}\n            autoFocusSearch\n            onChange={handleStickerSearchQueryChange}\n          />\n        );\n      case HeaderContent.GifSearch:\n        return (\n          <SearchInput\n            value={gifSearchQuery}\n            placeholder={oldLang('SearchGifsTitle')}\n            autoFocusSearch\n            onChange={handleGifSearchQueryChange}\n          />\n        );\n      case HeaderContent.Statistics:\n        return <h3 className=\"title\">{oldLang(isChannel ? 'ChannelStats.Title' : 'GroupStats.Title')}</h3>;\n      case HeaderContent.MessageStatistics:\n        return <h3 className=\"title\">{oldLang('Stats.MessageTitle')}</h3>;\n      case HeaderContent.StoryStatistics:\n        return <h3 className=\"title\">{oldLang('Stats.StoryTitle')}</h3>;\n      case HeaderContent.BoostStatistics:\n        return <h3 className=\"title\">{oldLang('Boosts')}</h3>;\n      case HeaderContent.MonetizationStatistics:\n        return <h3 className=\"title\">{oldLang('lng_channel_earn_title')}</h3>;\n      case HeaderContent.SharedMedia:\n        return <h3 className=\"title\">{oldLang('SharedMedia')}</h3>;\n      case HeaderContent.ManageChannelSubscribers:\n        return <h3 className=\"title\">{oldLang('ChannelSubscribers')}</h3>;\n      case HeaderContent.MemberList:\n      case HeaderContent.ManageGroupMembers:\n        return <h3 className=\"title\">{oldLang('GroupMembers')}</h3>;\n      case HeaderContent.StoryList:\n        return <h3 className=\"title\">{oldLang(isSelf ? 'Settings.MyStories' : 'PeerInfo.PaneStories')}</h3>;\n      case HeaderContent.SavedDialogs:\n        return (\n          <div className=\"header\">\n            <h3 className=\"title\">{oldLang('SavedMessagesTab')}</h3>\n            <div className=\"subtitle\">{oldLang('Chats', foldersChatCount[SAVED_FOLDER_ID])}</div>\n          </div>\n        );\n      case HeaderContent.ManageReactions:\n        return <h3 className=\"title\">{oldLang('Reactions')}</h3>;\n      case HeaderContent.CreateTopic:\n        return <h3 className=\"title\">{oldLang('NewTopic')}</h3>;\n      case HeaderContent.EditTopic:\n        return <h3 className=\"title\">{oldLang('EditTopic')}</h3>;\n      case HeaderContent.GiftList:\n        return (\n          <>\n            <h3 className=\"title\">{lang('ProfileTabGifts')}</h3>\n            {canUseGiftFilter && chatId && (\n              <section className=\"tools\">\n                <DropdownMenu\n                  trigger={PrimaryLinkMenuButton}\n                  positionX=\"right\"\n                  autoClose={false}\n                >\n                  <MenuItem\n                    icon={giftsSortType === 'byDate' ? 'cash-circle' : 'calendar-filter'}\n\n                    onClick={() => updateGiftProfileFilter(\n                      { peerId: chatId, filter: { sortType: giftsSortType === 'byDate' ? 'byValue' : 'byDate' } },\n                    )}\n                  >\n                    {lang(giftsSortType === 'byDate' ? 'GiftSortByValue' : 'GiftSortByDate')}\n                  </MenuItem>\n\n                  <MenuSeparator />\n\n                  <MenuItem\n                    icon={shouldIncludeUnlimitedGifts ? 'check' : 'placeholder'}\n\n                    onClick={() => updateGiftProfileFilter(\n                      { peerId: chatId, filter: { shouldIncludeUnlimited: !shouldIncludeUnlimitedGifts } },\n                    )}\n                  >\n                    {lang('GiftFilterUnlimited')}\n                  </MenuItem>\n\n                  <MenuItem\n                    icon={shouldIncludeLimitedGifts ? 'check' : 'placeholder'}\n\n                    onClick={() => updateGiftProfileFilter(\n                      { peerId: chatId, filter: { shouldIncludeLimited: !shouldIncludeLimitedGifts } },\n                    )}\n                  >\n                    {lang('GiftFilterLimited')}\n                  </MenuItem>\n\n                  <MenuItem\n                    icon={shouldIncludeUniqueGifts ? 'check' : 'placeholder'}\n\n                    onClick={() => updateGiftProfileFilter(\n                      { peerId: chatId, filter: { shouldIncludeUnique: !shouldIncludeUniqueGifts } },\n                    )}\n                  >\n                    {lang('GiftFilterUnique')}\n                  </MenuItem>\n\n                  {canUseGiftAdminFilter && (\n                    <>\n                      <MenuSeparator />\n                      <MenuItem\n                        icon={shouldIncludeDisplayedGifts ? 'check' : 'placeholder'}\n\n                        onClick={() => updateGiftProfileFilter(\n                          { peerId: chatId, filter: { shouldIncludeDisplayed: !shouldIncludeDisplayedGifts } },\n                        )}\n                      >\n                        {lang('GiftFilterDisplayed')}\n                      </MenuItem>\n\n                      <MenuItem\n                        icon={shouldIncludeHiddenGifts ? 'check' : 'placeholder'}\n\n                        onClick={() => updateGiftProfileFilter(\n                          { peerId: chatId, filter: { shouldIncludeHidden: !shouldIncludeHiddenGifts } },\n                        )}\n                      >\n                        {lang('GiftFilterHidden')}\n                      </MenuItem>\n                    </>\n                  )}\n                </DropdownMenu>\n              </section>\n            )}\n          </>\n        );\n      case HeaderContent.NewDiscussionGroup:\n        return <h3 className=\"title\">{oldLang('NewGroup')}</h3>;\n      default:\n        return (\n          <>\n            <h3 className=\"title\">\n              {getHeaderTitle()}\n            </h3>\n            <section className=\"tools\">\n              {canAddContact && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  size=\"smaller\"\n                  ariaLabel={oldLang('AddContact')}\n                  onClick={handleAddContact}\n                >\n                  <Icon name=\"add-user\" />\n                </Button>\n              )}\n              {canManage && !isInsideTopic && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  size=\"smaller\"\n                  ariaLabel={oldLang('Edit')}\n                  onClick={handleToggleManagement}\n                >\n                  <Icon name=\"edit\" />\n                </Button>\n              )}\n              {canEditBot && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  size=\"smaller\"\n                  ariaLabel={oldLang('Edit')}\n                  onClick={handleToggleManagement}\n                >\n                  <Icon name=\"edit\" />\n                </Button>\n              )}\n              {canEditTopic && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  size=\"smaller\"\n                  ariaLabel={oldLang('EditTopic')}\n                  onClick={toggleEditTopic}\n                >\n                  <Icon name=\"edit\" />\n                </Button>\n              )}\n              {canViewStatistics && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  size=\"smaller\"\n                  ariaLabel={oldLang('Statistics')}\n                  onClick={handleToggleStatistics}\n                >\n                  <Icon name=\"stats\" />\n                </Button>\n              )}\n            </section>\n          </>\n        );\n    }\n  }\n\n  const isBackButton = isMobile || (\n    !isSavedMessages && (\n      contentKey === HeaderContent.SharedMedia\n      || contentKey === HeaderContent.GiftList\n      || contentKey === HeaderContent.MemberList\n      || contentKey === HeaderContent.StoryList\n      || contentKey === HeaderContent.AddingMembers\n      || contentKey === HeaderContent.MessageStatistics\n      || contentKey === HeaderContent.StoryStatistics\n      || isManagement\n    )\n  );\n\n  const buttonClassName = buildClassName(\n    'animated-close-icon',\n    isBackButton && 'state-back',\n    (shouldSkipTransition || shouldSkipHistoryAnimations) && 'no-transition',\n  );\n\n  const headerRef = useRef<HTMLDivElement>();\n  useElectronDrag(headerRef);\n\n  return (\n    <div className=\"RightHeader\" ref={headerRef}>\n      <Button\n        className=\"close-button\"\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        onClick={handleClose}\n        ariaLabel={isBackButton ? oldLang('Common.Back') : oldLang('Common.Close')}\n      >\n        <div className={buttonClassName} />\n      </Button>\n      <Transition\n        name={(shouldSkipTransition || shouldSkipHistoryAnimations) ? 'none' : 'slideFade'}\n        activeKey={renderingContentKey}\n      >\n        {renderHeaderContent()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, {\n    chatId, isProfile, isManagement, threadId,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { query: stickerSearchQuery } = selectCurrentStickerSearch(global) || {};\n    const { query: gifSearchQuery } = selectCurrentGifSearch(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const user = isProfile && chatId && isUserId(chatId) ? selectUser(global, chatId) : undefined;\n    const isChannel = chat && isChatChannel(chat);\n    const isInsideTopic = chat?.isForum && Boolean(threadId && threadId !== MAIN_THREAD_ID);\n    const topic = isInsideTopic ? selectTopic(global, chatId!, threadId!) : undefined;\n    const canEditTopic = isInsideTopic && topic && getCanManageTopic(chat, topic);\n    const isBot = user && isUserBot(user);\n    const isSavedMessages = chatId ? selectIsChatWithSelf(global, chatId) : undefined;\n    const canEditBot = isBot && user?.canEditBot;\n\n    const canAddContact = user && getCanAddContact(user);\n    const canManage = Boolean(!isManagement && isProfile && chatId && selectCanManage(global, chatId));\n\n    const isEditingInvite = Boolean(chatId && tabState.management.byChatId[chatId]?.editingInvite);\n    const canViewStatistics = !isInsideTopic && chatId\n      ? selectChatFullInfo(global, chatId)?.canViewStatistics\n      : undefined;\n    const currentInviteInfo = chatId\n      ? tabState.management.byChatId[chatId]?.inviteInfo?.invite : undefined;\n\n    const giftProfileFilter = tabState.savedGifts.filter;\n    const canUseGiftFilter = chatId ? selectCanUseGiftProfileFilter(global, chatId) : false;\n    const canUseGiftAdminFilter = chatId ? selectCanUseGiftProfileAdminFilter(global, chatId) : false;\n\n    return {\n      canManage,\n      canAddContact,\n      canViewStatistics,\n      isChannel,\n      isBot,\n      isInsideTopic,\n      canEditTopic,\n      userId: user?.id,\n      isSelf: user?.isSelf,\n      stickerSearchQuery,\n      gifSearchQuery,\n      isEditingInvite,\n      currentInviteInfo,\n      isSavedMessages,\n      shouldSkipHistoryAnimations: tabState.shouldSkipHistoryAnimations,\n      canEditBot,\n      giftProfileFilter,\n      canUseGiftFilter,\n      canUseGiftAdminFilter,\n    };\n  },\n)(RightHeader);\n","import type { FC } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nimport Loading from '../ui/Loading';\n\nconst StickerSearchAsync: FC = () => {\n  const StickerSearch = useModuleLoader(Bundles.Extra, 'StickerSearch');\n\n  return StickerSearch ? <StickerSearch /> : <Loading />;\n};\n\nexport default StickerSearchAsync;\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect } from '../../../lib/teact/teact';\n\nimport { ProfileState, type ProfileTabType } from '../../../types';\n\nimport animateScroll from '../../../util/animateScroll';\nimport { throttle } from '../../../util/schedulers';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nconst TRANSITION_DURATION = 300;\nconst PROGRAMMATIC_SCROLL_TIMEOUT_MS = 350;\n\nconst runThrottledForScroll = throttle((cb) => cb(), 250, false);\n\nlet isScrollingProgrammatically = false;\n\nexport default function useProfileState(\n  containerRef: ElementRef<HTMLDivElement>,\n  tabType: ProfileTabType,\n  profileState: ProfileState,\n  onProfileStateChange: (state: ProfileState) => void,\n  forceScrollProfileTab = false,\n  allowAutoScrollToTabs = false,\n  handleStopAutoScrollToTabs: () => void,\n) {\n  // Scroll to tabs if needed\n  useEffectWithPrevDeps(([prevTabType]) => {\n    if ((prevTabType && prevTabType !== tabType && allowAutoScrollToTabs) || (tabType && forceScrollProfileTab)) {\n      const container = containerRef.current!;\n      const tabsEl = container.querySelector<HTMLDivElement>('.TabList')!;\n      handleStopAutoScrollToTabs();\n      if (container.scrollTop < tabsEl.offsetTop) {\n        onProfileStateChange(getStateFromTabType(tabType));\n        isScrollingProgrammatically = true;\n        animateScroll({\n          container,\n          element: tabsEl,\n          position: 'start',\n          forceDuration: TRANSITION_DURATION,\n        });\n        setTimeout(() => {\n          isScrollingProgrammatically = false;\n        }, PROGRAMMATIC_SCROLL_TIMEOUT_MS);\n      }\n    }\n  }, [tabType, onProfileStateChange, containerRef, forceScrollProfileTab,\n    allowAutoScrollToTabs, handleStopAutoScrollToTabs]);\n\n  // Scroll to top\n  useEffectWithPrevDeps(([prevProfileState]) => {\n    if (profileState !== ProfileState.Profile || profileState === prevProfileState) {\n      return;\n    }\n\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n\n    const tabListEl = container.querySelector<HTMLDivElement>('.TabList');\n    if (!tabListEl || tabListEl.offsetTop > container.scrollTop) {\n      return;\n    }\n\n    isScrollingProgrammatically = true;\n\n    animateScroll({\n      container,\n      element: container.firstElementChild as HTMLElement,\n      position: 'start',\n      maxDistance: container.offsetHeight * 2,\n    });\n\n    setTimeout(() => {\n      isScrollingProgrammatically = false;\n    }, PROGRAMMATIC_SCROLL_TIMEOUT_MS);\n  }, [profileState, containerRef]);\n\n  const determineProfileState = useLastCallback(() => {\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n\n    const tabListEl = container.querySelector<HTMLDivElement>('.TabList');\n    if (!tabListEl) {\n      return;\n    }\n\n    let state: ProfileState = ProfileState.Profile;\n    if (Math.ceil(container.scrollTop) >= tabListEl.offsetTop) {\n      state = getStateFromTabType(tabType);\n    }\n\n    onProfileStateChange(state);\n  });\n\n  // Determine profile state when switching tabs\n  useEffect(() => {\n    if (isScrollingProgrammatically) {\n      return;\n    }\n\n    determineProfileState();\n  }, [determineProfileState, tabType]);\n\n  // Determine profile state when scrolling\n  const handleScroll = useLastCallback(() => {\n    if (isScrollingProgrammatically) {\n      return;\n    }\n\n    runThrottledForScroll(determineProfileState);\n  });\n\n  return { handleScroll };\n}\n\nfunction getStateFromTabType(tabType: ProfileTabType) {\n  switch (tabType) {\n    case 'members':\n      return ProfileState.MemberList;\n    case 'gifts':\n      return ProfileState.GiftList;\n    case 'stories':\n      return ProfileState.StoryList;\n    case 'dialogs':\n      return ProfileState.SavedDialogs;\n    default:\n      return ProfileState.SharedMedia;\n  }\n}\n","import { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiUser, ApiUserStatus,\n} from '../../../api/types';\nimport type { ProfileTabType, SharedMediaType, ThreadId } from '../../../types';\n\nimport { MEMBERS_SLICE, MESSAGE_SEARCH_SLICE, SHARED_MEDIA_SLICE } from '../../../config';\nimport { getMessageContentIds, sortUserIds } from '../../../global/helpers';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useProfileViewportIds({\n  loadMoreMembers,\n  loadCommonChats,\n  searchMessages,\n  loadStories,\n  loadStoriesArchive,\n  loadMoreGifts,\n  tabType,\n  mediaSearchType,\n  groupChatMembers,\n  commonChatIds,\n  usersById,\n  userStatusesById,\n  chatsById,\n  chatMessages,\n  foundIds,\n  threadId,\n  storyIds,\n  giftIds,\n  pinnedStoryIds,\n  archiveStoryIds,\n  similarChannels,\n  similarBots,\n}: {\n  loadMoreMembers: AnyToVoidFunction;\n  loadCommonChats: AnyToVoidFunction;\n  searchMessages: AnyToVoidFunction;\n  loadStories: AnyToVoidFunction;\n  loadStoriesArchive: AnyToVoidFunction;\n  loadMoreGifts: AnyToVoidFunction;\n  tabType: ProfileTabType;\n  mediaSearchType?: SharedMediaType;\n  groupChatMembers?: ApiChatMember[];\n  commonChatIds?: string[];\n  usersById?: Record<string, ApiUser>;\n  userStatusesById?: Record<string, ApiUserStatus>;\n  chatsById?: Record<string, ApiChat>;\n  chatMessages?: Record<number, ApiMessage>;\n  foundIds?: number[];\n  threadId?: ThreadId;\n  storyIds?: number[];\n  giftIds?: string[];\n  pinnedStoryIds?: number[];\n  archiveStoryIds?: number[];\n  similarChannels?: string[];\n  similarBots?: string[];\n}) {\n  const resultType = tabType === 'members' || !mediaSearchType ? tabType : mediaSearchType;\n\n  const memberIds = useMemo(() => {\n    if (!groupChatMembers || !usersById || !userStatusesById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      groupChatMembers.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [groupChatMembers, usersById, userStatusesById]);\n\n  const chatIds = useMemo(() => {\n    if (!commonChatIds || !chatsById) {\n      return undefined;\n    }\n\n    return sortChatIds(commonChatIds, true);\n  }, [chatsById, commonChatIds]);\n\n  const [memberViewportIds, getMoreMembers, noProfileInfoForMembers] = useInfiniteScrollForLoadableItems(\n    loadMoreMembers, memberIds,\n  );\n\n  const [mediaViewportIds, getMoreMedia, noProfileInfoForMedia] = useInfiniteScrollForSharedMedia(\n    'media', resultType, searchMessages, chatMessages, foundIds, threadId,\n  );\n\n  const [documentViewportIds, getMoreDocuments, noProfileInfoForDocuments] = useInfiniteScrollForSharedMedia(\n    'documents', resultType, searchMessages, chatMessages, foundIds, threadId,\n  );\n\n  const [linkViewportIds, getMoreLinks, noProfileInfoForLinks] = useInfiniteScrollForSharedMedia(\n    'links', resultType, searchMessages, chatMessages, foundIds, threadId,\n  );\n\n  const [audioViewportIds, getMoreAudio, noProfileInfoForAudio] = useInfiniteScrollForSharedMedia(\n    'audio', resultType, searchMessages, chatMessages, foundIds, threadId,\n  );\n\n  const [voiceViewportIds, getMoreVoices, noProfileInfoForVoices] = useInfiniteScrollForSharedMedia(\n    'voice', resultType, searchMessages, chatMessages, foundIds, threadId,\n  );\n\n  const [commonChatViewportIds, getMoreCommonChats, noProfileInfoForCommonChats] = useInfiniteScrollForLoadableItems(\n    loadCommonChats, chatIds,\n  );\n\n  const sortedStoryIds = useMemo(() => {\n    if (!storyIds?.length) return storyIds;\n    const pinnedStoryIdsSet = new Set(pinnedStoryIds);\n    return storyIds.slice().sort((a, b) => {\n      const aIsPinned = pinnedStoryIdsSet.has(a);\n      const bIsPinned = pinnedStoryIdsSet.has(b);\n      if (aIsPinned && !bIsPinned) return -1;\n      if (!aIsPinned && bIsPinned) return 1;\n      return b - a;\n    });\n  }, [storyIds, pinnedStoryIds]);\n\n  const [storyViewportIds, getMoreStories, noProfileInfoForStories] = useInfiniteScrollForLoadableItems(\n    loadStories, sortedStoryIds,\n  );\n\n  const [\n    archiveStoryViewportIds,\n    getMoreStoriesArchive,\n    noProfileInfoForStoriesArchive,\n  ] = useInfiniteScrollForLoadableItems(\n    loadStoriesArchive, archiveStoryIds,\n  );\n\n  let viewportIds: number[] | string[] | undefined;\n  let getMore: AnyToVoidFunction | undefined;\n  let noProfileInfo = false;\n\n  switch (resultType) {\n    case 'members':\n      viewportIds = memberViewportIds;\n      getMore = getMoreMembers;\n      noProfileInfo = noProfileInfoForMembers;\n      break;\n    case 'commonChats':\n      viewportIds = commonChatViewportIds;\n      getMore = getMoreCommonChats;\n      noProfileInfo = noProfileInfoForCommonChats;\n      break;\n    case 'media':\n      viewportIds = mediaViewportIds;\n      getMore = getMoreMedia;\n      noProfileInfo = noProfileInfoForMedia;\n      break;\n    case 'documents':\n      viewportIds = documentViewportIds;\n      getMore = getMoreDocuments;\n      noProfileInfo = noProfileInfoForDocuments;\n      break;\n    case 'links':\n      viewportIds = linkViewportIds;\n      getMore = getMoreLinks;\n      noProfileInfo = noProfileInfoForLinks;\n      break;\n    case 'audio':\n      viewportIds = audioViewportIds;\n      getMore = getMoreAudio;\n      noProfileInfo = noProfileInfoForAudio;\n      break;\n    case 'voice':\n      viewportIds = voiceViewportIds;\n      getMore = getMoreVoices;\n      noProfileInfo = noProfileInfoForVoices;\n      break;\n    case 'stories':\n      viewportIds = storyViewportIds;\n      getMore = getMoreStories;\n      noProfileInfo = noProfileInfoForStories;\n      break;\n    case 'storiesArchive':\n      viewportIds = archiveStoryViewportIds;\n      getMore = getMoreStoriesArchive;\n      noProfileInfo = noProfileInfoForStoriesArchive;\n      break;\n    case 'similarChannels':\n      viewportIds = similarChannels;\n      break;\n    case 'similarBots':\n      viewportIds = similarBots;\n      break;\n    case 'gifts':\n      viewportIds = giftIds;\n      getMore = loadMoreGifts;\n      break;\n    case 'dialogs':\n      noProfileInfo = true;\n      break;\n  }\n\n  return [resultType, viewportIds, getMore, noProfileInfo] as const;\n}\n\nfunction useInfiniteScrollForLoadableItems<ListId extends string | number>(\n  handleLoadMore?: AnyToVoidFunction,\n  itemIds?: ListId[],\n) {\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore,\n    itemIds,\n    undefined,\n    MEMBERS_SLICE,\n  );\n\n  const isOnTop = !viewportIds || !itemIds || viewportIds[0] === itemIds[0];\n\n  return [viewportIds, getMore, !isOnTop] as const;\n}\n\nfunction useInfiniteScrollForSharedMedia(\n  forSharedMediaType: SharedMediaType,\n  currentResultType?: ProfileTabType,\n  handleLoadMore?: AnyToVoidFunction,\n  chatMessages?: Record<number, ApiMessage>,\n  foundIds?: number[],\n  threadId?: ThreadId,\n) {\n  const messageIdsRef = useRef<number[]>();\n\n  useSyncEffect(() => {\n    messageIdsRef.current = undefined;\n  }, [threadId]);\n\n  useSyncEffect(() => {\n    if (currentResultType === forSharedMediaType && chatMessages && foundIds) {\n      messageIdsRef.current = getMessageContentIds(\n        chatMessages,\n        foundIds,\n        forSharedMediaType,\n      );\n    }\n  }, [chatMessages, foundIds, currentResultType, forSharedMediaType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore,\n    messageIdsRef.current,\n    undefined,\n    forSharedMediaType === 'media' ? SHARED_MEDIA_SLICE : MESSAGE_SEARCH_SLICE,\n  );\n\n  const isOnTop = !viewportIds || !messageIdsRef.current || viewportIds[0] === messageIdsRef.current[0];\n\n  return [viewportIds, getMore, !isOnTop] as const;\n}\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect } from '../../../lib/teact/teact';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\n// Sometimes px values are rounded\nconst ROUNDING_COMPENSATION_PX = 1;\n\nexport default function useTransitionFixes(\n  containerRef: ElementRef<HTMLDivElement>,\n  transitionElSelector = '.Transition.shared-media-transition',\n) {\n  // Set `min-height` for shared media container to prevent jumping when switching tabs\n  useEffect(() => {\n    function setMinHeight() {\n      const container = containerRef.current!;\n      const transitionEl = container.querySelector<HTMLDivElement>(transitionElSelector);\n      const tabsEl = container.querySelector<HTMLDivElement>('.TabList');\n      if (transitionEl && tabsEl) {\n        const newHeight = container.offsetHeight - tabsEl.offsetHeight + ROUNDING_COMPENSATION_PX;\n\n        requestMutation(() => {\n          transitionEl.style.minHeight = `${newHeight}px`;\n        });\n      }\n    }\n\n    setMinHeight();\n\n    window.addEventListener('resize', setMinHeight, false);\n\n    return () => {\n      window.removeEventListener('resize', setMinHeight, false);\n    };\n  }, [containerRef, transitionElSelector]);\n\n  // Workaround for scrollable content flickering during animation.\n  const applyTransitionFix = useLastCallback(() => {\n    // This callback is called from `Transition.onStart` which is \"mutate\" phase\n    requestMeasure(() => {\n      const container = containerRef.current!;\n      if (container.style.overflowY === 'hidden') return;\n\n      const scrollBarWidth = container.offsetWidth - container.clientWidth;\n\n      requestMutation(() => {\n        container.style.overflowY = 'hidden';\n        container.style.paddingRight = `${scrollBarWidth}px`;\n      });\n    });\n  });\n\n  const releaseTransitionFix = useLastCallback(() => {\n    const container = containerRef.current!;\n    container.style.overflowY = 'scroll';\n    container.style.paddingRight = '0';\n  });\n\n  return { applyTransitionFix, releaseTransitionFix };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './Management';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst ManagementAsync: FC<OwnProps> = (props) => {\n  const Management = useModuleLoader(Bundles.Extra, 'Management');\n\n  return Management ? <Management {...props} /> : <Loading />;\n};\n\nexport default ManagementAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gk6pIryJ\",\"noResults\":\"WP4wRUbm\",\"section-header\":\"LWcgK3OX\",\"sectionHeader\":\"LWcgK3OX\",\"section\":\"C8KF95yU\",\"user\":\"oMy5KOFr\",\"stats\":\"GOzrl0zF\",\"down\":\"QuLtxDUV\",\"loadMoreSpinner\":\"ln5zB7KK\",\"status\":\"r3zLiaXx\",\"info\":\"Eo1qQlxx\",\"month\":\"McSPvm0N\",\"quantity\":\"s1yf_GJa\",\"floatingBadge\":\"oSCjRZtx\",\"floatingBadgeButtonColor\":\"duVpAT_e\",\"floatingBadgeWarning\":\"DsJMXNNk\",\"floatingBadgeButton\":\"urrWJVYB\",\"floatingBadgeIcon\":\"hcA9VPeV\",\"floatingBadgeValue\":\"hHkCO4Ge\",\"content\":\"SG00REIA\",\"boostSection\":\"ETgjBS4d\",\"giveawayButton\":\"wOCtp5Kk\",\"giveawayIcon\":\"B9GF4NDB\",\"primaryLink\":\"GXmXwIbx\",\"copy\":\"rB0gc1GX\",\"boostInfo\":\"BhoA3MT6\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBoost, ApiBoostStatistics, ApiTypePrepaidGiveaway } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n} from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatInteger } from '../../../util/textFormat';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Spinner from '../../ui/Spinner';\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './BoostStatistics.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\n\ntype StateProps = {\n  boostStatistics: TabState['boostStatistics'];\n  isGiveawayAvailable?: boolean;\n  chatId: string;\n  giveawayBoostsPerPremium?: number;\n  isChannel?: boolean;\n};\n\nconst GIVEAWAY_IMG_LIST: Partial<Record<number, string>> = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst CUSTOM_PEER_STAR_TEMPLATE: Omit<CustomPeer, 'title' | 'titleKey'> = {\n  isCustomPeer: true,\n  avatarIcon: 'star',\n  peerColorId: 1,\n};\n\nconst CUSTOM_PEER_TO_BE_DISTRIBUTED: CustomPeer = {\n  isCustomPeer: true,\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nconst BoostStatistics = ({\n  boostStatistics,\n  isGiveawayAvailable,\n  chatId,\n  giveawayBoostsPerPremium,\n  isChannel,\n}: StateProps) => {\n  const {\n    openChat, loadMoreBoosters, closeBoostStatistics, openGiveawayModal, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n  const transitionRef = useRef<HTMLDivElement>();\n\n  const isLoaded = boostStatistics?.boostStatus;\n  const status = isLoaded ? boostStatistics.boostStatus : undefined;\n\n  const isGiftListEqual = boostStatistics && boostStatistics?.boosts?.count\n    === boostStatistics?.giftedBoosts?.count;\n  const shouldDisplayGiftList = !isGiftListEqual && boostStatistics?.giftedBoosts\n    && boostStatistics?.giftedBoosts?.list?.length > 0;\n\n  const {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  } = useMemo(() => {\n    if (!status) {\n      return {\n        currentLevel: 0,\n        hasNextLevel: false,\n        boosts: 0,\n        levelProgress: 0,\n        remainingBoosts: 0,\n        prepaidGiveaways: [],\n      };\n    }\n    return getBoostProgressInfo(status);\n  }, [status]);\n\n  const statsOverview = useMemo(() => {\n    if (!status) return undefined;\n\n    return {\n      level: currentLevel,\n      boosts,\n      premiumSubscribers: status.premiumSubscribers!,\n      remainingBoosts,\n      prepaidGiveaways: status.prepaidGiveaways!,\n    } satisfies ApiBoostStatistics;\n  }, [status, boosts, currentLevel, remainingBoosts]);\n\n  const tabs = useMemo(() => {\n    if (shouldDisplayGiftList) {\n      return [\n        {\n          type: 'boostList',\n          title: lang('BoostingBoostsCount', boostStatistics?.boosts?.count, 'i'),\n        },\n        {\n          type: 'giftedBoostList',\n          title: lang('BoostingGiftsCount', boostStatistics?.giftedBoosts?.count, 'i'),\n        },\n      ];\n    }\n    return [];\n  }, [shouldDisplayGiftList, lang, boostStatistics?.boosts?.count, boostStatistics?.giftedBoosts?.count]);\n\n  const initialTab = useMemo(() => {\n    return boostStatistics?.boosts && boostStatistics.boosts?.list.length > 0 ? 1 : 0;\n  }, [boostStatistics]);\n\n  const [activeTab, setActiveTab] = useState(initialTab);\n\n  const renderingActiveTab = activeTab > tabs.length - 1 ? tabs.length - 1 : activeTab;\n\n  const tabType = tabs[renderingActiveTab]?.type;\n\n  const activeKey = tabs.findIndex(({ type }) => type === tabType);\n\n  const boostersToLoadCount = useMemo(() => {\n    if (!boostStatistics) return undefined;\n\n    const list = shouldDisplayGiftList ? (tabType === 'boostList'\n      ? boostStatistics.boosts : boostStatistics.giftedBoosts) : boostStatistics.boosts;\n    if (!list?.count) return undefined;\n\n    const loadedBoostsCount = list.list.reduce((total, boost) => {\n      return total + (boost.multiplier || 1);\n    }, 0);\n\n    const totalCount = list.count;\n    const toLoadCount = totalCount - loadedBoostsCount;\n\n    return toLoadCount > 0 ? toLoadCount : undefined;\n  }, [shouldDisplayGiftList, boostStatistics, tabType]);\n\n  const renderBoostIcon = useLastCallback((multiplier: number) => (\n    <div className={styles.quantity}>\n      <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeButtonColor)}>\n        <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n        <div className={styles.floatingBadgeValue}>{multiplier}</div>\n      </div>\n    </div>\n  ));\n\n  const renderBoostTypeIcon = useLastCallback((boost: ApiBoost) => {\n    if (!boost.isFromGiveaway && !boost.isGift) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.quantity}>\n        <div className={buildClassName(styles.floatingBadge,\n          !boost.isFromGiveaway && styles.floatingBadgeWarning,\n          styles.floatingBadgeButtonColor,\n          styles.floatingBadgeButton)}\n        >\n          <Icon name=\"gift\" className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue}>\n            {lang(boost.isFromGiveaway\n              ? 'BoostingGiveaway' : 'BoostingGift')}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  const handleBoosterClick = useLastCallback((userId?: string) => {\n    if (!userId) {\n      showNotification({\n        message: lang('BoostingRecipientWillBeSelected'),\n      });\n      return;\n    }\n    openChat({ id: userId });\n    closeBoostStatistics();\n  });\n\n  const renderBoostList = useLastCallback((boost) => {\n    const hasStars = Boolean(boost?.stars);\n\n    let customPeer: CustomPeer | undefined;\n    if (hasStars) {\n      customPeer = {\n        ...CUSTOM_PEER_STAR_TEMPLATE,\n        title: lang('Stars', boost.stars),\n      };\n    }\n\n    if (!boost.userId) {\n      customPeer = CUSTOM_PEER_TO_BE_DISTRIBUTED;\n    }\n\n    return (\n      <ListItem\n        className={buildClassName(styles.boostInfo, 'chat-item-clickable')}\n        onClick={() => handleBoosterClick(boost.userId)}\n      >\n        <PrivateChatInfo\n          className={styles.user}\n          userId={boost.userId}\n          customPeer={customPeer}\n          status={lang('BoostExpireOn', formatDateAtTime(lang, boost.expires * 1000))}\n          noEmojiStatus\n          forceShowSelf\n          noFake\n          noVerified\n          iconElement={boost.multiplier ? renderBoostIcon(boost.multiplier) : undefined}\n          rightElement={renderBoostTypeIcon(boost)}\n        />\n      </ListItem>\n    );\n  });\n\n  const handleGiveawayClick = useLastCallback(() => {\n    openGiveawayModal({ chatId });\n  });\n\n  const handleLoadMore = useLastCallback((e) => {\n    e.preventDefault();\n    loadMoreBoosters({ isGifts: tabType === 'giftedBoostList' });\n  });\n\n  const launchPrepaidGiveawayHandler = useLastCallback((prepaidGiveaway: ApiTypePrepaidGiveaway) => {\n    openGiveawayModal({ chatId, prepaidGiveaway });\n  });\n\n  function renderContent() {\n    let listToRender;\n    if (tabType === 'boostList') {\n      listToRender = boostStatistics?.boosts?.list;\n    } else if (tabType === 'giftedBoostList') {\n      listToRender = boostStatistics?.giftedBoosts?.list;\n    }\n\n    if (listToRender && !listToRender?.length) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.section}>\n        {listToRender?.map((boost) => renderBoostList(boost))}\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll')}>\n      {!isLoaded && <Loading />}\n      {isLoaded && statsOverview && (\n        <>\n          <div className={styles.section}>\n            <PremiumProgress\n              leftText={lang('BoostsLevel', currentLevel)}\n              rightText={hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined}\n              progress={levelProgress}\n              floatingBadgeText={formatInteger(boosts)}\n              floatingBadgeIcon=\"boost\"\n            />\n            <StatisticsOverview className={styles.stats} statistics={statsOverview} type=\"boost\" />\n          </div>\n          {statsOverview.prepaidGiveaways && (\n            <div className={styles.section}>\n              <h4 className={styles.sectionHeader} dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang('BoostingPreparedGiveaways')}\n              </h4>\n              {statsOverview?.prepaidGiveaways?.map((prepaidGiveaway) => {\n                const isStarsGiveaway = 'stars' in prepaidGiveaway;\n\n                return (\n                  <ListItem\n                    key={prepaidGiveaway.id}\n                    className=\"chat-item-clickable\"\n\n                    onClick={() => launchPrepaidGiveawayHandler(prepaidGiveaway)}\n                  >\n                    <div className={buildClassName(styles.status, 'status-clickable')}>\n                      <div>\n                        {isStarsGiveaway\n                          ? (\n                            <img\n                              src={GiftStar}\n                              className={styles.giveawayIcon}\n                              alt={lang('GiftStar')}\n                            />\n                          ) : (\n                            <img\n                              src={GIVEAWAY_IMG_LIST[prepaidGiveaway.months] || GIVEAWAY_IMG_LIST[3]}\n                              className={styles.giveawayIcon}\n                              alt={lang('Giveaway')}\n                            />\n                          )}\n                      </div>\n                      <div className={styles.info}>\n                        <h3>\n                          {isStarsGiveaway\n                            ? lang('Giveaway.Stars.Prepaid.Title', prepaidGiveaway.stars)\n                            : lang('BoostingTelegramPremiumCountPlural', prepaidGiveaway.quantity)}\n                        </h3>\n                        <p className={styles.month}>\n                          {\n                            isStarsGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', prepaidGiveaway.quantity)\n                              : lang('PrepaidGiveawayMonths', prepaidGiveaway.months)\n                          }\n                        </p>\n                      </div>\n                      <div className={styles.quantity}>\n                        <div className={buildClassName(styles.floatingBadge,\n                          styles.floatingBadgeButtonColor,\n                          styles.floatingBadgeButton)}\n                        >\n                          <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                            {isStarsGiveaway ? prepaidGiveaway.boosts\n                              : prepaidGiveaway.quantity * (giveawayBoostsPerPremium ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </ListItem>\n                );\n              })}\n              <p className=\"text-muted hint\" key=\"links-hint\">{lang('BoostingSelectPaidGiveaway')}</p>\n            </div>\n          )}\n          <div className={styles.section}>\n            {shouldDisplayGiftList ? (\n              <div\n                className={buildClassName(styles.boostSection, styles.content)}\n              >\n                <Transition\n                  ref={transitionRef}\n                  name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                  activeKey={activeKey}\n                  renderCount={tabs.length}\n                  shouldRestoreHeight\n                >\n                  {renderContent()}\n                </Transition>\n                <TabList activeTab={renderingActiveTab} tabs={tabs} onSwitchTab={setActiveTab} />\n              </div>\n            ) : (\n              <>\n                <h4 className={styles.sectionHeader} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('BoostingBoostsCount', boostStatistics?.boosts?.count)}\n                </h4>\n                {!boostStatistics?.boosts?.list?.length && (\n                  <div className={styles.noResults}>\n                    {lang(isChannel ? 'NoBoostersHint' : 'NoBoostersGroupHint')}\n                  </div>\n                )}\n                {boostStatistics?.boosts?.list?.map((boost) => renderBoostList(boost))}\n              </>\n            )}\n            {Boolean(boostersToLoadCount) && (\n              <ListItem\n                key=\"load-more\"\n                className={styles.showMore}\n                disabled={boostStatistics?.isLoadingBoosters}\n                onClick={handleLoadMore}\n              >\n                {boostStatistics?.isLoadingBoosters ? (\n                  <Spinner className={styles.loadMoreSpinner} />\n                ) : (\n                  <Icon name=\"down\" className={styles.down} />\n                )}\n                {lang('ShowVotes', boostersToLoadCount, 'i')}\n              </ListItem>\n            )}\n          </div>\n          <LinkField className={styles.section} link={status!.boostUrl} withShare title={lang('LinkForBoosting')} />\n          {isGiveawayAvailable && (\n            <div className={styles.section}>\n              <ListItem\n                key=\"load-more\"\n                icon=\"gift\"\n                onClick={handleGiveawayClick}\n                className={styles.giveawayButton}\n              >\n                {lang('BoostingGetBoostsViaGifts')}\n              </ListItem>\n              <p className=\"text-muted hint\" key=\"links-hint\">\n                {lang(\n                  isChannel ? 'BoostingGetMoreBoosts' : 'BoostingGetMoreBoostsGroup',\n                )}\n              </p>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const boostStatistics = tabState.boostStatistics;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const chatId = boostStatistics && boostStatistics.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChannel = chat && isChatChannel(chat);\n    const giveawayBoostsPerPremium = global.appConfig?.giveawayBoostsPerPremium;\n\n    return {\n      boostStatistics,\n      isGiveawayAvailable,\n      chatId: chatId!,\n      giveawayBoostsPerPremium,\n      isChannel,\n    };\n  },\n)(BoostStatistics));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MessageStatistics';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst MessageStatisticsAsync: FC<OwnProps> = (props) => {\n  const MessageStatistics = useModuleLoader(Bundles.Extra, 'MessageStatistics');\n\n  return MessageStatistics ? <MessageStatistics {...props} /> : <Loading />;\n};\n\nexport default MessageStatisticsAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vBPv6lUS\",\"graph\":\"EbPbvB1I\",\"hidden\":\"nsPIlLYL\",\"ready\":\"s6qyDhkE\",\"section\":\"cB2IkwY6\",\"topText\":\"FLOpxZd1\",\"availableReward\":\"emE6bAD8\",\"rewardValue\":\"eyDAxGDU\",\"decimalPart\":\"jkRV_L7b\",\"integer\":\"xE9kfGi7\",\"decimalUsdPart\":\"hWMnYdxX\",\"toncoinIcon\":\"ubDl9CvS\",\"textBottom\":\"P3qZJJzF\"};","import {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChannelMonetizationStatistics, StatisticsGraph } from '../../../api/types';\n\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AboutMonetizationModal from '../../common/AboutMonetizationModal.async';\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './MonetizationStatistics.module.scss';\n\ntype ILovelyChart = { create: (el: HTMLElement, params: AnyLiteral) => void };\nlet lovelyChartPromise: Promise<ILovelyChart> | undefined;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst MONETIZATION_GRAPHS_TITLES = {\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  revenueGraph: 'lng_channel_earn_chart_revenue',\n};\nconst MONETIZATION_GRAPHS = Object.keys(MONETIZATION_GRAPHS_TITLES) as (keyof ApiChannelMonetizationStatistics)[];\n\ntype StateProps = {\n  chatId: string;\n  dcId?: number;\n  statistics?: ApiChannelMonetizationStatistics;\n  isCreator?: boolean;\n  isChannelRevenueWithdrawalEnabled?: boolean;\n  hasPassword?: boolean;\n};\n\nconst MonetizationStatistics = ({\n  chatId,\n  dcId,\n  statistics,\n  isCreator,\n  isChannelRevenueWithdrawalEnabled,\n  hasPassword,\n}: StateProps) => {\n  const { loadChannelMonetizationStatistics, openMonetizationVerificationModal, loadPasswordInfo } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n  const forceUpdate = useForceUpdate();\n  const [isAboutMonetizationModalOpen, openAboutMonetizationModal, closeAboutMonetizationModal] = useFlag(false);\n  const [isConfirmPasswordDialogOpen, openConfirmPasswordDialogOpen, closeConfirmPasswordDialogOpen] = useFlag();\n  const availableBalance = statistics?.balances?.availableBalance;\n  const isWithdrawalEnabled = statistics?.balances?.isWithdrawalEnabled;\n  const canWithdraw = isCreator && isChannelRevenueWithdrawalEnabled && Boolean(availableBalance)\n    && isWithdrawalEnabled;\n\n  useEffect(() => {\n    if (chatId) {\n      loadChannelMonetizationStatistics({ peerId: chatId });\n      loadPasswordInfo();\n    }\n  }, [chatId, loadChannelMonetizationStatistics]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (containerRef.current) {\n        Array.from(containerRef.current.children).forEach((child) => {\n          child.innerHTML = '';\n          child.classList.add(styles.hidden);\n        });\n      }\n\n      loadedCharts.current = [];\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      MONETIZATION_GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        LovelyChart.create(containerRef.current!.children[index] as HTMLElement, {\n          title: oldLang((MONETIZATION_GRAPHS_TITLES as Record<string, string>)[name]),\n          ...graph as StatisticsGraph,\n        });\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [isReady, statistics, oldLang, chatId, dcId, forceUpdate]);\n\n  function renderAvailableReward() {\n    const [integerTonPart, decimalTonPart] = availableBalance ? availableBalance.toFixed(4).split('.') : [0];\n    const [integerUsdPart, decimalUsdPart] = availableBalance\n      && statistics?.usdRate ? (availableBalance * statistics.usdRate).toFixed(2).split('.') : [0];\n\n    return (\n      <div className={styles.availableReward}>\n        <div className={styles.toncoin}>\n          <Icon className={styles.toncoinIcon} name=\"toncoin\" />\n          <b className={styles.rewardValue}>\n            {integerTonPart}\n            {decimalTonPart ? (\n              <span className={styles.decimalPart}>\n                .\n                {decimalTonPart}\n              </span>\n            ) : undefined}\n          </b>\n        </div>\n        {' '}\n        <span className={styles.integer}>\n          ≈ $\n          {integerUsdPart}\n          {decimalUsdPart ? (\n            <span className={styles.decimalUsdPart}>\n              .\n              {decimalUsdPart}\n            </span>\n          ) : undefined}\n        </span>\n      </div>\n    );\n  }\n\n  const topText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnAbout',\n      {\n        link: (\n          <Link isPrimary onClick={openAboutMonetizationModal}>\n            {linkText}\n            <Icon name=\"next\" />\n          </Link>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const rewardsText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'MonetizationBalanceZeroInfo',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationProceedsInfoLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const verificationMonetizationHandler = useLastCallback(() => {\n    if (hasPassword) {\n      openMonetizationVerificationModal({\n        chatId,\n      });\n    } else {\n      openConfirmPasswordDialogOpen();\n    }\n  });\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <div className={buildClassName(styles.section, styles.topText)}>{topText}</div>\n\n      <StatisticsOverview\n        statistics={statistics}\n        isToncoin\n        type=\"monetization\"\n        title={oldLang('MonetizationOverview')}\n        subtitle={\n          <div className={styles.textBottom}>{oldLang('MonetizationProceedsTONInfo')}</div>\n        }\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef} className={styles.section}>\n        {MONETIZATION_GRAPHS.filter(Boolean).map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      <div className={styles.section}>\n        {oldLang('lng_channel_earn_balance_title')}\n\n        {renderAvailableReward()}\n\n        <Button\n          size=\"smaller\"\n          type=\"button\"\n          onClick={verificationMonetizationHandler}\n          disabled={!canWithdraw}\n        >\n          {oldLang('MonetizationWithdraw')}\n        </Button>\n\n        <div className={styles.textBottom}>{rewardsText}</div>\n      </div>\n\n      <AboutMonetizationModal\n        isOpen={isAboutMonetizationModalOpen}\n        onClose={closeAboutMonetizationModal}\n      />\n      <ConfirmDialog\n        isOnlyConfirm\n        isOpen={isConfirmPasswordDialogOpen}\n        onClose={closeConfirmPasswordDialogOpen}\n        confirmHandler={closeConfirmPasswordDialogOpen}\n        confirmLabel={lang('OK')}\n      >\n        <p>{renderText(oldLang('Monetization.Withdraw.Error.Text'), ['br'])}</p>\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const {\n      settings: {\n        byKey: {\n          hasPassword,\n        },\n      },\n    } = global;\n    const monetizationStatistics = tabState.monetizationStatistics;\n    const chatId = monetizationStatistics && monetizationStatistics.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const dcId = selectChatFullInfo(global, chatId!)?.statisticsDcId;\n    const isCreator = Boolean(chat?.isCreator);\n\n    const statistics = tabState.statistics.monetization;\n\n    const isChannelRevenueWithdrawalEnabled = global.appConfig?.isChannelRevenueWithdrawalEnabled;\n\n    return {\n      chatId: chatId!,\n      dcId,\n      statistics,\n      isCreator,\n      isChannelRevenueWithdrawalEnabled,\n      hasPassword,\n    };\n  },\n)(MonetizationStatistics));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './Statistics';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst StatisticsAsync: FC<OwnProps> = (props) => {\n  const Statistics = useModuleLoader(Bundles.Extra, 'Statistics');\n\n  return Statistics ? <Statistics {...props} /> : <Loading />;\n};\n\nexport default StatisticsAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StoryStatistics';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nimport Loading from '../../ui/Loading';\n\nconst StoryStatisticsAsync: FC<OwnProps> = (props) => {\n  const StoryStatistics = useModuleLoader(Bundles.Extra, 'StoryStatistics');\n\n  return StoryStatistics ? <StoryStatistics {...props} /> : <Loading />;\n};\n\nexport default StoryStatisticsAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kxMIqtqr\",\"wrapper\":\"D6Yajvjx\",\"media\":\"cV_QL3N5\",\"expiredIcon\":\"cq7jTRkg\",\"overlayIcon\":\"NOCaj4mx\",\"pinnedIcon\":\"GTWFQyJx\",\"viewsCount\":\"g09Rb4Ps\",\"duration\":\"lM_2MMyQ\",\"contextMenu\":\"UAfI9izT\"};","import type React from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { selectChat, selectPinnedStories } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './MediaStory.module.scss';\n\ninterface OwnProps {\n  story: ApiTypeStory;\n  isArchive?: boolean;\n}\n\ninterface StateProps {\n  isProtected?: boolean;\n  isPinned?: boolean;\n  canPin?: boolean;\n}\n\nfunction MediaStory({\n  story, isProtected, isArchive, isPinned, canPin,\n}: OwnProps & StateProps) {\n  const {\n    openStoryViewer,\n    loadPeerSkippedStories,\n    toggleStoryInProfile,\n    toggleStoryPinnedToTop,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n  const containerRef = useRef<HTMLDivElement>();\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .story-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const peerId = story && story.peerId;\n  const isFullyLoaded = story && 'content' in story;\n  const isOwn = isFullyLoaded && story.isOut;\n  const isDeleted = story && 'isDeleted' in story;\n  const video = isFullyLoaded ? (story).content.video : undefined;\n  const duration = video && formatMediaDuration(video.duration);\n  const imageHash = isFullyLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEffect(() => {\n    if (story && !(isFullyLoaded || isDeleted)) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [isDeleted, isFullyLoaded, story]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !isOwn);\n\n  const handleClick = useCallback(() => {\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSinglePeer: true,\n      isPrivate: true,\n      isArchive,\n    });\n  }, [isArchive, story.id, story.peerId]);\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleUnarchiveClick = useLastCallback((e: React.SyntheticEvent) => {\n    stopEvent(e);\n\n    toggleStoryInProfile({ peerId, storyId: story.id, isInProfile: true });\n    showNotification({\n      message: lang('Story.ToastSavedToProfileText'),\n    });\n    handleContextMenuClose();\n  });\n\n  const handleArchiveClick = useLastCallback((e: React.SyntheticEvent) => {\n    stopEvent(e);\n\n    toggleStoryInProfile({ peerId, storyId: story.id, isInProfile: false });\n    showNotification({\n      message: lang('Story.ToastRemovedFromProfileText'),\n    });\n    handleContextMenuClose();\n  });\n\n  const handleTogglePinned = useLastCallback(() => {\n    toggleStoryPinnedToTop({ peerId, storyId: story.id });\n    handleContextMenuClose();\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'scroll-item')}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isDeleted && (\n        <span>\n          <Icon className={styles.expiredIcon} name=\"story-expired\" />\n          {lang('ExpiredStory')}\n        </span>\n      )}\n      {isPinned && <Icon className={buildClassName(styles.overlayIcon, styles.pinnedIcon)} name=\"pin-badge\" />}\n      {isFullyLoaded && Boolean(story.views?.viewsCount) && (\n        <span className={buildClassName(styles.overlayIcon, styles.viewsCount)}>\n          <Icon name=\"eye\" />\n          {story.views.viewsCount}\n        </span>\n      )}\n      {duration && <span className={buildClassName(styles.overlayIcon, styles.duration)}>{duration}</span>}\n      <div className={styles.wrapper}>\n        {thumbUrl && (\n          <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n        )}\n        {isFullyLoaded && <MediaAreaOverlay story={story} />}\n        {isProtected && <span className=\"protector\" />}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName(styles.contextMenu, 'story-context-menu')}\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {isArchive && (\n            <MenuItem icon=\"archive\" onClick={handleUnarchiveClick}>\n              {lang('StoryList.SaveToProfile')}\n            </MenuItem>\n          )}\n          {!isArchive && (\n            <MenuItem icon=\"archive\" onClick={handleArchiveClick}>\n              {lang('Story.Context.RemoveFromProfile')}\n            </MenuItem>\n          )}\n          {!isArchive && !isPinned && canPin && (\n            <MenuItem icon=\"pin\" onClick={handleTogglePinned}>\n              {lang('StoryList.ItemAction.Pin')}\n            </MenuItem>\n          )}\n          {!isArchive && isPinned && (\n            <MenuItem icon=\"unpin\" onClick={handleTogglePinned}>\n              {lang('StoryList.ItemAction.Unpin')}\n            </MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { story }): StateProps => {\n  const chat = selectChat(global, story.peerId);\n  const isProtected = chat?.isProtected;\n\n  const { maxPinnedStoriesCount } = global.appConfig || {};\n  const isOwn = 'isOut' in story && story.isOut;\n  const pinnedStories = selectPinnedStories(global, story.peerId);\n  const isPinned = pinnedStories?.some((pinnedStory) => pinnedStory.id === story.id);\n  const canPinMore = isOwn && (!maxPinnedStoriesCount || (pinnedStories?.length || 0) < maxPinnedStoriesCount);\n\n  return {\n    isProtected,\n    isPinned,\n    canPin: canPinMore,\n  };\n})(MediaStory));\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\ninterface OwnProps {\n  isOpen: boolean;\n}\n\nconst StoryViewerAsync: FC<OwnProps> = ({ isOpen }) => {\n  const StoryViewer = useModuleLoader(Bundles.Extra, 'StoryViewer', !isOpen);\n\n  return StoryViewer ? <StoryViewer /> : undefined;\n};\n\nexport default memo(StoryViewerAsync);\n","\"use client\";\nimport { FC, useEffect, useRef, useState } from \"../../../lib/teact/teact\";\nimport {\n  widget,\n  ResolutionString,\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n} from \"./charting_library\";\nimport Datafeed from \"./datafeed\";\nimport { formatPrice } from \"./helpers\";\nimport { HMPoolTokenMetadata } from \"../../../hooks/hellomoon/hmApi\";\nimport { disableStrict, enableStrict } from \"../../../lib/fasterdom/fasterdom\";\n\n// Helper function to create chart type button HTML\nconst createChartTypeButtonHTML = (chartType: \"price\" | \"mcap\") => {\n  return `\n    <div style=\"cursor: pointer;\">\n      <span style=\"color: ${\n        chartType === \"price\" ? \"#2962ff\" : \"\"\n      }; font-weight: ${chartType === \"price\" ? \"bold\" : \"normal\"};\">\n        Price\n      </span>\n    </div>\n  `;\n};\n\n// // Helper function to create chart type button HTML\n// const createChartTypeButtonHTML = (chartType: \"price\" | \"mcap\") => {\n//   return `\n//     <div style=\"cursor: pointer;\">\n//       <span style=\"color: ${\n//         chartType === \"price\" ? \"#2962ff\" : \"\"\n//       }; font-weight: ${chartType === \"price\" ? \"bold\" : \"normal\"};\">\n//         Price\n//       </span>\n//       /\n//       <span style=\"color: ${\n//         chartType === \"mcap\" ? \"#2962ff\" : \"\"\n//       }; font-weight: ${chartType === \"mcap\" ? \"bold\" : \"normal\"};\">\n//         MCap\n//       </span>\n//     </div>\n//   `;\n// };\n\n// // Helper function to create currency button HTML\n// const createCurrencyButtonHTML = (selectedCurrency: \"usd\" | \"whype\") => {\n//   return `\n//     <div style=\"cursor: pointer;\">\n//       <span style=\"color: ${\n//         selectedCurrency === \"usd\" ? \"#2962ff\" : \"\"\n//       }; font-weight: ${\n//     selectedCurrency === \"usd\" ? \"bold\" : \"normal\"\n//   }; text-transform: uppercase;\">\n//         USD\n//       </span>\n//       /\n//       <span style=\"color: ${\n//         selectedCurrency !== \"usd\" ? \"#2962ff\" : \"\"\n//       }; font-weight: ${\n//     selectedCurrency !== \"usd\" ? \"bold\" : \"normal\"\n//   }; text-transform: uppercase;\">\n//         WHYPE\n//       </span>\n//     </div>\n//   `;\n// };\n\n// Helper function to create currency button HTML\nconst createCurrencyButtonHTML = () => {\n  return `\n    <div>\n      <span style=\"color: #2962ff; font-weight: bold; text-transform: uppercase;\">\n        USD\n      </span>\n    </div>\n  `;\n};\n\nexport interface ChartSettings {\n  chartType: \"price\" | \"mcap\";\n  currency: \"usd\" | \"whype\";\n}\n\ninterface TVChartProps {\n  poolMetadata: HMPoolTokenMetadata;\n  settings: ChartSettings;\n}\n\nconst TVChart: FC<TVChartProps> = ({ poolMetadata, settings }) => {\n  const [chartType, setChartType] = useState<\"price\" | \"mcap\">(\n    settings.chartType\n  );\n  const [currency, setCurrency] = useState<\"usd\" | \"whype\">(settings.currency);\n  const containerRef = useRef<HTMLDivElement>();\n  const [customCssUrl, setCustomCssUrl] = useState<string | null>(null);\n\n  const tvWidgetRef = useRef<IChartingLibraryWidget | null>(null);\n\n  // Disable StricterDOM while TradingView widget is mounted to avoid false positives\n  useEffect(() => {\n    disableStrict();\n    return () => {\n      enableStrict();\n    };\n  }, []);\n\n  // Create custom CSS blob URL once and revoke it on unmount to prevent memory leaks\n  useEffect(() => {\n    const customCSS =\n      'div[data-name=\"open-image-in-new-tab\"],div[data-name=\"tweet-chart-image\"],div[data-name=\"copy-link-to-the-chart-image\"] { display: none; } ';\n    const cssBlob = new Blob([customCSS], { type: \"text/css\" });\n    const url = URL.createObjectURL(cssBlob);\n    setCustomCssUrl(url);\n\n    return () => {\n      URL.revokeObjectURL(url);\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"hyperswap-chartSettings\",\n      JSON.stringify({\n        chartType,\n        currency,\n      })\n    );\n    if (!containerRef.current || !customCssUrl) {\n      return () => {};\n    }\n\n    let appendedScript: HTMLScriptElement | null = null;\n\n    const initChart = () => {\n      const TradingViewWidget = (window as any).TradingView?.widget;\n\n      if (!TradingViewWidget) {\n        console.error(\"TradingView library not loaded\");\n        return;\n      }\n\n      const widgetOptions: ChartingLibraryWidgetOptions = {\n        symbol: JSON.stringify({\n          poolMetadata,\n          currency,\n          chartType,\n        }),\n        datafeed: Datafeed,\n        interval: \"5\" as ResolutionString,\n        locale: \"en\",\n        container: containerRef.current!,\n        library_path: \"/charting_library/\",\n        autosize: true,\n        // theme: \"dark\",\n        disabled_features: [\"header_compare\", \"header_symbol_search\"],\n        enabled_features: [\"seconds_resolution\"],\n        client_id: \"hyperswap\",\n        // custom_themes: {\n        //   \"paneProperties.background\": \"#1D1E20\",\n        //   \"paneProperties.backgroundType\": \"solid\",\n        // },\n        custom_formatters: {\n          priceFormatterFactory: () => {\n            return {\n              format: (price) => {\n                return formatPrice(price);\n              },\n            };\n          },\n        },\n        // loading_screen: { backgroundColor: \"#131722\" },\n        auto_save_delay: 0,\n        debug: false,\n        // timeframe: \"720\",\n        theme: \"dark\",\n        time_frames: [\n          { text: \"1D\", resolution: \"1D\" as ResolutionString, title: \"1D\" },\n          { text: \"1W\", resolution: \"1W\" as ResolutionString, title: \"1W\" },\n          { text: \"1M\", resolution: \"1M\" as ResolutionString, title: \"1M\" },\n        ],\n        overrides: {\n          \"scalesProperties.showSeriesLastValue\": true,\n          // \"paneProperties.background\": \"#1ffff0\",\n          // \"paneProperties.backgroundType\": \"solid\",\n\n          // \"mainSeriesProperties.highLowAvgPrice\": true,\n        },\n        custom_css_url: customCssUrl,\n        favorites: {\n          intervals: [\n            \"1S\" as ResolutionString,\n            \"1\" as ResolutionString,\n            \"5\" as ResolutionString,\n            \"15\" as ResolutionString,\n            \"60\" as ResolutionString,\n            \"240\" as ResolutionString,\n            \"1D\" as ResolutionString,\n          ],\n        },\n      };\n\n      const tvWidget = new TradingViewWidget(widgetOptions);\n      tvWidgetRef.current = tvWidget;\n\n      tvWidget.headerReady().then(() => {\n        const chartTypeButton = tvWidget.createButton();\n\n        // chartTypeButton.innerHTML = createChartTypeButtonHTML(chartType);\n        // chartTypeButton.addEventListener(\"click\", () => {\n        //   const newChartType = chartType === \"price\" ? \"mcap\" : \"price\";\n        //   setChartType(newChartType);\n        // });\n\n        // const currencyButton = tvWidget.createButton();\n        // currencyButton.innerHTML = createCurrencyButtonHTML(currency);\n        // currencyButton.addEventListener(\"click\", () => {\n        //   const newCurrency = currency === \"usd\" ? \"whype\" : \"usd\";\n        //   setCurrency(newCurrency);\n        // });\n      });\n    };\n\n    // Check if TradingView library is already loaded\n    if ((window as any).TradingView) {\n      initChart();\n    } else {\n      // Load the TradingView library script\n      const script = document.createElement(\"script\");\n      script.src = \"/charting_library/charting_library.js\";\n      script.async = true;\n      script.onload = () => {\n        initChart();\n      };\n      script.onerror = () => {\n        console.error(\"Failed to load TradingView charting library\");\n      };\n      document.head.appendChild(script);\n      appendedScript = script;\n    }\n\n    return () => {\n      if (tvWidgetRef.current) {\n        tvWidgetRef.current.remove();\n        tvWidgetRef.current = null;\n      }\n      if (appendedScript && appendedScript.parentNode) {\n        appendedScript.parentNode.removeChild(appendedScript);\n        appendedScript = null;\n      }\n    };\n  }, [customCssUrl, chartType, currency, poolMetadata]);\n\n  return <div ref={containerRef} style=\"height: 100%; width: 100%;\" />;\n};\n\nexport default TVChart;\n","import {\n  LibrarySymbolInfo,\n  ResolutionString,\n  HistoryCallback,\n  SubscribeBarsCallback,\n  DatafeedConfiguration,\n  IBasicDataFeed,\n  PeriodParams,\n  Timezone,\n} from \"./charting_library\";\nimport {\n  fetchPoolOhlcv,\n  HMPoolTokenMetadata,\n} from \"../../../hooks/hellomoon/hmApi\";\nimport { RES_TO_INTERVAL } from \"./helpers\";\n\nconst configurationData: DatafeedConfiguration = {\n  supported_resolutions: [\n    \"1S\",\n    \"1\",\n    \"5\",\n    \"15\",\n    \"30\",\n    \"60\",\n    \"120\",\n    \"240\",\n    \"480\",\n    \"1D\",\n    \"1W\",\n  ] as ResolutionString[],\n  symbols_types: [\n    {\n      name: \"crypto\",\n      value: \"crypto\",\n    },\n  ],\n};\n\nconst userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\nconst activeSubscriptions = new Map<string, () => void>();\n\nexport default {\n  onReady: (callback: (configuration: object) => void) => {\n    setTimeout(() => callback(configurationData));\n  },\n  resolveSymbol: (\n    symbolName: string,\n    onSymbolResolvedCallback: (symbolInfo: LibrarySymbolInfo) => void,\n    onResolveErrorCallback: (reason: string) => void\n  ) => {\n    const { poolMetadata, currency, chartType } = JSON.parse(symbolName) as {\n      poolMetadata: HMPoolTokenMetadata;\n      currency: \"usd\" | \"whype\";\n      chartType: \"price\" | \"mcap\";\n    };\n\n    const flip =\n      poolMetadata.token0?.address ===\n      \"0x5555555555555555555555555555555555555555\";\n\n    const desiredToken = flip ? poolMetadata.token1 : poolMetadata.token0;\n    const baseToken = flip ? poolMetadata.token0 : poolMetadata.token1 || null;\n\n    const symbolInfo: any = {\n      name: `${desiredToken?.symbol}/${baseToken?.symbol}`,\n      ticker: `${desiredToken?.symbol}/${baseToken?.symbol}`,\n      description: `${desiredToken?.symbol}/${baseToken?.symbol}`,\n      type: \"crypto\",\n      session: \"24x7\",\n      timezone: userTimezone as Timezone,\n      exchange: \"HyperSwap\",\n      minmov: 1,\n      pricescale: 10 ** 16,\n      has_intraday: true,\n      has_seconds: true,\n      has_weekly_and_monthly: true,\n      has_daily: true,\n      listed_exchange: \"HyperSwap\",\n      format: \"price\",\n      supported_resolutions: configurationData.supported_resolutions || [],\n      volume_precision: 2,\n      data_status: \"streaming\",\n      address: poolMetadata.address,\n      desiredAddress: desiredToken?.address,\n      currency,\n    };\n\n    setTimeout(() => onSymbolResolvedCallback(symbolInfo));\n  },\n  getBars: (\n    symbolInfo: any,\n    resolution: ResolutionString,\n    periodParams: PeriodParams,\n    onHistoryCallback: HistoryCallback,\n    onErrorCallback: (error: string) => void\n  ) => {\n    const { from, to, countBack } = periodParams;\n\n    fetchPoolOhlcv(\n      symbolInfo.address,\n      RES_TO_INTERVAL[resolution],\n      from,\n      to,\n      countBack,\n      symbolInfo.currency === \"usd\",\n      symbolInfo.desiredAddress\n    ).then((data) => {\n      onHistoryCallback(\n        data.data.map((bar) => ({\n          time: bar.t * 1000,\n          open: bar.o,\n          high: bar.h,\n          low: bar.l,\n          close: bar.c,\n          volume: bar.v,\n        }))\n      );\n    });\n  },\n  subscribeBars: (\n    symbolInfo: any,\n    resolution: ResolutionString,\n    onRealtimeCallback: SubscribeBarsCallback,\n    subscriberUID: string,\n    onResetCacheNeededCallback: () => void\n  ) => {},\n  unsubscribeBars: (subscriberUID: string) => {},\n} as IBasicDataFeed;\n","import { Bar } from './datafeed-api'\nimport BigNumber from 'bignumber.js'\nimport { HMOhlcv, OhlcvInterval } from '../../../hooks/hellomoon/hmApi'\n\nexport const RES_TO_INTERVAL: { [key: string]: OhlcvInterval } = {\n  '1S': '1s',\n  '1': '1m',\n  '5': '5m',\n  '15': '15m',\n  '30': '30m',\n  '60': '1h',\n  '120': '2h',\n  '240': '4h',\n  '480': '8h',\n  '1D': '1D',\n  '1W': '1W',\n}\n\nexport const RES_TO_SECONDS: { [key: string]: number } = {\n  '1S': 1,\n  '1': 60,\n  '3': 180,\n  '5': 300,\n  '15': 900,\n  '30': 1800,\n  '60': 3600,\n  '120': 7200,\n  '240': 14400,\n  '480': 28800,\n  '1D': 86400,\n  '1W': 604800,\n}\n\nexport function getNextBarTime(lastBar: Bar, resolution: number | string = '1D') {\n  if (!lastBar) return\n\n  const lastCharacter = resolution.toString().slice(-1)\n  let nextBarTime\n\n  switch (true) {\n    case lastCharacter === 'W':\n      nextBarTime = 7 * 24 * 60 * 60 * 1000 + lastBar.time\n      break\n\n    case lastCharacter === 'D':\n      nextBarTime = 1 * 24 * 60 * 60 * 1000 + lastBar.time\n      break\n\n    default:\n      nextBarTime = Number(resolution) * 60 * 1000 + lastBar.time\n      break\n  }\n\n  return nextBarTime\n}\n\nexport const SUBSCRIPT_NUMBER_MAP = {\n  4: '₄',\n  5: '₅',\n  6: '₆',\n  7: '₇',\n  8: '₈',\n  9: '₉',\n  10: '₁₀',\n  11: '₁₁',\n  12: '₁₂',\n  13: '₁₃',\n  14: '₁₄',\n  15: '₁₅',\n}\n\nexport const calcPricePrecision = (num: number) => {\n  if (!num) return 8\n\n  switch (true) {\n    case Math.abs(+num) < 0.00000000001:\n      return 16\n\n    case Math.abs(+num) < 0.000000001:\n      return 14\n\n    case Math.abs(+num) < 0.0000001:\n      return 12\n\n    case Math.abs(+num) < 0.00001:\n      return 10\n\n    case Math.abs(+num) < 0.05:\n      return 6\n\n    case Math.abs(+num) < 1:\n      return 4\n\n    case Math.abs(+num) < 20:\n      return 3\n\n    default:\n      return 2\n  }\n}\n\nexport const formatPrice = (num: number, precision?: number, gr0: boolean = true) => {\n  if (!num) {\n    return ''\n  }\n  if (num === 0) {\n    return '0'\n  }\n  if (num === -0) {\n    return '0'\n  }\n\n  if (!precision) {\n    precision = calcPricePrecision(+num)\n  }\n\n  let formated = new BigNumber(num).toFormat(precision)\n\n  if (formated.match(/^0\\.[0]+$/g)) {\n    formated = formated.replace(/\\.[0]+$/g, '')\n  }\n\n  if (gr0 && formated.match(/\\.0{4,15}[1-9]+/g)) {\n    const match = formated.match(/\\.0{4,15}/g)\n    if (match) {\n      const matchString = match[0].slice(1)\n      formated = formated.replace(\n        /\\.0{4,15}/g,\n        `.0${SUBSCRIPT_NUMBER_MAP[matchString.length as keyof typeof SUBSCRIPT_NUMBER_MAP]}`\n      )\n    }\n  }\n\n  return formated\n}\n\nexport const convertCandlePriceToMcap = (candle: HMOhlcv, supply: number): Bar => {\n  return {\n    volume: candle.v,\n    time: candle.t * 1000,\n    open: candle.o * supply,\n    high: candle.h * supply,\n    low: candle.l * supply,\n    close: candle.c * supply,\n  }\n}\n\nexport const convertCandleUSDToSOL = (candle: Bar, solPrice: number): Bar => {\n  return {\n    volume: candle.volume ? candle.volume / solPrice : undefined,\n    time: candle.time,\n    open: candle.open / solPrice,\n    high: candle.high / solPrice,\n    low: candle.low / solPrice,\n    close: candle.close / solPrice,\n  }\n}\n","import './api/initial';\nimport './api/chats';\nimport './api/messages';\nimport './api/symbols';\nimport './api/globalSearch';\nimport './api/middleSearch';\nimport './api/management';\nimport './api/sync';\nimport './api/accounts';\nimport './api/users';\nimport './api/bots';\nimport './api/settings';\nimport './api/twoFaSettings';\nimport './api/payments';\nimport './api/stars';\nimport './api/reactions';\nimport './api/statistics';\nimport './api/stories';\nimport './ui/initial';\nimport './ui/chats';\nimport './ui/bots';\nimport './ui/messages';\nimport './ui/globalSearch';\nimport './ui/middleSearch';\nimport './ui/stickerSearch';\nimport './ui/account';\nimport './ui/users';\nimport './ui/settings';\nimport './ui/misc';\nimport './ui/payments';\nimport './ui/calls';\nimport './ui/mediaViewer';\nimport './ui/passcode';\nimport './ui/stars';\nimport './ui/reactions';\nimport './ui/stories';\nimport './ui/statistics';\nimport './apiUpdaters/initial';\nimport './apiUpdaters/chats';\nimport './apiUpdaters/messages';\nimport './apiUpdaters/users';\nimport './apiUpdaters/symbols';\nimport './apiUpdaters/misc';\nimport './apiUpdaters/settings';\nimport './apiUpdaters/twoFaSettings';\nimport './apiUpdaters/calls';\nimport './apiUpdaters/payments';\n","import { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { oldTranslate } from '../../../util/oldLangProvider';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { selectChat } from '../../selectors';\n\naddActionHandler('reportPeer', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId,\n    reason,\n    description,\n    tabId = getCurrentTabId(),\n  } = payload;\n  if (!chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, chatId)!;\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('reportPeer', {\n    peer: chat,\n    reason,\n    description,\n  });\n\n  actions.showNotification({\n    message: result\n      ? oldTranslate('ReportPeer.AlertSuccess')\n      : 'An error occurred while submitting your report. Please, try again later.',\n    tabId,\n  });\n});\n\naddActionHandler('reportProfilePhoto', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId,\n    reason,\n    description,\n    photo,\n    tabId = getCurrentTabId(),\n  } = payload;\n  if (!chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, chatId)!;\n  if (!chat || !photo) {\n    return;\n  }\n\n  const result = await callApi('reportProfilePhoto', {\n    peer: chat,\n    photo,\n    reason,\n    description,\n  });\n\n  actions.showNotification({\n    message: result\n      ? oldTranslate('ReportPeer.AlertSuccess')\n      : 'An error occurred while submitting your report. Please, try again later.',\n    tabId,\n  });\n});\n\naddActionHandler('loadAuthorizations', async (global): Promise<void> => {\n  const result = await callApi('fetchAuthorizations');\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    activeSessions: {\n      byHash: result.authorizations,\n      orderedHashes: Object.keys(result.authorizations),\n      ttlDays: result.ttlDays,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('terminateAuthorization', async (global, actions, payload): Promise<void> => {\n  const { hash } = payload;\n\n  const result = await callApi('terminateAuthorization', hash);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  const { [hash]: removedSessions, ...newSessions } = global.activeSessions.byHash;\n\n  global = {\n    ...global,\n    activeSessions: {\n      byHash: newSessions,\n      orderedHashes: global.activeSessions.orderedHashes.filter((el) => el !== hash),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('terminateAllAuthorizations', async (global): Promise<void> => {\n  const result = await callApi('terminateAllAuthorizations');\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  const currentSessionHash = global.activeSessions.orderedHashes\n    .find((hash) => global.activeSessions.byHash[hash].isCurrent);\n  if (!currentSessionHash) {\n    return;\n  }\n  const currentSession = global.activeSessions.byHash[currentSessionHash];\n\n  global = {\n    ...global,\n    activeSessions: {\n      byHash: {\n        [currentSessionHash]: currentSession,\n      },\n      orderedHashes: [currentSessionHash],\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('changeSessionSettings', async (global, actions, payload): Promise<void> => {\n  const {\n    hash, areCallsEnabled, areSecretChatsEnabled, isConfirmed,\n  } = payload;\n  const result = await callApi('changeSessionSettings', {\n    hash,\n    areCallsEnabled,\n    areSecretChatsEnabled,\n    isConfirmed,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    activeSessions: {\n      ...global.activeSessions,\n      byHash: {\n        ...global.activeSessions.byHash,\n        [hash]: {\n          ...global.activeSessions.byHash[hash],\n          ...(areCallsEnabled !== undefined ? { areCallsEnabled } : undefined),\n          ...(areSecretChatsEnabled !== undefined ? { areSecretChatsEnabled } : undefined),\n          ...(isConfirmed && { isUnconfirmed: undefined }),\n        },\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('changeSessionTtl', async (global, actions, payload): Promise<void> => {\n  const { days } = payload;\n\n  const result = await callApi('changeSessionTtl', { days });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    activeSessions: {\n      ...global.activeSessions,\n      ttlDays: days,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadWebAuthorizations', async (global): Promise<void> => {\n  const result = await callApi('fetchWebAuthorizations');\n  if (!result) {\n    return;\n  }\n  const { webAuthorizations } = result;\n  global = getGlobal();\n\n  global = {\n    ...global,\n    activeWebSessions: {\n      byHash: webAuthorizations,\n      orderedHashes: Object.keys(webAuthorizations),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('terminateWebAuthorization', async (global, actions, payload): Promise<void> => {\n  const { hash } = payload;\n\n  const result = await callApi('terminateWebAuthorization', hash);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  const { [hash]: removedSessions, ...newSessions } = global.activeWebSessions.byHash;\n\n  global = {\n    ...global,\n    activeWebSessions: {\n      byHash: newSessions,\n      orderedHashes: global.activeWebSessions.orderedHashes.filter((el) => el !== hash),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('terminateAllWebAuthorizations', async (global): Promise<void> => {\n  const result = await callApi('terminateAllWebAuthorizations');\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    activeWebSessions: {\n      byHash: {},\n      orderedHashes: [],\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadAccountDaysTtl', async (global, actions, payload): Promise<void> => {\n  const result = await callApi('fetchAccountTTL');\n  if (!result) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    settings: {\n      ...global.settings,\n      accountDaysTtl: result.days,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('setAccountTTL', async (global, actions, payload): Promise<void> => {\n  const { days, tabId = getCurrentTabId() } = payload || {};\n  if (!days) return;\n\n  const result = await callApi('setAccountTTL', { days });\n  if (!result) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    settings: {\n      ...global.settings,\n      accountDaysTtl: days,\n    },\n  };\n  setGlobal(global);\n  actions.closeDeleteAccountModal({ tabId });\n});\n","import type { InlineBotSettings } from '../../../types';\nimport type { WebApp } from '../../../types/webapp';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\nimport {\n  type ApiChat,\n  type ApiContact,\n  type ApiInputMessageReplyInfo,\n  type ApiPeer,\n  type ApiUrlAuthResult,\n  MAIN_THREAD_ID,\n} from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { BOT_FATHER_USERNAME, GENERAL_REFETCH_INTERVAL } from '../../../config';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getUsernameFromDeepLink } from '../../../util/deepLinkParser';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { getTranslationFn } from '../../../util/localization';\nimport { formatStarsAsText } from '../../../util/localization/format';\nimport { oldTranslate } from '../../../util/oldLangProvider';\nimport PopupManager from '../../../util/PopupManager';\nimport requestActionTimeout from '../../../util/requestActionTimeout';\nimport { debounce } from '../../../util/schedulers';\nimport { getServerTime } from '../../../util/serverTime';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport { getMainUsername } from '../../helpers';\nimport {\n  getWebAppKey,\n} from '../../helpers/bots';\nimport {\n  addActionHandler, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  removeBlockedUser,\n  updateBotAppPermissions,\n  updateManagementProgress,\n  updateSharedSettings,\n  updateUser,\n  updateUserFullInfo,\n} from '../../reducers';\nimport {\n  activateWebAppIfOpen,\n  addWebAppToOpenList,\n  replaceInlineBotSettings,\n  replaceInlineBotsIsLoading,\n} from '../../reducers/bots';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectBot,\n  selectChat,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsTrustedBot,\n  selectMessageReplyInfo,\n  selectPeer,\n  selectSendAs,\n  selectSender,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../selectors';\nimport { selectSharedSettings } from '../../selectors/sharedState';\nimport { fetchChatByUsername } from './chats';\nimport { getPeerStarsForMessage } from './messages';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\n\nconst GAMEE_URL = 'https://prizes.gamee.com/';\nconst TOP_PEERS_REQUEST_COOLDOWN = 60; // 1 min\nconst runDebouncedForSearch = debounce((cb) => cb(), 500, false);\nlet botFatherId: string | null;\n\naddActionHandler('clickSuggestedMessageButton', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, button, tabId = getCurrentTabId(),\n  } = payload;\n\n  const { buttonType } = button;\n  const message = selectChatMessage(global, chatId, messageId);\n\n  switch (buttonType) {\n    case 'suggestChanges':\n      if (!message) break;\n\n      actions.initDraftFromSuggestedMessage({ chatId, messageId, tabId });\n      break;\n  }\n});\n\naddActionHandler('clickBotInlineButton', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, button, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!chat || !message) {\n    return;\n  }\n\n  switch (button.type) {\n    case 'command':\n      actions.sendBotCommand({ command: button.text, tabId });\n      break;\n    case 'url': {\n      const { url } = button;\n      actions.openUrl({ url, tabId });\n      break;\n    }\n    case 'copy': {\n      copyTextToClipboard(button.copyText);\n      actions.showNotification({ message: oldTranslate('ExactTextCopied', button.copyText), tabId });\n      break;\n    }\n    case 'callback': {\n      void answerCallbackButton(global, actions, chat, messageId, button.data, undefined, tabId);\n      break;\n    }\n    case 'requestPoll':\n      actions.openPollModal({ isQuiz: button.isQuiz, tabId });\n      break;\n    case 'requestPhone': {\n      const user = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n      if (!user) {\n        return;\n      }\n      actions.showDialog({\n        data: {\n          phoneNumber: user.phoneNumber,\n          firstName: user.firstName || '',\n          lastName: user.lastName || '',\n          userId: user.id,\n        } as ApiContact,\n        tabId,\n      });\n      break;\n    }\n    case 'receipt': {\n      const { receiptMessageId } = button;\n      actions.getReceipt({\n        chatId: chat.id, messageId: receiptMessageId, tabId,\n      });\n      break;\n    }\n    case 'buy': {\n      actions.openInvoice({\n        type: 'message',\n        chatId: chat.id,\n        messageId,\n        tabId,\n      });\n      break;\n    }\n    case 'game': {\n      void answerCallbackButton(global, actions, chat, messageId, undefined, true, tabId);\n      break;\n    }\n    case 'switchBotInline': {\n      const { query, isSamePeer } = button;\n      actions.switchBotInline({\n        query, isSamePeer, messageId, tabId,\n      });\n      break;\n    }\n\n    case 'userProfile': {\n      const { userId } = button;\n      actions.openChatWithInfo({ id: userId, tabId });\n      break;\n    }\n\n    case 'simpleWebView': {\n      const { url } = button;\n      const sender = selectSender(global, message);\n      if (!sender) {\n        return;\n      }\n\n      const theme = extractCurrentThemeParams();\n      actions.requestSimpleWebView({\n        url, botId: sender.id, theme, buttonText: button.text, tabId,\n      });\n      break;\n    }\n\n    case 'webView': {\n      const { url } = button;\n      const sender = selectSender(global, message);\n      const botId = message.viaBotId || sender?.id;\n      if (!botId) {\n        return;\n      }\n      const theme = extractCurrentThemeParams();\n      actions.requestWebView({\n        url,\n        botId,\n        peerId: chat.id,\n        theme,\n        buttonText: button.text,\n        tabId,\n      });\n      break;\n    }\n    case 'urlAuth': {\n      const { url } = button;\n      actions.requestBotUrlAuth({\n        chatId: chat.id,\n        messageId,\n        buttonId: button.buttonId,\n        url,\n        tabId,\n      });\n      break;\n    }\n  }\n});\n\naddActionHandler('sendBotCommand', (global, actions, payload): ActionReturnType => {\n  const { command, chatId, tabId = getCurrentTabId() } = payload;\n  const chat = chatId ? selectChat(global, chatId) : selectCurrentChat(global, tabId);\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n\n  if (!chat || !currentMessageList) {\n    return;\n  }\n\n  const { threadId } = currentMessageList;\n  actions.resetDraftReplyInfo({ tabId });\n  actions.clearWebPagePreview({ tabId });\n\n  const lastMessageId = selectChatLastMessageId(global, chat.id);\n\n  void sendBotCommand(\n    chat, command, selectDraft(global, chat.id, threadId)?.replyInfo, selectSendAs(global, chat.id), lastMessageId,\n  );\n});\n\naddActionHandler('restartBot', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const { currentUserId } = global;\n  const chat = selectCurrentChat(global, tabId);\n  const bot = currentUserId && selectBot(global, chatId);\n  if (!currentUserId || !chat || !bot) {\n    return;\n  }\n\n  const lastMessageId = selectChatLastMessageId(global, chat.id);\n\n  const result = await callApi('unblockUser', { user: bot });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = removeBlockedUser(global, bot.id);\n  setGlobal(global);\n  void sendBotCommand(chat, '/start', undefined, selectSendAs(global, chatId), lastMessageId);\n});\n\naddActionHandler('loadTopInlineBots', async (global): Promise<void> => {\n  const { lastRequestedAt } = global.topInlineBots;\n  if (lastRequestedAt && getServerTime() - lastRequestedAt < TOP_PEERS_REQUEST_COOLDOWN) {\n    return;\n  }\n\n  const result = await callApi('fetchTopInlineBots');\n  if (!result) {\n    return;\n  }\n\n  const { ids } = result;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    topInlineBots: {\n      ...global.topInlineBots,\n      userIds: ids,\n      lastRequestedAt: getServerTime(),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadTopBotApps', async (global): Promise<void> => {\n  const { lastRequestedAt } = global.topBotApps;\n  if (lastRequestedAt && getServerTime() - lastRequestedAt < TOP_PEERS_REQUEST_COOLDOWN) {\n    return;\n  }\n\n  const result = await callApi('fetchTopBotApps');\n  if (!result) {\n    return;\n  }\n\n  const { ids } = result;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    topBotApps: {\n      ...global.topBotApps,\n      userIds: ids,\n      lastRequestedAt: getServerTime(),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('queryInlineBot', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, username, query, offset,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  let inlineBotData = selectTabState(global, tabId).inlineBots.byUsername[username];\n  if (inlineBotData === false) {\n    return;\n  }\n\n  if (inlineBotData === undefined) {\n    const { user: inlineBot, chat } = await callApi('fetchInlineBot', { username }) || {};\n    global = getGlobal();\n    if (!inlineBot || !chat) {\n      global = replaceInlineBotSettings(global, username, false, tabId);\n      setGlobal(global);\n      return;\n    }\n\n    inlineBotData = {\n      id: inlineBot.id,\n      query: '',\n      offset: '',\n      switchPm: undefined,\n      canLoadMore: true,\n      results: [],\n      cacheTime: 0,\n    };\n\n    global = replaceInlineBotSettings(global, username, inlineBotData, tabId);\n    setGlobal(global);\n  }\n\n  if (query === inlineBotData.query && !inlineBotData.canLoadMore) {\n    return;\n  }\n\n  void runDebouncedForSearch(() => {\n    searchInlineBot(global, {\n      username,\n      inlineBotData,\n      chatId,\n      query,\n      offset,\n    }, tabId);\n  });\n});\n\naddActionHandler('switchBotInline', (global, actions, payload): ActionReturnType => {\n  const {\n    query, isSamePeer, messageId, filter, tabId = getCurrentTabId(),\n  } = payload;\n  let {\n    botId,\n  } = payload;\n  const chat = selectCurrentChat(global, tabId);\n  if (!chat) {\n    return undefined;\n  }\n\n  if (!botId && messageId) {\n    const message = selectChatMessage(global, chat.id, messageId);\n    if (!message) {\n      return undefined;\n    }\n    const sender = selectSender(global, message);\n    botId = message.viaBotId || sender?.id;\n  }\n\n  if (!botId) {\n    return undefined;\n  }\n\n  const botSender = selectUser(global, botId);\n  if (!botSender) {\n    return undefined;\n  }\n\n  actions.openChatWithDraft({\n    text: {\n      text: `@${getMainUsername(botSender)} ${query}`,\n    },\n    chatId: isSamePeer ? chat.id : undefined,\n    filter,\n    tabId,\n  });\n  return undefined;\n});\n\naddActionHandler('sendInlineBotApiResult', async (global, actions, payload): Promise<void> => {\n  const {\n    chat, id, queryId, replyInfo, sendAs, isSilent, scheduledAt, allowPaidStars,\n  } = payload;\n\n  await callApi('sendInlineBotResult', {\n    chat,\n    resultId: id,\n    queryId,\n    replyInfo,\n    sendAs,\n    isSilent,\n    scheduleDate: scheduledAt,\n    allowPaidStars,\n  });\n\n  if (allowPaidStars) actions.loadStarStatus();\n});\n\naddActionHandler('sendInlineBotResult', async (global, actions, payload): Promise<void> => {\n  const {\n    id, queryId, isSilent, scheduledAt, threadId, chatId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  if (!id) {\n    return;\n  }\n\n  const chat = selectChat(global, chatId)!;\n  const draftReplyInfo = selectDraft(global, chatId, threadId)?.replyInfo;\n\n  const replyInfo = selectMessageReplyInfo(global, chatId, threadId, draftReplyInfo);\n\n  actions.resetDraftReplyInfo({ tabId });\n  actions.clearWebPagePreview({ tabId });\n\n  const starsForOneMessage = await getPeerStarsForMessage(global, chatId);\n  const params = {\n    chat,\n    id,\n    queryId,\n    replyInfo,\n    sendAs: selectSendAs(global, chatId),\n    isSilent,\n    scheduledAt,\n    allowPaidStars: starsForOneMessage,\n  };\n  if (!starsForOneMessage) {\n    actions.sendInlineBotApiResult(params);\n    return;\n  }\n\n  actions.sendInlineBotApiResult({ ...params });\n\n  actions.showNotification({\n    localId: queryId,\n    title: { key: 'MessageSentPaidToastTitle', variables: { count: 1 }, options: { pluralValue: 1 } },\n    message: {\n      key: 'MessageSentPaidToastText', variables: { amount: formatStarsAsText(getTranslationFn(), starsForOneMessage) },\n    },\n\n    icon: 'star',\n    shouldUseCustomIcon: true,\n    type: 'paidMessage',\n    tabId,\n  });\n});\n\naddActionHandler('resetInlineBot', (global, actions, payload): ActionReturnType => {\n  const { username, force, tabId = getCurrentTabId() } = payload;\n\n  let inlineBotData = selectTabState(global, tabId).inlineBots.byUsername[username];\n\n  if (!inlineBotData) {\n    return;\n  }\n\n  if (!force && Date.now() < inlineBotData.cacheTime) return;\n\n  inlineBotData = {\n    id: inlineBotData.id,\n    query: '',\n    offset: '',\n    switchPm: undefined,\n    canLoadMore: true,\n    results: [],\n    cacheTime: 0,\n  };\n\n  global = replaceInlineBotSettings(global, username, inlineBotData, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('resetAllInlineBots', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const inlineBots = selectTabState(global, tabId).inlineBots.byUsername;\n\n  Object.keys(inlineBots).forEach((username) => {\n    actions.resetInlineBot({ username, tabId });\n  });\n});\n\naddActionHandler('startBot', async (global, actions, payload): Promise<void> => {\n  const { botId, param } = payload;\n\n  const bot = selectUser(global, botId);\n  if (!bot) {\n    return;\n  }\n\n  let fullInfo = selectUserFullInfo(global, botId);\n  if (!fullInfo) {\n    const result = await callApi('fetchFullUser', { id: bot.id, accessHash: bot.accessHash });\n    fullInfo = result?.fullInfo;\n  }\n\n  if (fullInfo?.isBlocked) {\n    await callApi('unblockUser', { user: bot });\n  }\n\n  await callApi('startBot', {\n    bot,\n    startParam: param,\n  });\n});\n\naddActionHandler('sharePhoneWithBot', async (global, actions, payload): Promise<void> => {\n  const { botId } = payload;\n  const bot = selectUser(global, botId);\n  if (!bot) {\n    return;\n  }\n\n  let fullInfo = selectUserFullInfo(global, botId);\n  if (!fullInfo) {\n    const result = await callApi('fetchFullUser', { id: bot.id, accessHash: bot.accessHash });\n    fullInfo = result?.fullInfo;\n  }\n\n  if (fullInfo?.isBlocked) {\n    await callApi('unblockUser', { user: bot });\n  }\n\n  global = getGlobal();\n  const chat = selectChat(global, botId);\n  const currentUser = selectUser(global, global.currentUserId!)!;\n\n  if (!chat) return;\n  const lastMessageId = selectChatLastMessageId(global, chat.id);\n\n  await callApi('sendMessage', {\n    chat,\n    contact: {\n      mediaType: 'contact',\n      firstName: currentUser.firstName || '',\n      lastName: currentUser.lastName || '',\n      phoneNumber: currentUser.phoneNumber || '',\n      userId: currentUser.id,\n    },\n    lastMessageId,\n  });\n});\n\naddActionHandler('requestSimpleWebView', async (global, actions, payload): Promise<void> => {\n  const {\n    url, botId, theme, buttonText, isFromSideMenu, isFromSwitchWebView, startParam,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  if (checkIfOpenOrActivate(global, botId, tabId, url)) return;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n\n  if (!selectIsTrustedBot(global, botId)) {\n    global = updateTabState(global, {\n      botTrustRequest: {\n        botId,\n        type: 'webApp',\n        onConfirm: {\n          action: 'requestSimpleWebView',\n          payload,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const webViewUrl = await callApi('requestSimpleWebView', {\n    url,\n    bot,\n    theme,\n    startParam,\n    isFromSideMenu,\n    isFromSwitchWebView,\n  });\n  if (!webViewUrl) {\n    return;\n  }\n\n  global = getGlobal();\n  const newActiveApp: WebApp = {\n    requestUrl: url,\n    appName: bot.firstName,\n    url: webViewUrl,\n    botId,\n    buttonText,\n  };\n  global = addWebAppToOpenList(global, newActiveApp, true, true, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('requestWebView', async (global, actions, payload): Promise<void> => {\n  const {\n    url, botId, peerId, theme, isSilent, buttonText, isFromBotMenu, startParam, isFullscreen,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  if (checkIfOpenOrActivate(global, botId, tabId, url)) return;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  if (!selectIsTrustedBot(global, botId)) {\n    global = updateTabState(global, {\n      botTrustRequest: {\n        botId,\n        type: 'webApp',\n        onConfirm: {\n          action: 'requestWebView',\n          payload,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n\n  const { chatId, threadId = MAIN_THREAD_ID } = currentMessageList || {};\n  const draftReplyInfo = chatId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined;\n  const replyInfo = chatId ? selectMessageReplyInfo(global, chatId, threadId, draftReplyInfo) : undefined;\n\n  const sendAs = chatId ? selectSendAs(global, chatId) : undefined;\n  const result = await callApi('requestWebView', {\n    url,\n    bot,\n    peer,\n    theme,\n    isSilent,\n    replyInfo,\n    isFromBotMenu,\n    startParam,\n    sendAs,\n    isFullscreen,\n  });\n  if (!result) {\n    return;\n  }\n\n  const { url: webViewUrl, queryId, isFullScreen } = result;\n\n  global = getGlobal();\n  const newActiveApp: WebApp = {\n    requestUrl: url,\n    url: webViewUrl,\n    appName: bot.firstName,\n    botId,\n    peerId,\n    queryId,\n    replyInfo,\n    buttonText,\n  };\n  global = addWebAppToOpenList(global, newActiveApp, true, true, tabId);\n  setGlobal(global);\n\n  if (isFullScreen && getIsWebAppsFullscreenSupported()) {\n    actions.changeWebAppModalState({ state: 'fullScreen', tabId });\n  }\n});\n\naddActionHandler('requestMainWebView', async (global, actions, payload): Promise<void> => {\n  const {\n    botId, peerId, theme, startParam, mode, shouldMarkBotTrusted,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return;\n  }\n\n  if (checkIfOpenOrActivate(global, botId, tabId)) return;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  if (!selectIsTrustedBot(global, botId)) {\n    if (shouldMarkBotTrusted) {\n      actions.markBotTrusted({ botId, isWriteAllowed: true, tabId });\n    } else {\n      global = updateTabState(global, {\n        botTrustRequest: {\n          botId,\n          type: 'webApp',\n          onConfirm: {\n            action: 'requestMainWebView',\n            payload,\n          },\n        },\n      }, tabId);\n      setGlobal(global);\n      return;\n    }\n  }\n\n  const result = await callApi('requestMainWebView', {\n    bot,\n    peer,\n    theme,\n    startParam,\n    mode,\n  });\n  if (!result) {\n    return;\n  }\n\n  const { url: webViewUrl, queryId, isFullscreen } = result;\n\n  global = getGlobal();\n  const newActiveApp: WebApp = {\n    url: webViewUrl,\n    appName: bot.firstName,\n    botId,\n    peerId,\n    queryId,\n    buttonText: '',\n  };\n  global = addWebAppToOpenList(global, newActiveApp, true, true, tabId);\n  setGlobal(global);\n\n  if (isFullscreen && getIsWebAppsFullscreenSupported()) {\n    actions.changeWebAppModalState({ state: 'fullScreen', tabId });\n  }\n});\n\naddActionHandler('loadPreviewMedias', async (global, actions, payload): Promise<void> => {\n  const {\n    botId,\n  } = payload;\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n\n  const medias = await callApi('fetchPreviewMedias', {\n    bot,\n  });\n\n  global = getGlobal();\n  if (medias) {\n    global = {\n      ...global,\n      users: {\n        ...global.users,\n        previewMediaByBotId: {\n          ...global.users.previewMediaByBotId,\n          [botId]: medias,\n        },\n      },\n    };\n\n    setGlobal(global);\n  }\n});\n\naddActionHandler('openWebAppsCloseConfirmationModal', (global, actions, payload): ActionReturnType => {\n  const {\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  return updateTabState(global, {\n    isWebAppsCloseConfirmationModalOpen: true,\n  }, tabId);\n});\n\naddActionHandler('closeWebAppsCloseConfirmationModal', (global, actions, payload): ActionReturnType => {\n  const { shouldSkipInFuture, tabId = getCurrentTabId() } = payload || {};\n\n  global = updateSharedSettings(global, {\n    shouldSkipWebAppCloseConfirmation: Boolean(shouldSkipInFuture),\n  });\n\n  return updateTabState(global, {\n    isWebAppsCloseConfirmationModalOpen: undefined,\n  }, tabId);\n});\n\naddActionHandler('requestAppWebView', async (global, actions, payload): Promise<void> => {\n  const {\n    botId, appName, startApp, mode, theme, isWriteAllowed, isFromConfirm, shouldSkipBotTrustRequest,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  if (checkIfOpenOrActivate(global, botId, tabId, appName)) return;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n\n  // Native clients require to install attach bots before using their named mini apps\n  const isAttachBotInstalled = Boolean(global.attachMenu.bots[bot.id]);\n  if (bot.isAttachBot && !isFromConfirm && !isAttachBotInstalled) {\n    const result = await callApi('loadAttachBot', {\n      bot,\n    });\n    if (result) {\n      global = getGlobal();\n\n      const attachBot = result.bot;\n      const shouldAskForTos = attachBot.isDisclaimerNeeded || attachBot.isForAttachMenu || attachBot.isForSideMenu;\n\n      if (shouldAskForTos) {\n        global = updateTabState(global, {\n          requestedAttachBotInstall: {\n            bot: attachBot,\n            onConfirm: {\n              action: 'requestAppWebView',\n              payload: {\n                ...payload,\n                isFromConfirm: true,\n              },\n            },\n          },\n        }, tabId);\n        setGlobal(global);\n        return;\n      }\n    }\n  }\n\n  const botApp = await callApi('fetchBotApp', {\n    bot,\n    appName,\n  });\n  global = getGlobal();\n\n  if (!botApp) {\n    actions.showNotification({ message: oldTranslate('lng_username_app_not_found'), tabId });\n    return;\n  }\n\n  const shouldRequestBotTrust = !shouldSkipBotTrustRequest && (botApp.isInactive || !selectIsTrustedBot(global, botId));\n\n  if (shouldRequestBotTrust) {\n    payload.shouldSkipBotTrustRequest = true;\n    global = updateTabState(global, {\n      botTrustRequest: {\n        botId,\n        shouldRequestWriteAccess: botApp.shouldRequestWriteAccess,\n        type: 'botApp',\n        onConfirm: {\n          action: 'requestAppWebView',\n          payload,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const peer = selectCurrentChat(global, tabId);\n\n  const { url, isFullscreen } = await callApi('requestAppWebView', {\n    peer: peer || bot,\n    app: botApp,\n    startParam: startApp,\n    mode,\n    isWriteAllowed,\n    theme,\n  });\n  global = getGlobal();\n\n  if (!url) return;\n\n  global = getGlobal();\n\n  const peerId = (peer ? peer.id : bot.id);\n\n  const newActiveApp: WebApp = {\n    url,\n    appName: appName && bot.firstName,\n    peerId,\n    botId,\n    buttonText: '',\n  };\n  global = addWebAppToOpenList(global, newActiveApp, true, true, tabId);\n  setGlobal(global);\n\n  if (isFullscreen && getIsWebAppsFullscreenSupported()) {\n    actions.changeWebAppModalState({ state: 'fullScreen', tabId });\n  }\n});\n\naddActionHandler('prolongWebView', async (global, actions, payload): Promise<void> => {\n  const {\n    botId, peerId, isSilent, replyInfo, queryId, tabId = getCurrentTabId(),\n  } = payload;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n  const peer = selectChat(global, peerId);\n  if (!peer) return;\n\n  const sendAs = selectSendAs(global, peerId);\n\n  const result = await callApi('prolongWebView', {\n    bot,\n    peer,\n    isSilent,\n    replyInfo,\n    queryId,\n    sendAs,\n  });\n\n  if (!result) {\n    actions.closeActiveWebApp({ tabId });\n  }\n});\n\naddActionHandler('sendWebViewData', (global, actions, payload): ActionReturnType => {\n  const {\n    bot, data, buttonText,\n  } = payload;\n\n  callApi('sendWebViewData', {\n    bot,\n    data,\n    buttonText,\n  });\n});\n\naddActionHandler('loadAttachBots', async (global): Promise<void> => {\n  await loadAttachBots(global);\n\n  requestActionTimeout({\n    action: 'loadAttachBots',\n    payload: undefined,\n  }, GENERAL_REFETCH_INTERVAL);\n});\n\naddActionHandler('toggleAttachBot', async (global, actions, payload): Promise<void> => {\n  const { botId, isWriteAllowed, isEnabled } = payload;\n\n  const bot = selectUser(global, botId);\n\n  if (!bot) return;\n\n  await callApi('toggleAttachBot', { bot, isWriteAllowed, isEnabled });\n});\n\nexport function isWepAppOpened<T extends GlobalState>(\n  global: T, webApp: Partial<WebApp>, tabId: number,\n) {\n  const currentTabState = selectTabState(global, tabId);\n  const openedWebApps = currentTabState.webApps.openedWebApps;\n  const key = getWebAppKey(webApp);\n  if (!key) return false;\n  return openedWebApps[key];\n}\n\nexport function checkIfOpenOrActivate<T extends GlobalState>(\n  global: T, botId: string, tabId: number, requestUrl?: string, webAppName?: string,\n) {\n  const webAppForCheck = { botId, requestUrl, webAppName };\n  if (isWepAppOpened(global, webAppForCheck, tabId)) {\n    const key = getWebAppKey(webAppForCheck);\n    if (key) {\n      global = activateWebAppIfOpen(global, key, tabId);\n      setGlobal(global);\n    }\n    return true;\n  }\n  return false;\n}\n\nasync function loadAttachBots<T extends GlobalState>(global: T, hash?: string) {\n  const result = await callApi('loadAttachBots', { hash });\n  if (!result) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    attachMenu: {\n      hash: result.hash,\n      bots: result.bots,\n    },\n  };\n  setGlobal(global);\n\n  return result;\n}\n\naddActionHandler('callAttachBot', (global, actions, payload): ActionReturnType => {\n  const {\n    bot, startParam, isFromConfirm, tabId = getCurrentTabId(),\n  } = payload;\n  const isFromSideMenu = 'isFromSideMenu' in payload && payload.isFromSideMenu;\n\n  const isFromBotMenu = !bot;\n  const shouldDisplayDisclaimer = (!isFromBotMenu && !global.attachMenu.bots[bot.id])\n    || bot?.isInactive || bot?.isDisclaimerNeeded;\n\n  if (!isFromConfirm && shouldDisplayDisclaimer) {\n    return updateTabState(global, {\n      requestedAttachBotInstall: {\n        bot,\n        onConfirm: {\n          action: 'callAttachBot',\n          payload: {\n            ...payload,\n            isFromConfirm: true,\n          },\n        },\n      },\n    }, tabId);\n  }\n\n  const theme = extractCurrentThemeParams();\n  if (isFromSideMenu) {\n    actions.requestSimpleWebView({\n      botId: bot!.id,\n      buttonText: '',\n      isFromSideMenu: true,\n      startParam,\n      theme,\n      tabId,\n    });\n  }\n\n  if ('chatId' in payload) {\n    const { chatId, threadId = MAIN_THREAD_ID, url } = payload;\n    actions.openThread({ chatId, threadId, tabId });\n    actions.requestWebView({\n      url,\n      peerId: chatId,\n      botId: (isFromBotMenu ? chatId : bot.id),\n      theme,\n      buttonText: '',\n      isFromBotMenu,\n      startParam,\n      tabId,\n    });\n  }\n\n  return undefined;\n});\n\naddActionHandler('confirmAttachBotInstall', async (global, actions, payload): Promise<void> => {\n  const { isWriteAllowed, tabId = getCurrentTabId() } = payload;\n  const { requestedAttachBotInstall } = selectTabState(global, tabId);\n\n  const { bot, onConfirm } = requestedAttachBotInstall!;\n\n  global = updateTabState(global, {\n    requestedAttachBotInstall: undefined,\n  }, tabId);\n  setGlobal(global);\n\n  const botUser = selectUser(global, bot.id);\n  if (!botUser) return;\n\n  actions.markBotTrusted({ botId: bot.id, isWriteAllowed, tabId });\n  await callApi('toggleAttachBot', { bot: botUser, isWriteAllowed, isEnabled: true });\n  if (onConfirm) {\n    const { action, payload: actionPayload } = onConfirm;\n    // @ts-ignore\n    actions[action](actionPayload);\n  }\n});\n\naddActionHandler('requestBotUrlAuth', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, buttonId, messageId, url, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('requestBotUrlAuth', {\n    chat,\n    buttonId,\n    messageId,\n  });\n\n  if (!result) return;\n  global = getGlobal();\n  global = updateTabState(global, {\n    urlAuth: {\n      url,\n      button: {\n        buttonId,\n        messageId,\n        chatId: chat.id,\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n  handleUrlAuthResult(global, actions, url, result, tabId);\n});\n\naddActionHandler('acceptBotUrlAuth', async (global, actions, payload): Promise<void> => {\n  const { isWriteAllowed, tabId = getCurrentTabId() } = payload;\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.urlAuth?.button) return;\n  const {\n    button, url,\n  } = tabState.urlAuth;\n  const { chatId, messageId, buttonId } = button;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('acceptBotUrlAuth', {\n    chat,\n    messageId,\n    buttonId,\n    isWriteAllowed,\n  });\n  if (!result) return;\n  global = getGlobal();\n  handleUrlAuthResult(global, actions, url, result, tabId);\n});\n\naddActionHandler('requestLinkUrlAuth', async (global, actions, payload): Promise<void> => {\n  const { url, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('requestLinkUrlAuth', { url });\n  if (!result) return;\n  global = getGlobal();\n  global = updateTabState(global, {\n    urlAuth: {\n      url,\n    },\n  }, tabId);\n  setGlobal(global);\n  handleUrlAuthResult(global, actions, url, result, tabId);\n});\n\naddActionHandler('acceptLinkUrlAuth', async (global, actions, payload): Promise<void> => {\n  const { isWriteAllowed, tabId = getCurrentTabId() } = payload;\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.urlAuth?.url) return;\n  const { url } = tabState.urlAuth;\n\n  const result = await callApi('acceptLinkUrlAuth', { url, isWriteAllowed });\n  if (!result) return;\n  global = getGlobal();\n  handleUrlAuthResult(global, actions, url, result, tabId);\n});\n\naddActionHandler('closeUrlAuthModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    urlAuth: undefined,\n  }, tabId);\n});\n\nfunction handleUrlAuthResult<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  url: string, result: ApiUrlAuthResult,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (result.type === 'request') {\n    global = getGlobal();\n    const tabState = selectTabState(global, tabId);\n    if (!tabState.urlAuth) return;\n    const { domain, bot, shouldRequestWriteAccess } = result;\n    global = updateTabState(global, {\n      urlAuth: {\n        ...tabState.urlAuth,\n        request: {\n          domain,\n          botId: bot.id,\n          shouldRequestWriteAccess,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const siteUrl = result.type === 'accepted' ? result.url : url;\n  window.open(siteUrl, '_blank', 'noopener');\n  actions.closeUrlAuthModal({ tabId });\n}\n\nasync function searchInlineBot<T extends GlobalState>(global: T, {\n  username,\n  inlineBotData,\n  chatId,\n  query,\n  offset,\n}: {\n  username: string;\n  inlineBotData: InlineBotSettings;\n  chatId: string;\n  query: string;\n  offset?: string;\n}, ...[tabId = getCurrentTabId()]: TabArgs<T>) {\n  global = getGlobal();\n  const bot = selectUser(global, inlineBotData.id);\n  const chat = selectChat(global, chatId);\n  if (!bot || !chat) {\n    return;\n  }\n\n  const shouldReplaceSettings = inlineBotData.query !== query;\n  global = replaceInlineBotsIsLoading(global, true, tabId);\n  global = replaceInlineBotSettings(global, username, {\n    ...inlineBotData,\n    query,\n    ...(shouldReplaceSettings && { offset: undefined, results: [] }),\n  }, tabId);\n  setGlobal(global);\n\n  const result = await callApi('fetchInlineBotResults', {\n    bot,\n    chat,\n    query,\n    offset: shouldReplaceSettings ? undefined : offset,\n  });\n\n  global = getGlobal();\n  const newInlineBotData = selectTabState(global, tabId).inlineBots.byUsername[username];\n  global = replaceInlineBotsIsLoading(global, false, tabId);\n  if (!result || !newInlineBotData || query !== newInlineBotData.query) {\n    setGlobal(global);\n    return;\n  }\n\n  const currentIds = new Set((newInlineBotData.results || []).map((data) => data.id));\n  const newResults = result.results.filter((data) => !currentIds.has(data.id));\n\n  global = replaceInlineBotSettings(global, username, {\n    ...newInlineBotData,\n    help: result.help,\n    cacheTime: Date.now() + result.cacheTime * 1000,\n    ...(newResults.length && { isGallery: result.isGallery }),\n    ...(result.switchPm && { switchPm: result.switchPm }),\n    ...(result.switchWebview && { switchWebview: result.switchWebview }),\n    canLoadMore: result.results.length > 0 && Boolean(result.nextOffset),\n    results: newInlineBotData.offset === '' || newInlineBotData.offset === result.nextOffset\n      ? result.results\n      : (newInlineBotData.results || []).concat(newResults),\n    offset: newResults.length ? result.nextOffset : '',\n  }, tabId);\n\n  setGlobal(global);\n}\n\nasync function sendBotCommand(\n  chat: ApiChat, command: string, replyInfo?: ApiInputMessageReplyInfo, sendAs?: ApiPeer, lastMessageId?: number,\n) {\n  await callApi('sendMessage', {\n    chat,\n    replyInfo,\n    text: command,\n    sendAs,\n    lastMessageId,\n  });\n}\n\nlet gameePopups: PopupManager | undefined;\n\nasync function answerCallbackButton<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions, chat: ApiChat, messageId: number, data?: string, isGame = false,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const {\n    showDialog, showNotification, openUrl, openGame,\n  } = actions;\n\n  if (isGame) {\n    if (!gameePopups) {\n      gameePopups = new PopupManager('popup,width=800,height=600', () => {\n        showNotification({ message: 'Allow browser to open popup window', tabId });\n      });\n    }\n\n    gameePopups.preOpenIfNeeded();\n  }\n\n  const result = await callApi('answerCallbackButton', {\n    chatId: chat.id,\n    accessHash: chat.accessHash,\n    messageId,\n    data,\n    isGame,\n  });\n\n  if (!result) {\n    return;\n  }\n  const { message, alert: isError, url } = result;\n\n  if (isError) {\n    showDialog({ data: { message: message || 'Error' }, tabId });\n  } else if (message) {\n    showNotification({ message, tabId });\n  } else if (url) {\n    if (isGame) {\n      // Workaround for Gamee embedding bug\n      if (url.includes(GAMEE_URL)) {\n        gameePopups!.open(url);\n      } else {\n        gameePopups!.cancelPreOpen();\n        openGame({\n          url, chatId: chat.id, messageId, tabId,\n        });\n      }\n    } else {\n      openUrl({ url, tabId });\n    }\n  }\n}\n\naddActionHandler('setBotInfo', async (global, actions, payload): Promise<void> => {\n  const {\n    bot, name, description: about,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  let { langCode } = payload;\n  if (!langCode) langCode = selectSharedSettings(global).language;\n\n  const { currentUserId } = global;\n  if (!currentUserId || !bot) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  if (name || about) {\n    const result = await callApi('setBotInfo', {\n      bot, langCode, name, about,\n    });\n\n    if (result) {\n      global = getGlobal();\n      global = updateUser(\n        global,\n        bot.id,\n        {\n          firstName: name,\n        },\n      );\n      global = updateUserFullInfo(global, bot.id, { bio: about });\n      setGlobal(global);\n    }\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('toggleUserEmojiStatusPermission', async (global, actions, payload): Promise<void> => {\n  const {\n    botId, isEnabled, isBotAccessEmojiGranted,\n  } = payload;\n\n  const bot = selectBot(global, botId);\n\n  if (!botId || !bot) {\n    return;\n  }\n\n  const result = await callApi('toggleUserEmojiStatusPermission', {\n    bot, isEnabled,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateUserFullInfo(global, botId, {\n    isBotCanManageEmojiStatus: isEnabled,\n    isBotAccessEmojiGranted,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('toggleUserLocationPermission', (global, actions, payload): ActionReturnType => {\n  const {\n    botId, isAccessGranted,\n  } = payload;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n\n  global = getGlobal();\n  global = updateBotAppPermissions(global, bot.id, { geolocation: isAccessGranted });\n  setGlobal(global);\n});\n\naddActionHandler('startBotFatherConversation', async (global, actions, payload): Promise<void> => {\n  const {\n    param,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!botFatherId) {\n    const chat = await fetchChatByUsername(global, BOT_FATHER_USERNAME);\n    if (!chat) {\n      return;\n    }\n    botFatherId = chat.id;\n  }\n\n  if (param) {\n    actions.startBot({ botId: botFatherId, param });\n  }\n\n  actions.openChat({ id: botFatherId, tabId });\n});\n\naddActionHandler('loadBotFreezeAppeal', async (global): Promise<void> => {\n  const botUrl = global.appConfig?.freezeAppealUrl;\n  if (!botUrl) return;\n  const botAppealUsername = botUrl ? getUsernameFromDeepLink(botUrl) : undefined;\n  if (!botAppealUsername) return;\n  const chat = await fetchChatByUsername(global, botAppealUsername);\n  global = getGlobal();\n  global = {\n    ...global,\n    botFreezeAppealId: chat?.id,\n  };\n  setGlobal(global);\n});\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiMessageSearchContext, ApiPeer, ApiTopic,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ActionReturnType, GlobalState, TabArgs } from '../../types';\n\nimport { GLOBAL_SEARCH_SLICE, GLOBAL_TOPIC_SEARCH_SLICE } from '../../../config';\nimport { timestampPlusDay } from '../../../util/dates/dateFormat';\nimport { isDeepLink, tryParseDeepLink } from '../../../util/deepLinkParser';\nimport { toChannelId } from '../../../util/entities/ids';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { throttle } from '../../../util/schedulers';\nimport { callApi } from '../../../api/gramjs';\nimport { isChatChannel, isChatGroup } from '../../helpers/chats';\nimport { isApiPeerChat } from '../../helpers/peers';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  addMessages,\n  addUserStatuses,\n  updateGlobalSearch,\n  updateGlobalSearchFetchingStatus,\n  updateGlobalSearchResults,\n  updateTopics,\n} from '../../reducers';\nimport {\n  selectChat, selectChatByUsername, selectChatMessage, selectCurrentGlobalSearchQuery, selectPeer, selectTabState,\n} from '../../selectors';\n\nconst searchThrottled = throttle((cb) => cb(), 500, false);\n\naddActionHandler('setGlobalSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n  const { chatId } = selectTabState(global, tabId).globalSearch;\n\n  if (query && !chatId) {\n    void searchThrottled(async () => {\n      const [searchResult, sponsoredResult] = await Promise.all([\n        callApi('searchChats', { query }),\n        callApi('fetchSponsoredPeer', { query }),\n      ]);\n\n      global = getGlobal();\n      const currentSearchQuery = selectCurrentGlobalSearchQuery(global, tabId);\n      if (!searchResult || !currentSearchQuery || (query !== currentSearchQuery)) {\n        global = updateGlobalSearchFetchingStatus(global, { chats: false }, tabId);\n        setGlobal(global);\n        return;\n      }\n\n      const {\n        accountResultIds, globalResultIds,\n      } = searchResult;\n\n      global = updateGlobalSearchFetchingStatus(global, { chats: false }, tabId);\n      global = updateGlobalSearch(global, {\n        localResults: {\n          peerIds: accountResultIds,\n        },\n        globalResults: {\n          ...selectTabState(global, tabId).globalSearch.globalResults,\n          peerIds: globalResultIds,\n        },\n        sponsoredPeer: sponsoredResult,\n      }, tabId);\n\n      setGlobal(global);\n    });\n  }\n});\n\naddActionHandler('setGlobalSearchDate', (global, actions, payload): ActionReturnType => {\n  const { date, tabId = getCurrentTabId() } = payload;\n  const maxDate = date ? timestampPlusDay(date) : date;\n\n  global = updateGlobalSearch(global, {\n    minDate: date,\n    maxDate,\n    query: '',\n    resultsByType: {\n      ...selectTabState(global, tabId).globalSearch.resultsByType,\n      text: {\n        totalCount: undefined,\n        foundIds: [],\n        nextOffsetId: 0,\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n\n  actions.searchMessagesGlobal({ type: 'text', tabId });\n});\n\naddActionHandler('searchMessagesGlobal', (global, actions, payload): ActionReturnType => {\n  const {\n    type, context, shouldResetResultsByType, shouldCheckFetchingMessagesStatus, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (shouldCheckFetchingMessagesStatus) {\n    global = updateGlobalSearchFetchingStatus(global, { messages: true }, tabId);\n    setGlobal(global);\n    global = getGlobal();\n  }\n\n  const {\n    query, resultsByType, chatId,\n  } = selectTabState(global, tabId).globalSearch;\n  const {\n    totalCount, foundIds, nextOffsetId, nextOffsetPeerId, nextOffsetRate,\n  } = (!shouldResetResultsByType && resultsByType?.[type]) || {};\n\n  // Stop loading if we have all the messages or server returned 0\n  if (totalCount !== undefined && (!totalCount || (foundIds && foundIds.length >= totalCount))) {\n    return;\n  }\n\n  const chat = chatId ? selectPeer(global, chatId) : undefined;\n  const offsetPeer = nextOffsetPeerId ? selectPeer(global, nextOffsetPeerId) : undefined;\n\n  searchMessagesGlobal(global, {\n    query,\n    type,\n    context,\n    shouldResetResultsByType,\n    offsetRate: nextOffsetRate,\n    offsetId: nextOffsetId,\n    offsetPeer,\n    peer: chat,\n    tabId,\n  });\n});\n\naddActionHandler('searchPopularBotApps', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const popularBotApps = selectTabState(global, tabId).globalSearch.popularBotApps;\n  const offset = popularBotApps?.nextOffset;\n  if (popularBotApps?.peerIds && !offset) return; // Already fetched all\n\n  global = updateGlobalSearchFetchingStatus(global, { botApps: true }, tabId);\n  setGlobal(global);\n\n  const result = await callApi('fetchPopularAppBots', { offset });\n\n  global = getGlobal();\n  if (!result) {\n    global = updateGlobalSearchFetchingStatus(global, { botApps: false }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateGlobalSearch(global, {\n    popularBotApps: {\n      peerIds: [...(popularBotApps?.peerIds || []), ...result.peerIds],\n      nextOffset: result.nextOffset,\n    },\n  }, tabId);\n  global = updateGlobalSearchFetchingStatus(global, { botApps: false }, tabId);\n\n  setGlobal(global);\n});\n\nasync function searchMessagesGlobal<T extends GlobalState>(global: T, params: {\n  query?: string;\n  type: ApiGlobalMessageSearchType;\n  context?: ApiMessageSearchContext;\n  offsetRate?: number;\n  offsetId?: number;\n  offsetPeer?: ApiPeer;\n  peer?: ApiPeer;\n  maxDate?: number;\n  minDate?: number;\n  tabId: TabArgs<T>[0];\n  shouldResetResultsByType?: boolean;\n}) {\n  const {\n    query = '', type, context, offsetRate, offsetId, offsetPeer,\n    peer, maxDate, minDate, shouldResetResultsByType, tabId = getCurrentTabId(),\n  } = params;\n  let result: {\n    messages: ApiMessage[];\n    userStatusesById?: Record<number, ApiUserStatus>;\n    topics?: ApiTopic[];\n    totalTopicsCount?: number;\n    totalCount: number;\n    nextOffsetRate?: number;\n    nextOffsetId?: number;\n    nextOffsetPeerId?: string;\n  } | undefined;\n\n  let messageLink: ApiMessage | undefined;\n\n  if (peer) {\n    const inChatResultRequest = callApi('searchMessagesInChat', {\n      peer,\n      query,\n      type,\n      limit: GLOBAL_SEARCH_SLICE,\n      offsetId,\n      minDate,\n      maxDate,\n    });\n    const isChat = isApiPeerChat(peer);\n    const topicsRequest = isChat && peer.isForum ? callApi('fetchTopics', {\n      chat: peer,\n      query,\n      limit: GLOBAL_TOPIC_SEARCH_SLICE,\n    }) : undefined;\n\n    const [inChatResult, topics] = await Promise.all([inChatResultRequest, topicsRequest]);\n\n    if (inChatResult) {\n      const {\n        messages, totalCount, nextOffsetId,\n      } = inChatResult;\n\n      const { topics: localTopics, count } = topics || {};\n\n      result = {\n        topics: localTopics,\n        totalTopicsCount: count,\n        messages,\n        totalCount,\n        nextOffsetId,\n      };\n    }\n  } else {\n    result = await callApi('searchMessagesGlobal', {\n      query,\n      offsetRate,\n      offsetId,\n      offsetPeer,\n      limit: GLOBAL_SEARCH_SLICE,\n      type,\n      context,\n      maxDate,\n      minDate,\n    });\n    if (isDeepLink(query)) {\n      const link = tryParseDeepLink(query);\n      if (link?.type === 'publicMessageLink') {\n        messageLink = await getMessageByPublicLink(global, link);\n      } else if (link?.type === 'privateMessageLink') {\n        messageLink = await getMessageByPrivateLink(global, link);\n      }\n    }\n  }\n\n  global = getGlobal();\n\n  if (shouldResetResultsByType) {\n    global = updateGlobalSearch(global, {\n      resultsByType: {\n        ...(selectTabState(global, tabId).globalSearch || {}).resultsByType,\n        [type]: undefined,\n      },\n    }, tabId);\n  }\n  const currentSearchQuery = selectCurrentGlobalSearchQuery(global, tabId);\n  if (!result || (query !== '' && query !== currentSearchQuery)) {\n    global = updateGlobalSearchFetchingStatus(global, { messages: false }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  if (messageLink) {\n    result.totalCount = result.messages.unshift(messageLink);\n  }\n\n  const {\n    messages, userStatusesById, totalCount, nextOffsetRate, nextOffsetId, nextOffsetPeerId,\n  } = result;\n\n  if (userStatusesById) {\n    global = addUserStatuses(global, userStatusesById);\n  }\n\n  if (messages.length) {\n    global = addMessages(global, messages);\n  }\n\n  global = updateGlobalSearchResults(\n    global,\n    messages,\n    totalCount,\n    type,\n    nextOffsetRate,\n    nextOffsetId,\n    nextOffsetPeerId,\n    tabId,\n  );\n\n  if (result.topics) {\n    global = updateTopics(global, peer!.id, result.totalTopicsCount!, result.topics);\n  }\n\n  const sortedTopics = result.topics?.map(({ id }) => id).sort((a, b) => b - a);\n  global = updateGlobalSearch(global, {\n    foundTopicIds: sortedTopics,\n  }, tabId);\n\n  setGlobal(global);\n}\n\nasync function getMessageByPublicLink(global: GlobalState, link: { username: string; messageId: number }) {\n  const { username, messageId } = link;\n  const localChat = selectChatByUsername(global, username);\n  if (localChat) {\n    return getChatGroupOrChannelMessage(global, localChat, messageId);\n  }\n  const { chat } = await callApi('getChatByUsername', username) ?? {};\n  if (!chat) {\n    return undefined;\n  }\n  return getChatGroupOrChannelMessage(global, chat, messageId);\n}\n\nfunction getMessageByPrivateLink(global: GlobalState, link: { channelId: string; messageId: number }) {\n  const { channelId, messageId } = link;\n  const internalChannelId = toChannelId(channelId);\n  const chat = selectChat(global, internalChannelId);\n  if (!chat) {\n    return undefined;\n  }\n  return getChatGroupOrChannelMessage(global, chat, messageId);\n}\n\nasync function getChatGroupOrChannelMessage(global: GlobalState, chat: ApiChat, messageId: number) {\n  if (!isChatGroup(chat) && !isChatChannel(chat)) {\n    return undefined;\n  }\n  const localMessage = selectChatMessage(global, chat.id, messageId);\n  if (localMessage) {\n    return localMessage;\n  }\n  const result = await callApi('fetchMessage', { chat, messageId });\n  return result === 'MESSAGE_DELETED' ? undefined : result?.message;\n}\n","import type { ActionReturnType } from '../../types';\nimport { ManagementProgress } from '../../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { callApi } from '../../../api/gramjs';\nimport { getUserFirstOrLastName } from '../../helpers';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  updateChat, updateChatFullInfo, updateManagement, updateManagementProgress, updateUserFullInfo,\n} from '../../reducers';\nimport {\n  selectChat, selectCurrentMessageList, selectIsCurrentUserFrozen,\n  selectTabState, selectUser,\n} from '../../selectors';\nimport { ensureIsSuperGroup } from './chats';\n\naddActionHandler('checkPublicLink', async (global, actions, payload): Promise<void> => {\n  const { username, tabId = getCurrentTabId() } = payload;\n\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId) {\n    return;\n  }\n\n  // No need to check the username if already in progress\n  if (selectTabState(global, tabId).management.progress === ManagementProgress.InProgress) {\n    return;\n  }\n\n  global = updateManagement(\n    global, chatId, { isUsernameAvailable: undefined, checkedUsername: undefined }, tabId,\n  );\n  setGlobal(global);\n\n  const { result, error } = (await callApi('checkChatUsername', { username }));\n\n  global = getGlobal();\n  global = updateManagementProgress(\n    global, result === true ? ManagementProgress.Complete : ManagementProgress.Error, tabId,\n  );\n  global = updateManagement(global, chatId, {\n    isUsernameAvailable: result === true,\n    checkedUsername: username,\n    error,\n  }, tabId);\n  setGlobal(global);\n\n  if (result === undefined) {\n    actions.openLimitReachedModal({ limit: 'channelsPublic', tabId });\n  }\n});\n\naddActionHandler('updatePublicLink', async (global, actions, payload): Promise<void> => {\n  const { username, shouldDisableUsernames, tabId = getCurrentTabId() } = payload;\n\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) return;\n\n  global = getGlobal();\n\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  const result = await callApi('setChatUsername', { chat, username });\n  if (shouldDisableUsernames) {\n    await callApi('deactivateAllUsernames', { chat });\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, result ? ManagementProgress.Complete : ManagementProgress.Error, tabId);\n  global = updateManagement(global, chat.id, {\n    isUsernameAvailable: undefined,\n    checkedUsername: undefined,\n    error: undefined,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('updatePrivateLink', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  const chat = chatId && selectChat(global, chatId);\n  if (!chatId || !chat) {\n    return;\n  }\n\n  callApi('updatePrivateLink', { chat });\n});\n\naddActionHandler('setEditingExportedInvite', (global, actions, payload): ActionReturnType => {\n  const { chatId, invite, tabId = getCurrentTabId() } = payload;\n\n  global = updateManagement(global, chatId, { editingInvite: invite }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('setOpenedInviteInfo', (global, actions, payload): ActionReturnType => {\n  const { chatId, invite, tabId = getCurrentTabId() } = payload;\n\n  const update = invite ? { inviteInfo: { invite } } : { inviteInfo: undefined };\n\n  global = updateManagement(global, chatId, update, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadExportedChatInvites', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const {\n    chatId, adminId, isRevoked, limit, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  const admin = selectUser(global, adminId || global.currentUserId!);\n  if (!peer || !admin) return;\n\n  const result = await callApi('fetchExportedChatInvites', {\n    peer, admin, isRevoked, limit,\n  });\n  if (!result) {\n    return;\n  }\n  global = getGlobal();\n  const { invites } = result;\n\n  const update = isRevoked ? { revokedInvites: invites } : { invites };\n  global = updateManagement(global, chatId, update, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('editExportedChatInvite', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, link, isRevoked, expireDate, usageLimit, isRequestNeeded, title, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  if (!peer) return;\n\n  const result = await callApi('editExportedChatInvite', {\n    peer,\n    link,\n    isRevoked,\n    expireDate,\n    usageLimit,\n    isRequestNeeded,\n    title,\n  });\n  if (!result) {\n    return;\n  }\n\n  const { oldInvite, newInvite } = result;\n\n  global = getGlobal();\n  const { management } = selectTabState(global, tabId);\n  const invites = (management.byChatId[chatId].invites || [])\n    .filter((current) => current.link !== oldInvite.link);\n  const revokedInvites = [...(management.byChatId[chatId].revokedInvites || [])];\n\n  if (newInvite.isRevoked) {\n    revokedInvites.unshift(newInvite);\n  } else {\n    invites.push(newInvite);\n  }\n\n  global = updateManagement(global, chatId, {\n    invites,\n    revokedInvites,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('exportChatInvite', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, expireDate, usageLimit, isRequestNeeded, title, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  if (!peer) return;\n\n  const result = await callApi('exportChatInvite', {\n    peer,\n    expireDate,\n    usageLimit,\n    isRequestNeeded,\n    title,\n  });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  const invites = selectTabState(global, tabId).management.byChatId[chatId].invites || [];\n  global = updateManagement(global, chatId, {\n    invites: [...invites, result],\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('deleteExportedChatInvite', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, link, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  if (!peer) return;\n\n  const result = await callApi('deleteExportedChatInvite', {\n    peer,\n    link,\n  });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  const managementState = selectTabState(global, tabId).management.byChatId[chatId];\n  global = updateManagement(global, chatId, {\n    invites: managementState?.invites?.filter((invite) => invite.link !== link),\n    revokedInvites: managementState?.revokedInvites?.filter((invite) => invite.link !== link),\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('deleteRevokedExportedChatInvites', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, adminId, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  const admin = selectUser(global, adminId || global.currentUserId!);\n  if (!peer || !admin) return;\n\n  const result = await callApi('deleteRevokedExportedChatInvites', {\n    peer,\n    admin,\n  });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateManagement(global, chatId, {\n    revokedInvites: [],\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadChatInviteImporters', async (\n  global, actions, payload,\n): Promise<void> => {\n  const {\n    chatId, link, offsetDate, offsetUserId, limit, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  const offsetUser = offsetUserId ? selectUser(global, offsetUserId) : undefined;\n  if (!peer || (offsetUserId && !offsetUser)) return;\n\n  const result = await callApi('fetchChatInviteImporters', {\n    peer,\n    link,\n    offsetDate,\n    offsetUser,\n    limit,\n  });\n  if (!result) {\n    return;\n  }\n  const { importers } = result;\n\n  global = getGlobal();\n  const currentInviteInfo = selectTabState(global, tabId).management.byChatId[chatId]?.inviteInfo;\n  if (!currentInviteInfo?.invite || currentInviteInfo.invite.link !== link) {\n    return;\n  }\n\n  global = updateManagement(global, chatId, {\n    inviteInfo: {\n      ...currentInviteInfo,\n      importers,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadChatInviteRequesters', async (\n  global, actions, payload,\n): Promise<void> => {\n  const {\n    chatId, link, offsetDate, offsetUserId, limit, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectChat(global, chatId);\n  const offsetUser = offsetUserId ? selectUser(global, offsetUserId) : undefined;\n  if (!peer || (offsetUserId && !offsetUser)) return;\n\n  const result = await callApi('fetchChatInviteImporters', {\n    peer,\n    link,\n    offsetDate,\n    offsetUser,\n    limit,\n    isRequested: true,\n  });\n  if (!result) {\n    return;\n  }\n  const { importers } = result;\n\n  global = getGlobal();\n  const currentInviteInfo = selectTabState(global, tabId).management.byChatId[chatId]?.inviteInfo;\n  if (!currentInviteInfo?.invite || currentInviteInfo.invite.link !== link) {\n    return;\n  }\n  global = updateManagement(global, chatId, {\n    inviteInfo: {\n      ...currentInviteInfo,\n      requesters: importers,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadChatJoinRequests', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, offsetDate = 0, offsetUserId, limit = 0,\n  } = payload;\n  const peer = selectChat(global, chatId);\n  const offsetUser = offsetUserId ? selectUser(global, offsetUserId) : undefined;\n  if (!peer || (offsetUserId && !offsetUser)) return;\n\n  const result = await callApi('fetchChatInviteImporters', {\n    peer,\n    offsetDate,\n    offsetUser,\n    limit,\n    isRequested: true,\n  });\n  if (!result) {\n    return;\n  }\n  const { importers } = result;\n\n  global = getGlobal();\n  global = updateChat(global, chatId, { joinRequests: importers });\n  setGlobal(global);\n});\n\naddActionHandler('hideChatJoinRequest', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, userId, isApproved,\n  } = payload;\n  const peer = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n  if (!peer || !user) return;\n\n  const result = await callApi('hideChatJoinRequest', {\n    peer,\n    user,\n    isApproved,\n  });\n  if (!result) return;\n\n  global = getGlobal();\n  const targetChat = selectChat(global, chatId);\n  if (!targetChat) return;\n\n  global = updateChat(global, chatId, {\n    joinRequests: targetChat.joinRequests?.filter((importer) => importer.userId !== userId),\n  });\n  setGlobal(global);\n});\n\naddActionHandler('hideAllChatJoinRequests', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, isApproved, link,\n  } = payload;\n  const peer = selectChat(global, chatId);\n  if (!peer) return;\n\n  const result = await callApi('hideAllChatJoinRequests', {\n    peer,\n    isApproved,\n    link,\n  });\n  if (!result) return;\n\n  global = getGlobal();\n  const targetChat = selectChat(global, chatId);\n  if (!targetChat) return;\n\n  global = updateChat(global, chatId, { joinRequests: [] });\n  global = updateChatFullInfo(global, chatId, {\n    recentRequesterIds: [],\n    requestsPending: 0,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('hidePeerSettingsBar', async (global, actions, payload): Promise<void> => {\n  const { peerId } = payload;\n  const user = selectUser(global, peerId);\n  if (!user) return;\n\n  const result = await callApi('hidePeerSettingsBar', user);\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateUserFullInfo(global, peerId, {\n    settings: undefined,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('uploadContactProfilePhoto', async (global, actions, payload): Promise<void> => {\n  const {\n    userId, file, isSuggest, tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n  if (!user) return;\n\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  const result = await callApi('uploadContactProfilePhoto', {\n    user,\n    file,\n    isSuggest,\n  });\n\n  if (!result) {\n    global = getGlobal();\n    global = updateManagementProgress(global, ManagementProgress.Error, tabId);\n    setGlobal(global);\n\n    return;\n  }\n\n  global = getGlobal();\n  setGlobal(global);\n\n  const { id, accessHash } = user;\n  const newUser = await callApi('fetchFullUser', { id, accessHash });\n  if (!newUser) {\n    global = getGlobal();\n    global = updateManagementProgress(global, ManagementProgress.Error, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  actions.loadMoreProfilePhotos({ peerId: userId, shouldInvalidateCache: true });\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  setGlobal(global);\n\n  if (file && !isSuggest) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('UserInfo.SetCustomPhoto.SuccessPhotoText', getUserFirstOrLastName(user)),\n      tabId,\n    });\n  }\n});\n\naddActionHandler('resetManagementError', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload || {};\n\n  return updateManagement(global, chatId, { error: undefined }, tabId);\n});\n","import type {\n  ApiAttachment,\n  ApiChat,\n  ApiChatType,\n  ApiDraft,\n  ApiError,\n  ApiInputMessageReplyInfo,\n  ApiInputStoryReplyInfo,\n  ApiInputSuggestedPostInfo,\n  ApiMessage,\n  ApiOnProgress,\n  ApiStory,\n  ApiUser,\n  MediaContent,\n} from '../../../api/types';\nimport type {\n  ForwardMessagesParams,\n  SendMessageParams,\n  ThreadId,\n} from '../../../types';\nimport type { MessageKey } from '../../../util/keys/messageKey';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\nimport { MAIN_THREAD_ID, MESSAGE_DELETED } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport {\n  GIF_MIME_TYPE,\n  MAX_MEDIA_FILES_FOR_ALBUM,\n  MESSAGE_ID_REQUIRED_ERROR,\n  MESSAGE_LIST_SLICE,\n  RE_TELEGRAM_LINK,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n  STARS_SUGGESTED_POST_FUTURE_MIN,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n  TON_CURRENCY_CODE,\n} from '../../../config';\nimport { ensureProtocol, isMixedScriptUrl } from '../../../util/browser/url';\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport { copyTextToClipboardFromPromise } from '../../../util/clipboard';\nimport { isDeepLink } from '../../../util/deepLinkParser';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport {\n  areSortedArraysIntersecting,\n  buildCollectionByKey,\n  omit,\n  partition,\n  split,\n  unique,\n} from '../../../util/iteratees';\nimport { getMessageKey, isLocalMessageId } from '../../../util/keys/messageKey';\nimport { getTranslationFn, type RegularLangFnParameters } from '../../../util/localization';\nimport { formatStarsAsText } from '../../../util/localization/format';\nimport { oldTranslate } from '../../../util/oldLangProvider';\nimport { debounce, onTickEnd, rafPromise } from '../../../util/schedulers';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi, cancelApiProgress } from '../../../api/gramjs';\nimport {\n  getIsSavedDialog,\n  getUserFullName,\n  isChatChannel,\n  isChatSuperGroup,\n  isDeletedUser,\n  isMessageLocal,\n  isServiceNotificationMessage,\n  isUserBot,\n  splitMessagesForForwarding,\n} from '../../helpers';\nimport { isApiPeerChat, isApiPeerUser } from '../../helpers/peers';\nimport {\n  addActionHandler, getActions, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  addChatMessagesById,\n  addUnreadMentions,\n  deleteSponsoredMessage,\n  removeOutlyingList,\n  removeRequestedMessageTranslation,\n  removeUnreadMentions,\n  replaceSettings,\n  replaceThreadParam,\n  replaceUserStatuses,\n  safeReplacePinnedIds,\n  safeReplaceViewportIds,\n  updateChat,\n  updateChatFullInfo,\n  updateChatMessage,\n  updateGlobalSearch,\n  updateListedIds,\n  updateMessageTranslation,\n  updateOutlyingLists,\n  updatePeerFullInfo,\n  updateQuickReplies,\n  updateQuickReplyMessages,\n  updateRequestedMessageTranslation,\n  updateScheduledMessages,\n  updateSponsoredMessage,\n  updateThreadInfo,\n  updateThreadUnreadFromForwardedMessage,\n  updateTopic,\n  updateUploadByMessageKey,\n  updateUserFullInfo,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectCanForwardMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectCurrentViewedStory,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectFirstMessageId,\n  selectFirstUnreadId,\n  selectFocusedMessageId,\n  selectForwardsCanBeSentToChat,\n  selectForwardsContainVoiceMessages,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsMonoforumAdmin,\n  selectLanguageCode,\n  selectListedIds,\n  selectMessageReplyInfo,\n  selectNoWebPage,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerStory,\n  selectPinnedIds,\n  selectPollFromMessage,\n  selectRealLastReadId,\n  selectReplyCanBeSentToChat,\n  selectSavedDialogIdFromMessage,\n  selectScheduledMessage,\n  selectSendAs,\n  selectTabState,\n  selectThreadIdFromMessage,\n  selectThreadInfo,\n  selectTopic,\n  selectTranslationLanguage,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n  selectViewportIds,\n} from '../../selectors';\nimport { updateWithLocalMedia } from '../apiUpdaters/messages';\nimport { deleteMessages } from '../apiUpdaters/messages';\n\nconst AUTOLOGIN_TOKEN_KEY = 'autologin_token';\n\nconst uploadProgressCallbacks = new Map<MessageKey, ApiOnProgress>();\n\nconst runDebouncedForMarkRead = debounce((cb) => cb(), 500, false);\n\naddActionHandler('loadViewportMessages', (global, actions, payload): ActionReturnType => {\n  const {\n    direction = LoadMoreDirection.Around,\n    isBudgetPreload = false,\n    shouldForceRender = false,\n    onLoaded,\n    onError,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  let { chatId, threadId } = payload || {};\n\n  if (!chatId || !threadId) {\n    const currentMessageList = selectCurrentMessageList(global, tabId);\n    if (!currentMessageList) {\n      onError?.();\n      return;\n    }\n\n    chatId = currentMessageList.chatId;\n    threadId = currentMessageList.threadId;\n  }\n\n  const chat = selectChat(global, chatId);\n  const isRestricted = selectIsChatRestricted(global, chatId);\n  // TODO Revise if `isRestricted` check is needed\n  if (!chat || isRestricted) {\n    onError?.();\n    return;\n  }\n\n  const viewportIds = selectViewportIds(global, chatId, threadId, tabId);\n  const listedIds = selectListedIds(global, chatId, threadId);\n\n  if (!viewportIds || !viewportIds.length || direction === LoadMoreDirection.Around) {\n    const offsetId = selectFocusedMessageId(global, chatId, tabId) || selectRealLastReadId(global, chatId, threadId);\n    const isOutlying = Boolean(offsetId && listedIds && !listedIds.includes(offsetId));\n    const historyIds = (isOutlying\n      ? selectOutlyingListByMessageId(global, chatId, threadId, offsetId!)\n      : listedIds) || [];\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(historyIds, offsetId, LoadMoreDirection.Around);\n\n    if (areSomeLocal) {\n      global = safeReplaceViewportIds(global, chatId, threadId, newViewportIds, tabId);\n    }\n\n    if (!areAllLocal) {\n      onTickEnd(() => {\n        void loadViewportMessages(\n          global, chat, threadId, offsetId, LoadMoreDirection.Around, isOutlying, isBudgetPreload, onLoaded, tabId,\n        );\n      });\n    } else {\n      onLoaded?.();\n    }\n  } else {\n    const offsetId = direction === LoadMoreDirection.Backwards ? viewportIds[0] : viewportIds[viewportIds.length - 1];\n\n    // Prevent requests with local offsets\n    if (isLocalMessageId(offsetId)) return;\n\n    // Prevent unnecessary requests in threads\n    if (offsetId === threadId && direction === LoadMoreDirection.Backwards) return;\n\n    const isOutlying = Boolean(listedIds && !listedIds.includes(offsetId));\n    const historyIds = (isOutlying\n      ? selectOutlyingListByMessageId(global, chatId, threadId, offsetId) : listedIds)!;\n    if (historyIds?.length) {\n      const {\n        newViewportIds, areSomeLocal, areAllLocal,\n      } = getViewportSlice(historyIds, offsetId, direction);\n\n      if (areSomeLocal) {\n        global = safeReplaceViewportIds(global, chatId, threadId, newViewportIds, tabId);\n      }\n\n      onTickEnd(() => {\n        void loadWithBudget(\n          global,\n          actions,\n          areAllLocal,\n          isOutlying,\n          isBudgetPreload,\n          chat,\n          threadId,\n          direction,\n          offsetId,\n          onLoaded,\n          tabId,\n        );\n      });\n    }\n\n    if (isBudgetPreload) {\n      return;\n    }\n  }\n\n  setGlobal(global, { forceOnHeavyAnimation: shouldForceRender });\n});\n\nasync function loadWithBudget<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  areAllLocal: boolean, isOutlying: boolean, isBudgetPreload: boolean,\n  chat: ApiChat, threadId: ThreadId, direction: LoadMoreDirection, offsetId?: number,\n  onLoaded?: NoneToVoidFunction,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (!areAllLocal) {\n    await loadViewportMessages(\n      global, chat, threadId, offsetId, direction, isOutlying, isBudgetPreload, onLoaded, tabId,\n    );\n  }\n\n  if (!isBudgetPreload) {\n    actions.loadViewportMessages({\n      chatId: chat.id, threadId, direction, isBudgetPreload: true, onLoaded, tabId,\n    });\n  }\n}\n\naddActionHandler('loadMessage', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, messageId, replyOriginForId, threadUpdate,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const message = await loadMessage(global, chat, messageId, replyOriginForId);\n  if (message && threadUpdate) {\n    const { lastMessageId, isDeleting } = threadUpdate;\n    global = getGlobal();\n\n    global = updateThreadUnreadFromForwardedMessage(\n      global,\n      message,\n      chatId,\n      lastMessageId,\n      isDeleting,\n    );\n    setGlobal(global);\n  }\n});\n\naddActionHandler('sendMessage', async (global, actions, payload): Promise<void> => {\n  const { messageList, tabId = getCurrentTabId() } = payload;\n\n  const { storyId, peerId: storyPeerId } = selectCurrentViewedStory(global, tabId);\n  const isStoryReply = Boolean(storyId && storyPeerId);\n\n  if (!messageList && !isStoryReply) {\n    return;\n  }\n\n  let { chatId, threadId, type } = messageList || {};\n  if (isStoryReply) {\n    chatId = storyPeerId!;\n    threadId = MAIN_THREAD_ID;\n    type = 'thread';\n  }\n\n  payload = omit(payload, ['tabId']);\n\n  if (type === 'scheduled' && !payload.scheduledAt) {\n    global = updateTabState(global, {\n      contentToBeScheduled: payload,\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const chat = selectChat(global, chatId!)!;\n  const draft = selectDraft(global, chatId!, threadId!);\n  const isForwarding = selectTabState(global, tabId).forwardMessages?.messageIds?.length;\n\n  const draftReplyInfo = !isForwarding && !isStoryReply ? draft?.replyInfo : undefined;\n  const draftSuggestedPostInfo = !isForwarding && !isStoryReply\n    ? draft?.suggestedPostInfo : undefined;\n\n  const storyReplyInfo = isStoryReply ? {\n    type: 'story',\n    peerId: storyPeerId!,\n    storyId: storyId!,\n  } satisfies ApiInputStoryReplyInfo : undefined;\n\n  const messageReplyInfo = selectMessageReplyInfo(global, chatId!, threadId!, draftReplyInfo);\n\n  const replyInfo = storyReplyInfo || messageReplyInfo;\n\n  const threadInfo = selectThreadInfo(global, chatId!, threadId!);\n  const lastMessageId = threadId === MAIN_THREAD_ID\n    ? selectChatLastMessageId(global, chatId!) : threadInfo?.lastMessageId;\n\n  const messagePriceInStars = await getPeerStarsForMessage(global, chatId!);\n\n  const suggestedPostPrice = draftSuggestedPostInfo?.price;\n  const suggestedPostCurrency = suggestedPostPrice?.currency || STARS_CURRENCY_CODE;\n  const suggestedPostAmount = suggestedPostPrice?.amount || 0;\n  if (suggestedPostAmount && !draftReplyInfo) {\n    if (suggestedPostCurrency === STARS_CURRENCY_CODE) {\n      const currentBalance = global.stars?.balance?.amount || 0;\n\n      if (suggestedPostAmount > currentBalance) {\n        actions.openStarsBalanceModal({\n          topup: {\n            balanceNeeded: suggestedPostAmount,\n          },\n          tabId,\n        });\n        return;\n      }\n    } else if (suggestedPostCurrency === TON_CURRENCY_CODE) {\n      const currentTonBalance = global.ton?.balance?.amount || 0;\n      if (suggestedPostAmount > currentTonBalance) {\n        actions.openStarsBalanceModal({\n          currency: TON_CURRENCY_CODE,\n          tabId,\n        });\n        return;\n      }\n    }\n  }\n\n  const suggestedMessage = draftReplyInfo && draftSuggestedPostInfo\n    ? selectChatMessage(global, chatId!, draftReplyInfo.replyToMsgId) : undefined;\n  let suggestedMedia: MediaContent | undefined;\n  if (draftSuggestedPostInfo && suggestedMessage?.content) {\n    suggestedMedia = suggestedMessage.content;\n  }\n\n  const params: SendMessageParams = {\n    ...payload,\n    chat,\n    replyInfo,\n    suggestedPostInfo: draftSuggestedPostInfo,\n    suggestedMedia,\n    noWebPage: selectNoWebPage(global, chatId!, threadId!),\n    sendAs: selectSendAs(global, chatId!),\n    lastMessageId,\n    messagePriceInStars,\n    isStoryReply,\n    isPending: messagePriceInStars ? true : undefined,\n    ...suggestedMessage && { isInvertedMedia: suggestedMessage?.isInvertedMedia },\n  };\n\n  if (!isStoryReply) {\n    actions.clearWebPagePreview({ tabId });\n  }\n\n  const isSingle = (!payload.attachments || payload.attachments.length <= 1) && !isForwarding;\n  const isGrouped = !isSingle && payload.shouldGroupMessages;\n  const localMessages: SendMessageParams[] = [];\n\n  if (isSingle) {\n    const { attachments, ...restParams } = params;\n    const sendParams: SendMessageParams = {\n      ...restParams,\n      attachment: attachments ? attachments[0] : undefined,\n      wasDrafted: Boolean(draft),\n    };\n    await sendMessageOrReduceLocal(global, sendParams, localMessages);\n  } else if (isGrouped) {\n    const {\n      text, entities, attachments, ...commonParams\n    } = params;\n    const byType = splitAttachmentsByType(attachments!);\n\n    let hasSentCaption = false;\n    for (let groupIndex = 0; groupIndex < byType.length; groupIndex++) {\n      const group = byType[groupIndex];\n      const groupedAttachments = split(group, MAX_MEDIA_FILES_FOR_ALBUM);\n      for (let i = 0; i < groupedAttachments.length; i++) {\n        const groupedId = `${Date.now()}${groupIndex}${i}`;\n\n        const isFirst = i === 0 && groupIndex === 0;\n        const isLast = i === groupedAttachments.length - 1 && groupIndex === byType.length - 1;\n\n        if (group[0].quick && !group[0].shouldSendAsFile) {\n          const [firstAttachment, ...restAttachments] = groupedAttachments[i];\n\n          let sendParams: SendMessageParams = {\n            ...commonParams,\n            text: isFirst && !hasSentCaption ? text : undefined,\n            entities: isFirst && !hasSentCaption ? entities : undefined,\n            attachment: firstAttachment,\n            groupedId: restAttachments.length > 0 ? groupedId : undefined,\n            wasDrafted: Boolean(draft),\n          };\n          await sendMessageOrReduceLocal(global, sendParams, localMessages);\n\n          hasSentCaption = true;\n\n          for (const attachment of restAttachments) {\n            sendParams = {\n              ...commonParams,\n              attachment,\n              groupedId,\n            };\n            await sendMessageOrReduceLocal(global, sendParams, localMessages);\n          }\n        } else {\n          const firstAttachments = groupedAttachments[i].slice(0, -1);\n          const lastAttachment = groupedAttachments[i][groupedAttachments[i].length - 1];\n          for (const attachment of firstAttachments) {\n            const sendParams = {\n              ...commonParams,\n              attachment,\n              groupedId,\n            };\n            await sendMessageOrReduceLocal(global, sendParams, localMessages);\n          }\n\n          const sendParams = {\n            ...commonParams,\n            text: isLast && !hasSentCaption ? text : undefined,\n            entities: isLast && !hasSentCaption ? entities : undefined,\n            attachment: lastAttachment,\n            groupedId: firstAttachments.length > 0 ? groupedId : undefined,\n            wasDrafted: Boolean(draft),\n          };\n          await sendMessageOrReduceLocal(global, sendParams, localMessages);\n\n          hasSentCaption = true;\n        }\n      }\n    }\n  } else {\n    const {\n      text, entities, attachments, replyInfo: replyToForFirstMessage, ...commonParams\n    } = params;\n\n    if (text) {\n      const sendParams = {\n        ...commonParams,\n        text,\n        entities,\n        replyInfo: replyToForFirstMessage,\n        wasDrafted: Boolean(draft),\n      };\n      await sendMessageOrReduceLocal(global, sendParams, localMessages);\n    }\n\n    if (attachments) {\n      for (const attachment of attachments) {\n        const sendParams = {\n          ...commonParams,\n          attachment,\n        };\n        await sendMessageOrReduceLocal(global, sendParams, localMessages);\n      }\n    }\n  }\n  if (isForwarding) {\n    const localForwards = await executeForwardMessages(global, params, tabId);\n    if (localForwards) {\n      localMessages.push(...localForwards);\n    }\n  }\n  if (localMessages?.length) sendMessagesWithNotification(global, localMessages);\n});\n\naddActionHandler('sendInviteMessages', async (global, actions, payload): Promise<void> => {\n  const { chatId, userIds, tabId = getCurrentTabId() } = payload;\n  const chatFullInfo = selectChatFullInfo(global, chatId);\n  if (!chatFullInfo?.inviteLink) {\n    return undefined;\n  }\n  const userFullNames: string[] = [];\n  await Promise.all(userIds.map((userId) => {\n    const chat = selectChat(global, userId);\n    if (!chat) {\n      return undefined;\n    }\n    const userFullName = getUserFullName(selectUser(global, userId));\n    if (userFullName) {\n      userFullNames.push(userFullName);\n    }\n    return sendMessage(global, {\n      chat,\n      text: chatFullInfo.inviteLink,\n    });\n  }));\n  return actions.showNotification({\n    message: oldTranslate('Conversation.ShareLinkTooltip.Chat.One', userFullNames.join(', ')),\n    tabId,\n  });\n});\n\naddActionHandler('editMessage', (global, actions, payload): ActionReturnType => {\n  const {\n    messageList, text, entities, attachments, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!messageList) {\n    return;\n  }\n\n  let currentMessageKey: MessageKey | undefined;\n  const progressCallback = attachments ? (progress: number, messageKey: MessageKey) => {\n    if (!uploadProgressCallbacks.has(messageKey)) {\n      currentMessageKey = messageKey;\n      uploadProgressCallbacks.set(messageKey, progressCallback!);\n    }\n\n    global = getGlobal();\n    global = updateUploadByMessageKey(global, messageKey, progress);\n    setGlobal(global);\n  } : undefined;\n\n  const { chatId, threadId, type: messageListType } = messageList;\n  const chat = selectChat(global, chatId);\n  const message = selectEditingMessage(global, chatId, threadId, messageListType);\n  if (!chat || !message) {\n    return;\n  }\n\n  actions.setEditingId({ messageId: undefined, tabId });\n\n  (async () => {\n    await callApi('editMessage', {\n      chat,\n      message,\n      attachment: attachments ? attachments[0] : undefined,\n      text,\n      entities,\n      noWebPage: selectNoWebPage(global, chatId, threadId),\n    }, progressCallback);\n\n    if (progressCallback && currentMessageKey) {\n      global = getGlobal();\n      global = updateUploadByMessageKey(global, currentMessageKey, undefined);\n      setGlobal(global);\n\n      uploadProgressCallbacks.delete(currentMessageKey);\n    }\n  })();\n});\n\naddActionHandler('editTodo', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, todo, messageId,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!chat || !message) {\n    return;\n  }\n\n  callApi('editTodo', {\n    chat,\n    message,\n    todo,\n  });\n});\n\naddActionHandler('cancelUploadMedia', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId } = payload;\n\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) return;\n\n  const progressCallback = message && uploadProgressCallbacks.get(getMessageKey(message));\n  if (progressCallback) {\n    cancelApiProgress(progressCallback);\n  }\n\n  if (isMessageLocal(message)) {\n    actions.apiUpdate({\n      '@type': 'deleteMessages',\n      ids: [messageId],\n      chatId,\n    });\n  }\n});\n\naddActionHandler('saveDraft', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId, text,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!text || !chat) {\n    return;\n  }\n\n  const currentDraft = selectDraft(global, chatId, threadId);\n\n  if (chat.isMonoforum && !currentDraft?.replyInfo && !currentDraft?.suggestedPostInfo) {\n    return; // Monoforum doesn't support drafts outside threads\n  }\n\n  const newDraft: ApiDraft = {\n    text,\n    replyInfo: currentDraft?.replyInfo,\n    effectId: currentDraft?.effectId,\n    suggestedPostInfo: currentDraft?.suggestedPostInfo,\n  };\n\n  saveDraft({\n    global, chatId, threadId, draft: newDraft,\n  });\n});\n\naddActionHandler('clearDraft', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId = MAIN_THREAD_ID, isLocalOnly, shouldKeepReply, shouldKeepSuggestedPost,\n  } = payload;\n  const currentDraft = selectDraft(global, chatId, threadId);\n  if (!currentDraft) {\n    return;\n  }\n\n  const currentReplyInfo = currentDraft.replyInfo;\n\n  const newDraft: ApiDraft | undefined = (shouldKeepReply && currentReplyInfo)\n    || (shouldKeepSuggestedPost && currentDraft.suggestedPostInfo) ? {\n      replyInfo: shouldKeepReply ? currentReplyInfo : undefined,\n      suggestedPostInfo: shouldKeepSuggestedPost ? currentDraft.suggestedPostInfo : undefined,\n    } : undefined;\n\n  saveDraft({\n    global, chatId, threadId, draft: newDraft, isLocalOnly,\n  });\n});\n\naddActionHandler('updateDraftReplyInfo', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId(), ...update } = payload;\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n\n  const { chatId, threadId } = currentMessageList;\n\n  const currentDraft = selectDraft(global, chatId, threadId);\n\n  const updatedReplyInfo = {\n    type: 'message',\n    ...currentDraft?.replyInfo,\n    ...update,\n  } as ApiInputMessageReplyInfo;\n\n  if (!updatedReplyInfo.replyToMsgId) return;\n\n  const newDraft: ApiDraft = {\n    ...currentDraft,\n    replyInfo: updatedReplyInfo,\n    suggestedPostInfo: undefined,\n  };\n\n  saveDraft({\n    global, chatId, threadId, draft: newDraft, isLocalOnly: true, noLocalTimeUpdate: true,\n  });\n});\n\naddActionHandler('resetDraftReplyInfo', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n  const { chatId, threadId } = currentMessageList;\n  const chat = selectChat(global, chatId);\n\n  const currentDraft = selectDraft(global, chatId, threadId);\n  if (chat?.isMonoforum && !currentDraft?.replyInfo && !currentDraft?.suggestedPostInfo) {\n    return; // Monoforum doesn't support drafts outside threads\n  }\n  const newDraft: ApiDraft | undefined = !currentDraft?.text ? undefined : {\n    ...currentDraft,\n    replyInfo: undefined,\n  };\n\n  saveDraft({\n    global, chatId, threadId, draft: newDraft, isLocalOnly: Boolean(newDraft),\n  });\n});\n\naddActionHandler('updateDraftSuggestedPostInfo', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId(), ...update } = payload;\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n\n  const { chatId, threadId } = currentMessageList;\n\n  const currentDraft = selectDraft(global, chatId, threadId);\n\n  const updatedSuggestedPostInfo = {\n    ...currentDraft?.suggestedPostInfo,\n    ...update,\n  } as ApiInputSuggestedPostInfo;\n\n  const newDraft: ApiDraft = {\n    ...currentDraft,\n    suggestedPostInfo: updatedSuggestedPostInfo,\n  };\n\n  saveDraft({\n    global, chatId, threadId, draft: newDraft, isLocalOnly: true, noLocalTimeUpdate: true,\n  });\n});\n\naddActionHandler('resetDraftSuggestedPostInfo', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n  const { chatId, threadId } = currentMessageList;\n\n  saveDraft({\n    global, chatId, threadId, draft: undefined, isLocalOnly: false,\n  });\n});\n\naddActionHandler('initDraftFromSuggestedMessage', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) {\n    return;\n  }\n\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n\n  const { threadId } = currentMessageList;\n\n  actions.clearDraft({\n    chatId,\n    threadId,\n    isLocalOnly: true,\n  });\n\n  actions.updateDraftReplyInfo({\n    replyToMsgId: messageId,\n    monoforumPeerId: selectSavedDialogIdFromMessage(global, message),\n    tabId,\n  });\n\n  if (message.suggestedPostInfo) {\n    const { scheduleDate, ...messageSuggestedPost } = message.suggestedPostInfo;\n    const now = getServerTime();\n    const futureMin = global.appConfig?.starsSuggestedPostFutureMin || STARS_SUGGESTED_POST_FUTURE_MIN;\n\n    const validScheduleDate = scheduleDate && scheduleDate > now + futureMin ? scheduleDate : undefined;\n\n    actions.updateDraftSuggestedPostInfo({\n      ...messageSuggestedPost,\n      scheduleDate: validScheduleDate,\n      tabId,\n    });\n  }\n\n  actions.saveDraft({\n    chatId,\n    threadId,\n    text: message.content.text,\n  });\n});\n\naddActionHandler('saveEffectInDraft', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId, effectId,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const currentDraft = selectDraft(global, chatId, threadId);\n  if (chat?.isMonoforum && !currentDraft?.replyInfo && !currentDraft?.suggestedPostInfo) {\n    return; // Monoforum doesn't support drafts outside threads\n  }\n\n  const newDraft = {\n    ...currentDraft,\n    effectId,\n  };\n\n  saveDraft({\n    global, chatId, threadId, draft: newDraft, isLocalOnly: true, noLocalTimeUpdate: true,\n  });\n});\n\naddActionHandler('updateInsertingPeerIdMention', (global, actions, payload): ActionReturnType => {\n  const { peerId, tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    insertingPeerIdMention: peerId,\n  }, tabId);\n});\n\nasync function saveDraft<T extends GlobalState>({\n  global, chatId, threadId, draft, isLocalOnly, noLocalTimeUpdate,\n}: {\n  global: T; chatId: string; threadId: ThreadId; draft?: ApiDraft; isLocalOnly?: boolean; noLocalTimeUpdate?: boolean;\n}) {\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, chatId);\n  if (!chat || (user && isDeletedUser(user))) return;\n\n  const replyInfo = selectMessageReplyInfo(global, chatId, threadId, draft?.replyInfo);\n\n  const newDraft: ApiDraft | undefined = draft ? {\n    ...draft,\n    replyInfo,\n    date: Math.floor(Date.now() / 1000),\n    isLocal: true,\n  } : undefined;\n\n  global = replaceThreadParam(global, chatId, threadId, 'draft', newDraft);\n  if (!noLocalTimeUpdate) {\n    global = updateChat(global, chatId, { draftDate: newDraft?.date });\n  }\n\n  setGlobal(global);\n\n  if (isLocalOnly) return;\n\n  const result = await callApi('saveDraft', {\n    chat,\n    draft: newDraft,\n  });\n\n  if (result && newDraft) {\n    newDraft.isLocal = false;\n  }\n\n  global = getGlobal();\n  global = replaceThreadParam(global, chatId, threadId, 'draft', newDraft);\n  global = updateChat(global, chatId, { draftDate: newDraft?.date });\n\n  setGlobal(global);\n}\n\naddActionHandler('toggleMessageWebPage', (global, actions, payload): ActionReturnType => {\n  const { chatId, threadId, noWebPage } = payload;\n\n  return replaceThreadParam(global, chatId, threadId, 'noWebPage', noWebPage);\n});\n\naddActionHandler('pinMessage', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, isUnpin, isOneSide, isSilent,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('pinMessage', {\n    chat, messageId, isUnpin, isOneSide, isSilent,\n  });\n});\n\naddActionHandler('unpinAllMessages', async (global, actions, payload): Promise<void> => {\n  const { chatId, threadId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  await callApi('unpinAllMessages', { chat, threadId });\n\n  global = getGlobal();\n  const pinnedIds = selectPinnedIds(global, chatId, threadId);\n  pinnedIds?.forEach((id) => {\n    global = updateChatMessage(global, chatId, id, { isPinned: false });\n  });\n  global = replaceThreadParam(global, chat.id, MAIN_THREAD_ID, 'pinnedIds', []);\n  setGlobal(global);\n});\n\naddActionHandler('deleteMessages', (global, actions, payload): ActionReturnType => {\n  const {\n    messageIds, shouldDeleteForAll, messageList: payloadMessageList, tabId = getCurrentTabId(),\n  } = payload;\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  const messageList = payloadMessageList || currentMessageList;\n  if (!messageList) {\n    return;\n  }\n  const { chatId, threadId } = messageList;\n  const chat = selectChat(global, chatId)!;\n  const messageIdsToDelete = messageIds.filter((id) => {\n    const message = selectChatMessage(global, chatId, id);\n    return message && !isMessageLocal(message);\n  });\n\n  // Only local messages\n  if (!messageIdsToDelete.length && messageIds.length) {\n    deleteMessages(global, isChatChannel(chat) || isChatSuperGroup(chat) ? chatId : undefined, messageIds, actions);\n    return;\n  }\n\n  void callApi('deleteMessages', { chat, messageIds: messageIdsToDelete, shouldDeleteForAll });\n\n  const editingId = selectEditingId(global, chatId, threadId);\n  if (editingId && messageIds.includes(editingId)) {\n    actions.setEditingId({ messageId: undefined, tabId });\n  }\n});\n\naddActionHandler('resetLocalPaidMessages', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  const notifications = selectTabState(global, tabId).notifications;\n  if (!notifications || !notifications.length) return global;\n\n  notifications.forEach((notification) => {\n    if (notification.type === 'paidMessage') {\n      const action = notification.dismissAction;\n      if (action && !Array.isArray(action)) {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n      actions.dismissNotification({ localId: notification.localId, tabId });\n    }\n  });\n  return global;\n});\n\naddActionHandler('deleteParticipantHistory', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, peerId,\n  } = payload;\n  const chat = selectChat(global, chatId)!;\n  const peer = selectPeer(global, peerId)!;\n\n  void callApi('deleteParticipantHistory', { chat, peer });\n});\n\naddActionHandler('deleteScheduledMessages', (global, actions, payload): ActionReturnType => {\n  const { messageIds, tabId = getCurrentTabId() } = payload;\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n\n  const { chatId } = currentMessageList;\n  const chat = selectChat(global, chatId)!;\n\n  void callApi('deleteScheduledMessages', { chat, messageIds });\n\n  const editingId = selectEditingScheduledId(global, chatId);\n  if (editingId && messageIds.includes(editingId)) {\n    actions.setEditingId({ messageId: undefined, tabId });\n  }\n});\n\naddActionHandler('deleteHistory', async (global, actions, payload): Promise<void> => {\n  const { chatId, shouldDeleteForAll, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  await callApi('deleteHistory', { chat, shouldDeleteForAll });\n\n  global = getGlobal();\n  const activeChat = selectCurrentMessageList(global, tabId);\n  if (activeChat && activeChat.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  // Delete chat from folders\n  const folders = global.chatFolders.byId;\n  Object.values(folders).forEach((folder) => {\n    if (folder.includedChatIds.includes(chatId) || folder.pinnedChatIds?.includes(chatId)) {\n      const newIncludedChatIds = folder.includedChatIds.filter((id) => id !== chatId);\n      const newPinnedChatIds = folder.pinnedChatIds?.filter((id) => id !== chatId);\n\n      const updatedFolder = {\n        ...folder,\n        includedChatIds: newIncludedChatIds,\n        pinnedChatIds: newPinnedChatIds,\n      };\n\n      callApi('editChatFolder', {\n        id: folder.id,\n        folderUpdate: updatedFolder,\n      });\n    }\n  });\n});\n\naddActionHandler('deleteSavedHistory', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  await callApi('deleteSavedHistory', { chat });\n\n  global = getGlobal();\n  const activeChat = selectCurrentMessageList(global, tabId);\n  if (activeChat && activeChat.threadId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n});\n\naddActionHandler('reportMessages', async (global, actions, payload): Promise<void> => {\n  const {\n    messageIds, description = '', option = '', chatId, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId)!;\n\n  const response = await callApi('reportMessages', {\n    peer: chat, messageIds, description, option,\n  });\n\n  if (!response) return;\n\n  const { result, error } = response;\n\n  if (error === MESSAGE_ID_REQUIRED_ERROR) {\n    actions.showNotification({\n      message: oldTranslate('lng_report_please_select_messages'),\n      tabId,\n    });\n    actions.closeReportModal({ tabId });\n    return;\n  }\n\n  if (!result) return;\n\n  if (result.type === 'reported') {\n    actions.showNotification({\n      message: result\n        ? oldTranslate('ReportPeer.AlertSuccess')\n        : 'An error occurred while submitting your report. Please, try again later.',\n      tabId,\n    });\n    actions.closeReportModal({ tabId });\n    return;\n  }\n\n  if (result.type === 'selectOption') {\n    global = getGlobal();\n    const oldSections = selectTabState(global, tabId).reportModal?.sections;\n    const selectedOption = oldSections?.[oldSections.length - 1]?.options?.find((o) => o.option === option);\n    const newSection = {\n      title: result.title,\n      options: result.options,\n      subtitle: selectedOption?.text,\n    };\n    global = updateTabState(global, {\n      reportModal: {\n        chatId,\n        messageIds,\n        description,\n        subject: 'message',\n        sections: oldSections ? [...oldSections, newSection] : [newSection],\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  if (result.type === 'comment') {\n    global = getGlobal();\n    const oldSections = selectTabState(global, tabId).reportModal?.sections;\n    const selectedOption = oldSections?.[oldSections.length - 1]?.options?.find((o) => o.option === option);\n    const newSection = {\n      isOptional: result.isOptional,\n      option: result.option,\n      title: selectedOption?.text,\n    };\n    global = updateTabState(global, {\n      reportModal: {\n        chatId,\n        messageIds,\n        description,\n        subject: 'message',\n        sections: oldSections ? [...oldSections, newSection] : [newSection],\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('sendMessageAction', async (global, actions, payload): Promise<void> => {\n  const { action, chatId, threadId } = payload;\n  if (global.connectionState !== 'connectionStateReady') return;\n  if (selectIsChatWithSelf(global, chatId)) return;\n\n  const chat = selectChat(global, chatId)!;\n  if (!chat || chat.isMonoforum) return;\n  const user = selectUser(global, chatId);\n  if (user && (isUserBot(user) || isDeletedUser(user))) return;\n\n  await callApi('sendMessageAction', {\n    peer: chat, threadId, action,\n  });\n});\n\naddActionHandler('reportChannelSpam', (global, actions, payload): ActionReturnType => {\n  const { participantId, chatId, messageIds } = payload;\n  const peer = selectPeer(global, participantId);\n  const chat = selectChat(global, chatId);\n  if (!peer || !chat) {\n    return;\n  }\n\n  void callApi('reportChannelSpam', { peer, chat, messageIds });\n});\n\naddActionHandler('markMessageListRead', (global, actions, payload): ActionReturnType => {\n  if (selectIsCurrentUserFrozen(global)) return undefined;\n  const { maxId, tabId = getCurrentTabId() } = payload;\n\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return undefined;\n  }\n\n  const { chatId, threadId } = currentMessageList;\n  const chat = selectChat(global, chatId);\n  if (!chat || getIsSavedDialog(chatId, threadId, global.currentUserId)) {\n    return undefined;\n  }\n\n  runDebouncedForMarkRead(() => {\n    void callApi('markMessageListRead', {\n      chat, threadId, maxId,\n    });\n  });\n\n  if (chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n    global = {\n      ...global,\n      serviceNotifications: global.serviceNotifications.map((notification) => {\n        return notification.isUnread && notification.id <= maxId ? { ...notification, isUnread: false } : notification;\n      }),\n    };\n  }\n\n  const viewportIds = selectViewportIds(global, chatId, threadId, tabId);\n  const minId = selectFirstUnreadId(global, chatId, threadId);\n\n  if (threadId !== MAIN_THREAD_ID && !chat.isForum) {\n    global = updateThreadInfo(global, chatId, threadId, {\n      lastReadInboxMessageId: maxId,\n    });\n    return global;\n  }\n\n  if (!viewportIds || !minId || !chat.unreadCount) {\n    return global;\n  }\n\n  const readCount = countSortedIds(viewportIds, minId, maxId);\n  if (!readCount) {\n    return global;\n  }\n\n  const topic = selectTopic(global, chatId, threadId);\n  if (chat.isForum && topic) {\n    global = updateThreadInfo(global, chatId, threadId, {\n      lastReadInboxMessageId: maxId,\n    });\n    const newTopicUnreadCount = Math.max(0, topic.unreadCount - readCount);\n    if (newTopicUnreadCount === 0) {\n      global = updateChat(global, chatId, {\n        unreadCount: Math.max(0, chat.unreadCount - 1),\n      });\n    }\n    return updateTopic(global, chatId, Number(threadId), {\n      unreadCount: newTopicUnreadCount,\n    });\n  }\n\n  return updateChat(global, chatId, {\n    lastReadInboxMessageId: maxId,\n    unreadCount: Math.max(0, chat.unreadCount - readCount),\n  });\n});\n\naddActionHandler('markMessagesRead', (global, actions, payload): ActionReturnType => {\n  const { messageIds, tabId = getCurrentTabId(), shouldFetchUnreadReactions } = payload;\n\n  const chat = selectCurrentChat(global, tabId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('markMessagesRead', { chat, messageIds })\n    .then(() => {\n      if (shouldFetchUnreadReactions) {\n        actions.fetchUnreadReactions({ chatId: chat.id });\n      }\n    });\n});\n\naddActionHandler('loadWebPagePreview', async (global, actions, payload): Promise<void> => {\n  const { text, tabId = getCurrentTabId() } = payload;\n\n  const webPagePreview = await callApi('fetchWebPagePreview', { text });\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    webPagePreview,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('clearWebPagePreview', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  if (!selectTabState(global, tabId).webPagePreview) {\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    webPagePreview: undefined,\n  }, tabId);\n});\n\naddActionHandler('sendPollVote', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, options } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (chat) {\n    void callApi('sendPollVote', { chat, messageId, options });\n  }\n});\n\naddActionHandler('toggleTodoCompleted', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, completedIds, incompletedIds } = payload;\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n  const currentUserId = global.currentUserId;\n\n  const currentTodo = message?.content.todo;\n  if (!currentTodo || !currentUserId || !chat) {\n    return;\n  }\n\n  const currentCompletions = currentTodo.completions || [];\n  const currentCompletionIds = currentCompletions.map((c) => c.itemId);\n\n  const newCompletions = [...currentCompletions];\n  const now = getServerTime();\n\n  completedIds.forEach((itemId) => {\n    if (!currentCompletionIds.includes(itemId)) {\n      newCompletions.push({\n        itemId,\n        completedBy: currentUserId,\n        completedAt: now,\n      });\n    }\n  });\n\n  const finalCompletions = newCompletions.filter((c) => !incompletedIds.includes(c.itemId));\n\n  const newContent = {\n    ...message.content,\n    todo: {\n      ...currentTodo,\n      completions: finalCompletions,\n    },\n  };\n\n  const messageUpdate: Partial<ApiMessage> = {\n    ...message,\n    content: newContent,\n  };\n\n  global = updateWithLocalMedia(global, chatId, message.id, messageUpdate);\n  setGlobal(global);\n\n  callApi('toggleTodoCompleted', { chat, messageId: message.id, completedIds, incompletedIds });\n});\naddActionHandler('appendTodoList', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, items, messageId,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!chat || !message) {\n    return;\n  }\n\n  callApi('appendTodoList', {\n    chat,\n    message,\n    items,\n  });\n});\n\naddActionHandler('cancelPollVote', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (chat) {\n    void callApi('sendPollVote', { chat, messageId, options: [] });\n  }\n});\n\naddActionHandler('closePoll', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId } = payload;\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n  const poll = message && selectPollFromMessage(global, message);\n  if (chat && poll) {\n    void callApi('closePoll', { chat, messageId, poll });\n  }\n});\n\naddActionHandler('loadPollOptionResults', async (global, actions, payload): Promise<void> => {\n  const {\n    chat, messageId, option, offset, limit, shouldResetVoters, tabId = getCurrentTabId(),\n  } = payload;\n\n  const result = await callApi('loadPollOptionResults', {\n    chat, messageId, option, offset, limit,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  const tabState = selectTabState(global, tabId);\n  const { pollResults } = tabState;\n  const { voters } = tabState.pollResults;\n\n  global = updateTabState(global, {\n    pollResults: {\n      ...pollResults,\n      voters: {\n        ...voters,\n        [option]: unique([\n          ...(!shouldResetVoters && voters?.[option] ? voters[option] : []),\n          ...result.votes.map((vote) => vote.peerId),\n        ]),\n      },\n      offsets: {\n        ...(pollResults.offsets ? pollResults.offsets : {}),\n        [option]: result.nextOffset || '',\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadExtendedMedia', (global, actions, payload): ActionReturnType => {\n  const { chatId, ids } = payload;\n  const chat = selectChat(global, chatId);\n  if (chat) {\n    void callApi('fetchExtendedMedia', { chat, ids });\n  }\n});\n\naddActionHandler('loadScheduledHistory', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchScheduledHistory', { chat });\n  if (!result) {\n    return;\n  }\n\n  const { messages } = result;\n\n  const byId = buildCollectionByKey(messages, 'id');\n  const ids = Object.keys(byId).map(Number).sort((a, b) => b - a);\n\n  global = getGlobal();\n  global = updateScheduledMessages(global, chat.id, byId);\n  global = replaceThreadParam(global, chat.id, MAIN_THREAD_ID, 'scheduledIds', ids);\n  if (!ids.length) {\n    global = updatePeerFullInfo(global, chat.id, { hasScheduledMessages: false });\n  }\n\n  if (chat?.isForum) {\n    const scheduledPerThread: Record<ThreadId, number[]> = {};\n    messages.forEach((message) => {\n      const threadId = selectThreadIdFromMessage(global, message);\n      const scheduledInThread = scheduledPerThread[threadId] || [];\n      scheduledInThread.push(message.id);\n      scheduledPerThread[threadId] = scheduledInThread;\n    });\n\n    Object.entries(scheduledPerThread).forEach(([threadId, scheduledIds]) => {\n      global = replaceThreadParam(global, chat.id, Number(threadId), 'scheduledIds', scheduledIds);\n    });\n  }\n  setGlobal(global);\n});\n\naddActionHandler('sendScheduledMessages', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, id,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('sendScheduledMessages', {\n    chat,\n    ids: [id],\n  });\n});\n\naddActionHandler('rescheduleMessage', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, scheduledAt,\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const message = chat && selectScheduledMessage(global, chat.id, messageId);\n  if (!chat || !message) {\n    return;\n  }\n\n  void callApi('rescheduleMessage', {\n    chat,\n    message,\n    scheduledAt,\n  });\n});\n\naddActionHandler('transcribeAudio', async (global, actions, payload): Promise<void> => {\n  const { messageId, chatId } = payload;\n\n  const chat = selectChat(global, chatId);\n\n  if (!chat) return;\n\n  global = updateChatMessage(global, chatId, messageId, {\n    transcriptionId: '',\n  });\n\n  setGlobal(global);\n\n  const result = await callApi('transcribeAudio', { chat, messageId });\n\n  global = getGlobal();\n  global = updateChatMessage(global, chatId, messageId, {\n    transcriptionId: result,\n    isTranscriptionError: !result,\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('loadCustomEmojis', async (global, actions, payload): Promise<void> => {\n  const { ids, ignoreCache } = payload;\n  const newCustomEmojiIds = ignoreCache ? ids\n    : unique(ids.filter((documentId) => !global.customEmojis.byId[documentId]));\n  const customEmoji = await callApi('fetchCustomEmoji', {\n    documentId: newCustomEmojiIds,\n  });\n  if (!customEmoji) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    customEmojis: {\n      ...global.customEmojis,\n      byId: {\n        ...global.customEmojis.byId,\n        ...buildCollectionByKey(customEmoji, 'id'),\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('forwardMessages', (global, actions, payload): ActionReturnType => {\n  const {\n    isSilent, scheduledAt, tabId = getCurrentTabId(),\n  } = payload;\n  const { toChatId } = selectTabState(global, tabId).forwardMessages;\n  const toChat = toChatId ? selectChat(global, toChatId) : undefined;\n  if (!toChat) return;\n  executeForwardMessages(global, { chat: toChat, isSilent, scheduledAt }, tabId);\n});\n\nasync function executeForwardMessages(global: GlobalState, sendParams: SendMessageParams, tabId: number) {\n  const {\n    fromChatId, messageIds, toChatId, withMyScore, noAuthors, noCaptions, toThreadId = MAIN_THREAD_ID,\n  } = selectTabState(global, tabId).forwardMessages;\n  const { messagePriceInStars, isSilent, scheduledAt } = sendParams;\n\n  const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n  const isToMainThread = toThreadId === MAIN_THREAD_ID;\n\n  const fromChat = fromChatId ? selectChat(global, fromChatId) : undefined;\n  const toChat = toChatId ? selectChat(global, toChatId) : undefined;\n\n  const messages = fromChatId && messageIds\n    ? messageIds\n      .sort((a, b) => a - b)\n      .map((id) => selectChatMessage(global, fromChatId, id)).filter(Boolean)\n    : undefined;\n\n  if (!fromChat || !toChat || !messages || (toThreadId && !isToMainThread && !toChat.isForum)) {\n    return undefined;\n  }\n\n  const sendAs = selectSendAs(global, toChatId!);\n  const draft = selectDraft(global, toChatId!, toThreadId || MAIN_THREAD_ID);\n  const lastMessageId = selectChatLastMessageId(global, toChat.id);\n  const localMessages: SendMessageParams[] = [];\n\n  const [realMessages, serviceMessages] = partition(messages, (m) => !isServiceNotificationMessage(m));\n  const forwardableRealMessages = realMessages.filter((message) => selectCanForwardMessage(global, message));\n  if (forwardableRealMessages.length) {\n    const messageSlices = global.config?.maxForwardedCount\n      ? splitMessagesForForwarding(forwardableRealMessages, global.config.maxForwardedCount)\n      : [forwardableRealMessages];\n    for (const slice of messageSlices) {\n      const forwardParams: ForwardMessagesParams = {\n        fromChat,\n        toChat,\n        toThreadId,\n        messages: slice,\n        isSilent,\n        scheduledAt,\n        sendAs,\n        withMyScore,\n        noAuthors,\n        noCaptions,\n        isCurrentUserPremium,\n        wasDrafted: Boolean(draft),\n        lastMessageId,\n        messagePriceInStars,\n      };\n\n      if (!messagePriceInStars) {\n        callApi('forwardMessages', forwardParams);\n      } else {\n        const forwardedLocalMessagesSlice = await callApi('forwardMessagesLocal', forwardParams);\n        localMessages.push({\n          ...sendParams,\n          forwardParams: { ...forwardParams, forwardedLocalMessagesSlice },\n          forwardedLocalMessagesSlice,\n        });\n      }\n    }\n  }\n\n  for (const message of serviceMessages) {\n    const { text, entities } = message.content.text || {};\n    const { sticker } = message.content;\n\n    const replyInfo = selectMessageReplyInfo(global, toChat.id, toThreadId);\n\n    const params: SendMessageParams = {\n      chat: toChat,\n      replyInfo,\n      text,\n      entities,\n      sticker,\n      isSilent,\n      scheduledAt,\n      sendAs,\n      lastMessageId,\n    };\n\n    await sendMessageOrReduceLocal(global, params, localMessages);\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    forwardMessages: {},\n    isShareMessageModalShown: false,\n  }, tabId);\n  setGlobal(global);\n  return localMessages;\n}\n\nasync function loadViewportMessages<T extends GlobalState>(\n  global: T,\n  chat: ApiChat,\n  threadId: ThreadId,\n  offsetId: number | undefined,\n  direction: LoadMoreDirection,\n  isOutlying = false,\n  isBudgetPreload = false,\n  onLoaded?: NoneToVoidFunction,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chatId = chat.id;\n\n  let addOffset: number | undefined;\n  let sliceSize = MESSAGE_LIST_SLICE;\n  switch (direction) {\n    case LoadMoreDirection.Backwards:\n      if (offsetId) {\n        addOffset = -1;\n        sliceSize += 1;\n      } else {\n        addOffset = undefined;\n      }\n      break;\n    case LoadMoreDirection.Around:\n      addOffset = -(Math.round(MESSAGE_LIST_SLICE / 2) + 1);\n      break;\n    case LoadMoreDirection.Forwards:\n      addOffset = -(MESSAGE_LIST_SLICE + 1);\n      if (offsetId) {\n        sliceSize += 1;\n      }\n      break;\n  }\n\n  global = getGlobal();\n\n  const currentUserId = global.currentUserId!;\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n  const realChatId = isSavedDialog ? String(threadId) : chatId;\n\n  const result = await callApi('fetchMessages', {\n    chat: selectChat(global, realChatId)!,\n    offsetId,\n    addOffset,\n    limit: sliceSize,\n    threadId,\n    isSavedDialog,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const {\n    messages, count,\n  } = result;\n\n  global = getGlobal();\n\n  const localMessages = chatId === SERVICE_NOTIFICATIONS_USER_ID\n    ? global.serviceNotifications.filter(({ isDeleted }) => !isDeleted).map(({ message }) => message)\n    : [];\n  const allMessages = ([] as ApiMessage[]).concat(messages, localMessages);\n  const byId = buildCollectionByKey(allMessages, 'id');\n  const ids = Object.keys(byId).map(Number);\n\n  if (threadId !== MAIN_THREAD_ID && !getIsSavedDialog(chatId, threadId, global.currentUserId)) {\n    const threadFirstMessageId = selectFirstMessageId(global, chatId, threadId);\n    if ((!ids[0] || threadFirstMessageId === ids[0]) && threadFirstMessageId !== threadId) {\n      ids.unshift(Number(threadId));\n    }\n  }\n\n  global = addChatMessagesById(global, chatId, byId);\n  global = isOutlying\n    ? updateOutlyingLists(global, chatId, threadId, ids)\n    : updateListedIds(global, chatId, threadId, ids);\n\n  let listedIds = selectListedIds(global, chatId, threadId);\n  const outlyingList = offsetId ? selectOutlyingListByMessageId(global, chatId, threadId, offsetId) : undefined;\n\n  if (isOutlying && listedIds && outlyingList) {\n    if (!outlyingList.length || areSortedArraysIntersecting(listedIds, outlyingList)) {\n      global = updateListedIds(global, chatId, threadId, outlyingList);\n      listedIds = selectListedIds(global, chatId, threadId);\n      global = removeOutlyingList(global, chatId, threadId, outlyingList);\n      isOutlying = false;\n    }\n  }\n\n  if (!isBudgetPreload) {\n    const historyIds = isOutlying && outlyingList ? outlyingList : listedIds;\n    if (historyIds) {\n      const { newViewportIds } = getViewportSlice(historyIds, offsetId, direction);\n      global = safeReplaceViewportIds(global, chatId, threadId, newViewportIds, tabId);\n    }\n  }\n\n  if (count) {\n    global = updateThreadInfo(global, chat.id, threadId, {\n      messagesCount: count,\n    });\n  }\n\n  setGlobal(global);\n  onLoaded?.();\n}\n\nasync function loadMessage<T extends GlobalState>(\n  global: T, chat: ApiChat, messageId: number, replyOriginForId?: number,\n) {\n  const result = await callApi('fetchMessage', { chat, messageId });\n  if (!result) {\n    return undefined;\n  }\n\n  if (result === MESSAGE_DELETED) {\n    if (replyOriginForId) {\n      global = getGlobal();\n      const replyMessage = selectChatMessage(global, chat.id, replyOriginForId);\n      global = updateChatMessage(global, chat.id, replyOriginForId, {\n        ...replyMessage,\n        replyInfo: undefined,\n      });\n      setGlobal(global);\n    }\n\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChatMessage(global, chat.id, messageId, result.message);\n  setGlobal(global);\n\n  return result.message;\n}\n\nfunction findClosestIndex(sourceIds: number[], offsetId: number) {\n  if (offsetId < sourceIds[0]) {\n    return 0;\n  }\n\n  if (offsetId > sourceIds[sourceIds.length - 1]) {\n    return sourceIds.length - 1;\n  }\n\n  return sourceIds.findIndex((id, i) => (\n    id === offsetId\n    || (id < offsetId && sourceIds[i + 1] > offsetId)\n  ));\n}\n\nfunction getViewportSlice(\n  sourceIds: number[],\n  offsetId: number | undefined,\n  direction: LoadMoreDirection,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? findClosestIndex(sourceIds, offsetId) : -1;\n  const isBackwards = direction === LoadMoreDirection.Backwards;\n  const isAround = direction === LoadMoreDirection.Around;\n  const indexForDirection = isBackwards ? index : (index + 1) || length;\n  const sliceSize = isAround ? Math.round(MESSAGE_LIST_SLICE / 2) : MESSAGE_LIST_SLICE;\n  const from = indexForDirection - sliceSize;\n  const to = indexForDirection + sliceSize - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection >= 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n    case LoadMoreDirection.Around:\n    default:\n      areSomeLocal = newViewportIds.length > 0;\n      areAllLocal = newViewportIds.length === MESSAGE_LIST_SLICE;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n\nexport async function getPeerStarsForMessage<T extends GlobalState>(\n  global: T,\n  peerId: string,\n): Promise<number | undefined> {\n  const peer = selectPeer(global, peerId);\n  if (!peer) return undefined;\n\n  if (isApiPeerChat(peer)) {\n    if (selectIsMonoforumAdmin(global, peerId)) {\n      return undefined;\n    }\n    return peer.paidMessagesStars;\n  }\n\n  if (!peer?.paidMessagesStars) return undefined;\n\n  const fullInfo = selectUserFullInfo(global, peer.id);\n  if (fullInfo) {\n    return fullInfo.paidMessagesStars;\n  }\n\n  const result = await callApi('fetchPaidMessagesStarsAmount', peer);\n  return result;\n}\n\nasync function sendMessageOrReduceLocal<T extends GlobalState>(\n  global: T,\n  sendParams: SendMessageParams,\n  localMessages: SendMessageParams[],\n) {\n  if (!sendParams.messagePriceInStars) {\n    sendMessage(global, sendParams);\n  } else {\n    const message = await callApi('sendMessageLocal', sendParams);\n    if (message) {\n      localMessages.push({\n        ...sendParams,\n        localMessage: message,\n      });\n    }\n  }\n}\n\nasync function sendMessage<T extends GlobalState>(global: T, params: SendMessageParams) {\n  // @optimization\n  if (params.replyInfo || IS_IOS) {\n    await rafPromise();\n  }\n\n  let currentMessageKey: MessageKey | undefined;\n  const progressCallback = params.attachment ? (progress: number, messageKey: MessageKey) => {\n    if (!uploadProgressCallbacks.has(messageKey)) {\n      currentMessageKey = messageKey;\n      uploadProgressCallbacks.set(messageKey, progressCallback!);\n    }\n\n    global = getGlobal();\n    global = updateUploadByMessageKey(global, messageKey, progress);\n    setGlobal(global);\n  } : undefined;\n  await callApi('sendMessage', params, progressCallback);\n  if (progressCallback && currentMessageKey) {\n    global = getGlobal();\n    global = updateUploadByMessageKey(global, currentMessageKey, undefined);\n    setGlobal(global);\n\n    uploadProgressCallbacks.delete(currentMessageKey);\n  }\n}\n\nasync function sendMessagesWithNotification<T extends GlobalState>(\n  global: T,\n  sendParams: SendMessageParams[],\n) {\n  const chat = sendParams[0]?.chat;\n  if (!chat || !sendParams.length) return;\n  const starsForOneMessage = await getPeerStarsForMessage(global, chat.id);\n  if (!starsForOneMessage) {\n    getActions().sendMessages({ sendParams });\n    return;\n  }\n  const messageIdsForUndo = sendParams.reduce((ids, params) => {\n    if (params.localMessage?.id) {\n      ids.push(params.localMessage.id);\n    } else if (params.forwardedLocalMessagesSlice?.localMessages) {\n      const forwardedIds = Object.values(params.forwardedLocalMessagesSlice.localMessages)\n        .map((forwardedMessage) => forwardedMessage.id)\n        .filter(Boolean);\n      ids.push(...forwardedIds);\n    }\n    return ids;\n  }, [] as number[]);\n\n  const localForwards = sendParams[0]?.forwardedLocalMessagesSlice?.localMessages;\n  const firstMessage = sendParams[0]?.localMessage\n    || (localForwards && Object.values(localForwards)[0]);\n  if (!firstMessage) return;\n\n  const messagesCount = messageIdsForUndo.length;\n\n  const firstSendParam = sendParams[0];\n  let storySendMessage: RegularLangFnParameters | undefined;\n  if (sendParams.length === 1 && firstSendParam.isStoryReply) {\n    const { gif, sticker, isReaction } = firstSendParam;\n\n    if (gif) {\n      storySendMessage = { key: 'MessageSentPaidToastTitle', variables: { count: 1 }, options: { pluralValue: 1 } };\n    } else if (sticker) {\n      storySendMessage = { key: 'StoryTooltipStickerSent' };\n    } else if (isReaction) {\n      storySendMessage = { key: 'StoryTooltipReactionSent' };\n    }\n  }\n\n  const titleKey: RegularLangFnParameters = storySendMessage || {\n    key: 'MessageSentPaidToastTitle',\n    variables: { count: messagesCount },\n    options: { pluralValue: messagesCount },\n  };\n\n  getActions().sendMessages({ sendParams });\n\n  getActions().showNotification({\n    localId: getMessageKey(firstMessage),\n    title: titleKey,\n    message: {\n      key: 'MessageSentPaidToastText',\n      variables: { amount: formatStarsAsText(getTranslationFn(), starsForOneMessage * messagesCount) },\n    },\n    icon: 'star',\n    shouldUseCustomIcon: true,\n    type: 'paidMessage',\n  });\n}\n\naddActionHandler('sendMessages', async (global, actions, payload): Promise<void> => {\n  const { sendParams } = payload;\n  await Promise.all(sendParams.map(async (params) => {\n    if (params.forwardedLocalMessagesSlice && params.forwardParams) {\n      await rafPromise();\n      await callApi('forwardApiMessages', params.forwardParams);\n    } else {\n      await sendMessage(global, params);\n    }\n  }));\n  if (sendParams.length > 0 && sendParams[0].messagePriceInStars) actions.loadStarStatus();\n});\n\naddActionHandler('loadPinnedMessages', async (global, actions, payload): Promise<void> => {\n  const { chatId, threadId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat || getIsSavedDialog(chatId, threadId, global.currentUserId)) {\n    return;\n  }\n\n  const result = await callApi('fetchPinnedMessages', { chat, threadId });\n  if (!result) {\n    return;\n  }\n\n  const { messages } = result;\n\n  const byId = buildCollectionByKey(messages, 'id');\n  const ids = Object.keys(byId).map(Number).sort((a, b) => b - a);\n\n  global = getGlobal();\n  global = addChatMessagesById(global, chat.id, byId);\n  global = safeReplacePinnedIds(global, chat.id, threadId, ids);\n  setGlobal(global);\n});\n\naddActionHandler('loadSeenBy', async (global, actions, payload): Promise<void> => {\n  const { chatId, messageId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchSeenBy', { chat, messageId });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChatMessage(global, chatId, messageId, {\n    seenByDates: result,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('saveDefaultSendAs', (global, actions, payload): ActionReturnType => {\n  const { chatId, sendAsId } = payload;\n  const chat = selectChat(global, chatId);\n  const sendAsChat = selectChat(global, sendAsId) || selectUser(global, sendAsId);\n  if (!chat || !sendAsChat) {\n    return undefined;\n  }\n\n  void callApi('saveDefaultSendAs', { sendAs: sendAsChat, chat });\n\n  return updateChatFullInfo(global, chatId, { sendAsId });\n});\n\naddActionHandler('loadSendAs', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchSendAs', { chat });\n  if (!result) {\n    global = getGlobal();\n    global = updateChat(global, chatId, {\n      sendAsPeerIds: [],\n    });\n    setGlobal(global);\n\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chatId, { sendAsPeerIds: result });\n  setGlobal(global);\n});\n\naddActionHandler('loadSendPaidReactionsAs', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchSendAs', { chat, isForPaidReactions: true });\n  if (!result) {\n    global = getGlobal();\n    global = updateChat(global, chatId, {\n      sendPaidReactionsAsPeerIds: [],\n    });\n    setGlobal(global);\n\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chatId, { sendPaidReactionsAsPeerIds: result });\n  setGlobal(global);\n});\n\naddActionHandler('loadSponsoredMessages', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { peerId } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  if (isApiPeerUser(peer) && selectIsChatBotNotStarted(global, peer.id)) {\n    return;\n  }\n\n  const result = await callApi('fetchSponsoredMessages', { peer });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateSponsoredMessage(global, peerId, result.messages[0]);\n  setGlobal(global);\n});\n\naddActionHandler('viewSponsored', (global, actions, payload): ActionReturnType => {\n  const { randomId } = payload;\n\n  void callApi('viewSponsoredMessage', { random: randomId });\n});\n\naddActionHandler('clickSponsored', (global, actions, payload): ActionReturnType => {\n  const { randomId, isMedia, isFullscreen } = payload;\n\n  void callApi('clickSponsoredMessage', {\n    random: randomId, isMedia, isFullscreen,\n  });\n});\n\naddActionHandler('reportSponsored', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId, randomId, option = '', tabId = getCurrentTabId(),\n  } = payload;\n\n  const result = await callApi('reportSponsoredMessage', { randomId, option });\n\n  if (!result) return;\n\n  if (result.type === 'premiumRequired') {\n    actions.openPremiumModal({ initialSection: 'no_ads', tabId });\n    actions.closeReportAdModal({ tabId });\n    return;\n  }\n\n  if (result.type === 'reported' || result.type === 'hidden') {\n    actions.showNotification({\n      message: oldTranslate(result.type === 'reported' ? 'AdReported' : 'AdHidden'),\n      tabId,\n    });\n    actions.closeReportAdModal({ tabId });\n\n    global = getGlobal();\n    if (peerId) {\n      global = deleteSponsoredMessage(global, peerId);\n    } else {\n      global = updateGlobalSearch(global, {\n        sponsoredPeer: undefined,\n      }, tabId);\n    }\n    setGlobal(global);\n    return;\n  }\n\n  if (result.type === 'selectOption') {\n    global = getGlobal();\n    const oldSections = selectTabState(global, tabId).reportAdModal?.sections;\n    const selectedOption = oldSections?.[oldSections.length - 1]?.options.find((o) => o.option === option);\n    const newSection = {\n      title: result.title,\n      options: result.options,\n      subtitle: selectedOption?.text,\n    };\n    global = updateTabState(global, {\n      reportAdModal: {\n        chatId: peerId,\n        randomId,\n        sections: oldSections ? [...oldSections, newSection] : [newSection],\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('hideSponsored', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n  if (!isCurrentUserPremium) {\n    actions.openPremiumModal({ initialSection: 'no_ads', tabId });\n    return;\n  }\n\n  const result = await callApi('toggleSponsoredMessages', { enabled: false });\n  if (!result) return;\n  global = getGlobal();\n  global = updateUserFullInfo(global, global.currentUserId!, {\n    areAdsEnabled: false,\n  });\n  setGlobal(global);\n  actions.showNotification({\n    message: oldTranslate('AdHidden'),\n    tabId,\n  });\n});\n\naddActionHandler('fetchUnreadMentions', async (global, actions, payload): Promise<void> => {\n  const { chatId, offsetId } = payload;\n  await fetchUnreadMentions(global, chatId, offsetId);\n});\n\naddActionHandler('approveSuggestedPost', async (global, actions, payload): Promise<void> => {\n  const { chatId, messageId, scheduleDate, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const message = selectChatMessage(global, chatId, messageId);\n\n  const isAdmin = selectIsMonoforumAdmin(global, chatId);\n\n  if (!isAdmin && message?.suggestedPostInfo?.price?.amount) {\n    const neededAmount = message.suggestedPostInfo.price.amount;\n    const isCurrencyStars = message.suggestedPostInfo.price.currency === STARS_CURRENCY_CODE;\n\n    if (isCurrencyStars) {\n      const currentBalance = global.stars?.balance?.amount || 0;\n      if (neededAmount > currentBalance) {\n        actions.openStarsBalanceModal({\n          topup: {\n            balanceNeeded: neededAmount,\n          },\n          tabId,\n        });\n        return;\n      }\n    } else {\n      const currentTonBalance = global.ton?.balance?.amount || 0;\n      if (neededAmount > currentTonBalance) {\n        actions.openStarsBalanceModal({\n          currency: TON_CURRENCY_CODE,\n          tabId,\n        });\n        return;\n      }\n    }\n  }\n\n  const result = await callApi('toggleSuggestedPostApproval', {\n    chat,\n    messageId,\n    reject: false,\n    scheduleDate,\n  });\n\n  if (!result) return;\n\n  actions.showNotification({\n    message: { key: 'SuggestedPostApproved' },\n    tabId,\n  });\n});\n\naddActionHandler('rejectSuggestedPost', async (global, actions, payload): Promise<void> => {\n  const { chatId, messageId, rejectComment, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('toggleSuggestedPostApproval', {\n    chat,\n    messageId,\n    reject: true,\n    rejectComment,\n  });\n\n  if (!result) return;\n\n  actions.showNotification({\n    message: { key: 'SuggestedPostRejectedNotification' },\n    tabId,\n  });\n});\n\nasync function fetchUnreadMentions<T extends GlobalState>(global: T, chatId: string, offsetId?: number) {\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchUnreadMentions', { chat, offsetId });\n\n  if (!result) return;\n\n  const { messages } = result;\n\n  const byId = buildCollectionByKey(messages, 'id');\n  const ids = Object.keys(byId).map(Number);\n\n  global = getGlobal();\n  global = addChatMessagesById(global, chat.id, byId);\n  global = addUnreadMentions(global, chatId, chat, ids);\n\n  setGlobal(global);\n}\n\naddActionHandler('markMentionsRead', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageIds, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  global = removeUnreadMentions(global, chatId, chat, messageIds, true);\n  setGlobal(global);\n\n  actions.markMessagesRead({ messageIds, tabId });\n});\n\naddActionHandler('focusNextMention', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  let chat = selectCurrentChat(global, tabId);\n\n  if (!chat) return;\n\n  if (!chat.unreadMentions) {\n    await fetchUnreadMentions(global, chat.id);\n    global = getGlobal();\n    const previousChatId = chat.id;\n    chat = selectCurrentChat(global, tabId);\n    if (!chat?.unreadMentions || previousChatId !== chat.id) return;\n  }\n\n  actions.focusMessage({ chatId: chat.id, messageId: chat.unreadMentions[0], tabId });\n});\n\naddActionHandler('readAllMentions', (global, actions, payload): ActionReturnType => {\n  const { chatId, threadId = MAIN_THREAD_ID } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return undefined;\n\n  callApi('readAllMentions', { chat, threadId: threadId === MAIN_THREAD_ID ? undefined : threadId });\n\n  if (threadId === MAIN_THREAD_ID) {\n    return updateChat(global, chat.id, {\n      unreadMentionsCount: undefined,\n      unreadMentions: undefined,\n    });\n  }\n\n  // TODO[Forums]: Support mentions in threads\n  return undefined;\n});\n\naddActionHandler('openUrl', (global, actions, payload): ActionReturnType => {\n  const {\n    url, shouldSkipModal, ignoreDeepLinks, tabId = getCurrentTabId(),\n  } = payload;\n  const urlWithProtocol = ensureProtocol(url);\n  const parsedUrl = new URL(urlWithProtocol);\n  const isMixedScript = isMixedScriptUrl(urlWithProtocol);\n\n  if (!ignoreDeepLinks && isDeepLink(urlWithProtocol)) {\n    actions.closeStoryViewer({ tabId });\n    actions.closePaymentModal({ tabId });\n\n    actions.openTelegramLink({ url, tabId });\n    return;\n  }\n\n  const { appConfig, config } = global;\n  if (appConfig) {\n    if (config?.autologinToken && appConfig.autologinDomains.includes(parsedUrl.hostname)) {\n      parsedUrl.searchParams.set(AUTOLOGIN_TOKEN_KEY, config.autologinToken);\n      window.open(parsedUrl.href, '_blank', 'noopener');\n      return;\n    }\n\n    if (appConfig.urlAuthDomains.includes(parsedUrl.hostname)) {\n      actions.closeStoryViewer({ tabId });\n\n      actions.requestLinkUrlAuth({ url, tabId });\n      return;\n    }\n  }\n\n  const shouldDisplayModal = !urlWithProtocol.match(RE_TELEGRAM_LINK) && !shouldSkipModal;\n\n  if (shouldDisplayModal) {\n    actions.toggleSafeLinkModal({ url: isMixedScript ? parsedUrl.toString() : urlWithProtocol, tabId });\n  } else {\n    window.open(parsedUrl, '_blank', 'noopener');\n  }\n});\n\nasync function checkIfVoiceMessagesAllowed<T extends GlobalState>(\n  global: T,\n  user: ApiUser,\n  chatId: string,\n): Promise<boolean> {\n  let fullInfo = selectUserFullInfo(global, chatId);\n  if (!fullInfo) {\n    const { accessHash } = user;\n    const result = await callApi('fetchFullUser', { id: chatId, accessHash });\n    fullInfo = result?.fullInfo;\n  }\n  return Boolean(!fullInfo?.noVoiceMessages);\n}\n\nfunction moveReplyToNewDraft<T extends GlobalState>(\n  global: T,\n  threadId: ThreadId,\n  replyInfo: ApiInputMessageReplyInfo,\n  toChatId: string,\n) {\n  const currentDraft = selectDraft(global, toChatId, threadId);\n\n  if (!replyInfo.replyToMsgId) return;\n\n  const newDraft: ApiDraft = {\n    ...currentDraft,\n    replyInfo,\n  };\n\n  saveDraft({\n    global, chatId: toChatId, threadId, draft: newDraft, isLocalOnly: true, noLocalTimeUpdate: true,\n  });\n}\naddActionHandler('openChatOrTopicWithReplyInDraft', (global, actions, payload): ActionReturnType => {\n  const { chatId: toChatId, topicId, tabId = getCurrentTabId() } = payload;\n\n  global = getGlobal();\n\n  const tabState = selectTabState(global, tabId);\n  const replyingInfo = tabState.replyingMessage;\n\n  global = updateTabState(global, {\n    isShareMessageModalShown: false,\n    replyingMessage: {},\n  }, tabId);\n  setGlobal(global);\n  global = getGlobal();\n\n  const currentChat = selectCurrentChat(global, tabId);\n  const currentThreadId = selectCurrentMessageList(global, tabId)?.threadId;\n\n  if (!currentChat || !currentThreadId) return;\n\n  const threadId = topicId || MAIN_THREAD_ID;\n  const currentChatId = currentChat.id;\n\n  const newReplyInfo = {\n    type: 'message',\n    replyToMsgId: replyingInfo.messageId,\n    replyToTopId: replyingInfo.toThreadId,\n    replyToPeerId: currentChatId,\n    monoforumPeerId: replyingInfo.toThreadId,\n    quoteText: replyingInfo.quoteText,\n    quoteOffset: replyingInfo.quoteOffset,\n  } as ApiInputMessageReplyInfo;\n\n  const currentReplyInfo = replyingInfo.messageId\n    ? newReplyInfo : selectDraft(global, currentChatId, currentThreadId)?.replyInfo;\n  if (!currentReplyInfo) return;\n\n  if (!selectReplyCanBeSentToChat(global, toChatId, currentChatId, currentReplyInfo)) {\n    actions.showNotification({ message: oldTranslate('Chat.SendNotAllowedText'), tabId });\n    return;\n  }\n\n  if (!currentReplyInfo.replyToPeerId && toChatId === currentChat.id) return;\n\n  const getPeerId = () => {\n    if (!currentReplyInfo?.replyToPeerId) return currentChatId;\n    return currentReplyInfo.replyToPeerId === toChatId ? undefined : currentReplyInfo.replyToPeerId;\n  };\n  const replyToPeerId = getPeerId();\n  const newReply: ApiInputMessageReplyInfo = {\n    ...currentReplyInfo,\n    replyToPeerId,\n    type: 'message',\n  };\n\n  moveReplyToNewDraft(global, threadId, newReply, toChatId);\n  actions.openThread({ chatId: toChatId, threadId, tabId });\n  actions.closeMediaViewer({ tabId });\n  actions.exitMessageSelectMode({ tabId });\n  actions.clearDraft({ chatId: currentChatId, threadId: currentThreadId });\n});\n\naddActionHandler('setForwardChatOrTopic', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId, tabId = getCurrentTabId() } = payload;\n  const user = selectUser(global, chatId);\n  const isSelectForwardsContainVoiceMessages = selectForwardsContainVoiceMessages(global, tabId);\n  if (isSelectForwardsContainVoiceMessages && user && !await checkIfVoiceMessagesAllowed(global, user, chatId)) {\n    actions.showDialog({\n      data: {\n        message: oldTranslate('VoiceMessagesRestrictedByPrivacy', getUserFullName(user)),\n      },\n      tabId,\n    });\n    return;\n  }\n  global = getGlobal();\n\n  if (!selectForwardsCanBeSentToChat(global, chatId, tabId)) {\n    actions.showAllowedMessageTypesNotification({ chatId, tabId });\n    return;\n  }\n\n  global = updateTabState(global, {\n    forwardMessages: {\n      ...selectTabState(global, tabId).forwardMessages,\n      toChatId: chatId,\n      toThreadId: topicId,\n    },\n    isShareMessageModalShown: false,\n  }, tabId);\n  setGlobal(global);\n  actions.openThread({ chatId, threadId: topicId || MAIN_THREAD_ID, tabId });\n  actions.closeMediaViewer({ tabId });\n  actions.exitMessageSelectMode({ tabId });\n});\n\naddActionHandler('forwardToSavedMessages', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  global = updateTabState(global, {\n    forwardMessages: {\n      ...selectTabState(global, tabId).forwardMessages,\n      toChatId: global.currentUserId,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  actions.exitMessageSelectMode({ tabId });\n  actions.forwardMessages({ isSilent: true, tabId });\n});\n\naddActionHandler('forwardStory', (global, actions, payload): ActionReturnType => {\n  const { toChatId, tabId = getCurrentTabId() } = payload || {};\n\n  const { fromChatId, storyId } = selectTabState(global, tabId).forwardMessages;\n  const fromChat = fromChatId ? selectChat(global, fromChatId) : undefined;\n  const toChat = toChatId ? selectChat(global, toChatId) : undefined;\n  const story = fromChatId && storyId\n    ? selectPeerStory(global, fromChatId, storyId)\n    : undefined;\n\n  if (!fromChat || !toChat || !story || 'isDeleted' in story) {\n    return;\n  }\n\n  const lastMessageId = selectChatLastMessageId(global, toChatId);\n\n  const { text, entities } = (story as ApiStory).content.text || {};\n  void sendMessage(global, {\n    chat: toChat,\n    text,\n    entities,\n    story,\n    lastMessageId,\n  });\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    forwardMessages: {},\n    isShareMessageModalShown: false,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('requestMessageTranslation', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, id, toLanguageCode = selectTranslationLanguage(global), tabId = getCurrentTabId(),\n  } = payload;\n\n  global = updateRequestedMessageTranslation(global, chatId, id, toLanguageCode, tabId);\n  global = replaceSettings(global, {\n    translationLanguage: toLanguageCode,\n  });\n\n  return global;\n});\n\naddActionHandler('showOriginalMessage', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, id, tabId = getCurrentTabId(),\n  } = payload;\n\n  global = removeRequestedMessageTranslation(global, chatId, id, tabId);\n\n  return global;\n});\n\naddActionHandler('markMessagesTranslationPending', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageIds, toLanguageCode = selectLanguageCode(global),\n  } = payload;\n\n  messageIds.forEach((id) => {\n    global = updateMessageTranslation(global, chatId, id, toLanguageCode, {\n      isPending: true,\n    });\n  });\n\n  return global;\n});\n\naddActionHandler('translateMessages', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageIds, toLanguageCode = selectLanguageCode(global),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return undefined;\n\n  actions.markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  callApi('translateText', {\n    chat,\n    messageIds,\n    toLanguageCode,\n  });\n\n  return global;\n});\n\n// https://github.com/telegramdesktop/tdesktop/blob/11906297d82b6ff57b277da5251d2e6eb3d8b6d0/Telegram/SourceFiles/api/api_views.cpp#L22\nconst SEND_VIEWS_TIMEOUT = 1000;\nlet viewsIncrementTimeout: number | undefined;\nlet idsToIncrementViews: Record<string, Set<number>> = {};\n\nfunction incrementViews() {\n  if (viewsIncrementTimeout) {\n    clearTimeout(viewsIncrementTimeout);\n    viewsIncrementTimeout = undefined;\n  }\n\n  const { loadMessageViews } = getActions();\n  Object.entries(idsToIncrementViews).forEach(([chatId, ids]) => {\n    loadMessageViews({ chatId, ids: Array.from(ids), shouldIncrement: true });\n  });\n\n  idsToIncrementViews = {};\n}\naddActionHandler('scheduleForViewsIncrement', (global, actions, payload): ActionReturnType => {\n  const { ids, chatId } = payload;\n\n  if (!viewsIncrementTimeout) {\n    setTimeout(incrementViews, SEND_VIEWS_TIMEOUT);\n  }\n\n  if (!idsToIncrementViews[chatId]) {\n    idsToIncrementViews[chatId] = new Set();\n  }\n\n  ids.forEach((id) => {\n    idsToIncrementViews[chatId].add(id);\n  });\n});\n\naddActionHandler('loadMessageViews', async (global, actions, payload): Promise<void> => {\n  const { chatId, ids, shouldIncrement } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchMessageViews', {\n    chat,\n    ids,\n    shouldIncrement,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  result.viewsInfo.forEach((update) => {\n    global = updateChatMessage(global, chatId, update.id, {\n      viewsCount: update.views,\n      forwardsCount: update.forwards,\n    }, true);\n\n    if (update.threadInfo) {\n      global = updateThreadInfo(global, chatId, update.id, update.threadInfo);\n    }\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('loadFactChecks', async (global, actions, payload): Promise<void> => {\n  const { chatId, ids } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchFactChecks', {\n    chat,\n    ids,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  result.forEach((factCheck, i) => {\n    global = updateChatMessage(global, chatId, ids[i], {\n      factCheck,\n    });\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('loadPaidReactionPrivacy', (): ActionReturnType => {\n  callApi('fetchPaidReactionPrivacy');\n  return undefined;\n});\n\naddActionHandler('loadOutboxReadDate', async (global, actions, payload): Promise<void> => {\n  const { chatId, messageId } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  try {\n    const result = await callApi('fetchOutboxReadDate', { chat, messageId });\n    if (result?.date) {\n      global = getGlobal();\n      global = updateChatMessage(global, chatId, messageId, { readDate: result.date });\n      setGlobal(global);\n    }\n  } catch (error) {\n    const { message } = error as ApiError;\n\n    if (message === 'USER_PRIVACY_RESTRICTED' || message === 'YOUR_PRIVACY_RESTRICTED') {\n      global = getGlobal();\n\n      const user = selectUser(global, chatId);\n      if (!user) return;\n      const userStatus = selectUserStatus(global, chatId);\n      if (!userStatus) return;\n\n      const updateStatus = message === 'USER_PRIVACY_RESTRICTED'\n        ? { isReadDateRestricted: true }\n        : { isReadDateRestrictedByMe: true };\n\n      global = replaceUserStatuses(global, {\n        [chatId]: { ...userStatus, ...updateStatus },\n      });\n      // Need to reset `readDate` to `undefined` after click on \"Show my Read Time\" button\n      global = updateChatMessage(global, chatId, messageId, { readDate: undefined });\n      setGlobal(global);\n    }\n  }\n});\n\naddActionHandler('loadQuickReplies', async (global): Promise<void> => {\n  const result = await callApi('fetchQuickReplies');\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateQuickReplyMessages(global, buildCollectionByKey(result.messages, 'id'));\n  global = updateQuickReplies(global, result.quickReplies);\n\n  setGlobal(global);\n});\n\naddActionHandler('sendQuickReply', (global, actions, payload): ActionReturnType => {\n  const { chatId, quickReplyId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return global;\n  callApi('sendQuickReply', {\n    chat,\n    shortcutId: quickReplyId,\n  });\n\n  return global;\n});\n\naddActionHandler('copyMessageLink', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, messageId, shouldIncludeThread, shouldIncludeGrouped, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    actions.showNotification({\n      message: oldTranslate('ErrorOccurred'),\n      tabId,\n    });\n    return;\n  }\n  const showErrorOccurredNotification = () => actions.showNotification({\n    message: oldTranslate('ErrorOccurred'),\n    tabId,\n  });\n\n  if (!isChatChannel(chat) && !isChatSuperGroup(chat)) {\n    showErrorOccurredNotification();\n    return;\n  }\n  const showLinkCopiedNotification = () => actions.showNotification({\n    message: oldTranslate('LinkCopied'),\n    tabId,\n  });\n  const callApiExportMessageLinkPromise = callApi('exportMessageLink', {\n    chat, id: messageId, shouldIncludeThread, shouldIncludeGrouped,\n  });\n  await copyTextToClipboardFromPromise(\n    callApiExportMessageLinkPromise, showLinkCopiedNotification, showErrorOccurredNotification,\n  );\n});\n\nconst MESSAGES_TO_REPORT_DELIVERY = new Map<string, number[]>();\nlet reportDeliveryTimeout: number | undefined;\naddActionHandler('reportMessageDelivery', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId } = payload;\n  const currentIds = MESSAGES_TO_REPORT_DELIVERY.get(chatId) || [];\n  currentIds.push(messageId);\n  MESSAGES_TO_REPORT_DELIVERY.set(chatId, currentIds);\n\n  if (!reportDeliveryTimeout) {\n    // Slightly unsafe in the multitab environment, but there is no better way to do it now.\n    // Not critical if user manages to close the tab in a show window before the report is sent.\n    reportDeliveryTimeout = window.setTimeout(() => {\n      reportDeliveryTimeout = undefined;\n\n      MESSAGES_TO_REPORT_DELIVERY.forEach((messageIds, cId) => {\n        const chat = selectChat(global, cId);\n        if (!chat) return;\n\n        callApi('reportMessagesDelivery', { chat, messageIds });\n      });\n      MESSAGES_TO_REPORT_DELIVERY.clear();\n    }, 500);\n  }\n});\n\naddActionHandler('openPreparedInlineMessageModal', async (global, actions, payload): Promise<void> => {\n  const {\n    botId, messageId, webAppKey, tabId = getCurrentTabId(),\n  } = payload;\n\n  const bot = selectUser(global, botId);\n  if (!bot) return;\n\n  const result = await callApi('fetchPreparedInlineMessage', {\n    bot,\n    id: messageId,\n  });\n  if (!result) {\n    actions.sendWebAppEvent({\n      webAppKey,\n      event: {\n        eventType: 'prepared_message_failed',\n        eventData: { error: 'MESSAGE_EXPIRED' },\n      },\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    preparedMessageModal: {\n      message: result,\n      webAppKey,\n      botId,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openSharePreparedMessageModal', (global, actions, payload): ActionReturnType => {\n  const {\n    webAppKey, message, tabId = getCurrentTabId(),\n  } = payload;\n\n  const supportedFilters = message.peerTypes?.filter((type): type is ApiChatType => type !== 'self');\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    sharePreparedMessageModal: {\n      webAppKey,\n      filter: supportedFilters,\n      message,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\nfunction countSortedIds(ids: number[], from: number, to: number) {\n  // If ids are outside viewport, we cannot get correct count\n  if (ids.length === 0 || from < ids[0] || to > ids[ids.length - 1]) return undefined;\n\n  let count = 0;\n\n  for (let i = 0, l = ids.length; i < l; i++) {\n    if (ids[i] >= from && ids[i] <= to) {\n      count++;\n    }\n\n    if (ids[i] >= to) {\n      break;\n    }\n  }\n\n  return count;\n}\n\nfunction splitAttachmentsByType(attachments: ApiAttachment[]) {\n  return attachments.reduce((acc, attachment, index, arr) => {\n    if (index === 0) {\n      acc.push([attachment]);\n      return acc;\n    }\n\n    const type = getAttachmentType(attachment);\n    const previousType = getAttachmentType(arr[index - 1]);\n    if (type === previousType) {\n      acc[acc.length - 1].push(attachment);\n    } else {\n      acc.push([attachment]);\n    }\n\n    return acc;\n  }, [] as ApiAttachment[][]);\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  const {\n    shouldSendAsFile, mimeType,\n  } = attachment;\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) return 'audio';\n  if (shouldSendAsFile) return 'file';\n  if (mimeType === GIF_MIME_TYPE) return 'gif';\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType) || SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) return 'media';\n  if (attachment.voice) return 'voice';\n  return 'file';\n}\n","import type {\n  ChatMediaSearchParams, ChatMediaSearchSegment, LoadingState, SharedMediaType, ThreadId,\n} from '../../../types';\nimport type { ActionReturnType, GlobalState, TabArgs } from '../../types';\nimport { type ApiPeer, MAIN_THREAD_ID } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport {\n  CHAT_MEDIA_SLICE, MESSAGE_SEARCH_SLICE, SHARED_MEDIA_SLICE,\n} from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { buildCollectionByKey, isInsideSortedArrayRange } from '../../../util/iteratees';\nimport { getSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { callApi } from '../../../api/gramjs';\nimport { getChatMediaMessageIds, getIsSavedDialog, isSameReaction } from '../../helpers';\nimport {\n  addActionHandler, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  addChatMessagesById,\n  addMessages,\n  addUserStatuses,\n  initializeChatMediaSearchResults,\n  mergeWithChatMediaSearchSegment,\n  setChatMediaSearchLoading,\n  updateChatMediaSearchResults,\n  updateMiddleSearch,\n  updateMiddleSearchResults,\n  updateSharedMediaSearchResults,\n} from '../../reducers';\nimport {\n  selectChat,\n  selectCurrentChatMediaSearch,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectCurrentSharedMediaSearch,\n  selectPeer,\n} from '../../selectors';\n\nconst MEDIA_PRELOAD_OFFSET = 9;\n\naddActionHandler('performMiddleSearch', async (global, actions, payload): Promise<void> => {\n  const {\n    query, chatId, threadId = MAIN_THREAD_ID, tabId = getCurrentTabId(),\n  } = payload || {};\n\n  if (!chatId) return;\n\n  const currentUserId = global.currentUserId!;\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n  const realChatId = isSavedDialog ? String(threadId) : chatId;\n\n  const peer = realChatId ? selectPeer(global, realChatId) : undefined;\n  let currentSearch = selectCurrentMiddleSearch(global, tabId);\n  if (!peer) {\n    return;\n  }\n\n  if (!currentSearch) {\n    global = updateMiddleSearch(global, realChatId, threadId, {}, tabId);\n    setGlobal(global);\n    global = getGlobal();\n  }\n  currentSearch = selectCurrentMiddleSearch(global, tabId)!;\n\n  const {\n    results, savedTag, type, isHashtag,\n  } = currentSearch;\n  const shouldReuseParams = results?.query === query;\n\n  const offsetId = shouldReuseParams ? results?.nextOffsetId : undefined;\n  const offsetRate = shouldReuseParams ? results?.nextOffsetRate : undefined;\n  const offsetPeerId = shouldReuseParams ? results?.nextOffsetPeerId : undefined;\n  const offsetPeer = shouldReuseParams && offsetPeerId ? selectChat(global, offsetPeerId) : undefined;\n\n  const shouldHaveQuery = isHashtag || !savedTag;\n  if (shouldHaveQuery && !query) {\n    global = updateMiddleSearch(global, realChatId, threadId, {\n      fetchingQuery: undefined,\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateMiddleSearch(global, realChatId, threadId, {\n    fetchingQuery: query,\n  }, tabId);\n  setGlobal(global);\n\n  let result;\n  if (type === 'chat') {\n    result = await callApi('searchMessagesInChat', {\n      peer,\n      type: 'text',\n      query: isHashtag ? `#${query}` : query,\n      threadId,\n      limit: MESSAGE_SEARCH_SLICE,\n      offsetId,\n      isSavedDialog,\n      savedTag,\n    });\n  }\n\n  if (type === 'myChats') {\n    result = await callApi('searchMessagesGlobal', {\n      type: 'text',\n      query: isHashtag ? `#${query}` : query!,\n      limit: MESSAGE_SEARCH_SLICE,\n      offsetId,\n      offsetRate,\n      offsetPeer,\n    });\n  }\n\n  if (type === 'channels') {\n    result = await callApi('searchHashtagPosts', {\n      hashtag: query!,\n      limit: MESSAGE_SEARCH_SLICE,\n      offsetId,\n      offsetPeer,\n      offsetRate,\n    });\n  }\n\n  if (!result) {\n    return;\n  }\n\n  const {\n    userStatusesById, messages, totalCount, nextOffsetId, nextOffsetRate, nextOffsetPeerId,\n  } = result;\n\n  const newFoundIds = messages.map(getSearchResultKey);\n\n  global = getGlobal();\n\n  currentSearch = selectCurrentMiddleSearch(global, tabId);\n  const hasTagChanged = currentSearch?.savedTag && !isSameReaction(savedTag, currentSearch.savedTag);\n  const hasSearchChanged = currentSearch?.fetchingQuery !== query;\n  if (!currentSearch || hasSearchChanged || hasTagChanged) {\n    return;\n  }\n\n  const resultChatId = isSavedDialog ? currentUserId : peer.id;\n\n  global = addUserStatuses(global, userStatusesById);\n  global = addMessages(global, messages);\n  global = updateMiddleSearch(global, resultChatId, threadId, {\n    fetchingQuery: undefined,\n  }, tabId);\n  global = updateMiddleSearchResults(global, resultChatId, threadId, {\n    foundIds: newFoundIds,\n    totalCount,\n    nextOffsetId,\n    nextOffsetRate,\n    nextOffsetPeerId,\n    query: query || '',\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('searchHashtag', (global, actions, payload): ActionReturnType => {\n  const { hashtag, tabId = getCurrentTabId() } = payload;\n\n  const messageList = selectCurrentMessageList(global, tabId);\n  if (!messageList) {\n    return;\n  }\n\n  const cleanQuery = hashtag.replace(/^#/, '');\n\n  actions.updateMiddleSearch({\n    chatId: messageList.chatId,\n    threadId: messageList.threadId,\n    update: {\n      isHashtag: true,\n      requestedQuery: cleanQuery,\n    },\n    tabId,\n  });\n});\n\naddActionHandler('searchSharedMediaMessages', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return;\n  }\n\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n  const realChatId = isSavedDialog ? String(threadId) : chatId;\n\n  const peer = selectPeer(global, realChatId);\n  const currentSearch = selectCurrentSharedMediaSearch(global, tabId);\n\n  if (!peer || !currentSearch) {\n    return;\n  }\n\n  const { currentType: type, resultsByType } = currentSearch;\n  const currentResults = type && resultsByType && resultsByType[type];\n  const offsetId = currentResults?.nextOffsetId;\n\n  if (!type) {\n    return;\n  }\n\n  void searchSharedMedia(global, peer, threadId, type, offsetId, undefined, isSavedDialog, tabId);\n});\naddActionHandler('searchChatMediaMessages', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId, currentMediaMessageId, limit, direction, tabId = getCurrentTabId(),\n  } = payload;\n  if (!chatId || !threadId || !currentMediaMessageId) {\n    return;\n  }\n\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n  const realChatId = isSavedDialog ? String(threadId) : chatId;\n\n  const chat = selectChat(global, realChatId);\n  if (!chat) {\n    return;\n  }\n  let currentSearch = selectCurrentChatMediaSearch(global, tabId);\n\n  if (!currentSearch) {\n    global = initializeChatMediaSearchResults(global, chatId, threadId, tabId);\n    setGlobal(global);\n    currentSearch = selectCurrentChatMediaSearch(global, tabId);\n    if (!currentSearch) {\n      return;\n    }\n    global = getGlobal();\n  }\n\n  void searchChatMedia(global,\n    chat,\n    threadId,\n    currentMediaMessageId,\n    currentSearch,\n    direction,\n    isSavedDialog,\n    limit,\n    tabId);\n});\n\naddActionHandler('searchMessagesByDate', async (global, actions, payload): Promise<void> => {\n  const { timestamp, tabId = getCurrentTabId() } = payload;\n\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const messageId = await callApi('findFirstMessageIdAfterDate', {\n    chat,\n    timestamp,\n  });\n\n  if (!messageId) {\n    return;\n  }\n\n  actions.focusMessage({\n    chatId: chat.id,\n    messageId,\n    tabId,\n  });\n});\n\nasync function searchSharedMedia<T extends GlobalState>(\n  global: T,\n  peer: ApiPeer,\n  threadId: ThreadId,\n  type: SharedMediaType,\n  offsetId?: number,\n  isBudgetPreload = false,\n  isSavedDialog?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const resultChatId = isSavedDialog ? global.currentUserId! : peer.id;\n\n  const result = await callApi('searchMessagesInChat', {\n    peer,\n    type,\n    limit: SHARED_MEDIA_SLICE * 2,\n    threadId,\n    offsetId,\n    isSavedDialog,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const {\n    userStatusesById, messages, totalCount, nextOffsetId,\n  } = result;\n\n  const byId = buildCollectionByKey(messages, 'id');\n  const newFoundIds = Object.keys(byId).map(Number);\n\n  global = getGlobal();\n\n  const currentSearch = selectCurrentSharedMediaSearch(global, tabId);\n  if (!currentSearch) {\n    return;\n  }\n\n  global = addUserStatuses(global, userStatusesById);\n  global = addChatMessagesById(global, resultChatId, byId);\n  global = updateSharedMediaSearchResults(\n    global, resultChatId, threadId, type, newFoundIds, totalCount, nextOffsetId, tabId,\n  );\n  setGlobal(global);\n\n  if (!isBudgetPreload) {\n    void searchSharedMedia(global, peer, threadId, type, nextOffsetId, true, isSavedDialog, tabId);\n  }\n}\n\nfunction selectCurrentChatMediaSearchSegment(\n  params: ChatMediaSearchParams,\n  currentMediaMessageId: number,\n): ChatMediaSearchSegment | undefined {\n  if (isInsideSortedArrayRange(currentMediaMessageId, params.currentSegment.foundIds)) {\n    return params.currentSegment;\n  }\n  const index = params.segments.findIndex(\n    (segment) => isInsideSortedArrayRange(currentMediaMessageId, segment.foundIds),\n  );\n\n  if (index === -1) {\n    if (params.currentSegment && params.currentSegment.foundIds.length) {\n      params.segments.push(params.currentSegment);\n    }\n    return undefined;\n  }\n  const result = params.segments.splice(index, 1)[0];\n  params.segments.push(params.currentSegment);\n  return result;\n}\n\nfunction calcChatMediaSearchAddOffset(\n  direction: LoadMoreDirection,\n  limit: number,\n): number {\n  if (direction === LoadMoreDirection.Backwards) return 0;\n  if (direction === LoadMoreDirection.Forwards) return -(limit + 1);\n  return -(Math.round(limit / 2) + 1);\n}\n\nfunction calcChatMediaSearchOffsetId(\n  direction: LoadMoreDirection,\n  currentMessageId: number,\n  segment?: ChatMediaSearchSegment,\n): number {\n  if (!segment) return currentMessageId;\n  if (direction === LoadMoreDirection.Backwards) return segment.foundIds[0];\n  if (direction === LoadMoreDirection.Forwards) return segment.foundIds[segment.foundIds.length - 1];\n  return currentMessageId;\n}\n\nfunction calcLoadMoreDirection(currentMessageId: number, currentSegment?: ChatMediaSearchSegment) {\n  if (!currentSegment) return LoadMoreDirection.Around;\n  const currentSegmentFoundIdsCount = currentSegment.foundIds.length;\n\n  const idIndexInSegment = currentSegment.foundIds.indexOf(currentMessageId);\n  if (idIndexInSegment === -1) return LoadMoreDirection.Around;\n\n  if (currentSegment.loadingState.areAllItemsLoadedBackwards\n    && currentSegment.loadingState.areAllItemsLoadedForwards) {\n    return undefined;\n  }\n\n  const halfMediaCount = Math.floor(currentSegmentFoundIdsCount / 2);\n\n  const preloadOffset = MEDIA_PRELOAD_OFFSET > halfMediaCount ? 0 : MEDIA_PRELOAD_OFFSET;\n  const lastMediaIndex = currentSegmentFoundIdsCount - 1;\n\n  if (idIndexInSegment <= preloadOffset) {\n    if (currentSegment.loadingState.areAllItemsLoadedBackwards) return undefined;\n    return LoadMoreDirection.Backwards;\n  }\n  if (idIndexInSegment >= lastMediaIndex - preloadOffset) {\n    if (currentSegment.loadingState.areAllItemsLoadedForwards) return undefined;\n    return LoadMoreDirection.Forwards;\n  }\n  return undefined;\n}\n\nfunction calcLoadingState(\n  direction: LoadMoreDirection,\n  limit: number, newFoundIdsCount: number,\n  currentSegment?: ChatMediaSearchSegment,\n): LoadingState {\n  let areAllItemsLoadedForwards = Boolean(currentSegment?.loadingState.areAllItemsLoadedForwards);\n  let areAllItemsLoadedBackwards = Boolean(currentSegment?.loadingState.areAllItemsLoadedBackwards);\n\n  if (newFoundIdsCount < limit) {\n    if (direction === LoadMoreDirection.Forwards) {\n      areAllItemsLoadedForwards = true;\n    } else if (direction === LoadMoreDirection.Backwards) {\n      areAllItemsLoadedBackwards = true;\n    }\n  }\n  return {\n    areAllItemsLoadedForwards,\n    areAllItemsLoadedBackwards,\n  };\n}\n\nasync function searchChatMedia<T extends GlobalState>(\n  global: T,\n  peer: ApiPeer,\n  threadId: ThreadId,\n  currentMediaMessageId: number,\n  chatMediaSearchParams: ChatMediaSearchParams,\n  direction?: LoadMoreDirection,\n  isSavedDialog?: boolean,\n  limit = CHAT_MEDIA_SLICE,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const { isSynced } = global;\n  if (!isSynced || chatMediaSearchParams.isLoading) {\n    return;\n  }\n  let currentSegment = selectCurrentChatMediaSearchSegment(chatMediaSearchParams, currentMediaMessageId);\n\n  if (direction === undefined) {\n    direction = calcLoadMoreDirection(currentMediaMessageId, currentSegment);\n  }\n\n  if (direction === undefined) {\n    return;\n  }\n\n  const offsetId = calcChatMediaSearchOffsetId(direction, currentMediaMessageId, currentSegment);\n  const addOffset = calcChatMediaSearchAddOffset(direction, limit);\n\n  const resultChatId = isSavedDialog ? global.currentUserId! : peer.id;\n\n  global = setChatMediaSearchLoading(global, resultChatId, threadId, true, tabId);\n  setGlobal(global);\n\n  const result = await callApi('searchMessagesInChat', {\n    peer,\n    type: 'media',\n    limit,\n    threadId,\n    offsetId,\n    isSavedDialog,\n    addOffset,\n  });\n\n  global = getGlobal();\n\n  if (!result) {\n    global = setChatMediaSearchLoading(global, resultChatId, threadId, false, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const {\n    messages, userStatusesById,\n  } = result;\n\n  const byId = buildCollectionByKey(messages, 'id');\n  const newFoundIds = Object.keys(byId).map(Number);\n\n  global = addUserStatuses(global, userStatusesById);\n  global = addChatMessagesById(global, resultChatId, byId);\n\n  const loadingState = calcLoadingState(direction, limit, newFoundIds.length, currentSegment);\n\n  const filteredIds = getChatMediaMessageIds(byId, newFoundIds, false);\n  currentSegment = mergeWithChatMediaSearchSegment(\n    filteredIds,\n    loadingState,\n    currentSegment,\n  );\n\n  global = updateChatMediaSearchResults(\n    global, resultChatId, threadId, currentSegment, chatMediaSearchParams, tabId,\n  );\n  global = setChatMediaSearchLoading(global, resultChatId, threadId, false, tabId);\n  setGlobal(global);\n}\n","import type {\n  ApiInputInvoice, ApiInputInvoicePremiumGiftStars, ApiInputInvoiceStarGift, ApiInputInvoiceStarGiftResale,\n  ApiRequestInputInvoice,\n} from '../../../api/types';\nimport type { ApiCredentials } from '../../../components/payment/PaymentModal';\nimport type { RegularLangFnParameters } from '../../../util/localization';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\nimport { PaymentStep } from '../../../types';\n\nimport { DEBUG_PAYMENT_SMART_GLOCAL } from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { getStripeError } from '../../../util/payments/stripe';\nimport { buildQueryString } from '../../../util/requestQuery';\nimport { getServerTime } from '../../../util/serverTime';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport { isChatChannel, isChatSuperGroup } from '../../helpers';\nimport {\n  getRequestInputInvoice,\n  getRequestInputSavedStarGift,\n} from '../../helpers/payments';\nimport {\n  addActionHandler, getActions, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  closeInvoice,\n  openStarsTransactionFromReceipt,\n  setPaymentStep,\n  setReceipt,\n  setRequestInfoId,\n  setSmartGlocalCardInfo,\n  setStripeCardInfo,\n  updateChatFullInfo,\n  updatePayment,\n  updateShippingOptions,\n  updateStarsPayment,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectIsCurrentUserFrozen,\n  selectPaymentInputInvoice,\n  selectPaymentRequestId,\n  selectProviderPublicToken,\n  selectProviderPublishableKey,\n  selectSmartGlocalCredentials,\n  selectStarsPayment,\n  selectStripeCredentials,\n  selectTabState,\n} from '../../selectors';\n\nconst LOCAL_BOOST_COOLDOWN = 86400; // 24 hours\n\naddActionHandler('validateRequestedInfo', (global, actions, payload): ActionReturnType => {\n  const { requestInfo, saveInfo, tabId = getCurrentTabId() } = payload;\n\n  const inputInvoice = selectPaymentInputInvoice(global, tabId);\n  if (!inputInvoice) {\n    return;\n  }\n\n  const requestInputInvoice = getRequestInputInvoice(global, inputInvoice);\n  if (!requestInputInvoice) {\n    return;\n  }\n\n  validateRequestedInfo(global, requestInputInvoice, requestInfo, saveInfo, tabId);\n});\n\naddActionHandler('openInvoice', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId(), ...inputInvoice } = payload;\n\n  const requestInputInvoice = getRequestInputInvoice(global, inputInvoice);\n  if (!requestInputInvoice) {\n    return;\n  }\n\n  global = updateTabState(global, {\n    isPaymentFormLoading: true,\n  }, tabId);\n  setGlobal(global);\n\n  const theme = extractCurrentThemeParams();\n  const form = await callApi('getPaymentForm', requestInputInvoice, theme);\n\n  if (!form) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    isPaymentFormLoading: false,\n  }, tabId);\n\n  if ('error' in form) {\n    setGlobal(global);\n\n    handlePaymentFormError(form.error, tabId);\n    return;\n  }\n\n  if (form.type === 'regular') {\n    global = updatePayment(global, {\n      inputInvoice: payload,\n      form,\n      isPaymentModalOpen: true,\n      isExtendedMedia: (payload as any).isExtendedMedia,\n      status: undefined,\n    }, tabId);\n    global = setPaymentStep(global, PaymentStep.Checkout, tabId);\n  }\n\n  if (form.type === 'stars') {\n    global = updateTabState(global, {\n      starsPayment: {\n        inputInvoice,\n        form,\n        status: 'pending',\n      },\n    }, tabId);\n  }\n\n  setGlobal(global);\n});\n\naddActionHandler('sendStarGift', (global, actions, payload): ActionReturnType => {\n  const {\n    gift, peerId, message, shouldHideName, shouldUpgrade, tabId = getCurrentTabId(),\n  } = payload;\n\n  const inputInvoice: ApiInputInvoiceStarGift = {\n    type: 'stargift',\n    peerId,\n    giftId: gift.id,\n    message,\n    shouldHideName,\n    shouldUpgrade: shouldUpgrade || undefined,\n  };\n\n  payInputStarInvoice(global, inputInvoice, gift.stars, tabId);\n});\n\naddActionHandler('buyStarGift', (global, actions, payload): ActionReturnType => {\n  const {\n    slug, peerId, stars, tabId = getCurrentTabId(),\n  } = payload;\n\n  const inputInvoice: ApiInputInvoiceStarGiftResale = {\n    type: 'stargiftResale',\n    slug,\n    peerId,\n  };\n\n  payInputStarInvoice(global, inputInvoice, stars, tabId);\n});\n\naddActionHandler('sendPremiumGiftByStars', (global, actions, payload): ActionReturnType => {\n  const {\n    userId, months, amount, message, tabId = getCurrentTabId(),\n  } = payload;\n\n  const inputInvoice: ApiInputInvoicePremiumGiftStars = {\n    type: 'premiumGiftStars',\n    userId,\n    months,\n    message,\n  };\n\n  payInputStarInvoice(global, inputInvoice, amount, tabId);\n});\n\naddActionHandler('getReceipt', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, messageId, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = chatId && selectChat(global, chatId);\n  if (!messageId || !chat) {\n    return;\n  }\n\n  const result = await callApi('getReceipt', chat, messageId);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  if (result.receipt.type === 'stars') {\n    global = openStarsTransactionFromReceipt(global, result.receipt, tabId);\n  } else {\n    global = setReceipt(global, result.receipt, tabId);\n  }\n  setGlobal(global);\n});\n\naddActionHandler('clearPaymentError', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  global = updateTabState(global, {\n    payment: {\n      ...selectTabState(global, tabId).payment,\n      error: undefined,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('clearReceipt', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    payment: {\n      ...selectTabState(global, tabId).payment,\n      receipt: undefined,\n    },\n  }, tabId);\n});\n\naddActionHandler('sendCredentialsInfo', (global, actions, payload): ActionReturnType => {\n  const { credentials, tabId = getCurrentTabId() } = payload;\n\n  const { nativeProvider } = selectTabState(global, tabId).payment.form!;\n  const { data } = credentials;\n\n  if (nativeProvider === 'stripe') {\n    const publishableKey = selectProviderPublishableKey(global, tabId);\n    if (!publishableKey) {\n      return;\n    }\n    void sendStripeCredentials(global, data, publishableKey, tabId);\n  } else if (nativeProvider === 'smartglocal') {\n    const publicToken = selectProviderPublicToken(global, tabId);\n    if (!publicToken) {\n      return;\n    }\n    void sendSmartGlocalCredentials(global, data, publicToken, tabId);\n  }\n});\n\naddActionHandler('sendPaymentForm', async (global, actions, payload): Promise<void> => {\n  const {\n    shippingOptionId, saveCredentials, savedCredentialId, tipAmount,\n    tabId = getCurrentTabId(),\n  } = payload;\n  const requestInfoId = selectPaymentRequestId(global, tabId);\n  const paymentState = selectTabState(global, tabId).payment;\n  const { form, temporaryPassword, inputInvoice } = paymentState;\n\n  if (!inputInvoice || !form) {\n    return;\n  }\n\n  const { nativeProvider, formId } = form;\n\n  const requestInputInvoice = getRequestInputInvoice(global, inputInvoice);\n  if (!requestInputInvoice) {\n    return;\n  }\n\n  global = updatePayment(global, { status: 'pending' }, tabId);\n  setGlobal(global);\n\n  const credentials = {\n    save: saveCredentials,\n    data: nativeProvider === 'stripe'\n      ? selectStripeCredentials(global, tabId) : selectSmartGlocalCredentials(global, tabId),\n  };\n  const result = await callApi('sendPaymentForm', {\n    inputInvoice: requestInputInvoice,\n    formId,\n    credentials,\n    requestedInfoId: requestInfoId,\n    shippingOptionId,\n    savedCredentialId,\n    temporaryPassword: temporaryPassword?.value,\n    tipAmount,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updatePayment(global, { status: 'paid' }, tabId);\n  global = closeInvoice(global, tabId);\n  setGlobal(global);\n\n  actions.apiUpdate({\n    '@type': 'updatePaymentStateCompleted',\n    paymentState,\n    tabId,\n  });\n});\n\naddActionHandler('sendStarPaymentForm', async (global, actions, payload): Promise<void> => {\n  const { directInfo, tabId = getCurrentTabId() } = payload;\n  const starPayment = selectStarsPayment(global, tabId);\n  const inputInvoice = starPayment?.inputInvoice || directInfo?.inputInvoice;\n  if (!inputInvoice) return;\n\n  const requestInputInvoice = getRequestInputInvoice(global, inputInvoice);\n  if (!requestInputInvoice) {\n    return;\n  }\n\n  const formId = (starPayment.form?.formId || starPayment.subscriptionInfo?.subscriptionFormId || directInfo?.formId)!;\n\n  global = updateStarsPayment(global, { status: 'pending' }, tabId);\n  setGlobal(global);\n\n  const result = await callApi('sendStarPaymentForm', {\n    inputInvoice: requestInputInvoice,\n    formId,\n  });\n\n  if (!result) {\n    global = getGlobal();\n    global = updateStarsPayment(global, { status: 'failed' }, tabId);\n    setGlobal(global);\n    actions.closeStarsPaymentModal({ tabId });\n    actions.closeGiftModal({ tabId });\n    return;\n  }\n\n  global = getGlobal();\n  global = updateStarsPayment(global, { status: 'paid' }, tabId);\n  setGlobal(global);\n  actions.closeStarsPaymentModal({ tabId });\n\n  if ('channelId' in result) {\n    actions.openChat({ id: result.channelId, tabId });\n  }\n\n  actions.apiUpdate({\n    '@type': 'updateStarPaymentStateCompleted',\n    paymentState: directInfo ? { inputInvoice } : starPayment,\n    tabId,\n  });\n  actions.loadStarStatus();\n});\n\nasync function sendStripeCredentials<T extends GlobalState>(\n  global: T,\n  data: ApiCredentials['data'],\n  publishableKey: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const query = buildQueryString({\n    'card[number]': data.cardNumber,\n    'card[exp_month]': data.expiryMonth,\n    'card[exp_year]': data.expiryYear,\n    'card[cvc]': data.cvv,\n    'card[address_zip]': data.zip,\n    'card[address_country]': data.country,\n  });\n\n  const response = await fetch(`https://api.stripe.com/v1/tokens${query}`, {\n    method: 'POST',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Bearer ${publishableKey}`,\n    },\n  });\n  const result = await response.json();\n  if (result.error) {\n    const error = getStripeError(result.error);\n    global = getGlobal();\n    global = updateTabState(global, {\n      payment: {\n        ...selectTabState(global, tabId).payment,\n        status: 'failed',\n        error: {\n          ...error,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n  global = getGlobal();\n  global = setStripeCardInfo(global, {\n    type: result.type,\n    id: result.id,\n  }, tabId);\n  global = setPaymentStep(global, PaymentStep.Checkout, tabId);\n  setGlobal(global);\n}\n\nasync function sendSmartGlocalCredentials<T extends GlobalState>(\n  global: T,\n  data: ApiCredentials['data'],\n  publicToken: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const params = {\n    card: {\n      number: data.cardNumber.replace(/\\D+/g, ''),\n      expiration_month: data.expiryMonth,\n      expiration_year: data.expiryYear,\n      security_code: data.cvv.replace(/\\D+/g, ''),\n    },\n  };\n\n  const tokenizeUrl = selectTabState(global, tabId).payment.form?.nativeParams.tokenizeUrl;\n\n  let url;\n  if (DEBUG_PAYMENT_SMART_GLOCAL) {\n    url = 'https://tgb-playground.smart-glocal.com/cds/v1/tokenize/card';\n  } else {\n    url = 'https://tgb.smart-glocal.com/cds/v1/tokenize/card';\n  }\n\n  if (tokenizeUrl?.startsWith('https://')\n    && tokenizeUrl.endsWith('.smart-glocal.com/cds/v1/tokenize/card')) {\n    url = tokenizeUrl;\n  }\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'X-PUBLIC-TOKEN': publicToken,\n    },\n    body: JSON.stringify(params),\n  });\n  const result = await response.json();\n\n  if (result.status !== 'ok') {\n    // TODO после получения документации сделать аналог getStripeError(result.error);\n    const error = { descriptionKey: { key: 'ErrorUnexpected' } satisfies RegularLangFnParameters };\n    global = getGlobal();\n    global = updateTabState(global, {\n      payment: {\n        ...selectTabState(global, tabId).payment,\n        status: 'failed',\n        error: {\n          ...error,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = getGlobal();\n  global = setSmartGlocalCardInfo(global, {\n    type: 'card',\n    token: result.data.token,\n  }, tabId);\n  global = setPaymentStep(global, PaymentStep.Checkout, tabId);\n  setGlobal(global);\n}\n\naddActionHandler('setSmartGlocalCardInfo', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId(), type, token } = payload;\n  return setSmartGlocalCardInfo(global, {\n    type,\n    token,\n  }, tabId);\n});\n\naddActionHandler('setPaymentStep', (global, actions, payload): ActionReturnType => {\n  const { step, tabId = getCurrentTabId() } = payload;\n  return setPaymentStep(global, step ?? PaymentStep.Checkout, tabId);\n});\n\naddActionHandler('closePremiumModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.premiumModal) return undefined;\n  return updateTabState(global, {\n    premiumModal: {\n      promo: tabState.premiumModal.promo, // Cache promo\n      isOpen: false,\n    },\n  }, tabId);\n});\n\naddActionHandler('openPremiumModal', async (global, actions, payload): Promise<void> => {\n  const {\n    initialSection, fromUserId, isSuccess, isGift, monthsAmount, toUserId,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  actions.loadPremiumStickers();\n\n  const result = await callApi('fetchPremiumPromo');\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    premiumModal: {\n      promo: result.promo,\n      initialSection,\n      isOpen: true,\n      fromUserId,\n      toUserId,\n      isGift,\n      monthsAmount,\n      isSuccess,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  actions.closeReactionPicker({ tabId });\n});\n\naddActionHandler('openGiveawayModal', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, prepaidGiveaway,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('getPremiumGiftCodeOptions', {\n    chat,\n  });\n\n  const starOptions = await callApi('fetchStarsGiveawayOptions');\n\n  if (!result || !starOptions) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    giveawayModal: {\n      chatId,\n      gifts: result,\n      isOpen: true,\n      prepaidGiveaway,\n      starOptions,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openGiftModal', async (global, actions, payload): Promise<void> => {\n  const {\n    forUserId, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return;\n  }\n\n  const gifts = await callApi('getPremiumGiftCodeOptions', {});\n  if (!gifts) return;\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    giftModal: {\n      forPeerId: forUserId,\n      gifts,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openStarsGiftModal', async (global, actions, payload): Promise<void> => {\n  const {\n    forUserId,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return;\n  }\n\n  const starsGiftOptions = await callApi('getStarsGiftOptions', {});\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    starsGiftModal: {\n      isOpen: true,\n      forUserId,\n      starsGiftOptions,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('validatePaymentPassword', async (global, actions, payload): Promise<void> => {\n  const { password, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('fetchTemporaryPaymentPassword', password);\n\n  global = getGlobal();\n\n  if (!result) {\n    global = updatePayment(global, { error: { messageKey: { key: 'ErrorUnexpected' }, field: 'password' } }, tabId);\n  } else if ('error' in result) {\n    global = updatePayment(global, { error: { messageKey: result.messageKey, field: 'password' } }, tabId);\n  } else {\n    global = updatePayment(global, { temporaryPassword: result, step: PaymentStep.Checkout }, tabId);\n  }\n\n  setGlobal(global);\n});\n\nasync function validateRequestedInfo<T extends GlobalState>(\n  global: T, inputInvoice: ApiRequestInputInvoice, requestInfo: any, shouldSave?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const result = await callApi('validateRequestedInfo', {\n    inputInvoice, requestInfo, shouldSave,\n  });\n  if (!result) {\n    return;\n  }\n\n  const { id, shippingOptions } = result;\n  global = getGlobal();\n\n  global = setRequestInfoId(global, id, tabId);\n  if (shippingOptions?.length) {\n    global = updateShippingOptions(global, shippingOptions, tabId);\n    global = setPaymentStep(global, PaymentStep.Shipping, tabId);\n  } else {\n    global = setPaymentStep(global, PaymentStep.Checkout, tabId);\n  }\n  setGlobal(global);\n}\n\naddActionHandler('openBoostModal', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat || !(isChatChannel(chat) || isChatSuperGroup(chat))) return;\n\n  global = updateTabState(global, {\n    boostModal: {\n      chatId,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const result = await callApi('fetchBoostStatus', {\n    chat,\n  });\n\n  if (!result) {\n    actions.closeBoostModal({ tabId });\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    boostModal: {\n      chatId,\n      boostStatus: result,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const myBoosts = await callApi('fetchMyBoosts');\n\n  if (!myBoosts) return;\n\n  global = getGlobal();\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.boostModal) return;\n\n  global = updateTabState(global, {\n    boostModal: {\n      ...tabState.boostModal,\n      myBoosts: myBoosts.boosts,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openBoostStatistics', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  global = updateTabState(global, {\n    boostStatistics: {\n      chatId,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const [boostListResult, boostListGiftResult,\n    boostStatusResult] = await Promise.all([\n    callApi('fetchBoostList', { chat }),\n    callApi('fetchBoostList', { chat, isGifts: true }),\n    callApi('fetchBoostStatus', { chat }),\n  ]);\n\n  global = getGlobal();\n  if (!boostListResult || !boostListGiftResult || !boostStatusResult) {\n    global = updateTabState(global, {\n      boostStatistics: undefined,\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    boostStatistics: {\n      chatId,\n      boostStatus: boostStatusResult,\n      nextOffset: boostListResult.nextOffset,\n      boosts: {\n        count: boostListResult.count,\n        list: boostListResult.boostList,\n      },\n      giftedBoosts: {\n        count: boostListGiftResult?.count,\n        list: boostListGiftResult?.boostList,\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openMonetizationStatistics', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  global = updateTabState(global, {\n    monetizationStatistics: {\n      chatId,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadMoreBoosters', async (global, actions, payload): Promise<void> => {\n  const { isGifts, tabId = getCurrentTabId() } = payload || {};\n  let tabState = selectTabState(global, tabId);\n  if (!tabState.boostStatistics) return;\n\n  const chat = selectChat(global, tabState.boostStatistics.chatId);\n  if (!chat) return;\n\n  global = updateTabState(global, {\n    boostStatistics: {\n      ...tabState.boostStatistics,\n      isLoadingBoosters: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const result = await callApi('fetchBoostList', {\n    chat,\n    offset: tabState.boostStatistics.nextOffset,\n    isGifts,\n  });\n  if (!result) return;\n\n  global = getGlobal();\n\n  tabState = selectTabState(global, tabId);\n  if (!tabState.boostStatistics) return;\n\n  const updatedBoostList = (isGifts\n    ? tabState.boostStatistics.giftedBoosts?.list || []\n    : tabState.boostStatistics.boosts?.list || []).concat(result.boostList);\n\n  global = updateTabState(global, {\n    boostStatistics: {\n      ...tabState.boostStatistics,\n      nextOffset: result.nextOffset,\n      isLoadingBoosters: false,\n      [isGifts ? 'giftedBoosts' : 'boosts']: {\n        count: result.count,\n        list: updatedBoostList,\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('applyBoost', async (global, actions, payload): Promise<void> => {\n  const { chatId, slots, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const oldChatFullInfo = selectChatFullInfo(global, chatId);\n  const oldBoostsApplied = oldChatFullInfo?.boostsApplied || 0;\n\n  const appliedBoostsCount = slots.length;\n\n  let tabState = selectTabState(global, tabId);\n  const oldStatus = tabState.boostModal?.boostStatus;\n\n  if (oldStatus) {\n    const boostsPerLevel = oldStatus.nextLevelBoosts ? oldStatus.nextLevelBoosts - oldStatus.currentLevelBoosts : 1;\n    const newBoosts = oldStatus.boosts + appliedBoostsCount;\n    const isLevelUp = oldStatus.nextLevelBoosts && newBoosts >= oldStatus.nextLevelBoosts;\n    const newCurrentLevelBoosts = isLevelUp ? oldStatus.nextLevelBoosts! : oldStatus.currentLevelBoosts;\n    const newNextLevelBoosts = isLevelUp ? oldStatus.nextLevelBoosts! + boostsPerLevel : oldStatus.nextLevelBoosts;\n\n    global = updateTabState(global, {\n      boostModal: {\n        ...tabState.boostModal!,\n        boostStatus: {\n          ...oldStatus,\n          level: isLevelUp ? oldStatus.level + 1 : oldStatus.level,\n          currentLevelBoosts: newCurrentLevelBoosts,\n          nextLevelBoosts: newNextLevelBoosts,\n          hasMyBoost: true,\n          boosts: newBoosts,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  global = getGlobal();\n  tabState = selectTabState(global, tabId);\n  const oldMyBoosts = tabState.boostModal?.myBoosts;\n\n  if (oldMyBoosts) {\n    const unixNow = getServerTime();\n    const newMyBoosts = oldMyBoosts.map((boost) => {\n      if (slots.includes(boost.slot)) {\n        return {\n          ...boost,\n          chatId,\n          date: unixNow,\n          cooldownUntil: unixNow + LOCAL_BOOST_COOLDOWN, // Will be refetched below\n        };\n      }\n      return boost;\n    });\n\n    global = updateTabState(global, {\n      boostModal: {\n        ...tabState.boostModal!,\n        myBoosts: newMyBoosts,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const result = await callApi('applyBoost', {\n    slots,\n    chat,\n  });\n\n  global = getGlobal();\n\n  if (!result) {\n    // Rollback local changes\n    const boostModal = selectTabState(global, tabId).boostModal;\n    if (boostModal) {\n      global = updateTabState(global, {\n        boostModal: {\n          ...boostModal,\n          boostStatus: oldStatus,\n          myBoosts: oldMyBoosts,\n        },\n      }, tabId);\n      setGlobal(global);\n    }\n    return;\n  }\n\n  tabState = selectTabState(global, tabId);\n  if (oldChatFullInfo) {\n    global = updateChatFullInfo(global, chatId, {\n      boostsApplied: oldBoostsApplied + slots.length,\n    });\n  }\n\n  if (tabState.boostModal) {\n    global = updateTabState(global, {\n      boostModal: {\n        ...tabState.boostModal,\n        myBoosts: result.boosts,\n      },\n    }, tabId);\n  }\n  setGlobal(global);\n});\n\naddActionHandler('checkGiftCode', async (global, actions, payload): Promise<void> => {\n  const { slug, message, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkGiftCode', {\n    slug,\n  });\n\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_gift_link_expired'),\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    giftCodeModal: {\n      slug,\n      info: result.code,\n      message,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('applyGiftCode', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('applyGiftCode', {\n    slug,\n  });\n\n  if (!result) {\n    return;\n  }\n  actions.requestConfetti({ withStars: true, tabId });\n  actions.closeGiftCodeModal({ tabId });\n});\n\naddActionHandler('launchPrepaidGiveaway', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, giveawayId, paymentPurpose, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const additionalChannels = paymentPurpose?.additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n  const result = await callApi('launchPrepaidGiveaway', {\n    chat,\n    giveawayId,\n    paymentPurpose: {\n      type: 'giveaway',\n      chat,\n      areWinnersVisible: paymentPurpose?.areWinnersVisible,\n      additionalChannels,\n      countries: paymentPurpose?.countries,\n      prizeDescription: paymentPurpose.prizeDescription,\n      untilDate: paymentPurpose.untilDate,\n      currency: paymentPurpose.currency,\n      amount: paymentPurpose.amount,\n    },\n  });\n\n  if (!result) {\n    return;\n  }\n\n  actions.openBoostStatistics({ chatId, tabId });\n});\n\naddActionHandler('launchPrepaidStarsGiveaway', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, giveawayId, paymentPurpose, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const additionalChannels = paymentPurpose?.additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n  const result = await callApi('launchPrepaidGiveaway', {\n    chat,\n    giveawayId,\n    paymentPurpose: {\n      type: 'starsgiveaway',\n      chat,\n      areWinnersVisible: paymentPurpose?.areWinnersVisible,\n      additionalChannels,\n      countries: paymentPurpose?.countries,\n      prizeDescription: paymentPurpose.prizeDescription,\n      untilDate: paymentPurpose.untilDate,\n      currency: paymentPurpose.currency,\n      amount: paymentPurpose.amount,\n      stars: paymentPurpose.stars,\n      users: paymentPurpose.users,\n    },\n  });\n\n  if (!result) {\n    return;\n  }\n\n  actions.openBoostStatistics({ chatId, tabId });\n});\n\naddActionHandler('upgradeGift', (global, actions, payload): ActionReturnType => {\n  const {\n    gift, shouldKeepOriginalDetails, upgradeStars, tabId = getCurrentTabId(),\n  } = payload;\n\n  const requestSavedGift = getRequestInputSavedStarGift(global, gift);\n  if (!requestSavedGift) {\n    return;\n  }\n\n  global = updateTabState(global, {\n    isWaitingForStarGiftUpgrade: true,\n  }, tabId);\n\n  setGlobal(global);\n  global = getGlobal();\n\n  actions.closeGiftUpgradeModal({ tabId });\n  actions.closeGiftInfoModal({ tabId });\n\n  if (!upgradeStars) {\n    callApi('upgradeStarGift', {\n      inputSavedGift: requestSavedGift,\n      shouldKeepOriginalDetails: shouldKeepOriginalDetails || undefined,\n    });\n\n    return;\n  }\n\n  const invoice: ApiInputInvoice = {\n    type: 'stargiftUpgrade',\n    inputSavedGift: gift,\n    shouldKeepOriginalDetails: shouldKeepOriginalDetails || undefined,\n  };\n\n  payInputStarInvoice(global, invoice, upgradeStars, tabId);\n});\n\naddActionHandler('transferGift', (global, actions, payload): ActionReturnType => {\n  const {\n    gift, recipientId, transferStars, tabId = getCurrentTabId(),\n  } = payload;\n\n  const peer = selectChat(global, recipientId);\n\n  const requestSavedGift = getRequestInputSavedStarGift(global, gift);\n  if (!peer || !requestSavedGift) {\n    return;\n  }\n\n  global = updateTabState(global, {\n    isWaitingForStarGiftTransfer: true,\n  }, tabId);\n\n  setGlobal(global);\n  global = getGlobal();\n\n  actions.closeGiftTransferModal({ tabId });\n  actions.closeGiftInfoModal({ tabId });\n\n  if (!transferStars) {\n    callApi('transferStarGift', {\n      inputSavedGift: requestSavedGift,\n      toPeer: peer,\n    });\n\n    return;\n  }\n\n  const invoice: ApiInputInvoice = {\n    type: 'stargiftTransfer',\n    inputSavedGift: gift,\n    recipientId,\n  };\n\n  payInputStarInvoice(global, invoice, transferStars, tabId);\n});\n\nasync function payInputStarInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice, price: number,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const actions = getActions();\n  const balance = global.stars?.balance;\n\n  if (balance === undefined) return;\n\n  if (balance.amount < price) {\n    actions.openStarsBalanceModal({ tabId });\n    return;\n  }\n\n  const requestInputInvoice = getRequestInputInvoice(global, inputInvoice);\n  if (!requestInputInvoice) {\n    return;\n  }\n\n  global = updateTabState(global, {\n    isPaymentFormLoading: true,\n  }, tabId);\n  setGlobal(global);\n\n  const theme = extractCurrentThemeParams();\n  const form = await callApi('getPaymentForm', requestInputInvoice, theme);\n\n  if (!form) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    isPaymentFormLoading: false,\n  }, tabId);\n  setGlobal(global);\n\n  if ('error' in form) {\n    handlePaymentFormError(form.error, tabId);\n    return;\n  }\n\n  actions.sendStarPaymentForm({\n    directInfo: {\n      inputInvoice,\n      formId: form.formId,\n    },\n    tabId,\n  });\n}\n\naddActionHandler('openUniqueGiftBySlug', async (global, actions, payload): Promise<void> => {\n  const {\n    slug, tabId = getCurrentTabId(),\n  } = payload;\n\n  const gift = await callApi('fetchUniqueStarGift', { slug });\n\n  if (!gift) {\n    actions.showNotification({\n      message: {\n        key: 'GiftWasNotFound',\n      },\n      tabId,\n    });\n    return;\n  }\n\n  actions.openGiftInfoModal({ gift, tabId });\n});\n\naddActionHandler('processStarGiftWithdrawal', async (global, actions, payload): Promise<void> => {\n  const {\n    gift, password, tabId = getCurrentTabId(),\n  } = payload;\n\n  let giftWithdrawModal = selectTabState(global, tabId).giftWithdrawModal;\n  if (!giftWithdrawModal) return;\n\n  global = updateTabState(global, {\n    giftWithdrawModal: {\n      ...giftWithdrawModal,\n      isLoading: true,\n      errorKey: undefined,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const inputGift = getRequestInputSavedStarGift(global, gift);\n  if (!inputGift) {\n    return;\n  }\n\n  const result = await callApi('fetchStarGiftWithdrawalUrl', { inputGift, password });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  giftWithdrawModal = selectTabState(global, tabId).giftWithdrawModal;\n  if (!giftWithdrawModal) return;\n\n  if ('error' in result) {\n    global = updateTabState(global, {\n      giftWithdrawModal: {\n        ...giftWithdrawModal,\n        isLoading: false,\n        errorKey: result.messageKey,\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  actions.openUrl({ url: result.url, shouldSkipModal: true, tabId });\n  actions.closeGiftWithdrawModal({ tabId });\n});\n\nfunction handlePaymentFormError(error: string, tabId: number) {\n  if (error === 'SLUG_INVALID') {\n    getActions().showNotification({\n      message: {\n        key: 'PaymentInvoiceNotFound',\n      },\n      tabId,\n    });\n    return;\n  }\n\n  getActions().showDialog({ data: { message: error, hasErrorKey: true }, tabId });\n}\n","import type { ApiError, ApiReaction, ApiReactionEmoji } from '../../../api/types';\nimport type { ActionReturnType } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../../api/types';\n\nimport { GENERAL_REFETCH_INTERVAL } from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport {\n  buildCollectionByCallback, buildCollectionByKey, omit, partition, unique,\n} from '../../../util/iteratees';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport requestActionTimeout from '../../../util/requestActionTimeout';\nimport { callApi } from '../../../api/gramjs';\nimport {\n  addPaidReaction,\n  getDocumentMediaHash,\n  getReactionKey,\n  getUserReactions,\n  isMessageLocal,\n  isSameReaction,\n} from '../../helpers';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  addChatMessagesById, updateChat, updateChatMessage,\n} from '../../reducers';\nimport { addMessageReaction, subtractXForEmojiInteraction, updateUnreadReactions } from '../../reducers/reactions';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentChat,\n  selectDefaultReaction,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectMaxUserReactions,\n  selectMessageIdsByGroupId,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../selectors';\n\nconst INTERACTION_RANDOM_OFFSET = 40;\n\nlet interactionLocalId = 0;\n\naddActionHandler('loadAvailableReactions', async (global): Promise<void> => {\n  const result = await callApi('fetchAvailableReactions');\n  if (!result) {\n    return;\n  }\n\n  // Preload animations\n  result.forEach((availableReaction) => {\n    if (availableReaction.aroundAnimation) {\n      mediaLoader.fetch(`sticker${availableReaction.aroundAnimation.id}`, ApiMediaFormat.BlobUrl);\n    }\n    if (availableReaction.centerIcon) {\n      mediaLoader.fetch(`sticker${availableReaction.centerIcon.id}`, ApiMediaFormat.BlobUrl);\n    }\n    if (availableReaction.appearAnimation) {\n      mediaLoader.fetch(`sticker${availableReaction.appearAnimation.id}`, ApiMediaFormat.BlobUrl);\n    }\n    if (availableReaction.selectAnimation) {\n      mediaLoader.fetch(getDocumentMediaHash(availableReaction.selectAnimation, 'full')!, ApiMediaFormat.BlobUrl);\n    }\n  });\n\n  global = getGlobal();\n  global = {\n    ...global,\n    reactions: {\n      ...global.reactions,\n      availableReactions: result,\n    },\n  };\n  setGlobal(global);\n\n  requestActionTimeout({\n    action: 'loadAvailableReactions',\n    payload: undefined,\n  }, GENERAL_REFETCH_INTERVAL);\n});\n\naddActionHandler('loadAvailableEffects', async (global): Promise<void> => {\n  const result = await callApi('fetchAvailableEffects');\n  if (!result) {\n    return;\n  }\n\n  const { effects, emojis, stickers } = result;\n  const reactions: ApiReactionEmoji[] = [];\n\n  const effectById = buildCollectionByKey(effects, 'id');\n\n  for (const effect of effects) {\n    if (effect.effectAnimationId) {\n      const reaction: ApiReactionEmoji = {\n        type: 'emoji',\n        emoticon: effect.emoticon,\n      };\n      reactions.push(reaction);\n    }\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    availableEffectById: effectById,\n    stickers: {\n      ...global.stickers,\n      effect: {\n        stickers,\n        emojis,\n      },\n    },\n    reactions: {\n      ...global.reactions,\n      effectReactions: reactions,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('interactWithAnimatedEmoji', (global, actions, payload): ActionReturnType => {\n  const {\n    emoji, x, y, startSize, isReversed, tabId = getCurrentTabId(),\n  } = payload;\n\n  const activeEmojiInteraction = {\n    id: interactionLocalId++,\n    animatedEffect: emoji,\n    x: subtractXForEmojiInteraction(global, x) + Math.random()\n    * INTERACTION_RANDOM_OFFSET - INTERACTION_RANDOM_OFFSET / 2,\n    y: y + Math.random() * INTERACTION_RANDOM_OFFSET - INTERACTION_RANDOM_OFFSET / 2,\n    startSize,\n    isReversed,\n  };\n\n  return updateTabState(global, {\n    activeEmojiInteractions: [...(selectTabState(global, tabId).activeEmojiInteractions || []), activeEmojiInteraction],\n  }, tabId);\n});\n\naddActionHandler('sendEmojiInteraction', (global, actions, payload): ActionReturnType => {\n  const {\n    messageId, chatId, emoji, interactions,\n  } = payload;\n  if (global.connectionState !== 'connectionStateReady') return;\n\n  const chat = selectChat(global, chatId);\n\n  if (!chat || !emoji || selectIsChatWithSelf(global, chatId)) {\n    return;\n  }\n\n  void callApi('sendEmojiInteraction', {\n    chat,\n    messageId,\n    emoticon: emoji,\n    timestamps: interactions,\n  });\n});\n\naddActionHandler('sendDefaultReaction', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, tabId = getCurrentTabId(),\n  } = payload;\n  const reaction = selectDefaultReaction(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n\n  if (!reaction || !message || isMessageLocal(message)) return;\n\n  actions.toggleReaction({\n    chatId,\n    messageId,\n    reaction,\n    tabId,\n  });\n});\n\naddActionHandler('toggleReaction', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId,\n    reaction,\n    shouldAddToRecent,\n    tabId = getCurrentTabId(),\n  } = payload;\n  let { messageId } = payload;\n\n  const chat = selectChat(global, chatId);\n  let message = selectChatMessage(global, chatId, messageId);\n\n  if (!chat || !message) {\n    return;\n  }\n\n  const isInSaved = selectIsChatWithSelf(global, chatId);\n\n  const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n  const documentGroupFirstMessageId = isInDocumentGroup\n    ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n    : undefined;\n  message = isInDocumentGroup\n    ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) || message\n    : message;\n  messageId = message?.id || messageId;\n\n  const userReactions = getUserReactions(message);\n  const hasReaction = userReactions.some((userReaction) => isSameReaction(userReaction, reaction));\n\n  const newUserReactions = hasReaction\n    ? userReactions.filter((userReaction) => !isSameReaction(userReaction, reaction)) : [...userReactions, reaction];\n\n  const limit = selectMaxUserReactions(global);\n  const [paidReactions, regularReactions] = partition(newUserReactions, (r) => r.type === 'paid');\n  const trimmedRegularReactions = regularReactions.slice(-limit) as ApiReaction[];\n  const localReactions = [...paidReactions, ...trimmedRegularReactions];\n  const messageKey = getMessageKey(message);\n\n  if (selectPerformanceSettingsValue(global, 'reactionEffects')) {\n    if (hasReaction) {\n      actions.stopActiveReaction({ containerId: messageKey, reaction, tabId });\n    } else {\n      actions.startActiveReaction({ containerId: messageKey, reaction, tabId });\n    }\n  }\n\n  global = addMessageReaction(global, message, localReactions);\n  setGlobal(global);\n\n  try {\n    await callApi('sendReaction', {\n      chat,\n      messageId,\n      reactions: trimmedRegularReactions,\n      shouldAddToRecent,\n    });\n\n    if (isInSaved) {\n      actions.loadSavedReactionTags();\n    }\n  } catch (error) {\n    global = getGlobal();\n    global = addMessageReaction(global, message, userReactions);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('addLocalPaidReaction', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, count, shouldIgnoreDefaultPrivacy = false, tabId = getCurrentTabId(),\n  } = payload;\n  const defaultPrivacy = global.settings.paidReactionPrivacy;\n  const isPrivate = !shouldIgnoreDefaultPrivacy ? defaultPrivacy?.type === 'anonymous' : payload.isPrivate;\n  const peerId = !shouldIgnoreDefaultPrivacy\n    ? (defaultPrivacy?.type === 'peer' ? defaultPrivacy.peerId : undefined) : payload.peerId;\n\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n\n  if (!chat || !message) {\n    return;\n  }\n\n  const currentReactions = message.reactions?.results || [];\n  const newReactions = addPaidReaction(currentReactions, count, isPrivate, peerId);\n  global = updateChatMessage(global, message.chatId, message.id, {\n    reactions: {\n      ...currentReactions,\n      results: newReactions,\n    },\n  });\n  setGlobal(global);\n\n  const messageKey = getMessageKey(message);\n  if (selectPerformanceSettingsValue(global, 'reactionEffects')) {\n    actions.startActiveReaction({\n      containerId: messageKey,\n      reaction: {\n        type: 'paid',\n      },\n      tabId,\n    });\n  }\n});\n\naddActionHandler('sendPaidReaction', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, messageId, forcedAmount, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n\n  if (!chat || !message) {\n    return;\n  }\n\n  const paidReaction = message.reactions?.results?.find((r) => r.reaction.type === 'paid');\n  const count = forcedAmount || paidReaction?.localAmount || 0;\n  if (!count) {\n    return;\n  }\n  actions.resetLocalPaidReactions({ chatId, messageId });\n\n  try {\n    await callApi('sendPaidReaction', {\n      chat,\n      messageId,\n      count,\n      isPrivate: paidReaction?.localIsPrivate,\n      peerId: paidReaction?.localPeerId,\n    });\n  } catch (error) {\n    if ((error as ApiError).message === 'BALANCE_TOO_LOW') {\n      actions.openStarsBalanceModal({ originReaction: { chatId, messageId, amount: count }, tabId });\n    }\n  }\n});\n\naddActionHandler('startActiveReaction', (global, actions, payload): ActionReturnType => {\n  const { containerId, reaction, tabId = getCurrentTabId() } = payload;\n  const tabState = selectTabState(global, tabId);\n\n  if (!selectPerformanceSettingsValue(global, 'reactionEffects')) return undefined;\n\n  const currentActiveReactions = tabState.activeReactions[containerId] || [];\n  if (currentActiveReactions.some((active) => isSameReaction(active, reaction))) {\n    return undefined;\n  }\n\n  const newActiveReactions = currentActiveReactions.concat(reaction);\n\n  return updateTabState(global, {\n    activeReactions: {\n      ...tabState.activeReactions,\n      [containerId]: newActiveReactions,\n    },\n  }, tabId);\n});\n\naddActionHandler('stopActiveReaction', (global, actions, payload): ActionReturnType => {\n  const { containerId, reaction, tabId = getCurrentTabId() } = payload;\n\n  const tabState = selectTabState(global, tabId);\n\n  const currentActiveReactions = tabState.activeReactions[containerId] || [];\n  // Remove all reactions if reaction is not specified\n  const newMessageActiveReactions = reaction\n    ? currentActiveReactions.filter((active) => !isSameReaction(active, reaction)) : [];\n\n  const newActiveReactions = newMessageActiveReactions.length ? {\n    ...tabState.activeReactions,\n    [containerId]: newMessageActiveReactions,\n  } : omit(tabState.activeReactions, [containerId]);\n\n  return updateTabState(global, {\n    activeReactions: newActiveReactions,\n  }, tabId);\n});\n\naddActionHandler('setDefaultReaction', async (global, actions, payload): Promise<void> => {\n  const { reaction } = payload;\n\n  const result = await callApi('setDefaultReaction', { reaction });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  if (!global.config) {\n    actions.loadConfig(); // Refetch new config, if it is somehow not loaded\n    return;\n  }\n\n  global = {\n    ...global,\n    config: {\n      ...global.config,\n      defaultReaction: reaction,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('stopActiveEmojiInteraction', (global, actions, payload): ActionReturnType => {\n  const { id, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    activeEmojiInteractions: selectTabState(global, tabId)\n      .activeEmojiInteractions?.filter((active) => active.id !== id),\n  }, tabId);\n});\n\naddActionHandler('loadReactors', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { chatId, messageId, reaction } = payload;\n  const chat = selectChat(global, chatId);\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!chat || !message) {\n    return;\n  }\n\n  const offset = message.reactors?.nextOffset;\n  const result = await callApi('fetchMessageReactionsList', {\n    reaction,\n    chat,\n    messageId,\n    offset,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChatMessage(global, chatId, messageId, {\n    reactors: result,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('loadMessageReactions', (global, actions, payload): ActionReturnType => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { ids, chatId } = payload;\n\n  const chat = selectChat(global, chatId);\n\n  if (!chat || global.connectionState !== 'connectionStateReady') {\n    return;\n  }\n\n  callApi('fetchMessageReactions', { ids, chat });\n});\n\naddActionHandler('sendWatchingEmojiInteraction', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, emoticon, x, y, startSize, isReversed, id, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n\n  const tabState = selectTabState(global, tabId);\n  if (!chat || !tabState.activeEmojiInteractions?.some((interaction) => interaction.id === id)\n    || selectIsChatWithSelf(global, chatId)) {\n    return undefined;\n  }\n\n  if (global.connectionState === 'connectionStateReady') {\n    callApi('sendWatchingEmojiInteraction', { chat, emoticon });\n  }\n\n  return updateTabState(global, {\n    activeEmojiInteractions: tabState.activeEmojiInteractions.map((activeEmojiInteraction) => {\n      if (activeEmojiInteraction.id === id) {\n        return {\n          ...activeEmojiInteraction,\n          x: subtractXForEmojiInteraction(global, x),\n          y,\n          startSize,\n          isReversed,\n        };\n      }\n      return activeEmojiInteraction;\n    }),\n  }, tabId);\n});\n\naddActionHandler('fetchUnreadReactions', async (global, actions, payload): Promise<void> => {\n  const { chatId, offsetId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchUnreadReactions', { chat, offsetId, addOffset: offsetId ? -1 : undefined });\n\n  // Server side bug, when server returns unread reactions count > 0 for deleted messages\n  if (!result || !result.messages.length) {\n    global = getGlobal();\n    global = updateUnreadReactions(global, chatId, {\n      unreadReactionsCount: 0,\n    });\n\n    setGlobal(global);\n    return;\n  }\n\n  const { messages } = result;\n\n  const byId = buildCollectionByKey(messages, 'id');\n  const ids = Object.keys(byId).map(Number);\n\n  global = getGlobal();\n  global = addChatMessagesById(global, chat.id, byId);\n  global = updateUnreadReactions(global, chatId, {\n    unreadReactions: unique([...(chat.unreadReactions || []), ...ids]).sort((a, b) => b - a),\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('animateUnreadReaction', (global, actions, payload): ActionReturnType => {\n  const { messageIds, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectCurrentChat(global, tabId);\n  if (!chat) return undefined;\n\n  if (!chat.unreadReactionsCount) {\n    return updateUnreadReactions(global, chat.id, {\n      unreadReactions: [],\n    });\n  }\n\n  const unreadReactionsCount = Math.max(chat.unreadReactionsCount - messageIds.length, 0);\n  const unreadReactions = (chat.unreadReactions || []).filter((id) => !messageIds.includes(id));\n\n  global = updateUnreadReactions(global, chat.id, {\n    unreadReactions,\n    unreadReactionsCount,\n  });\n\n  setGlobal(global);\n\n  actions.markMessagesRead({ messageIds, shouldFetchUnreadReactions: true, tabId });\n\n  if (!selectPerformanceSettingsValue(global, 'reactionEffects')) return undefined;\n\n  global = getGlobal();\n\n  messageIds.forEach((id) => {\n    const message = selectChatMessage(global, chat.id, id);\n    if (!message) return;\n\n    const { reaction, isOwn, isUnread } = message.reactions?.recentReactions?.[0] ?? {};\n    if (reaction && isUnread && !isOwn) {\n      const messageKey = getMessageKey(message);\n      actions.startActiveReaction({ containerId: messageKey, reaction, tabId: getCurrentTabId() });\n    }\n  });\n\n  return undefined;\n});\n\naddActionHandler('focusNextReaction', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const chat = selectCurrentChat(global, tabId);\n\n  if (!chat?.unreadReactions) {\n    if (chat?.unreadReactionsCount) {\n      return updateChat(global, chat.id, {\n        unreadReactionsCount: 0,\n      });\n    }\n    return undefined;\n  }\n\n  actions.focusMessage({\n    chatId: chat.id, messageId: chat.unreadReactions[0], tabId, scrollTargetPosition: 'end',\n  });\n  actions.markMessagesRead({ messageIds: [chat.unreadReactions[0]], tabId });\n  return undefined;\n});\n\naddActionHandler('readAllReactions', (global, actions, payload): ActionReturnType => {\n  const { chatId, threadId = MAIN_THREAD_ID } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return undefined;\n\n  callApi('readAllReactions', { chat, threadId: threadId === MAIN_THREAD_ID ? undefined : threadId });\n\n  if (threadId === MAIN_THREAD_ID) {\n    return updateUnreadReactions(global, chat.id, {\n      unreadReactionsCount: undefined,\n      unreadReactions: undefined,\n    });\n  }\n\n  // TODO[Forums]: Support unread reactions in threads\n  return undefined;\n});\n\naddActionHandler('loadTopReactions', async (global): Promise<void> => {\n  const result = await callApi('fetchTopReactions', {\n    hash: global.reactions.hash.topReactions,\n  });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    reactions: {\n      ...global.reactions,\n      topReactions: result.reactions,\n      hash: {\n        ...global.reactions.hash,\n        topReactions: result.hash,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadRecentReactions', async (global): Promise<void> => {\n  const result = await callApi('fetchRecentReactions', {\n    hash: global.reactions.hash.recentReactions,\n  });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    reactions: {\n      ...global.reactions,\n      recentReactions: result.reactions,\n      hash: {\n        ...global.reactions.hash,\n        recentReactions: result.hash,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('clearRecentReactions', async (global): Promise<void> => {\n  const result = await callApi('clearRecentReactions');\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    reactions: {\n      ...global.reactions,\n      recentReactions: [],\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadDefaultTagReactions', async (global): Promise<void> => {\n  const result = await callApi('fetchDefaultTagReactions', {\n    hash: global.reactions.hash.defaultTags,\n  });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    reactions: {\n      ...global.reactions,\n      defaultTags: result.reactions,\n      hash: {\n        ...global.reactions.hash,\n        defaultTags: result.hash,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadSavedReactionTags', async (global): Promise<void> => {\n  const { hash } = global.savedReactionTags || {};\n\n  const result = await callApi('fetchSavedReactionTags', { hash });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  const tagsByKey = buildCollectionByCallback(result.tags, (tag) => ([getReactionKey(tag.reaction), tag]));\n\n  global = {\n    ...global,\n    savedReactionTags: {\n      hash: result.hash,\n      byKey: tagsByKey,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('editSavedReactionTag', async (global, actions, payload): Promise<void> => {\n  const { reaction, title } = payload;\n\n  const result = await callApi('updateSavedReactionTag', { reaction, title });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  const tagsByKey = global.savedReactionTags?.byKey;\n  if (!tagsByKey) return;\n\n  const key = getReactionKey(reaction);\n  const tag = tagsByKey[key];\n\n  const newTag = {\n    ...tag,\n    title,\n  };\n\n  global = {\n    ...global,\n    savedReactionTags: {\n      ...global.savedReactionTags!,\n      byKey: {\n        ...tagsByKey,\n        [key]: newTag,\n      },\n    },\n  };\n  setGlobal(global);\n});\n","import type { ApiSavedStarGift, ApiStarGiftUnique } from '../../../api/types';\nimport type { StarGiftCategory } from '../../../types';\nimport type { ActionReturnType } from '../../types';\n\nimport {\n  DEFAULT_RESALE_GIFTS_FILTER_OPTIONS,\n  RESALE_GIFTS_LIMIT,\n  STARS_CURRENCY_CODE,\n  TON_CURRENCY_CODE,\n} from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { callApi } from '../../../api/gramjs';\nimport { areInputSavedGiftsEqual, getRequestInputSavedStarGift } from '../../helpers/payments';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  appendStarsSubscriptions,\n  appendStarsTransactions,\n  replacePeerSavedGifts,\n  updateChats,\n  updateStarsBalance,\n  updateStarsSubscriptionLoading,\n  updateUsers,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectGiftProfileFilter,\n  selectPeer,\n  selectPeerSavedGifts,\n  selectTabState,\n} from '../../selectors';\n\naddActionHandler('loadStarStatus', async (global): Promise<void> => {\n  const currentStarsStatus = global.stars;\n  const needsTopupOptions = !currentStarsStatus?.topupOptions;\n\n  const [starsStatus, tonStatus, topupOptions] = await Promise.all([\n    callApi('fetchStarsStatus'),\n    callApi('fetchStarsStatus', { isTon: true }),\n    needsTopupOptions ? callApi('fetchStarsTopupOptions') : undefined,\n  ]);\n\n  if (!(starsStatus || tonStatus) || (needsTopupOptions && !topupOptions)) {\n    return;\n  }\n\n  global = getGlobal();\n\n  if (starsStatus && starsStatus.balance.currency === STARS_CURRENCY_CODE) {\n    global = {\n      ...global,\n      stars: {\n        ...currentStarsStatus,\n        balance: starsStatus.balance,\n        topupOptions: topupOptions || currentStarsStatus!.topupOptions,\n        history: {\n          all: undefined,\n          inbound: undefined,\n          outbound: undefined,\n        },\n        subscriptions: undefined,\n      },\n    };\n\n    if (starsStatus.history) {\n      global = appendStarsTransactions(global, 'all', starsStatus.history, starsStatus.nextHistoryOffset);\n    }\n\n    if (starsStatus.subscriptions) {\n      global = appendStarsSubscriptions(global, starsStatus.subscriptions, starsStatus.nextSubscriptionOffset);\n    }\n  }\n\n  if (tonStatus?.balance.currency === TON_CURRENCY_CODE) {\n    global = {\n      ...global,\n      ton: {\n        ...tonStatus,\n        balance: tonStatus.balance,\n        history: {\n          all: undefined,\n          inbound: undefined,\n          outbound: undefined,\n        },\n      },\n    };\n\n    global = updateStarsBalance(global, tonStatus.balance);\n\n    if (tonStatus.history) {\n      global = appendStarsTransactions(global, 'all', tonStatus.history, tonStatus.nextHistoryOffset, true);\n    }\n  }\n\n  setGlobal(global);\n});\n\naddActionHandler('loadStarsTransactions', async (global, actions, payload): Promise<void> => {\n  const { type, isTon } = payload;\n\n  const history = isTon ? global.ton?.history[type] : global.stars?.history[type];\n  const offset = history?.nextOffset;\n  if (history && !offset) return; // Already loaded all\n\n  const result = await callApi('fetchStarsTransactions', {\n    isInbound: type === 'inbound',\n    isOutbound: type === 'outbound',\n    offset: offset || '',\n    isTon,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateStarsBalance(global, result.balance);\n  if (result.history) {\n    global = appendStarsTransactions(global, type, result.history, result.nextOffset, isTon);\n  }\n  setGlobal(global);\n});\n\naddActionHandler('loadStarGifts', async (global): Promise<void> => {\n  const result = await callApi('fetchStarGifts');\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  const byId = buildCollectionByKey(result.gifts, 'id');\n\n  const idsByCategoryName: Record<StarGiftCategory, string[]> = {\n    all: [],\n    stock: [],\n    limited: [],\n    resale: [],\n  };\n\n  const allStarGiftIds = Object.keys(byId);\n  const allStarGifts = Object.values(byId);\n\n  const limitedStarGiftIds = allStarGifts.map((gift) => (gift.isLimited ? gift.id : undefined))\n    .filter(Boolean);\n\n  const stockedStarGiftIds = allStarGifts.map((gift) => (\n    gift.availabilityRemains || !gift.availabilityTotal ? gift.id : undefined\n  )).filter(Boolean);\n\n  const resaleStarGiftIds = allStarGifts.map((gift) => (gift.availabilityResale ? gift.id : undefined))\n    .filter(Boolean);\n\n  idsByCategoryName.all = allStarGiftIds;\n  idsByCategoryName.limited = limitedStarGiftIds;\n  idsByCategoryName.stock = stockedStarGiftIds;\n  idsByCategoryName.resale = resaleStarGiftIds;\n\n  allStarGifts.forEach((gift) => {\n    const starsCategory = gift.stars;\n    if (!idsByCategoryName[starsCategory]) {\n      idsByCategoryName[starsCategory] = [];\n    }\n    idsByCategoryName[starsCategory].push(gift.id);\n  });\n\n  global = {\n    ...global,\n    starGifts: {\n      byId,\n      idsByCategory: idsByCategoryName,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('updateResaleGiftsFilter', (global, actions, payload): ActionReturnType => {\n  const {\n    filter, tabId = getCurrentTabId(),\n  } = payload;\n\n  const tabState = selectTabState(global, tabId);\n  global = updateTabState(global, {\n    resaleGifts: {\n      ...tabState.resaleGifts,\n      filter,\n    },\n  }, tabId);\n  if (tabState.resaleGifts.giftId) {\n    actions.loadResaleGifts({ giftId: tabState.resaleGifts.giftId, shouldRefresh: true, tabId });\n  }\n\n  setGlobal(global);\n});\n\naddActionHandler('loadResaleGifts', async (global, actions, payload): Promise<void> => {\n  const {\n    giftId, shouldRefresh, tabId = getCurrentTabId(),\n  } = payload;\n\n  let tabState = selectTabState(global, tabId);\n  if (tabState.resaleGifts.isLoading || (tabState.resaleGifts.isAllLoaded && !shouldRefresh)) return;\n\n  global = updateTabState(global, {\n    resaleGifts: {\n      ...tabState.resaleGifts,\n      isLoading: true,\n      ...(shouldRefresh && {\n        count: 0,\n        nextOffset: undefined,\n        isAllLoaded: false,\n      }),\n    },\n  }, tabId);\n  setGlobal(global);\n\n  global = getGlobal();\n  tabState = selectTabState(global, tabId);\n  const nextOffset = tabState.resaleGifts.nextOffset;\n  const attributesHash = tabState.resaleGifts.attributesHash;\n  const filter = tabState.resaleGifts.filter;\n\n  const result = await callApi('fetchResaleGifts', {\n    giftId,\n    offset: nextOffset,\n    limit: RESALE_GIFTS_LIMIT,\n    attributesHash,\n    filter,\n  });\n\n  if (!result) {\n    return;\n  };\n\n  const {\n    chats,\n    users,\n  } = result;\n\n  global = getGlobal();\n  tabState = selectTabState(global, tabId);\n\n  const currentGifts = tabState.resaleGifts.gifts;\n  const newGifts = !shouldRefresh ? currentGifts.concat(result.gifts) : result.gifts;\n  const currentUpdateIteration = tabState.resaleGifts.updateIteration;\n  const shouldUpdateIteration = tabState.resaleGifts.giftId !== giftId || shouldRefresh;\n  const updateIteration = shouldUpdateIteration ? currentUpdateIteration + 1 : currentUpdateIteration;\n  global = updateTabState(global, {\n    resaleGifts: {\n      ...tabState.resaleGifts,\n      giftId,\n      count: result.count || tabState.resaleGifts.count,\n      gifts: newGifts,\n      attributes: result.attributes || tabState.resaleGifts.attributes,\n      counters: result.counters || tabState.resaleGifts.counters,\n      attributesHash: result.attributesHash,\n      nextOffset: result.nextOffset,\n      isLoading: false,\n      isAllLoaded: !result.nextOffset,\n      updateIteration,\n    },\n  }, tabId);\n\n  global = updateUsers(global, buildCollectionByKey(users, 'id'));\n  global = updateChats(global, buildCollectionByKey(chats, 'id'));\n\n  setGlobal(global);\n});\n\naddActionHandler('resetResaleGifts', (global, actions, payload): ActionReturnType => {\n  const {\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const tabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    resaleGifts: {\n      updateIteration: tabState.resaleGifts.updateIteration + 1,\n      filter: DEFAULT_RESALE_GIFTS_FILTER_OPTIONS,\n      count: 0,\n      gifts: [],\n    },\n  }, tabId);\n});\n\naddActionHandler('loadPeerSavedGifts', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId, shouldRefresh, tabId = getCurrentTabId(),\n  } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  global = getGlobal();\n\n  const currentGifts = selectPeerSavedGifts(global, peerId, tabId);\n  const localNextOffset = currentGifts?.nextOffset;\n\n  if (!shouldRefresh && currentGifts && !localNextOffset) return; // Already loaded all\n\n  const fetchingFilter = selectGiftProfileFilter(global, peerId, tabId);\n\n  const result = await callApi('fetchSavedStarGifts', {\n    peer,\n    offset: !shouldRefresh ? localNextOffset : '',\n    filter: fetchingFilter,\n  });\n\n  global = getGlobal();\n  const currentFilter = selectGiftProfileFilter(global, peerId, tabId);\n\n  if (!result || currentFilter !== fetchingFilter) {\n    return;\n  }\n\n  const newGifts = currentGifts && !shouldRefresh ? currentGifts.gifts.concat(result.gifts) : result.gifts;\n\n  global = replacePeerSavedGifts(global, peerId, newGifts, result.nextOffset, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('reloadPeerSavedGifts', (global, actions, payload): ActionReturnType => {\n  const {\n    peerId,\n  } = payload;\n\n  Object.values(global.byTabId).forEach((tabState) => {\n    if (selectPeerSavedGifts(global, peerId, tabState.id)) {\n      actions.loadPeerSavedGifts({ peerId, shouldRefresh: true, tabId: tabState.id });\n    }\n  });\n});\n\naddActionHandler('loadStarsSubscriptions', async (global): Promise<void> => {\n  const subscriptions = global.stars?.subscriptions;\n  const offset = subscriptions?.nextOffset;\n  if (subscriptions && !offset) return; // Already loaded all\n\n  global = updateStarsSubscriptionLoading(global, true);\n  setGlobal(global);\n\n  const result = await callApi('fetchStarsSubscriptions', {\n    offset: offset || '',\n  });\n\n  if (!result || result.balance.currency !== STARS_CURRENCY_CODE) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateStarsBalance(global, result.balance);\n  global = appendStarsSubscriptions(global, result.subscriptions, result.nextOffset);\n  setGlobal(global);\n});\n\naddActionHandler('changeStarsSubscription', async (global, actions, payload): Promise<void> => {\n  const { peerId, id, isCancelled } = payload;\n\n  const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n  if (peerId && !peer) return;\n\n  await callApi('changeStarsSubscription', {\n    peer,\n    subscriptionId: id,\n    isCancelled,\n  });\n\n  actions.loadStarStatus();\n});\n\naddActionHandler('fulfillStarsSubscription', async (global, actions, payload): Promise<void> => {\n  const { peerId, id } = payload;\n\n  const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n  if (peerId && !peer) return;\n\n  await callApi('fulfillStarsSubscription', {\n    peer,\n    subscriptionId: id,\n  });\n\n  actions.loadStarStatus();\n});\n\naddActionHandler('changeGiftVisibility', async (global, actions, payload): Promise<void> => {\n  const { gift, shouldUnsave, tabId = getCurrentTabId() } = payload;\n\n  const peerId = gift.type === 'user' ? global.currentUserId! : gift.chatId;\n\n  const requestInputGift = getRequestInputSavedStarGift(global, gift);\n  if (!requestInputGift) return;\n\n  const oldGifts = selectTabState(global, tabId).savedGifts.giftsByPeerId[peerId];\n  if (oldGifts?.gifts?.length) {\n    const newGifts = oldGifts.gifts.map((g) => {\n      if (g.inputGift && areInputSavedGiftsEqual(g.inputGift, gift)) {\n        return {\n          ...g,\n          isUnsaved: shouldUnsave,\n        } satisfies ApiSavedStarGift;\n      }\n      return g;\n    });\n    global = replacePeerSavedGifts(global, peerId, newGifts, oldGifts.nextOffset, tabId);\n    setGlobal(global);\n  }\n\n  const result = await callApi('saveStarGift', {\n    inputGift: requestInputGift,\n    shouldUnsave,\n  });\n  global = getGlobal();\n\n  if (!result) {\n    global = replacePeerSavedGifts(global, peerId, oldGifts.gifts, oldGifts.nextOffset, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  // Reload gift list to avoid issues with pagination\n  Object.values(global.byTabId).forEach((tabState) => {\n    if (selectPeerSavedGifts(global, peerId, tabId)) {\n      actions.loadPeerSavedGifts({ peerId, shouldRefresh: true, tabId: tabState.id });\n    }\n  });\n});\n\naddActionHandler('convertGiftToStars', async (global, actions, payload): Promise<void> => {\n  const { gift, tabId = getCurrentTabId() } = payload;\n\n  const requestInputGift = getRequestInputSavedStarGift(global, gift);\n  if (!requestInputGift) return;\n\n  const result = await callApi('convertStarGift', {\n    inputSavedGift: requestInputGift,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const peerId = gift.type === 'user' ? global.currentUserId! : gift.chatId;\n  Object.values(global.byTabId).forEach((tabState) => {\n    if (selectPeerSavedGifts(global, peerId, tabState.id)) {\n      actions.loadPeerSavedGifts({ peerId, shouldRefresh: true, tabId: tabState.id });\n    }\n  });\n  actions.openStarsBalanceModal({ tabId });\n});\n\naddActionHandler('openGiftUpgradeModal', async (global, actions, payload): Promise<void> => {\n  const {\n    giftId, gift, peerId, tabId = getCurrentTabId(),\n  } = payload;\n\n  const samples = await callApi('fetchStarGiftUpgradePreview', {\n    giftId,\n  });\n\n  if (!samples) return;\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    giftUpgradeModal: {\n      recipientId: peerId,\n      gift,\n      sampleAttributes: samples,\n    },\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('toggleSavedGiftPinned', async (global, actions, payload): Promise<void> => {\n  const { gift, peerId, tabId = getCurrentTabId() } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  const savedGifts = selectPeerSavedGifts(global, peerId, tabId);\n  if (!savedGifts) return;\n  const pinLimit = global.appConfig?.savedGiftPinLimit;\n  const currentPinnedGifts = savedGifts.gifts.filter((g) => g.isPinned);\n  const newPinnedGifts = gift.isPinned\n    ? currentPinnedGifts.filter((g) => (g.gift as ApiStarGiftUnique).slug !== (gift.gift as ApiStarGiftUnique).slug)\n    : [...currentPinnedGifts, gift];\n\n  const trimmedPinnedGifts = pinLimit ? newPinnedGifts.slice(-pinLimit) : newPinnedGifts;\n\n  const inputSavedGifts = trimmedPinnedGifts.map((g) => getRequestInputSavedStarGift(global, g.inputGift!))\n    .filter(Boolean);\n\n  const result = await callApi('toggleSavedGiftPinned', {\n    inputSavedGifts,\n    peer,\n  });\n\n  if (!result) return;\n\n  Object.values(global.byTabId).forEach((tabState) => {\n    if (selectPeerSavedGifts(global, peerId, tabState.id)) {\n      actions.loadPeerSavedGifts({ peerId, shouldRefresh: true, tabId: tabState.id });\n    }\n  });\n});\n\naddActionHandler('updateStarGiftPrice', async (global, actions, payload): Promise<void> => {\n  const {\n    gift, price,\n  } = payload;\n\n  const requestSavedGift = getRequestInputSavedStarGift(global, gift);\n\n  if (!requestSavedGift) {\n    return;\n  }\n\n  const result = await callApi('updateStarGiftPrice', {\n    inputSavedGift: requestSavedGift,\n    price,\n  });\n\n  if (!result) return;\n\n  actions.reloadPeerSavedGifts({ peerId: global.currentUserId! });\n});\n","import { areDeepEqual } from '../../../util/areDeepEqual';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  updateChannelMonetizationStatistics,\n  updateMessageStatistics,\n  updateStatistics,\n  updateStatisticsGraph,\n  updateStoryStatistics,\n  updateVerifyMonetizationModal,\n} from '../../reducers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeer,\n  selectPeerStory,\n  selectTabState,\n} from '../../selectors';\n\naddActionHandler('loadStatistics', async (global, actions, payload): Promise<void> => {\n  const { chatId, isGroup, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat || !fullInfo) {\n    return;\n  }\n\n  const result = await callApi(\n    isGroup ? 'fetchGroupStatistics' : 'fetchChannelStatistics',\n    { chat, dcId: fullInfo.statisticsDcId },\n  );\n  if (!result) {\n    return;\n  }\n\n  const { stats } = result;\n  global = getGlobal();\n  global = updateStatistics(global, chatId, stats, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadChannelMonetizationStatistics', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectPeer(global, peerId);\n  const chatFullInfo = selectChatFullInfo(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const dcId = chatFullInfo?.statisticsDcId;\n  const stats = await callApi('fetchChannelMonetizationStatistics', { peer, dcId });\n\n  if (!stats) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChannelMonetizationStatistics(global, stats, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadMessageStatistics', async (global, actions, payload): Promise<void> => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat || !fullInfo) {\n    return;\n  }\n\n  const dcId = fullInfo.statisticsDcId;\n  let result = await callApi('fetchMessageStatistics', { chat, messageId, dcId });\n  if (!result) {\n    result = {};\n  }\n\n  global = getGlobal();\n\n  const {\n    viewsCount,\n    forwardsCount,\n    reactions,\n  } = selectChatMessages(global, chatId)[messageId] || {};\n  result.viewsCount = viewsCount;\n  result.forwardsCount = forwardsCount;\n  result.reactionsCount = reactions?.results\n    ? reactions?.results.reduce((acc, reaction) => acc + reaction.count, 0)\n    : undefined;\n\n  global = updateMessageStatistics(global, result, tabId);\n  setGlobal(global);\n\n  actions.loadMessagePublicForwards({\n    chatId,\n    messageId,\n    tabId,\n  });\n});\n\naddActionHandler('loadMessagePublicForwards', async (global, actions, payload): Promise<void> => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat || !fullInfo) {\n    return;\n  }\n\n  const dcId = fullInfo.statisticsDcId;\n  const stats = selectTabState(global, tabId).statistics.currentMessage || {};\n\n  if (stats?.publicForwards && !stats.nextOffset) return;\n\n  const publicForwards = await callApi('fetchMessagePublicForwards', {\n    chat, messageId, dcId, offset: stats.nextOffset,\n  });\n  const {\n    forwards,\n    nextOffset,\n    count,\n  } = publicForwards || {};\n\n  // Api returns the last element from the previous page as the first element\n  const shouldOmitFirstElement = stats.publicForwardsData?.length && forwards?.length\n    && areDeepEqual(stats.publicForwardsData[stats.publicForwardsData.length - 1], forwards[0]);\n\n  global = getGlobal();\n  global = updateMessageStatistics(global, {\n    ...stats,\n    publicForwards: count || forwards?.length,\n    publicForwardsData: (stats.publicForwardsData || []).concat(\n      shouldOmitFirstElement ? forwards.slice(1) : (forwards || []),\n    ),\n    nextOffset,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadStatisticsAsyncGraph', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, token, name, isPercentage, tabId = getCurrentTabId(),\n  } = payload;\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo) {\n    return;\n  }\n\n  const dcId = fullInfo.statisticsDcId;\n  const result = await callApi('fetchStatisticsAsyncGraph', { token, dcId, isPercentage });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateStatisticsGraph(global, chatId, name, result, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadStoryStatistics', async (global, actions, payload): Promise<void> => {\n  const { chatId, storyId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat || !fullInfo) {\n    return;\n  }\n\n  const dcId = fullInfo.statisticsDcId;\n  let result = await callApi('fetchStoryStatistics', { chat, storyId, dcId });\n  if (!result) {\n    result = {};\n  }\n  global = getGlobal();\n\n  const story = selectPeerStory(global, chatId, storyId);\n  const {\n    forwardsCount = 0,\n    viewsCount = 0,\n    reactionsCount = 0,\n  } = story && 'views' in story && story.views ? story.views : {};\n  result.viewsCount = viewsCount;\n  result.forwardsCount = forwardsCount;\n  result.reactionsCount = reactionsCount;\n  global = getGlobal();\n  global = updateStoryStatistics(global, result, tabId);\n  setGlobal(global);\n\n  actions.loadStoryPublicForwards({\n    chatId,\n    storyId,\n    tabId,\n  });\n});\n\naddActionHandler('loadStoryPublicForwards', async (global, actions, payload): Promise<void> => {\n  const { chatId, storyId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat || !fullInfo) {\n    return;\n  }\n\n  const dcId = fullInfo.statisticsDcId;\n  const stats = selectTabState(global, tabId).statistics.currentStory || {};\n\n  if (stats?.publicForwards && !stats.nextOffset) return;\n\n  const {\n    publicForwards,\n    count,\n    nextOffset,\n  } = await callApi('fetchStoryPublicForwards', {\n    chat, storyId, dcId, offset: stats.nextOffset,\n  }) || {};\n\n  global = getGlobal();\n  global = updateStoryStatistics(global, {\n    ...stats,\n    publicForwards: count || publicForwards?.length,\n    publicForwardsData: (stats.publicForwardsData || []).concat(\n      publicForwards || [],\n    ),\n    nextOffset,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('processMonetizationRevenueWithdrawalUrl', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId, currentPassword, tabId = getCurrentTabId(),\n  } = payload;\n\n  global = updateVerifyMonetizationModal(global, {\n    isLoading: true,\n  }, tabId);\n  setGlobal(global);\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const result = await callApi('fetchMonetizationRevenueWithdrawalUrl', { peer, currentPassword });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateVerifyMonetizationModal(global, {\n    isLoading: false,\n    errorKey: 'error' in result ? result.messageKey : undefined,\n  }, tabId);\n  setGlobal(global);\n\n  if ('url' in result) {\n    actions.openUrl({\n      url: result.url,\n      shouldSkipModal: true,\n      tabId,\n      ignoreDeepLinks: true,\n    });\n    actions.closeMonetizationVerificationModal({ tabId });\n  }\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { DEBUG, MESSAGE_ID_REQUIRED_ERROR } from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { oldTranslate } from '../../../util/oldLangProvider';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { buildApiInputPrivacyRules } from '../../helpers';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  addStories,\n  addStoriesForPeer,\n  removePeerStory,\n  updateLastReadStoryForPeer,\n  updateLastViewedStoryForPeer,\n  updatePeer,\n  updatePeerProfileStory,\n  updatePeerStoriesFullyLoaded,\n  updatePeerStoriesHidden,\n  updatePeerStory,\n  updatePeerStoryViews,\n  updatePeersWithStories,\n  updateSentStoryReaction,\n  updateStealthMode,\n  updateStoryViews,\n  updateStoryViewsLoading,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectIsCurrentUserFrozen,\n  selectPeer, selectPeerStories, selectPeerStory,\n  selectPinnedStories, selectTabState,\n} from '../../selectors';\n\nconst INFINITE_LOOP_MARKER = 100;\n\naddActionHandler('loadAllStories', async (global): Promise<void> => {\n  let i = 0;\n\n  while (global.stories.hasNext) {\n    if (i++ >= INFINITE_LOOP_MARKER) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.error('`actions/loadAllStories`: Infinite loop detected');\n      }\n\n      return;\n    }\n\n    global = getGlobal();\n    const { stateHash, hasNext } = global.stories;\n    if (stateHash && !hasNext) {\n      return;\n    }\n\n    const result = await callApi('fetchAllStories', {\n      isFirstRequest: !stateHash,\n      stateHash,\n    });\n\n    if (!result) {\n      return;\n    }\n\n    global = getGlobal();\n    global.stories.stateHash = result.state;\n\n    if ('peerStories' in result) {\n      global = addStories(global, result.peerStories);\n      global = updatePeersWithStories(global, result.peerStories);\n      global = updateStealthMode(global, result.stealthMode);\n      global.stories.hasNext = result.hasMore;\n    }\n\n    setGlobal(global);\n  }\n});\n\naddActionHandler('loadAllHiddenStories', async (global): Promise<void> => {\n  let i = 0;\n\n  while (global.stories.hasNextInArchive) {\n    if (i++ >= INFINITE_LOOP_MARKER) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.error('`actions/loadAllHiddenStories`: Infinite loop detected');\n      }\n\n      return;\n    }\n\n    global = getGlobal();\n    const { archiveStateHash, hasNextInArchive } = global.stories;\n    if (archiveStateHash && !hasNextInArchive) {\n      return;\n    }\n\n    const result = await callApi('fetchAllStories', {\n      isFirstRequest: !archiveStateHash,\n      stateHash: archiveStateHash,\n      isHidden: true,\n    });\n\n    if (!result) {\n      return;\n    }\n\n    global = getGlobal();\n    global.stories.archiveStateHash = result.state;\n\n    if ('peerStories' in result) {\n      global = addStories(global, result.peerStories);\n      global = updatePeersWithStories(global, result.peerStories);\n      global = updateStealthMode(global, result.stealthMode);\n      global.stories.hasNextInArchive = result.hasMore;\n    }\n\n    setGlobal(global);\n  }\n});\n\naddActionHandler('loadPeerSkippedStories', async (global, actions, payload): Promise<void> => {\n  const { peerId } = payload;\n  const peer = selectPeer(global, peerId);\n  const peerStories = selectPeerStories(global, peerId);\n  if (!peer || !peerStories) {\n    return;\n  }\n  const skippedStoryIds = Object.values(peerStories.byId).reduce((acc, story) => {\n    if (!('content' in story)) {\n      acc.push(story.id);\n    }\n\n    return acc;\n  }, [] as number[]);\n\n  if (skippedStoryIds.length === 0) {\n    return;\n  }\n\n  const result = await callApi('fetchPeerStoriesByIds', {\n    peer,\n    ids: skippedStoryIds,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addStoriesForPeer(global, peerId, result.stories, result.pinnedIds);\n  setGlobal(global);\n});\n\naddActionHandler('viewStory', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyId, tabId = getCurrentTabId() } = payload;\n  const peer = selectPeer(global, peerId);\n  const story = selectPeerStory(global, peerId, storyId);\n  if (!peer || !story || !('content' in story)) {\n    return;\n  }\n\n  global = updateLastViewedStoryForPeer(global, peerId, storyId, tabId);\n  setGlobal(global);\n\n  const serverTime = getServerTime();\n\n  if (story.expireDate < serverTime && story.isInProfile) {\n    void callApi('viewStory', { peer, storyId });\n  }\n\n  const isUnread = (global.stories.byPeerId[peerId].lastReadId || 0) < story.id;\n  if (!isUnread) {\n    return;\n  }\n\n  const result = await callApi('markStoryRead', {\n    peer,\n    storyId,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateLastReadStoryForPeer(global, peerId, storyId);\n  setGlobal(global);\n});\n\naddActionHandler('deleteStory', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyId } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const result = await callApi('deleteStory', { peer, storyId });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = removePeerStory(global, peerId, storyId);\n  setGlobal(global);\n});\n\naddActionHandler('toggleStoryInProfile', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyId, isInProfile } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const story = selectPeerStory(global, peerId, storyId);\n  const currentIsPinned = story && 'content' in story ? story.isInProfile : undefined;\n  global = updatePeerStory(global, peerId, storyId, { isInProfile });\n  global = updatePeerProfileStory(global, peerId, storyId, isInProfile);\n  setGlobal(global);\n\n  const result = await callApi('toggleStoryInProfile', { peer, storyId, isInProfile });\n  if (!result?.length) {\n    global = getGlobal();\n    global = updatePeerStory(global, peerId, storyId, { isInProfile: currentIsPinned });\n    global = updatePeerProfileStory(global, peerId, storyId, currentIsPinned);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('toggleStoryPinnedToTop', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyId } = payload;\n  const peer = selectPeer(global, peerId);\n  const peerStories = selectPeerStories(global, peerId);\n  if (!peer || !peerStories) {\n    return;\n  }\n\n  const oldPinnedIds = selectPinnedStories(global, peerId)?.map((s) => s.id) || [];\n  const isRemoving = oldPinnedIds.includes(storyId);\n  const newPinnedIds = isRemoving ? oldPinnedIds.filter((id) => id !== storyId) : [...oldPinnedIds, storyId];\n\n  global = getGlobal();\n  global = {\n    ...global,\n    stories: {\n      ...global.stories,\n      byPeerId: {\n        ...global.stories.byPeerId,\n        [peerId]: {\n          ...peerStories,\n          pinnedIds: newPinnedIds.sort((a, b) => b - a),\n        },\n      },\n    },\n  };\n  setGlobal(global);\n  const result = await callApi('toggleStoryPinnedToTop', { peer, storyIds: newPinnedIds });\n\n  if (!result) {\n    global = getGlobal();\n    global = {\n      ...global,\n      stories: {\n        ...global.stories,\n        byPeerId: {\n          ...global.stories.byPeerId,\n          [peerId]: {\n            ...peerStories,\n            pinnedIds: oldPinnedIds,\n          },\n        },\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('loadPeerStories', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { peerId } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  const result = await callApi('fetchPeerStories', { peer });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addStoriesForPeer(global, peerId, result.stories);\n  if (result.lastReadStoryId) {\n    global = updateLastReadStoryForPeer(global, peerId, result.lastReadStoryId);\n  }\n  setGlobal(global);\n});\n\naddActionHandler('loadPeerProfileStories', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { peerId, offsetId } = payload;\n  const peer = selectPeer(global, peerId);\n  let peerStories = selectPeerStories(global, peerId);\n  if (!peer || peerStories?.isFullyLoaded) {\n    return;\n  }\n\n  const result = await callApi('fetchPeerProfileStories', { peer, offsetId });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addStoriesForPeer(global, peerId, result.stories, result.pinnedIds);\n  peerStories = selectPeerStories(global, peerId);\n  if (Object.values(result.stories).length === 0\n    || (peerStories?.profileIds?.length && peerStories?.profileIds.length >= result.count)) {\n    global = updatePeerStoriesFullyLoaded(global, peerId, true);\n  }\n\n  setGlobal(global);\n});\n\naddActionHandler('loadStoriesArchive', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { peerId, offsetId } = payload;\n  const peer = selectPeer(global, peerId);\n  let peerStories = selectPeerStories(global, peerId);\n  if (!peer || peerStories?.isArchiveFullyLoaded) return;\n\n  const result = await callApi('fetchStoriesArchive', { peer, offsetId });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addStoriesForPeer(global, peerId, result.stories, undefined, true);\n\n  peerStories = selectPeerStories(global, peerId);\n  if (Object.values(result.stories).length === 0\n    || (peerStories?.archiveIds?.length && peerStories?.archiveIds.length >= result.count)) {\n    global = updatePeerStoriesFullyLoaded(global, peerId, true, true);\n  }\n  setGlobal(global);\n});\n\naddActionHandler('loadPeerStoriesByIds', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyIds } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const result = await callApi('fetchPeerStoriesByIds', { peer, ids: storyIds });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addStoriesForPeer(global, peerId, result.stories);\n  setGlobal(global);\n});\n\naddActionHandler('loadStoryViews', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyId } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const result = await callApi('fetchStoriesViews', { peer, storyIds: [storyId] });\n\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updatePeerStoryViews(global, peerId, storyId, result.views);\n  setGlobal(global);\n});\n\naddActionHandler('loadStoryViewList', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId,\n    storyId,\n    offset,\n    areReactionsFirst,\n    areJustContacts,\n    query,\n    limit,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  global = updateStoryViewsLoading(global, true, tabId);\n  setGlobal(global);\n\n  const result = await callApi('fetchStoryViewList', {\n    peer,\n    storyId,\n    offset,\n    areReactionsFirst,\n    areJustContacts,\n    limit,\n    query,\n  });\n  if (!result) {\n    global = getGlobal();\n    global = updateStoryViewsLoading(global, false, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = getGlobal();\n  global = updateStoryViews(global, storyId, result.views, result.nextOffset, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('reportStory', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId,\n    storyId,\n    description = '',\n    option = '',\n    tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const response = await callApi('reportStory', {\n    peer,\n    storyId,\n    description,\n    option,\n  });\n\n  if (!response) return;\n\n  const { result, error } = response;\n\n  if (error === MESSAGE_ID_REQUIRED_ERROR) {\n    actions.showNotification({\n      message: oldTranslate('lng_report_please_select_messages'),\n      tabId,\n    });\n    actions.closeReportModal({ tabId });\n    return;\n  }\n\n  if (!result) return;\n\n  if (result.type === 'reported') {\n    actions.showNotification({\n      message: result\n        ? oldTranslate('ReportPeer.AlertSuccess')\n        : 'An error occurred while submitting your report. Please, try again later.',\n      tabId,\n    });\n    actions.closeReportModal({ tabId });\n    return;\n  }\n\n  if (result.type === 'selectOption') {\n    global = getGlobal();\n    const oldSections = selectTabState(global, tabId).reportModal?.sections;\n    const selectedOption = oldSections?.[oldSections.length - 1]?.options?.find((o) => o.option === option);\n    const newSection = {\n      title: result.title,\n      options: result.options,\n      subtitle: selectedOption?.text,\n    };\n    global = updateTabState(global, {\n      reportModal: {\n        messageIds: [storyId],\n        subject: 'story',\n        peerId,\n        description,\n        sections: oldSections ? [...oldSections, newSection] : [newSection],\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  if (result.type === 'comment') {\n    global = getGlobal();\n    const oldSections = selectTabState(global, tabId).reportModal?.sections;\n    const selectedOption = oldSections?.[oldSections.length - 1]?.options?.find((o) => o.option === option);\n    const newSection = {\n      isOptional: result.isOptional,\n      option: result.option,\n      title: selectedOption?.text,\n    };\n    global = updateTabState(global, {\n      reportModal: {\n        messageIds: [storyId],\n        description,\n        peerId,\n        subject: 'story',\n        sections: oldSections ? [...oldSections, newSection] : [newSection],\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('editStoryPrivacy', (global, actions, payload): ActionReturnType => {\n  const {\n    peerId,\n    storyId,\n    privacy,\n  } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const allowedIds = [...privacy.allowUserIds, ...privacy.allowChatIds];\n  const blockedIds = [...privacy.blockUserIds, ...privacy.blockChatIds];\n\n  const inputPrivacy = buildApiInputPrivacyRules(global, {\n    visibility: privacy.visibility,\n    isUnspecified: privacy.isUnspecified,\n    allowedIds,\n    blockedIds,\n    botsPrivacy: 'none',\n  });\n\n  void callApi('editStoryPrivacy', {\n    peer,\n    id: storyId,\n    privacy: inputPrivacy,\n  });\n});\n\naddActionHandler('toggleStoriesHidden', async (global, actions, payload): Promise<void> => {\n  const { peerId, isHidden } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  const result = await callApi('toggleStoriesHidden', { peer, isHidden });\n  if (!result) return;\n\n  global = getGlobal();\n  global = updatePeerStoriesHidden(global, peerId, isHidden);\n  setGlobal(global);\n});\n\naddActionHandler('loadStoriesMaxIds', async (global, actions, payload): Promise<void> => {\n  const { peerIds } = payload;\n  const peers = peerIds.map((peerId) => selectPeer(global, peerId)).filter(Boolean);\n  if (!peers.length) return;\n\n  const result = await callApi('fetchStoriesMaxIds', { peers });\n  if (!result) return;\n\n  const peerIdsToLoad: string[] = [];\n\n  global = getGlobal();\n  result.forEach((maxId, i) => {\n    const peer = peers[i];\n    global = updatePeer(global, peer.id, {\n      maxStoryId: maxId,\n      hasStories: maxId !== 0,\n    });\n\n    if (maxId !== 0) {\n      peerIdsToLoad.push(peer.id);\n    }\n  });\n  setGlobal(global);\n\n  peerIdsToLoad?.forEach((peerId) => actions.loadPeerStories({ peerId }));\n});\n\naddActionHandler('sendStoryReaction', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId, storyId, containerId, reaction, shouldAddToRecent, tabId = getCurrentTabId(),\n  } = payload;\n  const peer = selectPeer(global, peerId);\n  if (!peer) return;\n\n  const story = selectPeerStory(global, peerId, storyId);\n  if (!story || !('content' in story)) return;\n\n  const previousReaction = story.sentReaction;\n  global = updateSentStoryReaction(global, peerId, storyId, reaction);\n  setGlobal(global);\n\n  if (reaction) {\n    actions.startActiveReaction({ containerId, reaction, tabId });\n  } else {\n    actions.stopActiveReaction({ containerId, tabId });\n  }\n\n  const result = await callApi('sendStoryReaction', {\n    peer, storyId, reaction, shouldAddToRecent,\n  });\n\n  global = getGlobal();\n  if (!result) {\n    global = updateSentStoryReaction(global, peerId, storyId, previousReaction);\n  }\n  setGlobal(global);\n});\n\naddActionHandler('activateStealthMode', (global, actions, payload): ActionReturnType => {\n  const { isForPast = true, isForFuture = true } = payload || {};\n\n  callApi('activateStealthMode', { isForPast: isForPast || true, isForFuture: isForFuture || true });\n});\n","import type {\n  ApiError, ApiSticker, ApiStickerSet, ApiStickerSetInfo,\n} from '../../../api/types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type { ActionReturnType, GlobalState, TabArgs } from '../../types';\n\nimport { BIRTHDAY_NUMBERS_SET, RESTRICTED_EMOJI_SET } from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { oldTranslate } from '../../../util/oldLangProvider';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { pause, throttle } from '../../../util/schedulers';\nimport searchWords from '../../../util/searchWords';\nimport { callApi } from '../../../api/gramjs';\nimport {\n  addActionHandler,\n  getGlobal, setGlobal,\n} from '../../index';\nimport {\n  rebuildStickersForEmoji,\n  replaceAnimatedEmojis,\n  updateCustomEmojiForEmoji,\n  updateCustomEmojiSets,\n  updateGifSearch,\n  updateRecentStatusCustomEmojis,\n  updateStickerSearch,\n  updateStickerSet,\n  updateStickerSets,\n  updateStickersForEmoji,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectIsCurrentUserFrozen, selectIsCurrentUserPremium, selectStickerSet, selectTabState,\n} from '../../selectors';\nimport { selectCurrentLimit, selectPremiumLimit } from '../../selectors/limits';\n\nconst ADDED_SETS_THROTTLE = 200;\nconst ADDED_SETS_THROTTLE_CHUNK = 10;\n\nconst searchThrottled = throttle((cb) => cb(), 500, false);\n\naddActionHandler('loadStickerSets', async (global, actions): Promise<void> => {\n  const [addedStickers, addedCustomEmojis] = await Promise.all([\n    callApi('fetchStickerSets', { hash: global.stickers.added.hash }),\n    callApi('fetchCustomEmojiSets', { hash: global.customEmojis.added.hash }),\n  ]);\n  if (!addedCustomEmojis || !addedStickers) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateStickerSets(\n    global,\n    'added',\n    addedStickers.hash,\n    addedStickers.sets,\n  );\n\n  global = updateCustomEmojiSets(\n    global,\n    addedCustomEmojis.hash,\n    addedCustomEmojis.sets,\n  );\n\n  setGlobal(global);\n\n  actions.loadCustomEmojis({\n    ids: global.recentCustomEmojis,\n  });\n});\n\naddActionHandler('loadAddedStickers', async (global, actions): Promise<void> => {\n  const {\n    added: {\n      setIds: addedSetIds = [],\n    },\n    setsById: cached,\n  } = global.stickers;\n  const {\n    added: {\n      setIds: customEmojiSetIds = [],\n    },\n  } = global.customEmojis;\n  const setIdsToLoad = [...addedSetIds, ...customEmojiSetIds];\n  if (!setIdsToLoad.length) {\n    return;\n  }\n\n  for (let i = 0; i < setIdsToLoad.length; i++) {\n    const id = setIdsToLoad[i];\n    if (cached[id]?.stickers) {\n      continue; // Already loaded\n    }\n    actions.loadStickers({\n      stickerSetInfo: { id, accessHash: cached[id].accessHash },\n    });\n\n    if (i % ADDED_SETS_THROTTLE_CHUNK === 0 && i > 0) {\n      await pause(ADDED_SETS_THROTTLE);\n    }\n  }\n});\n\naddActionHandler('loadRecentStickers', (global): ActionReturnType => {\n  const { hash } = global.stickers.recent || {};\n  void loadRecentStickers(global, hash);\n});\n\naddActionHandler('loadFavoriteStickers', async (global): Promise<void> => {\n  const { hash } = global.stickers.favorite || {};\n\n  const favoriteStickers = await callApi('fetchFavoriteStickers', { hash });\n  if (!favoriteStickers) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    stickers: {\n      ...global.stickers,\n      favorite: favoriteStickers,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadPremiumStickers', async (global): Promise<void> => {\n  const { hash } = global.stickers.premium || {};\n\n  if (selectIsCurrentUserFrozen(global)) {\n    return;\n  }\n\n  const result = await callApi('fetchStickersForEmoji', { emoji: '⭐️⭐️', hash });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    stickers: {\n      ...global.stickers,\n      premium: {\n        hash: result.hash,\n        stickers: result.stickers,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadGreetingStickers', async (global): Promise<void> => {\n  const { hash } = global.stickers.greeting || {};\n\n  if (selectIsCurrentUserFrozen(global)) {\n    return;\n  }\n\n  const greeting = await callApi('fetchStickersForEmoji', { emoji: '👋⭐️', hash });\n  if (!greeting) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    stickers: {\n      ...global.stickers,\n      greeting: {\n        hash: greeting.hash,\n        stickers: greeting.stickers.filter((sticker) => sticker.emoji === '👋'),\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadFeaturedStickers', async (global): Promise<void> => {\n  const { hash } = global.stickers.featured || {};\n  const featuredStickers = await callApi('fetchFeaturedStickers', { hash });\n  if (!featuredStickers) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateStickerSets(\n    global,\n    'featured',\n    featuredStickers.hash,\n    featuredStickers.sets,\n  );\n  setGlobal(global);\n});\n\naddActionHandler('loadPremiumGifts', async (global): Promise<void> => {\n  const stickerSet = await callApi('fetchPremiumGifts');\n  if (!stickerSet) {\n    return;\n  }\n\n  const { set, stickers } = stickerSet;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    premiumGifts: { ...set, stickers },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadTonGifts', async (global): Promise<void> => {\n  const stickerSet = await callApi('fetchTonGifts');\n  if (!stickerSet) {\n    return;\n  }\n\n  const { set, stickers } = stickerSet;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    tonGifts: { ...set, stickers },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadDefaultTopicIcons', async (global): Promise<void> => {\n  const stickerSet = await callApi('fetchDefaultTopicIcons');\n  if (!stickerSet) {\n    return;\n  }\n  global = getGlobal();\n\n  const { set, stickers } = stickerSet;\n\n  const fullSet = { ...set, stickers };\n\n  global = updateStickerSet(global, fullSet.id, fullSet);\n  global = {\n    ...global,\n    defaultTopicIconsId: fullSet.id,\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadDefaultStatusIcons', async (global): Promise<void> => {\n  const stickerSet = await callApi('fetchDefaultStatusEmojis');\n  if (!stickerSet) {\n    return;\n  }\n  global = getGlobal();\n\n  const { set, stickers } = stickerSet;\n  const fullSet = { ...set, stickers };\n\n  global = updateStickerSet(global, fullSet.id, fullSet);\n  global = { ...global, defaultStatusIconsId: fullSet.id };\n  setGlobal(global);\n});\n\naddActionHandler('loadUserCollectibleStatuses', async (global, actions): Promise<void> => {\n  setGlobal(global);\n\n  const { hash } = global.collectibleEmojiStatuses || {};\n\n  const result = await callApi('fetchCollectibleEmojiStatuses', { hash });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    collectibleEmojiStatuses: {\n      hash: result.hash,\n      statuses: result.statuses,\n    },\n  };\n  setGlobal(global);\n  const documentIds = result.statuses.map(({ documentId }) => documentId);\n\n  actions.loadCustomEmojis({ ids: documentIds });\n});\n\naddActionHandler('loadStickers', (global, actions, payload): ActionReturnType => {\n  const { stickerSetInfo } = payload;\n  const cachedSet = selectStickerSet(global, stickerSetInfo);\n  if (cachedSet && cachedSet.count === cachedSet?.stickers?.length) return; // Already fully loaded\n  void loadStickers(global, actions, stickerSetInfo);\n});\n\naddActionHandler('loadAnimatedEmojis', async (global): Promise<void> => {\n  const [emojis, effects] = await Promise.all([\n    callApi('fetchAnimatedEmojis'),\n    callApi('fetchAnimatedEmojiEffects'),\n  ]);\n  if (!emojis || !effects) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = replaceAnimatedEmojis(global, { ...emojis.set, stickers: emojis.stickers });\n  global = {\n    ...global,\n    animatedEmojiEffects: { ...effects.set, stickers: effects.stickers },\n  };\n\n  setGlobal(global);\n});\n\naddActionHandler('loadBirthdayNumbersStickers', async (global): Promise<void> => {\n  const emojis = await callApi('fetchStickers', {\n    stickerSetInfo: {\n      shortName: BIRTHDAY_NUMBERS_SET,\n    },\n  });\n  if (!emojis) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    birthdayNumbers: { ...emojis.set, stickers: emojis.stickers },\n  };\n\n  setGlobal(global);\n});\n\naddActionHandler('loadRestrictedEmojiStickers', async (global): Promise<void> => {\n  const emojis = await callApi('fetchStickers', {\n    stickerSetInfo: {\n      shortName: RESTRICTED_EMOJI_SET,\n    },\n  });\n  if (!emojis) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    restrictedEmoji: { ...emojis.set, stickers: emojis.stickers },\n  };\n\n  setGlobal(global);\n});\n\naddActionHandler('loadGenericEmojiEffects', async (global): Promise<void> => {\n  const stickerSet = await callApi('fetchGenericEmojiEffects');\n  if (!stickerSet) {\n    return;\n  }\n  global = getGlobal();\n\n  const { set, stickers } = stickerSet;\n\n  global = {\n    ...global,\n    genericEmojiEffects: { ...set, stickers },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadSavedGifs', async (global): Promise<void> => {\n  const { hash } = global.gifs.saved;\n\n  const savedGifs = await callApi('fetchSavedGifs', { hash });\n  if (!savedGifs) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    gifs: {\n      ...global.gifs,\n      saved: savedGifs,\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('saveGif', async (global, actions, payload): Promise<void> => {\n  const {\n    gif, shouldUnsave,\n    tabId = getCurrentTabId(),\n  } = payload;\n  const length = global.gifs.saved.gifs?.length;\n\n  const limit = selectCurrentLimit(global, 'savedGifs');\n  const premiumLimit = selectPremiumLimit(global, 'savedGifs');\n  const isPremium = selectIsCurrentUserPremium(global);\n\n  if (!shouldUnsave && length && length >= limit) {\n    actions.showNotification({\n      title: langProvider.oldTranslate('LimitReachedFavoriteGifs', limit.toString()),\n      message: isPremium ? langProvider.oldTranslate('LimitReachedFavoriteGifsSubtitlePremium')\n        : langProvider.oldTranslate('LimitReachedFavoriteGifsSubtitle',\n          premiumLimit.toString()),\n      ...(!isPremium && {\n        action: {\n          action: 'openPremiumModal',\n          payload: { tabId },\n        },\n      }),\n      className: 'bold-link',\n      tabId,\n    });\n  }\n\n  const result = await callApi('saveGif', { gif, shouldUnsave });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  const gifs = global.gifs.saved.gifs?.filter(({ id }) => id !== gif.id) || [];\n  const newGifs = shouldUnsave ? gifs : [gif, ...gifs];\n\n  global = {\n    ...global,\n    gifs: {\n      ...global.gifs,\n      saved: {\n        ...global.gifs.saved,\n        gifs: newGifs,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('faveSticker', (global, actions, payload): ActionReturnType => {\n  const { sticker, tabId = getCurrentTabId() } = payload;\n  const current = global.stickers.favorite.stickers.length;\n  const limit = selectCurrentLimit(global, 'stickersFaved');\n  const premiumLimit = selectPremiumLimit(global, 'stickersFaved');\n  const isPremium = selectIsCurrentUserPremium(global);\n\n  if (current >= limit) {\n    actions.showNotification({\n      title: langProvider.oldTranslate('LimitReachedFavoriteStickers', limit.toString()),\n      message: isPremium ? langProvider.oldTranslate('LimitReachedFavoriteStickersSubtitlePremium')\n        : langProvider.oldTranslate('LimitReachedFavoriteStickersSubtitle',\n          premiumLimit.toString()),\n      ...(!isPremium && {\n        action: {\n          action: 'openPremiumModal',\n          payload: { tabId },\n        },\n      }),\n      className: 'bold-link',\n      tabId,\n    });\n  }\n\n  if (sticker) {\n    void callApi('faveSticker', { sticker });\n  }\n});\n\naddActionHandler('unfaveSticker', (global, actions, payload): ActionReturnType => {\n  const { sticker } = payload;\n\n  if (sticker) {\n    global = getGlobal();\n\n    // Remove sticker preemptively to get instant feedback when user removes sticker\n    // from favorites while in Sticker Picker\n    global = {\n      ...global,\n      stickers: {\n        ...global.stickers,\n        favorite: {\n          ...global.stickers.favorite,\n          stickers: global.stickers.favorite.stickers.filter(({ id }) => id !== sticker.id),\n        },\n      },\n    };\n    setGlobal(global);\n\n    void callApi('faveSticker', { sticker, unfave: true });\n  }\n});\n\naddActionHandler('removeRecentSticker', async (global, actions, payload): Promise<void> => {\n  const { sticker } = payload;\n\n  const result = await callApi('removeRecentSticker', { sticker });\n\n  if (!result) return;\n\n  global = getGlobal();\n  loadRecentStickers(global);\n});\n\naddActionHandler('clearRecentStickers', async (global): Promise<void> => {\n  const result = await callApi('clearRecentStickers');\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    stickers: {\n      ...global.stickers,\n      recent: {\n        stickers: [],\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('toggleStickerSet', (global, actions, payload): ActionReturnType => {\n  const { stickerSetId } = payload;\n  const stickerSet = selectStickerSet(global, stickerSetId);\n  if (!stickerSet) {\n    return;\n  }\n\n  const { accessHash, installedDate, isArchived } = stickerSet;\n  const isInstalled = !isArchived && Boolean(installedDate);\n\n  void callApi(!isInstalled ? 'installStickerSet' : 'uninstallStickerSet', { stickerSetId, accessHash });\n});\n\naddActionHandler('loadEmojiKeywords', async (global, actions, payload): Promise<void> => {\n  const { language } = payload;\n\n  let currentEmojiKeywords = global.emojiKeywords[language];\n  if (currentEmojiKeywords?.isLoading) {\n    return;\n  }\n\n  global = {\n    ...global,\n    emojiKeywords: {\n      ...global.emojiKeywords,\n      [language]: {\n        ...currentEmojiKeywords,\n        isLoading: true,\n      },\n    },\n  };\n  setGlobal(global);\n\n  const emojiKeywords = await callApi('fetchEmojiKeywords', {\n    language,\n    fromVersion: currentEmojiKeywords ? currentEmojiKeywords.version : 0,\n  });\n\n  global = getGlobal();\n  currentEmojiKeywords = global.emojiKeywords[language];\n\n  if (!emojiKeywords) {\n    global = {\n      ...global,\n      emojiKeywords: {\n        ...global.emojiKeywords,\n        [language]: {\n          ...currentEmojiKeywords,\n          isLoading: false,\n        },\n      },\n    };\n    setGlobal(global);\n\n    return;\n  }\n\n  global = {\n    ...global,\n    emojiKeywords: {\n      ...global.emojiKeywords,\n      [language]: {\n        isLoading: false,\n        version: emojiKeywords.version,\n        keywords: {\n          ...(currentEmojiKeywords?.keywords),\n          ...emojiKeywords.keywords,\n        },\n      },\n    },\n  };\n  setGlobal(global);\n});\n\nasync function loadRecentStickers<T extends GlobalState>(global: T, hash?: string) {\n  const recentStickers = await callApi('fetchRecentStickers', { hash });\n  if (!recentStickers) {\n    return;\n  }\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    stickers: {\n      ...global.stickers,\n      recent: recentStickers,\n    },\n  };\n  setGlobal(global);\n}\n\nasync function loadStickers<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  stickerSetInfo: ApiStickerSetInfo,\n) {\n  let stickerSet: { set: ApiStickerSet; stickers: ApiSticker[]; packs: Record<string, ApiSticker[]> } | undefined;\n  try {\n    stickerSet = await callApi(\n      'fetchStickers',\n      { stickerSetInfo },\n    );\n  } catch (error: unknown) {\n    if ((error as ApiError).message === 'STICKERSET_INVALID') {\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        actions.showNotification({\n          message: oldTranslate('StickerPack.ErrorNotFound'),\n          tabId,\n        });\n\n        if ('shortName' in stickerSetInfo\n          && selectTabState(global, tabId).openedStickerSetShortName === stickerSetInfo.shortName) {\n          global = updateTabState(global, {\n            openedStickerSetShortName: undefined,\n          }, tabId);\n          setGlobal(global);\n        }\n      });\n      return;\n    }\n  }\n  global = getGlobal();\n\n  if (!stickerSet) {\n    // TODO handle this case when sticker cache is implemented\n    return;\n  }\n\n  const { set, stickers, packs } = stickerSet;\n\n  global = updateStickerSet(global, set.id, { ...set, stickers, packs });\n\n  const currentEmoji = global.stickers.forEmoji.emoji;\n  if (currentEmoji && packs[currentEmoji]) {\n    global = rebuildStickersForEmoji(global);\n  }\n\n  setGlobal(global);\n}\n\naddActionHandler('setStickerSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n\n  if (query) {\n    void searchThrottled(async () => {\n      const result = await callApi('searchStickers', { query });\n      if (!result) {\n        return;\n      }\n\n      global = getGlobal();\n      const { setsById, added } = global.stickers;\n\n      const resultIds = result.sets.map(({ id }) => id);\n\n      if (added.setIds) {\n        added.setIds.forEach((id) => {\n          if (!resultIds.includes(id)) {\n            const { title } = setsById[id] || {};\n            if (title && searchWords(title, query)) {\n              resultIds.unshift(id);\n            }\n          }\n        });\n      }\n\n      global = updateStickerSets(\n        global,\n        'search',\n        result.hash,\n        result.sets,\n      );\n\n      global = updateStickerSearch(global, result.hash, resultIds, tabId);\n      setGlobal(global);\n    });\n  }\n});\n\naddActionHandler('setGifSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n\n  if (typeof query === 'string') {\n    void searchThrottled(() => {\n      global = getGlobal();\n      searchGifs(global, query, global.config?.gifSearchUsername, undefined, tabId);\n    });\n  }\n});\n\naddActionHandler('searchMoreGifs', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { query, offset } = selectTabState(global, tabId).gifSearch;\n\n  if (typeof query === 'string') {\n    void searchThrottled(() => {\n      global = getGlobal();\n      searchGifs(global, query, global.config?.gifSearchUsername, offset, tabId);\n    });\n  }\n});\n\naddActionHandler('loadStickersForEmoji', (global, actions, payload): ActionReturnType => {\n  const { emoji } = payload;\n  const { hash } = global.stickers.forEmoji;\n\n  void searchThrottled(async () => {\n    global = getGlobal();\n    global = {\n      ...global,\n      stickers: {\n        ...global.stickers,\n        forEmoji: {\n          ...global.stickers.forEmoji,\n          emoji,\n        },\n      },\n    };\n    setGlobal(global);\n\n    const result = await callApi('fetchStickersForEmoji', { emoji, hash });\n\n    global = getGlobal();\n\n    if (!result || global.stickers.forEmoji.emoji !== emoji) {\n      return;\n    }\n\n    global = updateStickersForEmoji(global, emoji, result.stickers, result.hash);\n\n    setGlobal(global);\n  });\n});\n\naddActionHandler('clearStickersForEmoji', (global): ActionReturnType => {\n  return {\n    ...global,\n    stickers: {\n      ...global.stickers,\n      forEmoji: {},\n    },\n  };\n});\n\naddActionHandler('loadCustomEmojiForEmoji', (global, actions, payload): ActionReturnType => {\n  const { emoji } = payload;\n\n  return updateCustomEmojiForEmoji(global, emoji);\n});\n\naddActionHandler('clearCustomEmojiForEmoji', (global): ActionReturnType => {\n  return {\n    ...global,\n    customEmojis: {\n      ...global.customEmojis,\n      forEmoji: {},\n    },\n  };\n});\n\naddActionHandler('loadFeaturedEmojiStickers', async (global): Promise<void> => {\n  const featuredStickers = await callApi('fetchFeaturedEmojiStickers');\n  if (!featuredStickers) {\n    return;\n  }\n\n  global = getGlobal();\n  global = {\n    ...global,\n    customEmojis: {\n      ...global.customEmojis,\n      featuredIds: featuredStickers.sets.map(({ id }) => id),\n      byId: {\n        ...global.customEmojis.byId,\n        ...buildCollectionByKey(featuredStickers.sets.flatMap((set) => set.stickers || []), 'id'),\n      },\n    },\n    stickers: {\n      ...global.stickers,\n      setsById: {\n        ...global.stickers.setsById,\n        ...buildCollectionByKey(featuredStickers.sets, 'id'),\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('openStickerSet', async (global, actions, payload): Promise<void> => {\n  const { stickerSetInfo, shouldIgnoreCache, tabId = getCurrentTabId() } = payload;\n  if (shouldIgnoreCache || !selectStickerSet(global, stickerSetInfo)) {\n    await loadStickers(global, actions, stickerSetInfo);\n  }\n\n  global = getGlobal();\n  const set = selectStickerSet(global, stickerSetInfo);\n  if (!set?.shortName) {\n    return;\n  }\n\n  global = updateTabState(global, {\n    openedStickerSetShortName: set.shortName,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadRecentEmojiStatuses', async (global): Promise<void> => {\n  const result = await callApi('fetchRecentEmojiStatuses');\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateRecentStatusCustomEmojis(global, result.hash, result.emojiStatuses!);\n  setGlobal(global);\n});\n\nasync function searchGifs<T extends GlobalState>(global: T, query: string, botUsername?: string, offset?: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>) {\n  const result = await callApi('searchGifs', { query, offset, username: botUsername });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateGifSearch(global, !offset, result.gifs, result.nextOffset, tabId);\n  setGlobal(global);\n}\n","import { addCallback } from \"../../../lib/teact/teactn\";\n\nimport type { Thread, ThreadId } from \"../../../types\";\nimport type { RequiredGlobalActions } from \"../../index\";\nimport type { ActionReturnType, GlobalState } from \"../../types\";\nimport { MAIN_THREAD_ID } from \"../../../api/types\";\n\nimport {\n  DEBUG,\n  IS_BYPASS_AUTH,\n  MESSAGE_LIST_SLICE,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from \"../../../config\";\nimport { init as initFolderManager } from \"../../../util/folderManager\";\nimport {\n  buildCollectionByKey,\n  omitUndefined,\n  pick,\n  unique,\n} from \"../../../util/iteratees\";\nimport { callApi } from \"../../../api/gramjs\";\nimport { getIsSavedDialog } from \"../../helpers\";\nimport {\n  addActionHandler,\n  getActions,\n  getGlobal,\n  setGlobal,\n} from \"../../index\";\nimport {\n  addChatMessagesById,\n  addMessages,\n  safeReplaceViewportIds,\n  updateChats,\n  updateListedIds,\n  updateThread,\n  updateThreadInfo,\n  updateUsers,\n} from \"../../reducers\";\nimport { updateTabState } from \"../../reducers/tabs\";\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingId,\n  selectTabState,\n  selectThreadInfo,\n  selectTopics,\n} from \"../../selectors\";\n\nconst RELEASE_STATUS_TIMEOUT = 15000; // 15 sec;\n\nlet releaseStatusTimeout: number | undefined;\n\naddActionHandler(\"sync\", (global, actions): ActionReturnType => {\n  // Skip sync in bypass auth mode\n  if (IS_BYPASS_AUTH) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.log(\">>> SKIPPING SYNC - BYPASS AUTH MODE\");\n    }\n    return global;\n  }\n\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.log(\">>> START SYNC\");\n  }\n\n  if (releaseStatusTimeout) {\n    clearTimeout(releaseStatusTimeout);\n  }\n\n  global = getGlobal();\n  global = { ...global, isSyncing: true };\n  setGlobal(global);\n\n  // Workaround for `isSyncing = true` sometimes getting stuck for some reason\n  releaseStatusTimeout = window.setTimeout(() => {\n    global = getGlobal();\n    global = { ...global, isSyncing: false };\n    setGlobal(global);\n    releaseStatusTimeout = undefined;\n  }, RELEASE_STATUS_TIMEOUT);\n\n  const { loadAllChats, preloadTopChatMessages } = actions;\n\n  initFolderManager();\n\n  loadAllChats({\n    listType: \"active\",\n    whenFirstBatchDone: async () => {\n      await loadAndReplaceMessages(global, actions);\n\n      global = getGlobal();\n      global = {\n        ...global,\n        isSyncing: false,\n        isSynced: true,\n        isFetchingDifference: false,\n      };\n      setGlobal(global);\n\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log(\">>> FINISH SYNC\");\n      }\n\n      loadAllChats({ listType: \"archived\" });\n      preloadTopChatMessages();\n    },\n  });\n});\n\nasync function loadAndReplaceMessages<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions\n) {\n  let areMessagesLoaded = false;\n\n  global = getGlobal();\n\n  let wasReset = false;\n\n  // Memoize drafts\n  const draftChatIds = Object.keys(global.messages.byChatId);\n  const draftsByChatId = draftChatIds.reduce<\n    Record<string, Record<number, Partial<Thread>>>\n  >((acc, chatId) => {\n    acc[chatId] = Object.keys(\n      global.messages.byChatId[chatId].threadsById\n    ).reduce<Record<number, Partial<Thread>>>((acc2, threadId) => {\n      acc2[Number(threadId)] = omitUndefined({\n        draft: selectDraft(global, chatId, Number(threadId)),\n        editingId: selectEditingId(global, chatId, Number(threadId)),\n        editingDraft: selectEditingDraft(global, chatId, Number(threadId)),\n      });\n\n      return acc2;\n    }, {});\n    return acc;\n  }, {});\n\n  // Memoize last messages\n  const lastMessages = Object.entries(global.chats.lastMessageIds.all || {})\n    .map(([chatId, messageId]) =>\n      selectChatMessage(global, chatId, Number(messageId))\n    )\n    .filter(Boolean);\n  const savedLastMessages = Object.values(\n    global.chats.lastMessageIds.saved || {}\n  )\n    .map((messageId) =>\n      selectChatMessage(global, global.currentUserId!, Number(messageId))\n    )\n    .filter(Boolean);\n\n  for (const { id: tabId } of Object.values(global.byTabId)) {\n    global = getGlobal();\n    const { chatId: currentChatId, threadId: currentThreadId } =\n      selectCurrentMessageList(global, tabId) || {};\n    const activeThreadId = currentThreadId || MAIN_THREAD_ID;\n    const threadInfo =\n      currentChatId && currentThreadId\n        ? selectThreadInfo(global, currentChatId, currentThreadId)\n        : undefined;\n    const currentChat = currentChatId\n      ? global.chats.byId[currentChatId]\n      : undefined;\n    if (currentChatId && currentChat) {\n      const [result, resultDiscussion] = await Promise.all([\n        loadTopMessages(global, currentChatId, activeThreadId),\n        activeThreadId !== MAIN_THREAD_ID &&\n        !getIsSavedDialog(currentChat.id, activeThreadId, global.currentUserId)\n          ? callApi(\"fetchDiscussionMessage\", {\n              chat: currentChat,\n              messageId: Number(activeThreadId),\n            })\n          : undefined,\n      ]);\n      global = getGlobal();\n      const { chatId: newCurrentChatId } =\n        selectCurrentMessageList(global, tabId) || {};\n\n      if (result && newCurrentChatId === currentChatId) {\n        const currentChatMessages = selectChatMessages(global, currentChatId);\n        const localMessages =\n          currentChatId === SERVICE_NOTIFICATIONS_USER_ID\n            ? global.serviceNotifications\n                .filter(({ isDeleted }) => !isDeleted)\n                .map(({ message }) => message)\n            : [];\n        const topics = selectTopics(global, currentChatId);\n        const topicLastMessages = topics\n          ? Object.values(topics)\n              .map(({ lastMessageId }) => currentChatMessages[lastMessageId])\n              .filter(Boolean)\n          : [];\n\n        const resultMessageIds = result.messages.map(({ id }) => id);\n        const messagesThreadInfos = pick(\n          global.messages.byChatId[currentChatId].threadsById,\n          resultMessageIds\n        );\n\n        const isDiscussionStartLoaded =\n          !result.messages.length ||\n          result.messages.some(\n            ({ id }) => id === resultDiscussion?.firstMessageId\n          );\n        const threadStartMessages =\n          (isDiscussionStartLoaded && resultDiscussion?.topMessages) || [];\n        const allMessages = threadStartMessages.concat(\n          result.messages,\n          localMessages\n        );\n        const allMessagesWithTopicLastMessages =\n          allMessages.concat(topicLastMessages);\n        const byId = buildCollectionByKey(\n          allMessagesWithTopicLastMessages,\n          \"id\"\n        );\n        const listedIds = unique(allMessages.map(({ id }) => id));\n\n        if (!wasReset) {\n          global = {\n            ...global,\n            messages: {\n              ...global.messages,\n              byChatId: {},\n            },\n          };\n\n          Object.values(global.byTabId).forEach(({ id: otherTabId }) => {\n            global = updateTabState(\n              global,\n              {\n                tabThreads: {},\n              },\n              otherTabId\n            );\n          });\n          wasReset = true;\n        }\n\n        global = addChatMessagesById(global, currentChatId, byId);\n        global = updateListedIds(\n          global,\n          currentChatId,\n          activeThreadId,\n          listedIds\n        );\n\n        Object.entries(messagesThreadInfos).forEach(([id, thread]) => {\n          if (!thread?.threadInfo) return;\n          global = updateThreadInfo(\n            global,\n            currentChatId,\n            id,\n            thread.threadInfo\n          );\n        });\n\n        if (\n          threadInfo &&\n          !threadInfo.isCommentsInfo &&\n          activeThreadId !== MAIN_THREAD_ID\n        ) {\n          global = updateThreadInfo(global, currentChatId, activeThreadId, {\n            ...pick(threadInfo, [\"fromChannelId\", \"fromMessageId\"]),\n          });\n        }\n\n        Object.values(global.byTabId).forEach(({ id: otherTabId }) => {\n          const { chatId: otherChatId, threadId: otherThreadId } =\n            selectCurrentMessageList(global, otherTabId) || {};\n          if (\n            otherChatId === currentChatId &&\n            otherThreadId === activeThreadId\n          ) {\n            global = safeReplaceViewportIds(\n              global,\n              currentChatId,\n              activeThreadId,\n              listedIds,\n              otherTabId\n            );\n          }\n        });\n        global = updateChats(global, buildCollectionByKey(result.chats, \"id\"));\n        global = updateUsers(global, buildCollectionByKey(result.users, \"id\"));\n\n        areMessagesLoaded = true;\n      }\n    }\n\n    setGlobal(global);\n\n    if (currentChat?.isForum) {\n      actions.loadTopics({ chatId: currentChatId!, force: true });\n      if (currentThreadId && currentThreadId !== MAIN_THREAD_ID) {\n        actions.loadTopicById({\n          chatId: currentChatId!,\n          topicId: Number(currentThreadId),\n          shouldCloseChatOnError: true,\n        });\n      }\n    }\n  }\n\n  global = getGlobal();\n\n  if (!areMessagesLoaded) {\n    global = {\n      ...global,\n      messages: {\n        ...global.messages,\n        byChatId: {},\n      },\n    };\n\n    Object.values(global.byTabId).forEach(({ id: otherTabId }) => {\n      global = updateTabState(\n        global,\n        {\n          tabThreads: {},\n        },\n        otherTabId\n      );\n    });\n  }\n\n  // Restore drafts\n\n  Object.keys(draftsByChatId).forEach((chatId) => {\n    const threads = draftsByChatId[chatId];\n    Object.keys(threads).forEach((threadId) => {\n      global = updateThread(\n        global,\n        chatId,\n        Number(threadId),\n        draftsByChatId[chatId][Number(threadId)]\n      );\n    });\n  });\n\n  // Restore last messages\n  global = addMessages(global, lastMessages);\n  global = addMessages(global, savedLastMessages);\n\n  setGlobal(global);\n\n  Object.values(global.byTabId).forEach(({ id: tabId }) => {\n    const { chatId: audioChatId, messageId: audioMessageId } = selectTabState(\n      global,\n      tabId\n    ).audioPlayer;\n    if (\n      audioChatId &&\n      audioMessageId &&\n      !selectChatMessage(global, audioChatId, audioMessageId)\n    ) {\n      actions.closeAudioPlayer({ tabId });\n    }\n  });\n}\n\nfunction loadTopMessages<T extends GlobalState>(\n  global: T,\n  chatId: string,\n  threadId: ThreadId\n) {\n  const currentUserId = global.currentUserId!;\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n  const realChatId = isSavedDialog ? String(threadId) : chatId;\n\n  const chat = selectChat(global, realChatId)!;\n\n  return callApi(\"fetchMessages\", {\n    chat,\n    threadId,\n    offsetId: !isSavedDialog ? chat.lastReadInboxMessageId : undefined,\n    addOffset: -(Math.round(MESSAGE_LIST_SLICE / 2) + 1),\n    limit: MESSAGE_LIST_SLICE,\n    isSavedDialog,\n  });\n}\n\nlet previousGlobal: GlobalState | undefined;\n// RAF can be unreliable when device goes into sleep mode, so sync logic is handled outside any component\naddCallback((global: GlobalState) => {\n  const { connectionState, authState, isSynced } = global;\n  const { isMasterTab } = selectTabState(global);\n  if (\n    !isMasterTab ||\n    isSynced ||\n    (previousGlobal?.connectionState === connectionState &&\n      previousGlobal?.authState === authState)\n  ) {\n    previousGlobal = global;\n    return;\n  }\n\n  if (\n    connectionState === \"connectionStateReady\" &&\n    authState === \"authorizationStateReady\"\n  ) {\n    getActions().sync();\n  }\n\n  previousGlobal = global;\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { replaceSettings, updateTwoFaSettings } from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\n\naddActionHandler('loadPasswordInfo', async (global): Promise<void> => {\n  const result = await callApi('getPasswordInfo');\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = replaceSettings(global, { hasPassword: result.hasPassword });\n  global = updateTwoFaSettings(global, { hint: result.hint });\n  setGlobal(global);\n});\n\naddActionHandler('checkPassword', async (global, actions, payload): Promise<void> => {\n  const { currentPassword, onSuccess } = payload;\n\n  global = updateTwoFaSettings(global, { isLoading: true, errorKey: undefined });\n  setGlobal(global);\n\n  const isSuccess = await callApi('checkPassword', currentPassword);\n\n  global = getGlobal();\n  global = updateTwoFaSettings(global, { isLoading: false });\n  setGlobal(global);\n\n  if (isSuccess) {\n    onSuccess();\n  }\n});\n\naddActionHandler('clearPassword', async (global, actions, payload): Promise<void> => {\n  const { currentPassword, onSuccess } = payload;\n\n  global = updateTwoFaSettings(global, { isLoading: true, errorKey: undefined });\n  setGlobal(global);\n\n  const isSuccess = await callApi('clearPassword', currentPassword);\n\n  global = getGlobal();\n  global = updateTwoFaSettings(global, { isLoading: false });\n  setGlobal(global);\n\n  if (isSuccess) {\n    onSuccess();\n  }\n});\n\naddActionHandler('updatePassword', async (global, actions, payload): Promise<void> => {\n  const {\n    currentPassword, password, hint, email, onSuccess,\n  } = payload;\n\n  global = updateTwoFaSettings(global, { isLoading: true, errorKey: undefined });\n  setGlobal(global);\n\n  const isSuccess = await callApi('updatePassword', currentPassword, password, hint, email);\n\n  global = getGlobal();\n  global = updateTwoFaSettings(global, { isLoading: false });\n  setGlobal(global);\n\n  if (isSuccess) {\n    onSuccess();\n  }\n});\n\naddActionHandler('updateRecoveryEmail', async (global, actions, payload): Promise<void> => {\n  const {\n    currentPassword, email, onSuccess,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  global = updateTwoFaSettings(global, { isLoading: true, errorKey: undefined });\n  global = updateTabState(global, {\n    recoveryEmail: email,\n  }, tabId);\n  setGlobal(global);\n\n  const isSuccess = await callApi('updateRecoveryEmail', currentPassword, email);\n\n  global = getGlobal();\n  global = updateTwoFaSettings(global, { isLoading: false, waitingEmailCodeLength: undefined });\n  global = updateTabState(global, {\n    recoveryEmail: undefined,\n  }, tabId);\n  setGlobal(global);\n\n  if (isSuccess) {\n    onSuccess();\n  }\n});\n\naddActionHandler('provideTwoFaEmailCode', (global, actions, payload): ActionReturnType => {\n  const { code } = payload;\n\n  void callApi('provideRecoveryEmailCode', code);\n});\n\naddActionHandler('clearTwoFaError', (global): ActionReturnType => {\n  return updateTwoFaSettings(global, { errorKey: undefined });\n});\n","import type { ApiUser } from '../../../api/types';\nimport type { ActionReturnType } from '../../types';\nimport { ManagementProgress } from '../../../types';\n\nimport { BOT_VERIFICATION_PEERS_LIMIT } from '../../../config';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { buildCollectionByKey, unique } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { throttle } from '../../../util/schedulers';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { isUserBot } from '../../helpers';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  addUserStatuses,\n  closeNewContactDialog,\n  replaceUserStatuses,\n  updateChats,\n  updateManagementProgress,\n  updatePeerPhotos,\n  updatePeerPhotosIsLoading,\n  updateUser,\n  updateUserCommonChats,\n  updateUserFullInfo,\n  updateUsers,\n  updateUserSearch,\n  updateUserSearchFetchingStatus,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatRestricted,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPhotos,\n  selectTabState,\n  selectUser,\n  selectUserCommonChats,\n  selectUserFullInfo,\n} from '../../selectors';\n\nconst PROFILE_PHOTOS_FIRST_LOAD_LIMIT = 10;\nconst TOP_PEERS_REQUEST_COOLDOWN = 60; // 1 min\nconst runThrottledForSearch = throttle((cb) => cb(), 500, false);\n\naddActionHandler('loadFullUser', async (global, actions, payload): Promise<void> => {\n  const { userId, withPhotos } = payload;\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const { id, accessHash } = user;\n  const result = await callApi('fetchFullUser', { id, accessHash });\n  if (!result?.user) return;\n\n  global = getGlobal();\n  const fullInfo = selectUserFullInfo(global, userId);\n  const { user: newUser, fullInfo: newFullInfo } = result;\n  const profilePhotos = selectPeerPhotos(global, userId);\n  const hasChangedAvatar = user.avatarPhotoId !== newUser.avatarPhotoId;\n  const hasChangedProfilePhoto = fullInfo?.profilePhoto?.id !== newFullInfo?.profilePhoto?.id;\n  const hasChangedFallbackPhoto = fullInfo?.fallbackPhoto?.id !== newFullInfo?.fallbackPhoto?.id;\n  const hasChangedPersonalPhoto = fullInfo?.personalPhoto?.id !== newFullInfo?.personalPhoto?.id;\n  const hasChangedPhoto = hasChangedAvatar\n    || hasChangedProfilePhoto\n    || hasChangedFallbackPhoto\n    || hasChangedPersonalPhoto;\n\n  global = updateUser(global, userId, result.user);\n  global = updateUserFullInfo(global, userId, result.fullInfo);\n  global = updateUsers(global, buildCollectionByKey(result.users, 'id'));\n  global = updateChats(global, buildCollectionByKey(result.chats, 'id'));\n\n  setGlobal(global);\n  if (withPhotos || (profilePhotos?.count && hasChangedPhoto)) {\n    actions.loadMoreProfilePhotos({ peerId: userId, shouldInvalidateCache: true });\n  }\n});\n\naddActionHandler('loadUser', async (global, actions, payload): Promise<void> => {\n  const { userId } = payload;\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const result = await callApi('fetchUsers', { users: [user] });\n  if (!result) {\n    return;\n  }\n\n  const { users, userStatusesById } = result;\n\n  global = getGlobal();\n  global = updateUsers(global, buildCollectionByKey(users, 'id'));\n  global = replaceUserStatuses(global, {\n    ...global.users.statusesById,\n    ...userStatusesById,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('loadTopUsers', async (global): Promise<void> => {\n  const { topPeers: { lastRequestedAt } } = global;\n\n  if (!(!lastRequestedAt || getServerTime() - lastRequestedAt > TOP_PEERS_REQUEST_COOLDOWN)) {\n    return;\n  }\n\n  const result = await callApi('fetchTopUsers');\n  if (!result) {\n    return;\n  }\n\n  const { ids } = result;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    topPeers: {\n      ...global.topPeers,\n      userIds: ids,\n      lastRequestedAt: getServerTime(),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadContactList', async (global): Promise<void> => {\n  const contactList = await callApi('fetchContactList');\n  if (!contactList) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addUserStatuses(global, contactList.userStatusesById);\n\n  // Sort contact list by Last Name (or First Name), with latin names being placed first\n  const getCompareString = (user: ApiUser) => (user.lastName || user.firstName || '');\n  const collator = new Intl.Collator('en-US');\n\n  const sortedUsers = contactList.users.sort((a, b) => (\n    collator.compare(getCompareString(a), getCompareString(b))\n  )).filter((user) => !user.isSelf);\n\n  global = {\n    ...global,\n    contactList: {\n      userIds: sortedUsers.map((user) => user.id),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('loadCurrentUser', (): ActionReturnType => {\n  void callApi('fetchCurrentUser');\n});\n\naddActionHandler('loadCommonChats', async (global, actions, payload): Promise<void> => {\n  const { userId } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    return;\n  }\n\n  const user = selectUser(global, userId);\n  const commonChats = selectUserCommonChats(global, userId);\n  if (!user || isUserBot(user) || commonChats?.isFullyLoaded) {\n    return;\n  }\n\n  const result = await callApi('fetchCommonChats', user, commonChats?.maxId);\n  if (!result) {\n    return;\n  }\n\n  const { chatIds, count } = result;\n\n  const ids = unique((commonChats?.ids || []).concat(chatIds));\n\n  global = getGlobal();\n  global = updateUserCommonChats(global, user.id, {\n    maxId: chatIds.length ? chatIds[chatIds.length - 1] : undefined,\n    ids,\n    isFullyLoaded: ids.length >= count,\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('toggleNoPaidMessagesException', async (global, actions, payload): Promise<void> => {\n  const { userId, shouldRefundCharged } = payload;\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const result = await callApi('toggleNoPaidMessagesException',\n    { user, shouldRefundCharged });\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateUserFullInfo(global, userId, {\n    settings: undefined,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('openChatRefundModal', async (global, actions, payload): Promise<void> => {\n  const { userId, tabId = getCurrentTabId() } = payload;\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const starsAmount = await callApi('fetchPaidMessagesRevenue', { user });\n  if (starsAmount === undefined) return;\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    chatRefundModal: {\n      userId,\n      starsToRefund: starsAmount,\n    },\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('updateContact', async (global, actions, payload): Promise<void> => {\n  const {\n    userId, isMuted = false, firstName, lastName, shouldSharePhoneNumber,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  actions.updateChatMutedState({ chatId: userId, isMuted });\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  let result;\n  if (!user.isContact && user.phoneNumber) {\n    result = await callApi('importContact', { phone: user.phoneNumber, firstName, lastName });\n  } else {\n    const { id, accessHash } = user;\n    result = await callApi('updateContact', {\n      id,\n      accessHash,\n      phoneNumber: '',\n      firstName,\n      lastName,\n      shouldSharePhoneNumber,\n    });\n  }\n\n  if (result) {\n    actions.loadPeerSettings({ peerId: userId });\n    actions.loadPeerStories({ peerId: userId });\n\n    global = getGlobal();\n    global = updateUser(\n      global,\n      user.id,\n      {\n        firstName,\n        lastName,\n      },\n    );\n    setGlobal(global);\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  global = closeNewContactDialog(global, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('deleteContact', async (global, actions, payload): Promise<void> => {\n  const { userId } = payload;\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  const { id, accessHash } = user;\n\n  await callApi('deleteContact', { id, accessHash });\n});\n\naddActionHandler('loadMoreProfilePhotos', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { peerId, shouldInvalidateCache, isPreload } = payload;\n  const isPrivate = isUserId(peerId);\n\n  const user = isPrivate ? selectUser(global, peerId) : undefined;\n  const chat = !isPrivate ? selectChat(global, peerId) : undefined;\n  const peer = user || chat;\n\n  if (chat && selectIsChatRestricted(global, peerId)) {\n    return;\n  }\n  const profilePhotos = selectPeerPhotos(global, peerId);\n  if (!peer?.avatarPhotoId) {\n    return;\n  }\n\n  if (profilePhotos && !shouldInvalidateCache && (isPreload || !profilePhotos.nextOffset)) return;\n\n  global = updatePeerPhotosIsLoading(global, peerId, true);\n  setGlobal(global);\n\n  global = getGlobal();\n\n  let userFullInfo = selectUserFullInfo(global, peerId);\n  let chatFullInfo = selectChatFullInfo(global, peerId);\n  if (user && !userFullInfo) {\n    const { id, accessHash } = user;\n    const result = await callApi('fetchFullUser', { id, accessHash });\n    if (!result?.user) {\n      return;\n    }\n    userFullInfo = result.fullInfo;\n  }\n\n  if (chat && !chatFullInfo) {\n    const result = await callApi('fetchFullChat', chat);\n    if (!result?.fullInfo) {\n      return;\n    }\n\n    chatFullInfo = result.fullInfo;\n  }\n\n  const peerFullInfo = userFullInfo || chatFullInfo;\n  if (!peerFullInfo) return;\n\n  const offset = profilePhotos?.nextOffset;\n  const limit = !offset || isPreload || shouldInvalidateCache ? PROFILE_PHOTOS_FIRST_LOAD_LIMIT : undefined;\n\n  const result = await callApi('fetchProfilePhotos', {\n    peer,\n    offset,\n    limit,\n  });\n  if (!result || !result.photos) {\n    return;\n  }\n\n  global = getGlobal();\n\n  const {\n    photos, count, nextOffsetId,\n  } = result;\n\n  global = updatePeerPhotos(global, peerId, {\n    newPhotos: photos,\n    count,\n    nextOffset: nextOffsetId,\n    fullInfo: peerFullInfo,\n    shouldInvalidateCache,\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('setUserSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n\n  if (!query) return;\n\n  void runThrottledForSearch(async () => {\n    const result = await callApi('searchChats', { query });\n\n    global = getGlobal();\n    const currentSearchQuery = selectTabState(global, tabId).userSearch.query;\n\n    if (!result || !currentSearchQuery || (query !== currentSearchQuery)) {\n      global = updateUserSearchFetchingStatus(global, false, tabId);\n      setGlobal(global);\n      return;\n    }\n\n    const {\n      accountResultIds, globalResultIds,\n    } = result;\n\n    const localUserIds = accountResultIds.filter(isUserId);\n    const globalUserIds = globalResultIds.filter(isUserId);\n\n    global = updateUserSearchFetchingStatus(global, false, tabId);\n    global = updateUserSearch(global, { localUserIds, globalUserIds }, tabId);\n\n    setGlobal(global);\n  });\n});\n\naddActionHandler('importContact', async (global, actions, payload): Promise<void> => {\n  const {\n    phoneNumber: phone, firstName, lastName,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const result = await callApi('importContact', { phone, firstName, lastName });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('Contacts.PhoneNumber.NotRegistred'),\n      tabId,\n    });\n\n    return;\n  }\n\n  actions.openChat({ id: result, tabId });\n\n  global = getGlobal();\n  global = closeNewContactDialog(global, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('reportSpam', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const peer = selectPeer(global, chatId);\n  if (!peer) {\n    return;\n  }\n\n  void callApi('reportSpam', peer);\n});\n\naddActionHandler('setEmojiStatus', async (global, actions, payload): Promise<void> => {\n  const {\n    emojiStatus, referrerWebAppKey, tabId = getCurrentTabId(),\n  } = payload;\n\n  const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n  if (!isCurrentUserPremium) {\n    if (referrerWebAppKey) {\n      actions.sendWebAppEvent({\n        webAppKey: referrerWebAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n        tabId,\n      });\n    }\n\n    actions.openPremiumModal({ initialSection: 'emoji_status', tabId });\n    return;\n  }\n\n  const result = await callApi('updateEmojiStatus', emojiStatus);\n\n  if (referrerWebAppKey) {\n    if (!result) {\n      actions.sendWebAppEvent({\n        webAppKey: referrerWebAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'SERVER_ERROR',\n          },\n        },\n        tabId,\n      });\n      return;\n    }\n\n    actions.sendWebAppEvent({\n      webAppKey: referrerWebAppKey,\n      event: {\n        eventType: 'emoji_status_set',\n      },\n      tabId,\n    });\n    actions.showNotification({\n      message: {\n        key: 'BotSuggestedStatusUpdated',\n      },\n      customEmojiIconId: emojiStatus.documentId,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('saveCloseFriends', async (global, actions, payload): Promise<void> => {\n  const { userIds } = payload;\n\n  const result = await callApi('saveCloseFriends', userIds);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n  global.contactList?.userIds.forEach((userId) => {\n    const { isCloseFriend } = global.users.byId[userId] || {};\n    if (isCloseFriend && !userIds.includes(userId)) {\n      global = updateUser(global, userId, {\n        isCloseFriend: undefined,\n      });\n    }\n  });\n  userIds.forEach((userId) => {\n    global = updateUser(global, userId, {\n      isCloseFriend: true,\n    });\n  });\n  setGlobal(global);\n});\n\naddActionHandler('openSuggestedStatusModal', async (global, actions, payload): Promise<void> => {\n  const {\n    customEmojiId, duration, botId, webAppKey, tabId = getCurrentTabId(),\n  } = payload;\n\n  const customEmoji = await callApi('fetchCustomEmoji', {\n    documentId: [customEmojiId],\n  });\n  if (!customEmoji?.[0]) {\n    if (webAppKey) {\n      actions.sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'SUGGESTED_EMOJI_INVALID',\n          },\n        },\n        tabId,\n      });\n    }\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    suggestedStatusModal: {\n      customEmojiId,\n      duration,\n      webAppKey,\n      botId,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('loadPeerSettings', async (global, actions, payload): Promise<void> => {\n  const { peerId } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  if (!userFullInfo) {\n    actions.loadFullUser({ userId: peerId });\n    return;\n  }\n\n  const user = selectUser(global, peerId);\n  if (!user) {\n    return;\n  }\n\n  const result = await callApi('fetchPeerSettings', user);\n  if (!result) return;\n\n  const { settings } = result;\n\n  global = getGlobal();\n  global = updateUserFullInfo(global, peerId, { settings });\n  setGlobal(global);\n});\n\naddActionHandler('markBotVerificationInfoShown', (global, actions, payload): ActionReturnType => {\n  const { peerId } = payload;\n\n  const currentPeerIds = global.settings.botVerificationShownPeerIds;\n  const newPeerIds = unique([peerId, ...currentPeerIds]).slice(0, BOT_VERIFICATION_PEERS_LIMIT);\n\n  global = {\n    ...global,\n    settings: {\n      ...global.settings,\n      botVerificationShownPeerIds: newPeerIds,\n    },\n  };\n\n  setGlobal(global);\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport { notifyAboutCall } from '../../../util/notifications';\nimport { onTickEnd } from '../../../util/schedulers';\nimport { addActionHandler, getGlobal } from '../../index';\nimport { updateChat, updateChatFullInfo } from '../../reducers';\nimport { removeGroupCall, updateGroupCall, updateGroupCallParticipant } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChat } from '../../selectors';\nimport { selectGroupCall, selectPhoneCallUser } from '../../selectors/calls';\nimport { checkNavigatorUserMediaPermissions, initializeSounds } from '../ui/calls';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updateGroupCall': {\n      if (update.call.connectionState === 'discarded') {\n        if (global.groupCalls.activeGroupCallId) {\n          if ('leaveGroupCall' in actions) actions.leaveGroupCall({ shouldRemove: true, tabId: getCurrentTabId() });\n          return undefined;\n        } else {\n          return removeGroupCall(global, update.call.id);\n        }\n      }\n\n      const groupCall = selectGroupCall(global, update.call.id);\n      const chatId = groupCall?.chatId;\n      if (chatId) {\n        global = updateChat(global, chatId, {\n          isCallNotEmpty: (groupCall.participantsCount > 0 || Boolean(groupCall.participants?.length)),\n        });\n      }\n\n      return updateGroupCall(\n        global,\n        update.call.id,\n        omit(update.call, ['connectionState']),\n        undefined,\n        update.call.participantsCount,\n      );\n    }\n    case 'updateGroupCallChatId': {\n      const chat = selectChat(global, update.chatId);\n      if (chat) {\n        global = updateChatFullInfo(global, update.chatId, {\n          groupCallId: update.call.id,\n        });\n      }\n      return global;\n    }\n    case 'updateGroupCallParticipants': {\n      const { groupCallId, participants, nextOffset } = update;\n      const { currentUserId } = global;\n\n      // `secret-sauce` should disconnect if the participant is us but from another device\n      global = getGlobal();\n      participants.forEach((participant) => {\n        if (participant.id) {\n          global = updateGroupCallParticipant(\n            global, groupCallId, participant.id, participant, Boolean(nextOffset) || currentUserId === participant.id,\n          );\n        }\n      });\n      if (nextOffset) {\n        global = updateGroupCall(global, groupCallId, {\n          nextOffset,\n        });\n      }\n\n      const groupCall = selectGroupCall(global, groupCallId);\n      const chatId = groupCall?.chatId;\n      if (chatId) {\n        global = updateChat(global, chatId, {\n          isCallNotEmpty: (groupCall.participantsCount > 0 || Boolean(groupCall.participants?.length)),\n        });\n      }\n      return global;\n    }\n    case 'updatePhoneCall': {\n      if (!ARE_CALLS_SUPPORTED) return undefined;\n\n      const {\n        phoneCall,\n        currentUserId,\n      } = global;\n\n      const { call } = update;\n\n      if (phoneCall) {\n        if (call.state === 'discarded') {\n          actions.playGroupCallSound({ sound: 'end' });\n          if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n\n          return {\n            ...global,\n            ...(call.needRating && { ratingPhoneCall: call }),\n          };\n        }\n\n        return undefined;\n      }\n\n      const isOutgoing = call?.adminId === currentUserId;\n\n      if (!isOutgoing && call.state === 'requested') {\n        onTickEnd(() => {\n          global = getGlobal();\n          const user = selectPhoneCallUser(global);\n          if (!user) return;\n          notifyAboutCall({\n            call,\n            user,\n          });\n        });\n\n        initializeSounds();\n        void checkNavigatorUserMediaPermissions(global, actions, call.isVideo, getCurrentTabId());\n        global = {\n          ...global,\n          phoneCall: call,\n        };\n\n        return updateTabState(global, {\n          isCallPanelVisible: false,\n        }, getCurrentTabId());\n      }\n    }\n  }\n\n  return undefined;\n});\n","import type { ApiChat, ApiMessage, ApiUpdateChat } from '../../../api/types';\nimport type { ActionReturnType } from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { ARCHIVED_FOLDER_ID, MAX_ACTIVE_PINNED_CHATS, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { buildCollectionByKey, omit } from '../../../util/iteratees';\nimport { isLocalMessageId } from '../../../util/keys/messageKey';\nimport { closeMessageNotifications, notifyAboutMessage } from '../../../util/notifications';\nimport { checkIfHasUnreadReactions, isChatChannel } from '../../helpers';\nimport {\n  addActionHandler, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  addChatListIds,\n  addUnreadMentions,\n  deleteChatMessages,\n  deletePeerPhoto,\n  leaveChat,\n  removeUnreadMentions,\n  replacePeerPhotos,\n  replacePinnedTopicIds,\n  replaceThreadParam,\n  updateChat,\n  updateChatFullInfo,\n  updateChatListType,\n  updatePeerStoriesHidden,\n  updateTopic,\n} from '../../reducers';\nimport { updateUnreadReactions } from '../../reducers/reactions';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatListType,\n  selectChatMessages,\n  selectCommonBoxChatId,\n  selectCurrentMessageList,\n  selectIsChatListed,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n} from '../../selectors';\n\nconst TYPING_STATUS_CLEAR_DELAY = 6000; // 6 seconds\nconst INVALIDATE_FULL_CHAT_FIELDS = new Set<keyof ApiChat>([\n  'boostLevel', 'isForum', 'isLinkedInDiscussion', 'fakeType', 'restrictionReasons', 'isJoinToSend', 'isJoinRequest',\n  'type',\n]);\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updateChat': {\n      const localChat = selectChat(global, update.id);\n      const { isForum: prevIsForum, lastReadOutboxMessageId } = localChat || {};\n\n      if (update.chat.lastReadOutboxMessageId && lastReadOutboxMessageId\n        && update.chat.lastReadOutboxMessageId < lastReadOutboxMessageId) {\n        update = {\n          ...update,\n          chat: omit(update.chat, ['lastReadInboxMessageId']),\n        };\n      }\n\n      global = updateChat(global, update.id, update.chat);\n\n      if (localChat?.areStoriesHidden !== update.chat.areStoriesHidden) {\n        global = updatePeerStoriesHidden(global, update.id, update.chat.areStoriesHidden || false);\n      }\n\n      setGlobal(global);\n\n      const updatedChat = selectChat(global, update.id);\n      if (!update.noTopChatsRequest && !selectIsChatListed(global, update.id)\n        && !updatedChat?.isNotJoined) {\n        // Reload top chats to update chat listing\n        actions.loadTopChats();\n      }\n\n      if (update.chat.id) {\n        closeMessageNotifications({\n          chatId: update.chat.id,\n          lastReadInboxMessageId: update.chat.lastReadInboxMessageId,\n        });\n      }\n\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        const { chatId: currentChatId } = selectCurrentMessageList(global, tabId) || {};\n        const chatUpdate = update as ApiUpdateChat;\n        // The property `isForum` was changed in another client\n        if (currentChatId === chatUpdate.id\n          && 'isForum' in chatUpdate.chat && prevIsForum !== chatUpdate.chat.isForum) {\n          if (prevIsForum) {\n            actions.closeForumPanel({ tabId });\n          }\n          actions.openChat({ id: currentChatId, tabId });\n        }\n      });\n\n      if (localChat) {\n        const chatUpdate = update.chat;\n        const changedFields = (Object.keys(chatUpdate) as (keyof ApiChat)[])\n          .filter((key) => localChat[key] !== chatUpdate[key]);\n        if (changedFields.some((key) => INVALIDATE_FULL_CHAT_FIELDS.has(key))) {\n          actions.invalidateFullInfo({ peerId: update.id });\n        }\n      }\n\n      return undefined;\n    }\n\n    case 'updateChatJoin': {\n      const listType = selectChatListType(global, update.id);\n      const chat = selectChat(global, update.id);\n\n      global = updateChat(global, update.id, { isNotJoined: false });\n      setGlobal(global);\n\n      if (chat) {\n        actions.requestChatUpdate({ chatId: chat.id });\n      }\n\n      actions.loadFullChat({ chatId: update.id, force: true });\n\n      if (!listType) {\n        return undefined;\n      }\n\n      global = getGlobal();\n      global = addChatListIds(global, listType, [update.id]);\n      setGlobal(global);\n\n      return undefined;\n    }\n\n    case 'updateChatLeave': {\n      global = leaveChat(global, update.id);\n      const chat = selectChat(global, update.id);\n      if (chat && isChatChannel(chat)) {\n        const chatMessages = selectChatMessages(global, update.id);\n        if (chatMessages) {\n          const localMessageIds = Object.keys(chatMessages).map(Number).filter(isLocalMessageId);\n          global = deleteChatMessages(global, chat.id, localMessageIds);\n        }\n      }\n\n      return global;\n    }\n\n    case 'updateChatInbox': {\n      return updateChat(global, update.id, update.chat);\n    }\n\n    case 'updateChatTypingStatus': {\n      const { id, threadId = MAIN_THREAD_ID, typingStatus } = update;\n      global = replaceThreadParam(global, id, threadId, 'typingStatus', typingStatus);\n      setGlobal(global);\n\n      setTimeout(() => {\n        global = getGlobal();\n        const currentTypingStatus = selectThreadParam(global, id, threadId, 'typingStatus');\n        if (typingStatus && currentTypingStatus && typingStatus.timestamp === currentTypingStatus.timestamp) {\n          global = replaceThreadParam(global, id, threadId, 'typingStatus', undefined);\n          setGlobal(global);\n        }\n      }, TYPING_STATUS_CLEAR_DELAY);\n\n      return undefined;\n    }\n\n    case 'newMessage': {\n      const { message } = update;\n\n      const isOur = message.senderId ? message.senderId === global.currentUserId : message.isOutgoing;\n      if (isOur && !message.isFromScheduled) {\n        return undefined;\n      }\n\n      const isLocal = isLocalMessageId(message.id!);\n\n      const chat = selectChat(global, update.chatId);\n      if (!chat) {\n        return undefined;\n      }\n\n      const hasMention = Boolean(update.message.id && update.message.hasUnreadMention);\n\n      if (!isLocal || chat.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        global = updateChat(global, update.chatId, {\n          unreadCount: chat.unreadCount ? chat.unreadCount + 1 : 1,\n        });\n\n        if (hasMention) {\n          global = addUnreadMentions(global, update.chatId, chat, [update.message.id!], true);\n        }\n\n        const topic = chat.isForum ? selectTopicFromMessage(global, message as ApiMessage) : undefined;\n        if (topic) {\n          global = updateTopic(global, update.chatId, topic.id, {\n            unreadCount: topic.unreadCount ? topic.unreadCount + 1 : 1,\n          });\n        }\n      }\n\n      setGlobal(global);\n\n      notifyAboutMessage({\n        chat,\n        message,\n      });\n\n      return undefined;\n    }\n\n    case 'updateCommonBoxMessages':\n    case 'updateChannelMessages': {\n      const { ids, messageUpdate } = update;\n\n      ids.forEach((id) => {\n        const chatId = ('channelId' in update ? update.channelId : selectCommonBoxChatId(global, id))!;\n        const chat = selectChat(global, chatId);\n\n        if (messageUpdate.reactions && chat?.unreadReactionsCount\n          && !checkIfHasUnreadReactions(global, messageUpdate.reactions)) {\n          global = updateUnreadReactions(global, chatId, {\n            unreadReactionsCount: Math.max(chat.unreadReactionsCount - 1, 0) || undefined,\n            unreadReactions: chat.unreadReactions?.filter((i) => i !== id),\n          });\n        }\n\n        if (!messageUpdate.hasUnreadMention && chat?.unreadMentionsCount) {\n          global = removeUnreadMentions(global, chatId, chat, [id], true);\n        }\n      });\n\n      return global;\n    }\n\n    case 'updateChatFullInfo': {\n      return updateChatFullInfo(global, update.id, update.fullInfo);\n    }\n\n    case 'updatePinnedChatIds': {\n      const { ids, folderId } = update;\n      const listType = folderId === ARCHIVED_FOLDER_ID ? 'archived' : 'active';\n      if (!ids) {\n        actions.loadPinnedDialogs({ listType });\n        return global;\n      }\n\n      return {\n        ...global,\n        chats: {\n          ...global.chats,\n          orderedPinnedIds: {\n            ...global.chats.orderedPinnedIds,\n            [listType]: ids.length ? ids : undefined,\n          },\n        },\n      };\n    }\n\n    case 'updatePinnedSavedDialogIds': {\n      const { ids } = update;\n\n      return {\n        ...global,\n        chats: {\n          ...global.chats,\n          orderedPinnedIds: {\n            ...global.chats.orderedPinnedIds,\n            saved: ids.length ? ids : undefined,\n          },\n        },\n      };\n    }\n\n    case 'updateChatPinned': {\n      const { id, isPinned } = update;\n      const listType = selectChatListType(global, id);\n      if (!listType) {\n        return undefined;\n      }\n\n      const { [listType]: orderedPinnedIds } = global.chats.orderedPinnedIds;\n\n      let newOrderedPinnedIds = orderedPinnedIds || [];\n      if (!isPinned) {\n        newOrderedPinnedIds = newOrderedPinnedIds.filter((pinnedId) => pinnedId !== id);\n      } else if (!newOrderedPinnedIds.includes(id)) {\n        // When moving pinned chats to archive, active ordered pinned ids don't get updated\n        // (to preserve chat pinned state when it returns from archive)\n        // If user already has max pinned chats, we should check for orderedIds\n        // that don't point to listed chats\n        if (listType === 'active' && newOrderedPinnedIds.length >= MAX_ACTIVE_PINNED_CHATS) {\n          const listIds = global.chats.listIds.active;\n          newOrderedPinnedIds = newOrderedPinnedIds.filter((pinnedId) => listIds && listIds.includes(pinnedId));\n        }\n\n        newOrderedPinnedIds = [id, ...newOrderedPinnedIds];\n      }\n\n      return {\n        ...global,\n        chats: {\n          ...global.chats,\n          orderedPinnedIds: {\n            ...global.chats.orderedPinnedIds,\n            [listType]: newOrderedPinnedIds.length ? newOrderedPinnedIds : undefined,\n          },\n        },\n      };\n    }\n\n    case 'updateSavedDialogPinned': {\n      const { id, isPinned } = update;\n\n      const { saved: orderedPinnedIds } = global.chats.orderedPinnedIds;\n\n      let newOrderedPinnedIds = orderedPinnedIds || [];\n      if (!isPinned) {\n        newOrderedPinnedIds = newOrderedPinnedIds.filter((pinnedId) => pinnedId !== id);\n      } else if (!newOrderedPinnedIds.includes(id)) {\n        newOrderedPinnedIds = [id, ...newOrderedPinnedIds];\n      }\n\n      return {\n        ...global,\n        chats: {\n          ...global.chats,\n          orderedPinnedIds: {\n            ...global.chats.orderedPinnedIds,\n            saved: newOrderedPinnedIds.length ? newOrderedPinnedIds : undefined,\n          },\n        },\n      };\n    }\n\n    case 'updateChatListType': {\n      const { id, folderId } = update;\n\n      return updateChatListType(global, id, folderId);\n    }\n\n    case 'updateChatFolder': {\n      const { id, folder } = update;\n      const { byId: chatFoldersById, orderedIds } = global.chatFolders;\n\n      const isDeleted = folder === undefined;\n\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        const tabState = selectTabState(global, tabId);\n        const isFolderActive = Object.values(chatFoldersById)[tabState.activeChatFolder - 1]?.id === id;\n\n        if (isFolderActive) {\n          global = updateTabState(global, { activeChatFolder: 0 }, tabId);\n        }\n      });\n\n      const newChatFoldersById = !isDeleted ? { ...chatFoldersById, [id]: folder } : omit(chatFoldersById, [id]);\n      const newOrderedIds = !isDeleted\n        ? orderedIds?.includes(id) ? orderedIds : [...(orderedIds || []), id]\n        : orderedIds?.filter((orderedId) => orderedId !== id);\n\n      return {\n        ...global,\n        chatFolders: {\n          ...global.chatFolders,\n          byId: newChatFoldersById,\n          orderedIds: newOrderedIds,\n          invites: omit(global.chatFolders.invites, [id]),\n        },\n      };\n    }\n\n    case 'updateChatFoldersOrder': {\n      const { orderedIds } = update;\n\n      return {\n        ...global,\n        chatFolders: {\n          ...global.chatFolders,\n          orderedIds,\n        },\n      };\n    }\n\n    case 'updateRecommendedChatFolders': {\n      const { folders } = update;\n\n      return {\n        ...global,\n        chatFolders: {\n          ...global.chatFolders,\n          recommended: folders,\n        },\n      };\n    }\n\n    case 'updateChatMembers': {\n      const targetChatFullInfo = selectChatFullInfo(global, update.id);\n      const { replacedMembers, addedMember, deletedMemberId } = update;\n      if (!targetChatFullInfo) {\n        return undefined;\n      }\n\n      let shouldUpdate = false;\n      let members = targetChatFullInfo?.members\n        ? [...targetChatFullInfo.members]\n        : [];\n\n      if (replacedMembers) {\n        members = replacedMembers;\n        shouldUpdate = true;\n      } else if (addedMember) {\n        if (\n          !members.length\n          || !members.some((m) => m.userId === addedMember.userId)\n        ) {\n          members.push(addedMember);\n          shouldUpdate = true;\n        }\n      } else if (members.length && deletedMemberId) {\n        const deleteIndex = members.findIndex((m) => m.userId === deletedMemberId);\n        if (deleteIndex > -1) {\n          members.slice(deleteIndex, 1);\n          shouldUpdate = true;\n        }\n      }\n\n      if (shouldUpdate) {\n        const adminMembers = members.filter(({ isOwner, isAdmin }) => isOwner || isAdmin);\n        // TODO Kicked members?\n\n        global = updateChat(global, update.id, { membersCount: members.length });\n        global = updateChatFullInfo(global, update.id, {\n          members,\n          adminMembersById: buildCollectionByKey(adminMembers, 'userId'),\n        });\n\n        return global;\n      }\n\n      return undefined;\n    }\n\n    case 'draftMessage': {\n      const {\n        chatId, threadId, draft,\n      } = update;\n      const chat = global.chats.byId[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      global = replaceThreadParam(global, chatId, threadId || MAIN_THREAD_ID, 'draft', draft);\n      global = updateChat(global, chatId, { draftDate: draft?.date });\n      return global;\n    }\n\n    case 'updatePendingJoinRequests': {\n      const { chatId, requestsPending, recentRequesterIds } = update;\n      const chat = global.chats.byId[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      global = updateChatFullInfo(global, chatId, {\n        requestsPending,\n        recentRequesterIds,\n      });\n      setGlobal(global);\n\n      actions.loadChatJoinRequests({ chatId });\n      return undefined;\n    }\n\n    case 'updatePinnedTopic': {\n      const { chatId, topicId, isPinned } = update;\n\n      const chat = global.chats.byId[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      global = updateTopic(global, chatId, topicId, {\n        isPinned,\n      });\n      setGlobal(global);\n\n      return undefined;\n    }\n\n    case 'updatePinnedTopicsOrder': {\n      const { chatId, order } = update;\n\n      const chat = global.chats.byId[chatId];\n      if (!chat) return undefined;\n\n      global = replacePinnedTopicIds(global, chatId, order);\n      setGlobal(global);\n\n      return undefined;\n    }\n\n    case 'updateTopic': {\n      const { chatId, topicId } = update;\n\n      const chat = selectChat(global, chatId);\n      if (!chat?.isForum) return undefined;\n\n      actions.loadTopicById({ chatId, topicId });\n\n      return undefined;\n    }\n\n    case 'updateTopics': {\n      const { chatId } = update;\n\n      const chat = selectChat(global, chatId);\n      if (!chat?.isForum) return undefined;\n\n      actions.loadTopics({ chatId, force: true });\n\n      return undefined;\n    }\n\n    case 'updateViewForumAsMessages': {\n      const { chatId, isEnabled } = update;\n\n      const chat = selectChat(global, chatId);\n      if (!chat?.isForum) return undefined;\n\n      global = updateChat(global, chatId, {\n        isForumAsMessages: isEnabled,\n      });\n      setGlobal(global);\n      break;\n    }\n\n    case 'updateNewProfilePhoto': {\n      const { peerId, photo } = update;\n\n      global = updateChat(global, peerId, {\n        avatarPhotoId: photo.id,\n      });\n      setGlobal(global);\n\n      actions.loadMoreProfilePhotos({ peerId, shouldInvalidateCache: true });\n\n      break;\n    }\n\n    case 'updateDeleteProfilePhoto': {\n      const { peerId, photoId } = update;\n\n      const peer = selectPeer(global, peerId);\n      if (!peer) {\n        return undefined;\n      }\n\n      if (!photoId || peer.avatarPhotoId === photoId) {\n        global = updateChat(global, peerId, {\n          avatarPhotoId: undefined,\n        });\n        global = replacePeerPhotos(global, peerId, undefined);\n      } else {\n        global = deletePeerPhoto(global, peerId, photoId);\n      }\n      setGlobal(global);\n\n      actions.loadMoreProfilePhotos({ peerId, shouldInvalidateCache: true });\n\n      break;\n    }\n  }\n\n  return undefined;\n});\n","import type {\n  ApiChat,\n  ApiMediaExtendedPreview,\n  ApiMessage,\n  ApiReactions,\n  MediaContent,\n} from \"../../../api/types\";\nimport type { ActiveEmojiInteraction, ThreadId } from \"../../../types\";\nimport type { RequiredGlobalActions } from \"../../index\";\nimport type {\n  ActionReturnType,\n  GlobalState,\n  RequiredGlobalState,\n} from \"../../types\";\nimport { MAIN_THREAD_ID } from \"../../../api/types\";\n\nimport { SERVICE_NOTIFICATIONS_USER_ID, DEBUG } from \"../../../config\";\nimport { areDeepEqual } from \"../../../util/areDeepEqual\";\nimport { isUserId } from \"../../../util/entities/ids\";\nimport { getCurrentTabId } from \"../../../util/establishMultitabRole\";\nimport {\n  buildCollectionByKey,\n  omit,\n  pickTruthy,\n  unique,\n} from \"../../../util/iteratees\";\nimport { getMessageKey, isLocalMessageId } from \"../../../util/keys/messageKey\";\nimport { notifyAboutMessage } from \"../../../util/notifications\";\nimport { onTickEnd } from \"../../../util/schedulers\";\nimport { getServerTime } from \"../../../util/serverTime\";\nimport {\n  addPaidReaction,\n  checkIfHasUnreadReactions,\n  getIsSavedDialog,\n  getMessageContent,\n  getMessageText,\n  isActionMessage,\n  isMessageLocal,\n} from \"../../helpers\";\nimport { getMessageReplyInfo, getStoryReplyInfo } from \"../../helpers/replies\";\nimport { addActionHandler, getGlobal, setGlobal } from \"../../index\";\nimport {\n  addMessages,\n  addViewportId,\n  clearMessageTranslation,\n  deleteChatMessages,\n  deleteChatScheduledMessages,\n  deletePeerPhoto,\n  deleteQuickReply,\n  deleteQuickReplyMessages,\n  deleteTopic,\n  removeChatFromChatLists,\n  replaceThreadParam,\n  updateChat,\n  updateChatLastMessageId,\n  updateChatMediaLoadingState,\n  updateChatMessage,\n  updateListedIds,\n  updateMessageTranslations,\n  updatePeerFullInfo,\n  updatePoll,\n  updatePollVote,\n  updateQuickReplies,\n  updateQuickReplyMessage,\n  updateScheduledMessage,\n  updateThreadInfo,\n  updateThreadInfos,\n  updateThreadUnreadFromForwardedMessage,\n  updateTopic,\n} from \"../../reducers\";\nimport { updateUnreadReactions } from \"../../reducers/reactions\";\nimport { updateTabState } from \"../../reducers/tabs\";\nimport {\n  selectCanAnimateSnapEffect,\n  selectChat,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCommonBoxChatId,\n  selectCurrentMessageList,\n  selectFirstUnreadId,\n  selectIsChatListed,\n  selectIsChatWithSelf,\n  selectIsMessageInCurrentMessageList,\n  selectIsServiceChatReady,\n  selectIsViewportNewest,\n  selectListedIds,\n  selectPerformanceSettingsValue,\n  selectPinnedIds,\n  selectSavedDialogIdFromMessage,\n  selectScheduledIds,\n  selectScheduledMessage,\n  selectTabState,\n  selectThreadByMessage,\n  selectThreadIdFromMessage,\n  selectThreadInfo,\n  selectTopic,\n  selectTopicFromMessage,\n  selectViewportIds,\n} from \"../../selectors\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { VIVA_API_KEY } from \"../../../config\";\n\nconst ANIMATION_DELAY = 350;\nconst SNAP_ANIMATION_DELAY = 1000;\nconst VIDEO_PROCESSING_NOTIFICATION_DELAY = 1000;\nlet lastVideoProcessingNotificationTime = 0;\n\naddActionHandler(\"apiUpdate\", (global, actions, update): ActionReturnType => {\n  switch (update[\"@type\"]) {\n    case \"newMessage\": {\n      const { chatId, id, message, shouldForceReply, wasDrafted, poll } =\n        update;\n\n      if (DEBUG) {\n        const messageText = getMessageText(message as ApiMessage);\n\n        // Check for potential Solana addresses (mint addresses)\n        const textString =\n          typeof messageText === \"string\"\n            ? messageText\n            : messageText?.text || \"\";\n\n        // Look for potential base58 strings that could be Solana addresses\n        const potentialAddresses = textString.match(\n          /[1-9A-HJ-NP-Za-km-z]{32,44}/g\n        );\n\n        if (potentialAddresses) {\n          potentialAddresses.forEach((address: string) => {\n            try {\n              // Validate using Solana's PublicKey class\n              const publicKey = new PublicKey(address);\n              if (PublicKey.isOnCurve(publicKey)) {\n                console.log(\"[MINT ADDRESS FOUND]\", {\n                  address,\n                  telegramChatId: chatId,\n                  messageId: id,\n                });\n              }\n            } catch (error) {\n              // Invalid address, ignore\n            }\n          });\n        }\n\n        // Store valid mint addresses in the pipeline\n        if (potentialAddresses) {\n          potentialAddresses.forEach(async (address: string) => {\n            try {\n              // Validate using Solana's PublicKey class\n              const publicKey = new PublicKey(address);\n              if (PublicKey.isOnCurve(publicKey)) {\n                // Call pipeline API to store the data\n                try {\n                  const response = await axios.post(\n                    \"http://localhost:8888/pipeline/store\",\n                    {\n                      chatId: String(chatId),\n                      messageId: String(id),\n                      telegramUserId: String(global.currentUserId),\n                      text:\n                        typeof messageText === \"string\"\n                          ? messageText\n                          : messageText?.text || \"\",\n                      mintAddress: address,\n                    },\n                    {\n                      headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-api-key\": VIVA_API_KEY,\n                      },\n                    }\n                  );\n\n                  console.log(\"[PIPELINE] Successfully stored:\", response.data);\n                } catch (apiError) {\n                  console.error(\"[PIPELINE] API call failed:\", apiError);\n                }\n              }\n            } catch (error) {\n              // Invalid address, ignore\n            }\n          });\n        }\n      }\n      global = updateWithLocalMedia(global, chatId, id, message);\n      global = updateListedAndViewportIds(\n        global,\n        actions,\n        message as ApiMessage\n      );\n\n      const newMessage = selectChatMessage(global, chatId, id)!;\n      const replyInfo = getMessageReplyInfo(newMessage);\n      const storyReplyInfo = getStoryReplyInfo(newMessage);\n      const chat = selectChat(global, chatId);\n      if (\n        chat?.isForum &&\n        replyInfo?.isForumTopic &&\n        !selectTopicFromMessage(global, newMessage) &&\n        replyInfo.replyToMsgId\n      ) {\n        actions.loadTopicById({ chatId, topicId: replyInfo.replyToMsgId });\n      }\n\n      const isLocal = isMessageLocal(message as ApiMessage);\n\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        // Force update for last message on drafted messages to prevent flickering\n        if (isLocal && wasDrafted) {\n          global = updateChatLastMessage(global, chatId, newMessage);\n        }\n\n        const threadId = selectThreadIdFromMessage(global, newMessage);\n        global = updateChatMediaLoadingState(\n          global,\n          newMessage,\n          chatId,\n          threadId,\n          tabId\n        );\n\n        if (\n          selectIsMessageInCurrentMessageList(\n            global,\n            chatId,\n            message as ApiMessage,\n            tabId\n          )\n        ) {\n          if (\n            isLocal &&\n            message.isOutgoing &&\n            !message.content?.action &&\n            !storyReplyInfo?.storyId &&\n            !message.content?.storyData\n          ) {\n            const currentMessageList = selectCurrentMessageList(global, tabId);\n            if (currentMessageList) {\n              // We do not use `actions.focusLastMessage` as it may be set with a delay (see below)\n              actions.focusMessage({\n                chatId,\n                threadId: currentMessageList.threadId,\n                messageId: message.id!,\n                noHighlight: true,\n                isResizingContainer: true,\n                tabId,\n              });\n            }\n          }\n\n          // @perf Wait until scroll animation finishes or simply rely on delivery status update\n          // (which is itself delayed)\n          if (!isLocal) {\n            setTimeout(() => {\n              global = getGlobal();\n              if (shouldForceReply) {\n                actions.updateDraftReplyInfo({\n                  replyToMsgId: id,\n                  tabId,\n                });\n              }\n              global = updateChatLastMessage(global, chatId, newMessage);\n              setGlobal(global);\n            }, ANIMATION_DELAY);\n          }\n        } else {\n          global = updateChatLastMessage(global, chatId, newMessage);\n        }\n      });\n\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      if (\n        message.reportDeliveryUntilDate &&\n        message.reportDeliveryUntilDate > getServerTime()\n      ) {\n        actions.reportMessageDelivery({ chatId, messageId: id });\n      }\n\n      setGlobal(global);\n\n      // Reload dialogs if chat is not present in the list\n      if (\n        !isLocal &&\n        !chat?.isNotJoined &&\n        !selectIsChatListed(global, chatId)\n      ) {\n        actions.loadTopChats();\n      }\n\n      if (!isLocal && selectIsChatWithSelf(global, chatId)) {\n        const savedDialogId = selectSavedDialogIdFromMessage(\n          global,\n          newMessage\n        );\n        if (\n          savedDialogId &&\n          !selectIsChatListed(global, savedDialogId, \"saved\")\n        ) {\n          actions.requestSavedDialogUpdate({ chatId: savedDialogId });\n        }\n      }\n\n      break;\n    }\n\n    case \"updateChatLastMessage\": {\n      const { id, lastMessage } = update;\n\n      global = updateChatLastMessage(global, id, lastMessage, true);\n      global = addMessages(global, [lastMessage]);\n      setGlobal(global);\n      break;\n    }\n\n    case \"updateStartEmojiInteraction\": {\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        const { chatId: currentChatId } =\n          selectCurrentMessageList(global, tabId) || {};\n\n        if (currentChatId !== update.id) return;\n        const message = selectChatMessage(\n          global,\n          currentChatId,\n          update.messageId\n        );\n\n        if (!message) return;\n\n        // Workaround for a weird behavior when interaction is received after watching reaction\n        if (getMessageText(message)?.text !== update.emoji) return;\n\n        const tabState = selectTabState(global, tabId);\n        global = updateTabState(\n          global,\n          {\n            activeEmojiInteractions: [\n              ...(tabState.activeEmojiInteractions || []),\n              {\n                id: Math.random(),\n                animatedEffect: update.emoji,\n                messageId: update.messageId,\n              } as ActiveEmojiInteraction,\n            ],\n          },\n          tabId\n        );\n      });\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"newScheduledMessage\": {\n      const { chatId, id, message, poll } = update;\n\n      global = updateWithLocalMedia(global, chatId, id, message, true);\n\n      const scheduledIds =\n        selectScheduledIds(global, chatId, MAIN_THREAD_ID) || [];\n      global = replaceThreadParam(\n        global,\n        chatId,\n        MAIN_THREAD_ID,\n        \"scheduledIds\",\n        unique([...scheduledIds, id])\n      );\n\n      const threadId = selectThreadIdFromMessage(global, message);\n      if (threadId !== MAIN_THREAD_ID) {\n        const threadScheduledIds =\n          selectScheduledIds(global, chatId, threadId) || [];\n        global = replaceThreadParam(\n          global,\n          chatId,\n          threadId,\n          \"scheduledIds\",\n          unique([...threadScheduledIds, id])\n        );\n      }\n\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      global = updatePeerFullInfo(global, chatId, {\n        hasScheduledMessages: true,\n      });\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateScheduledMessage\": {\n      const { chatId, id, message, poll, isFromNew } = update;\n\n      const currentMessage = selectScheduledMessage(global, chatId, id);\n      if (!currentMessage) {\n        if (isFromNew) {\n          actions.apiUpdate({\n            \"@type\": \"newScheduledMessage\",\n            id: update.id,\n            chatId: update.chatId,\n            message: update.message as ApiMessage,\n            poll: update.poll,\n          });\n        }\n        return;\n      }\n\n      global = updateWithLocalMedia(global, chatId, id, message, true);\n      const ids = Object.keys(selectChatScheduledMessages(global, chatId) || {})\n        .map(Number)\n        .sort((a, b) => b - a);\n      global = replaceThreadParam(\n        global,\n        chatId,\n        MAIN_THREAD_ID,\n        \"scheduledIds\",\n        ids\n      );\n\n      const threadId = selectThreadIdFromMessage(global, currentMessage);\n      if (threadId !== MAIN_THREAD_ID) {\n        const threadScheduledIds =\n          selectScheduledIds(global, chatId, threadId) || [];\n        global = replaceThreadParam(\n          global,\n          chatId,\n          threadId,\n          \"scheduledIds\",\n          threadScheduledIds.sort((a, b) => b - a)\n        );\n      }\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateMessage\": {\n      const { chatId, id, message, poll, isFromNew, shouldForceReply } = update;\n\n      const currentMessage = selectChatMessage(global, chatId, id);\n\n      if (!currentMessage) {\n        if (isFromNew) {\n          actions.apiUpdate({\n            \"@type\": \"newMessage\",\n            id: update.id,\n            chatId: update.chatId,\n            message: update.message,\n            poll: update.poll,\n            shouldForceReply,\n          });\n        }\n        return;\n      }\n\n      const chat = selectChat(global, chatId);\n\n      global = updateWithLocalMedia(global, chatId, id, message);\n\n      const newMessage = selectChatMessage(global, chatId, id)!;\n\n      if (message.reactions && chat) {\n        global = updateReactions(\n          global,\n          actions,\n          chatId,\n          id,\n          message.reactions,\n          chat,\n          newMessage.isOutgoing,\n          currentMessage\n        );\n      }\n\n      if (message.content?.text?.text !== currentMessage?.content?.text?.text) {\n        global = clearMessageTranslation(global, chatId, id);\n      }\n\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateQuickReplyMessage\": {\n      const { id, message, poll } = update;\n\n      global = updateQuickReplyMessage(global, id, message);\n\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"deleteQuickReplyMessages\": {\n      const { messageIds } = update;\n\n      global = deleteQuickReplyMessages(global, messageIds);\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateQuickReplies\": {\n      const { quickReplies } = update;\n      const byId = buildCollectionByKey(quickReplies, \"id\");\n\n      global = updateQuickReplies(global, byId);\n      setGlobal(global);\n      break;\n    }\n\n    case \"deleteQuickReply\": {\n      global = deleteQuickReply(global, update.quickReplyId);\n      setGlobal(global);\n      break;\n    }\n\n    case \"updateVideoProcessingPending\": {\n      const { chatId, localId, newScheduledMessageId } = update;\n\n      global = deleteChatMessages(global, chatId, [localId]);\n      global = updatePeerFullInfo(global, chatId, {\n        hasScheduledMessages: true,\n      });\n\n      setGlobal(global);\n\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        const currentMessageList = selectCurrentMessageList(global, tabId);\n        if (currentMessageList?.chatId !== chatId) return;\n\n        const now = Date.now();\n        if (\n          now - lastVideoProcessingNotificationTime <\n          VIDEO_PROCESSING_NOTIFICATION_DELAY\n        ) {\n          return;\n        }\n        lastVideoProcessingNotificationTime = now;\n\n        actions.showNotification({\n          message: {\n            key: \"VideoConversionText\",\n          },\n          title: {\n            key: \"VideoConversionTitle\",\n          },\n          tabId,\n        });\n\n        actions.focusMessage({\n          chatId,\n          messageId: newScheduledMessageId,\n          messageListType: \"scheduled\",\n          tabId,\n        });\n      });\n\n      break;\n    }\n\n    case \"updateMessageSendSucceeded\": {\n      const { chatId, localId, message, poll } = update;\n\n      global = updateListedAndViewportIds(global, actions, message);\n\n      const currentMessage = selectChatMessage(global, chatId, localId);\n\n      global = deleteChatMessages(global, chatId, [localId]);\n\n      // Edge case for \"Send When Online\"\n      if (message.isScheduled) {\n        global = deleteChatScheduledMessages(global, chatId, [localId]);\n      }\n\n      global = updateChatMessage(global, chatId, message.id, {\n        ...currentMessage,\n        ...message,\n        previousLocalId: localId,\n        isDeleting: undefined,\n      });\n\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      global = {\n        ...global,\n        fileUploads: {\n          byMessageKey: omit(global.fileUploads.byMessageKey, [\n            getMessageKey(message),\n          ]),\n        },\n      };\n\n      const newMessage = selectChatMessage(global, chatId, message.id)!;\n      global = updateChatLastMessage(global, chatId, newMessage);\n\n      const thread = selectThreadByMessage(global, message);\n      // For some reason Telegram requires to manually mark outgoing thread messages read\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        const { chatId: currentChatId, threadId: currentThreadId } =\n          selectCurrentMessageList(global, tabId) || {};\n        if (\n          currentChatId !== chatId ||\n          (thread?.threadInfo?.threadId || MAIN_THREAD_ID) !== currentThreadId\n        ) {\n          return;\n        }\n\n        actions.markMessageListRead({ maxId: message.id, tabId });\n      });\n      if (thread?.threadInfo?.threadId) {\n        global = replaceThreadParam(\n          global,\n          chatId,\n          thread.threadInfo.threadId,\n          \"threadInfo\",\n          {\n            ...thread.threadInfo,\n            lastMessageId: message.id,\n            lastReadInboxMessageId: message.id,\n          }\n        );\n      }\n\n      global = updateChat(global, chatId, {\n        lastReadInboxMessageId: message.id,\n      });\n\n      const chat = selectChat(global, chatId);\n      // Reload dialogs if chat is not present in the list\n      if (!chat?.isNotJoined && !selectIsChatListed(global, chatId)) {\n        actions.loadTopChats();\n      }\n\n      if (selectIsChatWithSelf(global, chatId)) {\n        const savedDialogId = selectSavedDialogIdFromMessage(\n          global,\n          newMessage\n        );\n        if (\n          savedDialogId &&\n          !selectIsChatListed(global, savedDialogId, \"saved\")\n        ) {\n          actions.requestSavedDialogUpdate({ chatId: savedDialogId });\n        }\n      }\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateScheduledMessageSendSucceeded\": {\n      const { chatId, localId, message, poll } = update;\n      const scheduledIds =\n        selectScheduledIds(global, chatId, MAIN_THREAD_ID) || [];\n      global = replaceThreadParam(\n        global,\n        chatId,\n        MAIN_THREAD_ID,\n        \"scheduledIds\",\n        [...scheduledIds, message.id]\n      );\n\n      const threadId = selectThreadIdFromMessage(global, message);\n      if (threadId !== MAIN_THREAD_ID) {\n        const threadScheduledIds =\n          selectScheduledIds(global, chatId, threadId) || [];\n        global = replaceThreadParam(global, chatId, threadId, \"scheduledIds\", [\n          ...threadScheduledIds,\n          message.id,\n        ]);\n      }\n\n      const currentMessage = selectScheduledMessage(global, chatId, localId);\n\n      global = deleteChatScheduledMessages(global, chatId, [localId]);\n      global = updateScheduledMessage(global, chatId, message.id, {\n        ...currentMessage,\n        ...message,\n        previousLocalId: localId,\n        isDeleting: undefined,\n      });\n\n      if (poll) {\n        global = updatePoll(global, poll.id, poll);\n      }\n\n      setGlobal(global);\n      break;\n    }\n\n    case \"updatePinnedIds\": {\n      const { chatId, isPinned, messageIds } = update;\n\n      const messages = pickTruthy(\n        selectChatMessages(global, chatId),\n        messageIds\n      );\n      const updatePerThread: Record<ThreadId, number[]> = {\n        [MAIN_THREAD_ID]: messageIds,\n      };\n      Object.values(messages).forEach((message) => {\n        const threadId = selectThreadIdFromMessage(global, message);\n        global = updateChatMessage(global, chatId, message.id, {\n          isPinned,\n        });\n        if (threadId === MAIN_THREAD_ID) return;\n        const currentUpdatedInThread = updatePerThread[threadId] || [];\n        currentUpdatedInThread.push(message.id);\n        updatePerThread[threadId] = currentUpdatedInThread;\n      });\n\n      Object.entries(updatePerThread).forEach(([threadId, ids]) => {\n        const pinnedIds = selectPinnedIds(global, chatId, MAIN_THREAD_ID) || [];\n        const newPinnedIds = isPinned\n          ? unique(pinnedIds.concat(ids)).sort((a, b) => b - a)\n          : pinnedIds.filter((id) => !ids.includes(id));\n        global = replaceThreadParam(\n          global,\n          chatId,\n          Number(threadId),\n          \"pinnedIds\",\n          newPinnedIds\n        );\n      });\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateThreadInfo\": {\n      const { threadInfo } = update;\n\n      global = updateThreadInfos(global, [threadInfo]);\n      const { chatId, threadId } = threadInfo;\n      if (!chatId || !threadId) return;\n\n      const chat = selectChat(global, chatId);\n      const currentThreadInfo = selectThreadInfo(global, chatId, threadId);\n      const topic = selectTopic(global, chatId, threadId);\n      if (chat?.isForum) {\n        if (\n          !topic ||\n          topic.lastMessageId !== currentThreadInfo?.lastReadInboxMessageId\n        ) {\n          actions.loadTopicById({ chatId, topicId: Number(threadId) });\n        } else {\n          global = updateTopic(global, chatId, Number(threadId), {\n            unreadCount: 0,\n          });\n        }\n      }\n\n      // Update reply thread last read message id if already read in main thread\n      if (!chat?.isForum) {\n        const lastReadInboxMessageId = chat?.lastReadInboxMessageId;\n        const lastReadInboxMessageIdInThread =\n          threadInfo.lastReadInboxMessageId || lastReadInboxMessageId;\n        if (lastReadInboxMessageId && lastReadInboxMessageIdInThread) {\n          global = updateThreadInfo(global, chatId, threadId, {\n            lastReadInboxMessageId: Math.max(\n              lastReadInboxMessageIdInThread,\n              lastReadInboxMessageId\n            ),\n          });\n        }\n      }\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"resetMessages\": {\n      const { id: chatId } = update;\n      const messagesById = selectChatMessages(global, chatId);\n\n      if (messagesById && !isUserId(chatId)) {\n        const tabId = getCurrentTabId();\n        global = deleteChatMessages(\n          global,\n          chatId,\n          Object.keys(messagesById).map(Number)\n        );\n        setGlobal(global);\n        actions.loadFullChat({ chatId, force: true });\n        actions.loadViewportMessages({\n          chatId,\n          threadId: MAIN_THREAD_ID,\n          tabId,\n        });\n      }\n\n      break;\n    }\n\n    case \"deleteMessages\": {\n      const { ids, chatId } = update;\n\n      deleteMessages(global, chatId, ids, actions);\n      break;\n    }\n\n    case \"deleteScheduledMessages\": {\n      const { ids, newIds, chatId } = update;\n\n      const hadVideoProcessing = ids?.some(\n        (id) =>\n          selectScheduledMessage(global, chatId, id)?.isVideoProcessingPending\n      );\n      const processedVideoId = newIds?.find((id) => {\n        const message = selectChatMessage(global, chatId, id);\n        return message?.content.video;\n      });\n\n      if (hadVideoProcessing && processedVideoId) {\n        Object.values(global.byTabId).forEach(({ id: tabId }) => {\n          actions.showNotification({\n            message: {\n              key: \"VideoConversionDone\",\n            },\n            actionText: {\n              key: \"VideoConversionView\",\n            },\n            action: {\n              action: \"focusMessage\",\n              payload: {\n                chatId,\n                messageId: processedVideoId,\n                tabId,\n              },\n            },\n            tabId,\n          });\n        });\n      }\n\n      deleteScheduledMessages(chatId, ids, actions, global);\n      break;\n    }\n\n    case \"deleteHistory\": {\n      const { chatId } = update;\n      const chatMessages = global.messages.byChatId[chatId];\n      if (chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n        global = {\n          ...global,\n          serviceNotifications: global.serviceNotifications.map(\n            (notification) => ({\n              ...notification,\n              isDeleted: true,\n            })\n          ),\n        };\n        setGlobal(global);\n      }\n\n      if (chatMessages) {\n        const ids = Object.keys(chatMessages.byId).map(Number);\n        global = getGlobal();\n        deleteMessages(global, chatId, ids, actions);\n      } else {\n        actions.requestChatUpdate({ chatId });\n      }\n\n      global = getGlobal();\n      global = removeChatFromChatLists(global, chatId);\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"deleteSavedHistory\": {\n      const { chatId } = update;\n      const currentUserId = global.currentUserId!;\n      global = removeChatFromChatLists(global, chatId, \"saved\");\n      setGlobal(global);\n\n      global = getGlobal();\n      deleteThread(global, currentUserId, chatId, actions);\n\n      break;\n    }\n\n    case \"deleteParticipantHistory\": {\n      const { chatId, peerId } = update;\n\n      global = getGlobal();\n      deleteParticipantHistory(global, chatId, peerId, actions);\n\n      break;\n    }\n\n    case \"updateCommonBoxMessages\": {\n      const { ids, messageUpdate } = update;\n\n      ids.forEach((id) => {\n        const chatId = selectCommonBoxChatId(global, id);\n        if (chatId) {\n          global = updateChatMessage(global, chatId, id, messageUpdate);\n        }\n      });\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateChannelMessages\": {\n      const { channelId, ids, messageUpdate } = update;\n\n      ids.forEach((id) => {\n        global = updateChatMessage(global, channelId, id, messageUpdate);\n      });\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateMessagePoll\": {\n      const { pollId, pollUpdate } = update;\n\n      global = updatePoll(global, pollId, pollUpdate);\n\n      setGlobal(global);\n      break;\n    }\n\n    case \"updateMessagePollVote\": {\n      const { pollId, peerId, options } = update;\n      global = updatePollVote(global, pollId, peerId, options);\n      setGlobal(global);\n\n      break;\n    }\n\n    case \"updateServiceNotification\": {\n      const { message } = update;\n\n      if (selectIsServiceChatReady(global)) {\n        actions.createServiceNotification({ message });\n      }\n\n      break;\n    }\n\n    case \"updateMessageReactions\": {\n      const { chatId, id, reactions } = update;\n      const message = selectChatMessage(global, chatId, id);\n      const chat = selectChat(global, update.chatId);\n\n      if (!chat || !message) return;\n\n      global = updateReactions(\n        global,\n        actions,\n        chatId,\n        id,\n        reactions,\n        chat,\n        message.isOutgoing,\n        message\n      );\n      setGlobal(global);\n      break;\n    }\n\n    case \"updateMessageExtendedMedia\": {\n      const { chatId, id, extendedMedia, isBought } = update;\n      const message = selectChatMessage(global, chatId, id);\n      const chat = selectChat(global, update.chatId);\n\n      if (!chat || !message) return;\n\n      if (message.content.invoice) {\n        const media = extendedMedia[0];\n        if (\n          \"mediaType\" in media &&\n          media.mediaType === \"extendedMediaPreview\"\n        ) {\n          if (!message.content.invoice) return;\n          global = updateChatMessage(global, chatId, id, {\n            content: {\n              ...message.content,\n              invoice: {\n                ...message.content.invoice,\n                extendedMedia: media,\n              },\n            },\n          });\n          setGlobal(global);\n        } else {\n          const content = media as MediaContent;\n          global = updateChatMessage(global, chatId, id, {\n            content: {\n              ...content,\n            },\n          });\n          setGlobal(global);\n        }\n      }\n\n      if (message.content.paidMedia) {\n        const paidMediaUpdate = isBought\n          ? { isBought, extendedMedia }\n          : {\n              extendedMedia: extendedMedia as ApiMediaExtendedPreview[],\n              isBought: undefined,\n            };\n\n        global = updateChatMessage(global, chatId, id, {\n          content: {\n            ...message.content,\n            paidMedia: {\n              ...message.content.paidMedia,\n              ...paidMediaUpdate,\n            },\n          },\n        });\n        setGlobal(global);\n      }\n\n      break;\n    }\n\n    case \"updateTranscribedAudio\": {\n      const { transcriptionId, text, isPending } = update;\n\n      global = {\n        ...global,\n        transcriptions: {\n          ...global.transcriptions,\n          [transcriptionId]: {\n            ...(global.transcriptions[transcriptionId] || {}),\n            transcriptionId,\n            text,\n            isPending,\n          },\n        },\n      };\n      setGlobal(global);\n      break;\n    }\n\n    case \"updateMessageSendFailed\": {\n      const { chatId, localId, error } = update;\n\n      if (error.match(/CHAT_SEND_.+?FORBIDDEN/)) {\n        Object.values(global.byTabId).forEach(({ id: tabId }) => {\n          actions.showAllowedMessageTypesNotification({ chatId, tabId });\n        });\n      }\n\n      global = updateChatMessage(global, chatId, localId, {\n        sendingState: \"messageSendingStateFailed\",\n      });\n      setGlobal(global);\n      break;\n    }\n\n    case \"updateMessageTranslations\": {\n      const { chatId, messageIds, toLanguageCode, translations } = update;\n\n      global = updateMessageTranslations(\n        global,\n        chatId,\n        messageIds,\n        toLanguageCode,\n        translations\n      );\n\n      setGlobal(global);\n      break;\n    }\n\n    case \"failedMessageTranslations\": {\n      const { chatId, messageIds, toLanguageCode } = update;\n\n      global = updateMessageTranslations(\n        global,\n        chatId,\n        messageIds,\n        toLanguageCode,\n        []\n      );\n\n      setGlobal(global);\n    }\n  }\n});\n\nfunction updateReactions<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  id: number,\n  reactions: ApiReactions,\n  chat: ApiChat,\n  isOutgoing?: boolean,\n  message?: ApiMessage\n): T {\n  const currentReactions = message?.reactions;\n\n  // `updateMessageReactions` happens with an interval, so we try to avoid redundant global state updates\n  if (currentReactions && areDeepEqual(reactions, currentReactions)) {\n    return global;\n  }\n\n  const localPaidReaction = currentReactions?.results.find(\n    (r) => r.localAmount\n  );\n  // Save local count on update, but reset if we sent reaction\n  if (localPaidReaction?.localAmount) {\n    const {\n      localIsPrivate: isPrivate,\n      localAmount,\n      localPeerId,\n    } = localPaidReaction;\n    reactions.results = addPaidReaction(\n      reactions.results,\n      localAmount,\n      isPrivate,\n      localPeerId\n    );\n  }\n\n  global = updateChatMessage(global, chatId, id, { reactions });\n\n  if (!isOutgoing) {\n    return global;\n  }\n\n  const { reaction, isOwn, isUnread } = reactions.recentReactions?.[0] ?? {};\n  const reactionEffectsEnabled = selectPerformanceSettingsValue(\n    global,\n    \"reactionEffects\"\n  );\n  if (reactionEffectsEnabled && message && reaction && isUnread && !isOwn) {\n    const messageKey = getMessageKey(message);\n    // Start reaction only in master tab\n    actions.startActiveReaction({\n      containerId: messageKey,\n      reaction,\n      tabId: getCurrentTabId(),\n    });\n  }\n\n  const hasUnreadReactionsForMessageInChat = chat.unreadReactions?.includes(id);\n  const hasUnreadReactionsInNewReactions = checkIfHasUnreadReactions(\n    global,\n    reactions\n  );\n\n  // Only notify about added reactions, not removed ones\n  if (hasUnreadReactionsInNewReactions && !hasUnreadReactionsForMessageInChat) {\n    global = updateUnreadReactions(global, chatId, {\n      unreadReactionsCount: (chat?.unreadReactionsCount || 0) + 1,\n      unreadReactions: [...(chat?.unreadReactions || []), id].sort(\n        (a, b) => b - a\n      ),\n    });\n\n    const newMessage = selectChatMessage(global, chatId, id);\n\n    if (!chat || !newMessage) return global;\n\n    onTickEnd(() => {\n      notifyAboutMessage({\n        chat,\n        message: newMessage,\n        isReaction: true,\n      });\n    });\n  }\n\n  if (!hasUnreadReactionsInNewReactions && hasUnreadReactionsForMessageInChat) {\n    global = updateUnreadReactions(global, chatId, {\n      unreadReactionsCount: (chat?.unreadReactionsCount || 1) - 1,\n      unreadReactions: chat?.unreadReactions?.filter((i) => i !== id),\n    });\n  }\n\n  return global;\n}\n\nexport function updateWithLocalMedia(\n  global: RequiredGlobalState,\n  chatId: string,\n  id: number,\n  messageUpdate: Partial<ApiMessage>,\n  isScheduled = false\n) {\n  const currentMessage = isScheduled\n    ? selectScheduledMessage(global, chatId, id)\n    : selectChatMessage(global, chatId, id);\n\n  // Preserve locally uploaded media.\n  if (currentMessage && messageUpdate.content && !isLocalMessageId(id)) {\n    const { photo, video, sticker, document } =\n      getMessageContent(currentMessage);\n\n    if (photo && messageUpdate.content.photo) {\n      messageUpdate.content.photo.blobUrl ??= photo.blobUrl;\n      messageUpdate.content.photo.thumbnail ??= photo.thumbnail;\n    } else if (video && messageUpdate.content.video) {\n      messageUpdate.content.video.blobUrl ??= video.blobUrl;\n    } else if (sticker && messageUpdate.content.sticker) {\n      messageUpdate.content.sticker.isPreloadedGlobally ??=\n        sticker.isPreloadedGlobally;\n    } else if (document && messageUpdate.content.document) {\n      messageUpdate.content.document.previewBlobUrl ??= document.previewBlobUrl;\n    }\n  }\n\n  const newMessage = currentMessage\n    ? { ...currentMessage, ...messageUpdate }\n    : messageUpdate;\n\n  return isScheduled\n    ? updateScheduledMessage(global, chatId, id, newMessage)\n    : updateChatMessage(global, chatId, id, newMessage);\n}\n\nfunction updateThreadUnread<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  message: ApiMessage,\n  isDeleting?: boolean\n) {\n  const { chatId } = message;\n\n  const replyInfo = getMessageReplyInfo(message);\n\n  const { threadInfo } = selectThreadByMessage(global, message) || {};\n\n  if (!threadInfo && replyInfo?.replyToMsgId) {\n    const originMessage = selectChatMessage(\n      global,\n      chatId,\n      replyInfo.replyToMsgId\n    );\n    if (originMessage) {\n      global = updateThreadUnreadFromForwardedMessage(\n        global,\n        originMessage,\n        chatId,\n        message.id,\n        isDeleting\n      );\n    } else {\n      actions.loadMessage({\n        chatId,\n        messageId: replyInfo.replyToMsgId,\n        threadUpdate: {\n          isDeleting,\n          lastMessageId: message.id,\n        },\n      });\n    }\n  }\n\n  return global;\n}\n\nfunction updateListedAndViewportIds<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  message: ApiMessage\n) {\n  const { id, chatId } = message;\n\n  const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n\n  const { threadInfo } = selectThreadByMessage(global, message) || {};\n\n  const chat = selectChat(global, chatId);\n  const isUnreadChatNotLoaded =\n    chat?.unreadCount && !selectListedIds(global, chatId, MAIN_THREAD_ID);\n\n  global = updateThreadUnread(global, actions, message);\n  const { threadId } = threadInfo ?? { threadId: savedDialogId };\n\n  if (threadId) {\n    global = updateListedIds(global, chatId, threadId, [id]);\n\n    Object.values(global.byTabId).forEach(({ id: tabId }) => {\n      if (selectIsViewportNewest(global, chatId, threadId, tabId)) {\n        // Always keep the first unread message in the viewport list\n        const firstUnreadId = selectFirstUnreadId(global, chatId, threadId);\n        const candidateGlobal = addViewportId(\n          global,\n          chatId,\n          threadId,\n          id,\n          tabId\n        );\n        const newViewportIds = selectViewportIds(\n          candidateGlobal,\n          chatId,\n          threadId,\n          tabId\n        );\n\n        if (!firstUnreadId || newViewportIds!.includes(firstUnreadId)) {\n          global = candidateGlobal;\n        }\n      }\n    });\n\n    if (threadInfo) {\n      global = replaceThreadParam(global, chatId, threadId, \"threadInfo\", {\n        ...threadInfo,\n        lastMessageId: message.id,\n      });\n\n      if (!isMessageLocal(message) && !isActionMessage(message)) {\n        global = updateThreadInfo(global, chatId, threadId, {\n          messagesCount: (threadInfo.messagesCount || 0) + 1,\n        });\n      }\n    }\n  }\n\n  if (isUnreadChatNotLoaded) {\n    return global;\n  }\n\n  global = updateListedIds(global, chatId, MAIN_THREAD_ID, [id]);\n\n  Object.values(global.byTabId).forEach(({ id: tabId }) => {\n    if (selectIsViewportNewest(global, chatId, MAIN_THREAD_ID, tabId)) {\n      // Always keep the first unread message in the viewport list\n      const firstUnreadId = selectFirstUnreadId(global, chatId, MAIN_THREAD_ID);\n      const candidateGlobal = addViewportId(\n        global,\n        chatId,\n        MAIN_THREAD_ID,\n        id,\n        tabId\n      );\n      const newViewportIds = selectViewportIds(\n        candidateGlobal,\n        chatId,\n        MAIN_THREAD_ID,\n        tabId\n      );\n\n      if (!firstUnreadId || newViewportIds!.includes(firstUnreadId)) {\n        global = candidateGlobal;\n      }\n    }\n  });\n\n  return global;\n}\n\nfunction updateChatLastMessage<T extends GlobalState>(\n  global: T,\n  chatId: string,\n  message: ApiMessage,\n  force = false\n) {\n  const { chats } = global;\n  const chat = chats.byId[chatId];\n  const currentLastMessageId = selectChatLastMessageId(global, chatId);\n\n  const topic = chat?.isForum\n    ? selectTopicFromMessage(global, message)\n    : undefined;\n  if (topic) {\n    global = updateTopic(global, chatId, topic.id, {\n      lastMessageId: message.id,\n    });\n  }\n\n  const threadId = selectThreadIdFromMessage(global, message);\n  global = updateThreadInfo(global, chatId, threadId, {\n    lastMessageId: message.id,\n  });\n\n  const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n  if (savedDialogId) {\n    global = updateChatLastMessageId(\n      global,\n      savedDialogId,\n      message.id,\n      \"saved\"\n    );\n  }\n\n  if (currentLastMessageId && !force) {\n    const isSameOrNewer =\n      currentLastMessageId === message.id ||\n      currentLastMessageId === message.previousLocalId ||\n      message.id > currentLastMessageId;\n\n    if (!isSameOrNewer) {\n      return global;\n    }\n  }\n\n  global = updateChatLastMessageId(global, chatId, message.id);\n\n  return global;\n}\n\nfunction findLastMessage<T extends GlobalState>(\n  global: T,\n  chatId: string,\n  threadId: ThreadId = MAIN_THREAD_ID\n) {\n  const byId = selectChatMessages(global, chatId);\n  const listedIds = selectListedIds(global, chatId, threadId);\n\n  if (!byId || !listedIds) {\n    return undefined;\n  }\n\n  let i = listedIds.length;\n  while (i--) {\n    const message = byId[listedIds[i]];\n    if (message && !message.isDeleting) {\n      return message;\n    }\n  }\n\n  return undefined;\n}\n\nexport function deleteParticipantHistory<T extends GlobalState>(\n  global: T,\n  chatId: string,\n  peerId: string,\n  actions: RequiredGlobalActions\n) {\n  const byId = selectChatMessages(global, chatId);\n\n  const messageIds = Object.values(byId)\n    .filter((message) => {\n      return message.senderId === peerId;\n    })\n    .map((message) => message.id);\n\n  if (!messageIds.length) {\n    return;\n  }\n\n  deleteMessages(global, chatId, messageIds, actions);\n}\n\nexport function deleteThread<T extends GlobalState>(\n  global: T,\n  chatId: string,\n  threadId: ThreadId,\n  actions: RequiredGlobalActions\n) {\n  const byId = selectChatMessages(global, chatId);\n  if (!byId) {\n    return;\n  }\n\n  const messageIds = Object.values(byId)\n    .filter((message) => {\n      const messageThreadId = selectThreadIdFromMessage(global, message);\n      return messageThreadId === threadId;\n    })\n    .map((message) => message.id);\n\n  if (!messageIds.length) {\n    return;\n  }\n\n  deleteMessages(global, chatId, messageIds, actions);\n}\n\nexport function deleteMessages<T extends GlobalState>(\n  global: T,\n  chatId: string | undefined,\n  ids: number[],\n  actions: RequiredGlobalActions\n) {\n  // Channel update\n\n  if (chatId) {\n    const chat = selectChat(global, chatId);\n    if (!chat) return;\n\n    const threadIdsToUpdate = new Set<ThreadId>();\n    threadIdsToUpdate.add(MAIN_THREAD_ID);\n\n    ids.forEach((id) => {\n      global = updateChatMessage(global, chatId, id, {\n        isDeleting: true,\n      });\n\n      if (selectTopic(global, chatId, id)) {\n        global = deleteTopic(global, chatId, id);\n      }\n\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return;\n      }\n\n      if (\n        message.content.action?.type === \"chatEditPhoto\" &&\n        message.content.action.photo\n      ) {\n        global = deletePeerPhoto(\n          global,\n          chatId,\n          message.content.action.photo.id,\n          true\n        );\n      }\n\n      global = updateThreadUnread(global, actions, message, true);\n\n      const threadId = selectThreadIdFromMessage(global, message);\n      if (threadId) {\n        threadIdsToUpdate.add(threadId);\n      }\n    });\n\n    actions.requestChatUpdate({ chatId });\n\n    const idsSet = new Set(ids);\n\n    threadIdsToUpdate.forEach((threadId) => {\n      const threadInfo = selectThreadInfo(global, chatId, threadId);\n      if (!threadInfo?.lastMessageId || !idsSet.has(threadInfo.lastMessageId))\n        return;\n\n      const newLastMessage = findLastMessage(global, chatId, threadId);\n      if (!newLastMessage) {\n        if (chat.isForum && threadId !== MAIN_THREAD_ID) {\n          actions.loadTopicById({ chatId, topicId: Number(threadId) });\n        }\n        return;\n      }\n\n      if (threadId === MAIN_THREAD_ID) {\n        global = updateChatLastMessage(global, chatId, newLastMessage, true);\n      }\n\n      global = updateThreadInfo(global, chatId, threadId, {\n        lastMessageId: newLastMessage.id,\n      });\n\n      if (chat.isForum) {\n        global = updateTopic(global, chatId, Number(threadId), {\n          lastMessageId: newLastMessage.id,\n        });\n      }\n    });\n\n    setGlobal(global);\n\n    const isAnimatingAsSnap = selectCanAnimateSnapEffect(global);\n\n    setTimeout(\n      () => {\n        global = getGlobal();\n        // Prevent local deletion of sent messages in case of desync\n        const stillDeletedIds = ids.filter(\n          (id) => selectChatMessage(global, chatId, id)?.isDeleting\n        );\n        global = deleteChatMessages(global, chatId, stillDeletedIds);\n        setGlobal(global);\n      },\n      isAnimatingAsSnap ? SNAP_ANIMATION_DELAY : ANIMATION_DELAY\n    );\n\n    return;\n  }\n\n  // Common box update\n\n  const chatIdsToUpdate: string[] = [];\n\n  ids.forEach((id) => {\n    const commonBoxChatId = selectCommonBoxChatId(global, id);\n    if (commonBoxChatId) {\n      chatIdsToUpdate.push(commonBoxChatId);\n\n      global = updateChatMessage(global, commonBoxChatId, id, {\n        isDeleting: true,\n      });\n\n      const newLastMessage = findLastMessage(global, commonBoxChatId);\n      if (newLastMessage) {\n        global = updateChatLastMessage(\n          global,\n          commonBoxChatId,\n          newLastMessage,\n          true\n        );\n      }\n\n      const message = selectChatMessage(global, commonBoxChatId, id);\n      if (selectIsChatWithSelf(global, commonBoxChatId) && message) {\n        const threadId = selectThreadIdFromMessage(global, message);\n        if (getIsSavedDialog(commonBoxChatId, threadId, global.currentUserId)) {\n          const newLastSavedDialogMessage = findLastMessage(\n            global,\n            commonBoxChatId,\n            threadId\n          );\n          actions.requestSavedDialogUpdate({ chatId: String(threadId) });\n          if (newLastSavedDialogMessage) {\n            global = updateChatLastMessageId(\n              global,\n              commonBoxChatId,\n              newLastSavedDialogMessage.id,\n              \"saved\"\n            );\n          }\n        }\n      }\n\n      if (\n        message?.content.action?.type === \"chatEditPhoto\" &&\n        message.content.action.photo\n      ) {\n        global = deletePeerPhoto(\n          global,\n          commonBoxChatId,\n          message.content.action.photo.id,\n          true\n        );\n      }\n\n      const isAnimatingAsSnap = selectCanAnimateSnapEffect(global);\n\n      setTimeout(\n        () => {\n          global = getGlobal();\n          global = deleteChatMessages(global, commonBoxChatId, [id]);\n          setGlobal(global);\n        },\n        isAnimatingAsSnap ? SNAP_ANIMATION_DELAY : ANIMATION_DELAY\n      );\n    }\n  });\n\n  setGlobal(global);\n\n  unique(chatIdsToUpdate).forEach((id) => {\n    actions.requestChatUpdate({ chatId: id });\n  });\n}\n\nfunction deleteScheduledMessages<T extends GlobalState>(\n  chatId: string,\n  ids: number[],\n  actions: RequiredGlobalActions,\n  global: T\n) {\n  ids.forEach((id) => {\n    global = updateScheduledMessage(global, chatId, id, {\n      isDeleting: true,\n    });\n  });\n\n  setGlobal(global);\n\n  const isAnimatingAsSnap = selectCanAnimateSnapEffect(global);\n\n  setTimeout(\n    () => {\n      global = getGlobal();\n      global = deleteChatScheduledMessages(global, chatId, ids);\n      const scheduledMessages = selectChatScheduledMessages(global, chatId);\n      global = replaceThreadParam(\n        global,\n        chatId,\n        MAIN_THREAD_ID,\n        \"scheduledIds\",\n        Object.keys(scheduledMessages || {}).map(Number)\n      );\n      setGlobal(global);\n    },\n    isAnimatingAsSnap ? SNAP_ANIMATION_DELAY : ANIMATION_DELAY\n  );\n}\n","import type { ActionReturnType } from '../../types';\nimport { PaymentStep } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { applyLangPackDifference, getTranslationFn, requestLangPackDifference } from '../../../util/localization';\nimport { getPeerTitle } from '../../helpers/peers';\nimport { addActionHandler, setGlobal } from '../../index';\nimport {\n  addBlockedUser,\n  addChats,\n  addStoriesForPeer,\n  addUsers,\n  removeBlockedUser,\n  removePeerStory,\n  setConfirmPaymentUrl,\n  setPaymentStep,\n  updateLastReadStoryForPeer,\n  updatePeerStory,\n  updatePeersWithStories,\n  updatePoll,\n  updateStealthMode,\n  updateThreadInfos,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectTabState,\n} from '../../selectors';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updateEntities': {\n      const {\n        users, chats, threadInfos, polls,\n      } = update;\n      if (users) global = addUsers(global, users);\n      if (chats) global = addChats(global, chats);\n      if (threadInfos) global = updateThreadInfos(global, threadInfos);\n      if (polls) {\n        polls.forEach((poll) => {\n          global = updatePoll(global, poll.id, poll);\n        });\n      }\n      setGlobal(global);\n      break;\n    }\n\n    case 'updatePeerBlocked':\n      if (update.isBlocked) {\n        return addBlockedUser(global, update.id);\n      } else if (update.isBlockedFromStories) {\n        return global; // Unsupported\n      } else {\n        return removeBlockedUser(global, update.id);\n      }\n\n    case 'updateResetContactList':\n      global = {\n        ...global,\n        contactList: {\n          userIds: [],\n        },\n      };\n      setGlobal(global);\n      break;\n\n    case 'updateConfig':\n      actions.loadConfig();\n      break;\n\n    case 'updateNewAuthorization': {\n      // Load more info about this session\n      actions.loadAuthorizations();\n      break;\n    }\n\n    case 'updateFavoriteStickers':\n      actions.loadFavoriteStickers();\n      break;\n\n    case 'updateRecentStickers':\n      actions.loadRecentStickers();\n      break;\n\n    case 'updateRecentReactions':\n      actions.loadRecentReactions();\n      break;\n\n    case 'updateRecentEmojiStatuses':\n      actions.loadRecentEmojiStatuses();\n      break;\n\n    case 'updateSavedReactionTags':\n      actions.loadSavedReactionTags();\n      break;\n\n    case 'updateMoveStickerSetToTop': {\n      const oldOrder = update.isCustomEmoji ? global.customEmojis.added.setIds : global.stickers.added.setIds;\n      if (!oldOrder?.some((id) => id === update.id)) return global;\n      const newOrder = [update.id, ...oldOrder.filter((id) => id !== update.id)];\n      actions.reorderStickerSets({ order: newOrder, isCustomEmoji: update.isCustomEmoji });\n      break;\n    }\n\n    case 'updateStickerSets':\n      actions.loadStickerSets();\n      break;\n\n    case 'updateStickerSetsOrder': {\n      // Filter out invalid set IDs, which may be sent by the server\n      const order = update.order.filter((setId) => Boolean(global.stickers.setsById[setId]));\n\n      actions.reorderStickerSets({ order, isCustomEmoji: update.isCustomEmoji });\n      break;\n    }\n\n    case 'updateSavedGifs':\n      actions.loadSavedGifs();\n      break;\n\n    case 'updatePrivacy':\n      global = {\n        ...global,\n        settings: {\n          ...global.settings,\n          privacy: {\n            ...global.settings.privacy,\n            [update.key]: update.rules,\n          },\n        },\n      };\n      setGlobal(global);\n      break;\n\n    case 'updatePaymentVerificationNeeded':\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        global = setConfirmPaymentUrl(global, update.url, tabId);\n        global = setPaymentStep(global, PaymentStep.ConfirmPayment, tabId);\n      });\n      setGlobal(global);\n      break;\n\n    case 'updateWebViewResultSent':\n      Object.values(global.byTabId).forEach((tabState) => {\n        Object.entries(tabState.webApps.openedWebApps).forEach(([webAppKey, webApp]) => {\n          if (webApp.queryId === update.queryId) {\n            actions.resetDraftReplyInfo({ tabId: tabState.id });\n            actions.closeWebApp({ key: webAppKey, tabId: tabState.id });\n          }\n        });\n      });\n      break;\n\n    case 'updateStory':\n      global = addStoriesForPeer(global, update.peerId, { [update.story.id]: update.story });\n      global = updatePeersWithStories(global, { [update.peerId]: selectPeerStories(global, update.peerId)! });\n      setGlobal(global);\n      break;\n\n    case 'deleteStory':\n      global = removePeerStory(global, update.peerId, update.storyId);\n      setGlobal(global);\n      break;\n\n    case 'updateReadStories':\n      global = updateLastReadStoryForPeer(global, update.peerId, update.lastReadId);\n      setGlobal(global);\n      break;\n\n    case 'updateSentStoryReaction': {\n      const { peerId, storyId, reaction } = update;\n      const story = selectPeerStory(global, peerId, storyId);\n      if (!story) return global;\n      global = updatePeerStory(global, peerId, storyId, { sentReaction: reaction });\n      setGlobal(global);\n      break;\n    }\n\n    case 'updateStealthMode':\n      global = updateStealthMode(global, update.stealthMode);\n      setGlobal(global);\n      break;\n\n    case 'updateAttachMenuBots':\n      actions.loadAttachBots();\n      break;\n\n    case 'updatePremiumFloodWait': {\n      actions.processPremiumFloodWait({\n        isUpload: update.isUpload,\n      });\n      break;\n    }\n\n    case 'updatePaidReactionPrivacy': {\n      global = {\n        ...global,\n        settings: {\n          ...global.settings,\n          paidReactionPrivacy: update.private,\n        },\n      };\n      setGlobal(global);\n      break;\n    }\n\n    case 'updateLangPackTooLong': {\n      requestLangPackDifference(update.langCode);\n      break;\n    }\n\n    case 'updateLangPack': {\n      applyLangPackDifference(update.version, update.strings, update.keysToRemove);\n      break;\n    }\n\n    case 'newMessage': {\n      const action = update.message.content?.action;\n      if (!update.message.isOutgoing && update.message.chatId !== SERVICE_NOTIFICATIONS_USER_ID) return undefined;\n      if (action?.type !== 'starGiftUnique') return undefined;\n      const actionStarGift = action.gift;\n\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        const tabState = selectTabState(global, tabId);\n        if (tabState.isWaitingForStarGiftUpgrade) {\n          actions.openUniqueGiftBySlug({\n            slug: actionStarGift.slug,\n            tabId,\n          });\n\n          actions.showNotification({\n            title: { key: 'GiftUpgradedTitle' },\n            message: { key: 'GiftUpgradedDescription' },\n            tabId,\n          });\n\n          actions.requestConfetti({ withStars: true, tabId });\n\n          global = updateTabState(global, {\n            isWaitingForStarGiftUpgrade: undefined,\n          }, tabId);\n        }\n\n        if (tabState.isWaitingForStarGiftTransfer) {\n          const chatId = update.message.chatId;\n          const receiver = chatId ? selectPeer(global, chatId) : undefined;\n          if (receiver) {\n            actions.focusMessage({\n              chatId: receiver.id,\n              messageId: update.message.id!,\n              tabId,\n            });\n\n            actions.showNotification({\n              message: {\n                key: 'GiftTransferSuccessMessage',\n                variables: {\n                  gift: {\n                    key: 'GiftUnique',\n                    variables: {\n                      title: actionStarGift.title,\n                      number: actionStarGift.number,\n                    },\n                  },\n                  peer: getPeerTitle(getTranslationFn(), receiver),\n                },\n              },\n              tabId,\n            });\n          }\n\n          actions.requestConfetti({ withStars: true, tabId });\n\n          global = updateTabState(global, {\n            isWaitingForStarGiftTransfer: undefined,\n          }, tabId);\n        }\n      });\n\n      setGlobal(global);\n    }\n  }\n\n  return undefined;\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { addActionHandler, setGlobal } from '../../index';\nimport { updateStarsBalance } from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectTabState } from '../../selectors';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updatePaymentStateCompleted': {\n      const { paymentState, tabId } = update;\n      const form = paymentState.form!;\n      const { invoice } = form;\n\n      const { totalAmount, currency } = invoice;\n      const inputInvoice = paymentState.inputInvoice;\n      if (inputInvoice?.type === 'stars') {\n        actions.closeStarsBalanceModal({ tabId });\n        actions.showNotification({\n          message: langProvider.oldTranslate('StarsAcquiredInfo', inputInvoice.stars),\n          title: langProvider.oldTranslate('StarsAcquired'),\n          icon: 'star',\n          tabId,\n        });\n        actions.requestConfetti({ withStars: true, tabId });\n      } else if (inputInvoice?.type === 'giftcode') {\n        const giftModalState = selectTabState(global, tabId).giftModal;\n\n        if (giftModalState && inputInvoice?.userIds[0] === giftModalState.forPeerId) {\n          actions.showNotification({\n            message: {\n              key: 'GiftSent',\n            },\n            tabId,\n          });\n          actions.requestConfetti({ withStars: true, tabId });\n          actions.closeGiftModal({ tabId });\n        }\n      } else {\n        actions.showNotification({\n          tabId,\n          message: langProvider.oldTranslate('PaymentInfoHint', [\n            formatCurrencyAsString(totalAmount, currency, langProvider.getTranslationFn().code),\n            form.title,\n          ]),\n        });\n      }\n\n      setGlobal(global);\n\n      break;\n    }\n\n    case 'updateStarPaymentStateCompleted': {\n      const { paymentState, tabId } = update;\n      const { inputInvoice, subscriptionInfo, form } = paymentState;\n      if (inputInvoice?.type === 'chatInviteSubscription' && subscriptionInfo) {\n        const amount = subscriptionInfo.subscriptionPricing!.amount;\n\n        actions.showNotification({\n          tabId,\n          title: langProvider.oldTranslate('StarsSubscriptionCompleted'),\n          message: langProvider.oldTranslate('StarsSubscriptionCompletedText', [\n            amount,\n            subscriptionInfo.title,\n          ], undefined, amount),\n          icon: 'star',\n        });\n      }\n\n      if (form?.invoice.subscriptionPeriod) {\n        const amount = form.invoice.totalAmount;\n        actions.showNotification({\n          tabId,\n          title: langProvider.oldTranslate('StarsSubscriptionCompleted'),\n          message: langProvider.oldTranslate('StarsSubscriptionCompletedText', [\n            amount,\n            form.title,\n          ], undefined, amount),\n          icon: 'star',\n        });\n      }\n\n      if (inputInvoice?.type === 'giftcode') {\n        if (!inputInvoice.userIds) {\n          return;\n        }\n        const giftModalState = selectTabState(global, tabId).giftModal;\n\n        if (giftModalState && inputInvoice.userIds[0] === giftModalState.forPeerId) {\n          actions.showNotification({\n            message: {\n              key: 'StarsGiftCompleted',\n            },\n            tabId,\n          });\n          actions.requestConfetti({ withStars: true, tabId });\n          actions.closeGiftModal({ tabId });\n        }\n      }\n\n      if (inputInvoice?.type === 'premiumGiftStars') {\n        const giftModalState = selectTabState(global, tabId).giftModal;\n\n        if (giftModalState && inputInvoice.userId === giftModalState.forPeerId) {\n          actions.showNotification({\n            message: {\n              key: 'StarsGiftCompleted',\n            },\n            tabId,\n          });\n          actions.requestConfetti({ withStars: true, tabId });\n          actions.closeGiftModal({ tabId });\n        }\n      }\n\n      if (inputInvoice?.type === 'starsgift') {\n        if (!inputInvoice.userId) {\n          return;\n        }\n        const starsModalState = selectTabState(global, tabId).starsGiftModal;\n\n        if (starsModalState?.isOpen && inputInvoice.userId === starsModalState.forUserId) {\n          global = updateTabState(global, {\n            starsGiftModal: {\n              ...starsModalState,\n              isCompleted: true,\n            },\n          }, tabId);\n        }\n      }\n\n      if (inputInvoice?.type === 'stargift') {\n        if (!inputInvoice.peerId) {\n          return;\n        }\n\n        const starGiftModalState = selectTabState(global, tabId).giftModal;\n\n        if (starGiftModalState && inputInvoice.peerId === starGiftModalState.forPeerId) {\n          actions.showNotification({\n            message: {\n              key: 'StarsGiftCompleted',\n            },\n            tabId,\n          });\n          actions.requestConfetti({ withStars: true, tabId });\n          actions.closeGiftModal({ tabId });\n        }\n      }\n\n      if (inputInvoice?.type === 'stargiftResale') {\n        const starGiftModalState = selectTabState(global, tabId).giftInfoModal;\n\n        if (starGiftModalState) {\n          actions.showNotification({\n            message: {\n              key: 'StarsGiftBought',\n            },\n            tabId,\n          });\n          if (starGiftModalState.peerId) {\n            actions.reloadPeerSavedGifts({ peerId: starGiftModalState.peerId });\n          }\n          actions.reloadPeerSavedGifts({ peerId: inputInvoice.peerId });\n          actions.requestConfetti({ withStars: true, tabId });\n          actions.closeGiftInfoModal({ tabId });\n        }\n      }\n\n      break;\n    }\n\n    case 'updateStarsBalance': {\n      const stars = global.stars;\n      if (!stars) {\n        return;\n      }\n\n      global = updateStarsBalance(global, update.balance);\n\n      setGlobal(global);\n\n      actions.loadStarStatus();\n      break;\n    }\n  }\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { addActionHandler, setGlobal } from '../../index';\nimport {\n  addNotifyException,\n  updateNotifyDefaults,\n  updateTopic,\n} from '../../reducers';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updateDefaultNotifySettings': {\n      return updateNotifyDefaults(global, update.peerType, update.settings);\n    }\n\n    case 'updateChatNotifySettings': {\n      const {\n        chatId, settings,\n      } = update;\n\n      global = addNotifyException(global, chatId, settings);\n      setGlobal(global);\n      break;\n    }\n\n    case 'updateTopicNotifySettings': {\n      const {\n        chatId, topicId, settings,\n      } = update;\n\n      global = updateTopic(global, chatId, topicId, { notifySettings: settings });\n\n      setGlobal(global);\n      break;\n    }\n  }\n\n  return undefined;\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { addActionHandler } from '../../index';\nimport { updateStickerSet } from '../../reducers';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updateStickerSet': {\n      return updateStickerSet(global, update.id, update.stickerSet);\n    }\n  }\n\n  return undefined;\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { addActionHandler } from '../../index';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'updateTwoFaStateWaitCode': {\n      return {\n        ...global,\n        twoFaSettings: {\n          ...global.twoFaSettings,\n          isLoading: false,\n          waitingEmailCodeLength: update.length,\n        },\n      };\n    }\n\n    case 'updateTwoFaError': {\n      return {\n        ...global,\n        twoFaSettings: {\n          ...global.twoFaSettings,\n          errorKey: update.messageKey,\n        },\n      };\n    }\n  }\n\n  return undefined;\n});\n","import { throttleWithFullyIdle } from '../../../lib/teact/heavyAnimation';\n\nimport type { ApiUserStatus } from '../../../api/types';\nimport type { ActionReturnType } from '../../types';\n\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  deleteContact,\n  replaceUserStatuses,\n  updateChat,\n  updatePeerStoriesHidden,\n  updateUser,\n  updateUserFullInfo,\n} from '../../reducers';\nimport {\n  selectIsChatWithSelf, selectIsCurrentUserPremium, selectUser, selectUserFullInfo,\n} from '../../selectors';\n\nconst updateStatusesOnFullyIdle = throttleWithFullyIdle(flushStatusUpdates);\n\nlet pendingStatusUpdates: Record<string, ApiUserStatus> = {};\n\nfunction flushStatusUpdates() {\n  let global = getGlobal();\n\n  global = replaceUserStatuses(global, {\n    ...global.users.statusesById,\n    ...pendingStatusUpdates,\n  });\n  setGlobal(global);\n\n  pendingStatusUpdates = {};\n}\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  switch (update['@type']) {\n    case 'deleteContact': {\n      return deleteContact(global, update.id);\n    }\n\n    case 'updateUser': {\n      Object.values(global.byTabId).forEach(({ id: tabId }) => {\n        if (selectIsChatWithSelf(global, update.id) && update.user.isPremium !== selectIsCurrentUserPremium(global)) {\n          if (update.user.isPremium && global.byTabId[tabId].premiumModal) {\n            actions.openPremiumModal({ isSuccess: true, tabId });\n          }\n\n          // Reset translation cache cause premium provides additional formatting\n          global = {\n            ...global,\n            translations: {\n              byChatId: {},\n            },\n          };\n        }\n      });\n\n      const localUser = selectUser(global, update.id);\n\n      global = updateUser(global, update.id, update.user);\n      if (update.fullInfo) {\n        global = updateUserFullInfo(global, update.id, update.fullInfo);\n      }\n\n      if (localUser?.areStoriesHidden !== update.user.areStoriesHidden) {\n        global = updatePeerStoriesHidden(global, update.id, update.user.areStoriesHidden || false);\n      }\n\n      return global;\n    }\n\n    case 'updateRequestUserUpdate': {\n      actions.loadFullUser({ userId: update.id });\n      break;\n    }\n\n    case 'updateUserEmojiStatus': {\n      global = updateUser(global, update.userId, { emojiStatus: update.emojiStatus });\n      global = updateChat(global, update.userId, { emojiStatus: update.emojiStatus });\n      return global;\n    }\n\n    case 'updateUserStatus': {\n      // Status updates come very often so we throttle them\n      pendingStatusUpdates[update.userId] = update.status;\n      updateStatusesOnFullyIdle();\n      return undefined;\n    }\n\n    case 'updateUserFullInfo': {\n      const { id, fullInfo } = update;\n\n      return updateUserFullInfo(global, id, fullInfo);\n    }\n\n    case 'updateBotMenuButton': {\n      const { botId, button } = update;\n\n      const targetUserFullInfo = selectUserFullInfo(global, botId);\n      if (!targetUserFullInfo?.botInfo) {\n        return undefined;\n      }\n\n      return updateUserFullInfo(global, botId, {\n        botInfo: {\n          ...targetUserFullInfo.botInfo,\n          menuButton: button,\n        },\n      });\n    }\n\n    case 'updateBotCommands': {\n      const { botId, commands } = update;\n      const targetUserFullInfo = selectUserFullInfo(global, botId);\n      if (!targetUserFullInfo?.botInfo) {\n        return undefined;\n      }\n\n      return updateUserFullInfo(global, botId, {\n        botInfo: {\n          ...targetUserFullInfo.botInfo,\n          commands,\n        },\n      });\n    }\n\n    case 'updatePeerSettings': {\n      const { id, settings } = update;\n\n      const targetUserFullInfo = selectUserFullInfo(global, id);\n      if (!targetUserFullInfo?.botInfo) {\n        actions.loadFullUser({ userId: id });\n        return undefined;\n      }\n\n      global = updateUserFullInfo(global, id, {\n        settings,\n      });\n      return global;\n    }\n  }\n\n  return undefined;\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addActionHandler, setGlobal } from '../..';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectTabState } from '../../selectors';\n\naddActionHandler('openFrozenAccountModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    isFrozenAccountModalOpen: true,\n  }, tabId);\n});\n\naddActionHandler('closeFrozenAccountModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    isFrozenAccountModalOpen: false,\n  }, tabId);\n});\n\naddActionHandler('openDeleteAccountModal', (global, actions, payload): ActionReturnType => {\n  const { days, tabId = getCurrentTabId() } = payload || {};\n  if (!days) return;\n\n  global = updateTabState(global, {\n    ...selectTabState(global, tabId),\n    deleteAccountModal: {\n      selfDestructAccountDays: days,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('closeDeleteAccountModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    deleteAccountModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openAgeVerificationModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    isAgeVerificationModalOpen: true,\n  }, tabId);\n});\n\naddActionHandler('closeAgeVerificationModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    isAgeVerificationModalOpen: false,\n  }, tabId);\n});\n","import type { ApiChatType } from '../../../api/types';\nimport type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { getWebAppKey } from '../../helpers';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { updateSharedSettings } from '../../reducers';\nimport {\n  addWebAppToOpenList,\n  clearOpenedWebApps,\n  hasOpenedMoreThanOneWebApps,\n  hasOpenedWebApps,\n  removeActiveWebAppFromOpenList,\n  removeWebAppFromOpenList,\n  replaceIsWebAppModalOpen,\n  replaceWebAppModalState,\n  updateWebApp,\n} from '../../reducers/bots';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectActiveWebApp, selectCurrentMessageList, selectTabState, selectWebApp,\n} from '../../selectors';\nimport { selectSharedSettings } from '../../selectors/sharedState';\n\naddActionHandler('openWebAppTab', (global, actions, payload): ActionReturnType => {\n  const {\n    webApp, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!webApp) return;\n\n  global = getGlobal();\n  global = addWebAppToOpenList(global, webApp, true, true, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('updateWebApp', (global, actions, payload): ActionReturnType => {\n  const {\n    key, update, tabId = getCurrentTabId(),\n  } = payload;\n  return updateWebApp(global, key, update, tabId);\n});\n\naddActionHandler('closeActiveWebApp', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  global = removeActiveWebAppFromOpenList(global, tabId);\n  if (!hasOpenedWebApps(global, tabId)) return replaceIsWebAppModalOpen(global, false, tabId);\n\n  return global;\n});\n\naddActionHandler('openMoreAppsTab', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  const tabState = selectTabState(global, tabId);\n  global = updateTabState(global, {\n    webApps: {\n      ...tabState.webApps,\n      activeWebAppKey: undefined,\n      isMoreAppsTabActive: true,\n    },\n  }, tabId);\n\n  return global;\n});\n\naddActionHandler('closeMoreAppsTab', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  const tabState = selectTabState(global, tabId);\n\n  const openedWebApps = tabState.webApps.openedWebApps;\n\n  const openedWebAppsKeys = Object.keys(openedWebApps);\n  const openedWebAppsCount = openedWebAppsKeys.length;\n\n  global = updateTabState(global, {\n    webApps: {\n      ...tabState.webApps,\n      isMoreAppsTabActive: false,\n      activeWebAppKey: openedWebAppsCount ? openedWebAppsKeys[openedWebAppsCount - 1] : undefined,\n      isModalOpen: openedWebAppsCount > 0,\n    },\n  }, tabId);\n\n  return global;\n});\n\naddActionHandler('closeWebApp', (global, actions, payload): ActionReturnType => {\n  const { key, skipClosingConfirmation, tabId = getCurrentTabId() } = payload || {};\n\n  global = removeWebAppFromOpenList(global, key, skipClosingConfirmation, tabId);\n  if (!hasOpenedWebApps(global, tabId)) return replaceIsWebAppModalOpen(global, false, tabId);\n\n  return global;\n});\n\naddActionHandler('closeWebAppModal', (global, actions, payload): ActionReturnType => {\n  const { shouldSkipConfirmation, tabId = getCurrentTabId() } = payload || {};\n\n  const shouldShowConfirmation = !shouldSkipConfirmation\n    && !selectSharedSettings(global).shouldSkipWebAppCloseConfirmation && hasOpenedMoreThanOneWebApps(global, tabId);\n\n  if (shouldShowConfirmation) {\n    actions.openWebAppsCloseConfirmationModal({ tabId });\n    return global;\n  }\n\n  global = clearOpenedWebApps(global, tabId);\n  if (!hasOpenedWebApps(global, tabId)) return replaceIsWebAppModalOpen(global, false, tabId);\n\n  return global;\n});\n\naddActionHandler('changeWebAppModalState', (global, actions, payload): ActionReturnType => {\n  const { state, tabId = getCurrentTabId() } = payload;\n\n  return replaceWebAppModalState(global, state, tabId);\n});\n\naddActionHandler('updateMiniAppCachedPosition', (global, actions, payload): ActionReturnType => {\n  const { position } = payload;\n\n  global = updateSharedSettings(global, {\n    miniAppsCachedPosition: position,\n  });\n  return global;\n});\n\naddActionHandler('updateMiniAppCachedSize', (global, actions, payload): ActionReturnType => {\n  const { size } = payload;\n\n  global = updateSharedSettings(global, {\n    miniAppsCachedSize: size,\n  });\n\n  return global;\n});\n\naddActionHandler('setWebAppPaymentSlug', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload;\n  const activeWebApp = selectActiveWebApp(global, tabId);\n  if (!activeWebApp?.url) return undefined;\n\n  const key = getWebAppKey(activeWebApp);\n\n  return updateWebApp(global, key, { slug: payload.slug }, tabId);\n});\n\naddActionHandler('cancelBotTrustRequest', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    botTrustRequest: undefined,\n  }, tabId);\n});\n\naddActionHandler('markBotTrusted', (global, actions, payload): ActionReturnType => {\n  const { botId, isWriteAllowed, tabId = getCurrentTabId() } = payload;\n  const { trustedBotIds } = global;\n\n  const newTrustedBotIds = new Set(trustedBotIds);\n  newTrustedBotIds.add(botId);\n\n  global = {\n    ...global,\n    trustedBotIds: Array.from(newTrustedBotIds),\n  };\n\n  const tabState = selectTabState(global, tabId);\n  if (tabState.botTrustRequest?.onConfirm) {\n    const { action, payload: callbackPayload } = tabState.botTrustRequest.onConfirm;\n    // @ts-expect-error -- No idea how to type this properly\n    actions[action]({\n      ...(callbackPayload),\n      isWriteAllowed,\n    });\n  }\n\n  global = updateTabState(global, {\n    botTrustRequest: undefined,\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('sendWebAppEvent', (global, actions, payload): ActionReturnType => {\n  const { event, webAppKey, tabId = getCurrentTabId() } = payload;\n  const webApp = selectWebApp(global, webAppKey, tabId);\n  if (!webApp) return global;\n\n  const newPlannedEvents = webApp.plannedEvents ? [...webApp.plannedEvents, event] : [event];\n\n  actions.updateWebApp({\n    key: webAppKey,\n    update: {\n      plannedEvents: newPlannedEvents,\n    },\n    tabId,\n  });\n\n  return global;\n});\n\naddActionHandler('cancelAttachBotInstall', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    requestedAttachBotInstall: undefined,\n  }, tabId);\n});\n\naddActionHandler('requestAttachBotInChat', (global, actions, payload): ActionReturnType => {\n  const {\n    bot, filter, startParam, tabId = getCurrentTabId(),\n  } = payload;\n  const currentChatId = selectCurrentMessageList(global, tabId)?.chatId;\n\n  const supportedFilters = bot.attachMenuPeerTypes?.filter((type): type is ApiChatType => (\n    type !== 'self' && filter.includes(type)\n  ));\n\n  if (!supportedFilters?.length) {\n    actions.callAttachBot({\n      chatId: currentChatId || bot.id,\n      bot,\n      startParam,\n      tabId,\n    });\n    return;\n  }\n\n  global = updateTabState(global, {\n    requestedAttachBotInChat: {\n      bot,\n      filter: supportedFilters,\n      startParam,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('cancelAttachBotInChat', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    requestedAttachBotInChat: undefined,\n  }, tabId);\n});\n\naddActionHandler('openEmojiStatusAccessModal', (global, actions, payload): ActionReturnType => {\n  const {\n    bot, webAppKey, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!bot || !webAppKey) return;\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    emojiStatusAccessModal: {\n      bot,\n      webAppKey,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('closeEmojiStatusAccessModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    emojiStatusAccessModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openLocationAccessModal', (global, actions, payload): ActionReturnType => {\n  const {\n    bot, webAppKey, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!bot || !webAppKey) return;\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    locationAccessModal: {\n      bot,\n      webAppKey,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('closeLocationAccessModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    locationAccessModal: undefined,\n  }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { createMessageHashUrl } from '../../../util/routing';\nimport { addActionHandler, setGlobal } from '../../index';\nimport {\n  closeMiddleSearch,\n  exitMessageSelectMode, replaceTabThreadParam, updateCurrentMessageList, updateRequestedChatTranslation,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat, selectCurrentMessageList, selectTabState,\n} from '../../selectors';\n\naddActionHandler('processOpenChatOrThread', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId,\n    threadId = MAIN_THREAD_ID,\n    type = 'thread',\n    shouldReplaceHistory = false,\n    shouldReplaceLast = false,\n    noForumTopicPanel,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n\n  const tabState = selectTabState(global, tabId);\n  if (tabState.premiumModal?.promo && tabState.premiumModal?.isOpen) {\n    global = updateTabState(global, {\n      premiumModal: {\n        ...tabState.premiumModal,\n        isOpen: false,\n      },\n    }, tabId);\n  }\n  actions.hideEffectInComposer({ tabId });\n\n  actions.closeStoryViewer({ tabId });\n  actions.closeStarsBalanceModal({ tabId });\n  actions.closeStarsTransactionModal({ tabId });\n  actions.closeGiftInfoModal({ tabId });\n\n  if (!currentMessageList || (\n    currentMessageList.chatId !== chatId\n    || currentMessageList.threadId !== threadId\n    || currentMessageList.type !== type\n  )) {\n    if (chatId) {\n      global = replaceTabThreadParam(global, chatId, threadId, 'replyStack', [], tabId);\n\n      global = updateTabState(global, {\n        activeReactions: {},\n        shouldPreventComposerAnimation: true,\n      }, tabId);\n\n      global = closeMiddleSearch(global, chatId, threadId, tabId);\n    }\n\n    global = exitMessageSelectMode(global, tabId);\n\n    global = updateTabState(global, {\n      isStatisticsShown: false,\n      monetizationStatistics: undefined,\n      boostStatistics: undefined,\n      contentToBeScheduled: undefined,\n      ...(chatId !== selectTabState(global, tabId).forwardMessages.toChatId && {\n        forwardMessages: {},\n        isShareMessageModalShown: false,\n      }),\n    }, tabId);\n  }\n\n  if (chatId) {\n    const chat = selectChat(global, chatId);\n\n    if (chat?.isForum && !noForumTopicPanel) {\n      actions.openForumPanel({ chatId, tabId });\n    } else if (chatId !== selectTabState(global, tabId).forumPanelChatId) {\n      actions.closeForumPanel({ tabId });\n    }\n  }\n\n  actions.updatePageTitle({ tabId });\n\n  return updateCurrentMessageList(global, chatId, threadId, type, shouldReplaceHistory, shouldReplaceLast, tabId);\n});\n\naddActionHandler('openChatInNewTab', (global, actions, payload): ActionReturnType => {\n  const { chatId, threadId = MAIN_THREAD_ID } = payload;\n\n  const hashUrl = createMessageHashUrl(chatId, 'thread', threadId);\n\n  if (IS_ELECTRON) {\n    window.electron!.openNewWindow(hashUrl);\n  } else {\n    window.open(hashUrl, '_blank');\n  }\n});\n\naddActionHandler('openPreviousChat', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  actions.updatePageTitle({ tabId });\n  return updateCurrentMessageList(global, undefined, undefined, undefined, undefined, undefined, tabId);\n});\n\naddActionHandler('openChatWithInfo', (global, actions, payload): ActionReturnType => {\n  const { profileTab, forceScrollProfileTab = false, tabId = getCurrentTabId() } = payload;\n\n  global = updateTabState(global, {\n    ...selectTabState(global, tabId),\n    isChatInfoShown: true,\n    nextProfileTab: profileTab,\n    forceScrollProfileTab,\n  }, tabId);\n  global = { ...global, lastIsChatInfoShown: true };\n  setGlobal(global);\n\n  actions.openChat({ ...payload, tabId });\n});\n\naddActionHandler('openThreadWithInfo', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload;\n\n  global = updateTabState(global, {\n    ...selectTabState(global, tabId),\n    isChatInfoShown: true,\n  }, tabId);\n  global = { ...global, lastIsChatInfoShown: true };\n  setGlobal(global);\n\n  actions.openThread({ ...payload, tabId });\n});\n\naddActionHandler('openChatWithDraft', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, text, threadId = MAIN_THREAD_ID, files, filter, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (chatId) {\n    actions.openThread({ chatId, threadId, tabId });\n  }\n\n  return updateTabState(global, {\n    requestedDraft: {\n      chatId,\n      text,\n      files,\n      filter,\n    },\n  }, tabId);\n});\n\naddActionHandler('resetChatCreation', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    chatCreation: undefined,\n  }, tabId);\n});\n\naddActionHandler('setNewChatMembersDialogState', (global, actions, payload): ActionReturnType => {\n  const { newChatMembersProgress, tabId = getCurrentTabId() } = payload;\n  return updateTabState(global, {\n    newChatMembersProgress,\n  }, tabId);\n});\n\naddActionHandler('openNextChat', (global, actions, payload): ActionReturnType => {\n  const { targetIndexDelta, orderedIds, tabId = getCurrentTabId() } = payload;\n\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n\n  if (!chatId) {\n    actions.openChat({ id: orderedIds[0], tabId });\n    return;\n  }\n\n  const position = orderedIds.indexOf(chatId);\n\n  if (position === -1) {\n    return;\n  }\n  const nextId = orderedIds[position + targetIndexDelta];\n\n  actions.openChat({ id: nextId, shouldReplaceHistory: true, tabId });\n});\n\naddActionHandler('closeDeleteChatFolderModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    deleteFolderDialogModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('closeChatlistModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    chatlistModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('requestChatTranslation', (global, actions, payload): ActionReturnType => {\n  const { chatId, toLanguageCode, tabId = getCurrentTabId() } = payload;\n  return updateRequestedChatTranslation(global, chatId, toLanguageCode, tabId);\n});\n\naddActionHandler('closeChatInviteModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    chatInviteModal: undefined,\n  }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addActionHandler } from '../../index';\nimport { updateGlobalSearch, updateGlobalSearchContent } from '../../reducers';\nimport { selectTabState } from '../../selectors';\n\nconst MAX_RECENTLY_FOUND_IDS = 10;\n\naddActionHandler('setGlobalSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n  const { chatId, currentContent } = selectTabState(global, tabId).globalSearch;\n\n  const fetchingStatus = query && currentContent !== GlobalSearchContent.BotApps\n    ? { chats: !chatId, messages: true } : undefined;\n\n  return updateGlobalSearch(global, {\n    globalResults: {},\n    localResults: {},\n    resultsByType: undefined,\n    fetchingStatus,\n    query,\n  }, tabId);\n});\n\naddActionHandler('setGlobalSearchClosing', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId(), isClosing } = payload || {};\n  return updateGlobalSearch(global, {\n    isClosing,\n  }, tabId);\n});\n\naddActionHandler('addRecentlyFoundChatId', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n  const { recentlyFoundChatIds } = global;\n\n  if (!recentlyFoundChatIds) {\n    return {\n      ...global,\n      recentlyFoundChatIds: [id],\n    };\n  }\n\n  const newRecentIds = recentlyFoundChatIds.filter((chatId) => chatId !== id);\n  newRecentIds.unshift(id);\n  if (newRecentIds.length > MAX_RECENTLY_FOUND_IDS) {\n    newRecentIds.pop();\n  }\n\n  return {\n    ...global,\n    recentlyFoundChatIds: newRecentIds,\n  };\n});\n\naddActionHandler('clearRecentlyFoundChats', (global): ActionReturnType => {\n  return {\n    ...global,\n    recentlyFoundChatIds: undefined,\n  };\n});\n\naddActionHandler('setGlobalSearchContent', (global, actions, payload): ActionReturnType => {\n  const { content, tabId = getCurrentTabId() } = payload;\n\n  return updateGlobalSearchContent(global, content, tabId);\n});\n\naddActionHandler('setGlobalSearchChatId', (global, actions, payload): ActionReturnType => {\n  const { id, tabId = getCurrentTabId() } = payload;\n\n  return updateGlobalSearch(global, { chatId: id, query: undefined, resultsByType: undefined }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin, MediaViewerOrigin } from '../../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport { getTimestampableMedia } from '../../helpers';\nimport { getMessageReplyInfo } from '../../helpers/replies';\nimport { addActionHandler } from '../../index';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChatMessage, selectReplyMessage, selectTabState } from '../../selectors';\n\naddActionHandler('openMediaViewer', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId = MAIN_THREAD_ID, messageId, timestamp, mediaIndex, isAvatarView, isSponsoredMessage, origin,\n    withDynamicLoading, standaloneMedia, tabId = getCurrentTabId(),\n  } = payload;\n\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    mediaViewer: {\n      ...tabState.mediaViewer,\n      chatId,\n      threadId,\n      messageId,\n      mediaIndex: mediaIndex || 0,\n      isAvatarView,\n      isSponsoredMessage,\n      origin,\n      standaloneMedia,\n      isHidden: false,\n      withDynamicLoading,\n      timestamp,\n    },\n    forwardMessages: {},\n    isShareMessageModalShown: false,\n  }, tabId);\n});\n\naddActionHandler('closeMediaViewer', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const {\n    volume, isMuted, playbackRate, isHidden,\n  } = selectTabState(global, tabId).mediaViewer;\n\n  return updateTabState(global, {\n    mediaViewer: {\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    },\n  }, tabId);\n});\n\naddActionHandler('openMediaFromTimestamp', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, threadId, timestamp, tabId = getCurrentTabId(),\n  } = payload;\n\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) return;\n\n  const replyInfo = getMessageReplyInfo(message);\n  const replyMessage = selectReplyMessage(global, message);\n\n  const messageMedia = getTimestampableMedia(message);\n  const maxMessageDuration = messageMedia?.duration;\n  if (maxMessageDuration) {\n    if (maxMessageDuration <= timestamp) return;\n\n    if (messageMedia.mediaType === 'video') {\n      actions.openMediaViewer({\n        chatId,\n        messageId,\n        threadId,\n        origin: MediaViewerOrigin.Inline,\n        timestamp,\n        tabId,\n      });\n      return;\n    }\n\n    actions.openAudioPlayer({\n      chatId,\n      messageId,\n      threadId,\n      origin: AudioOrigin.Inline,\n      timestamp,\n      tabId,\n    });\n    return;\n  }\n\n  const replyMessageMedia = replyMessage ? getTimestampableMedia(replyMessage) : undefined;\n  const maxReplyMessageDuration = replyMessageMedia?.duration;\n  if (!maxReplyMessageDuration || maxReplyMessageDuration <= timestamp) return;\n\n  if (replyMessageMedia.mediaType === 'video') {\n    actions.openMediaViewer({\n      chatId: replyMessage!.chatId,\n      messageId: replyMessage!.id,\n      threadId: replyInfo?.replyToTopId,\n      origin: MediaViewerOrigin.Inline,\n      timestamp,\n      tabId,\n    });\n    return;\n  }\n\n  actions.openAudioPlayer({\n    chatId: replyMessage!.chatId,\n    messageId: replyMessage!.id,\n    threadId: replyInfo?.replyToTopId,\n    origin: AudioOrigin.Inline,\n    timestamp,\n    tabId,\n  });\n});\n\naddActionHandler('updateLastPlaybackTimestamp', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, timestamp } = payload;\n\n  const currentChatPlaybacks = global.messages.playbackByChatId[chatId]?.byId || {};\n\n  if (!timestamp) {\n    return {\n      ...global,\n      messages: {\n        ...global.messages,\n        playbackByChatId: {\n          ...global.messages.playbackByChatId,\n          [chatId]: {\n            byId: omit(currentChatPlaybacks, [messageId]),\n          },\n        },\n      },\n    };\n  }\n\n  return {\n    ...global,\n    messages: {\n      ...global.messages,\n      playbackByChatId: {\n        ...global.messages.playbackByChatId,\n        [chatId]: {\n          byId: {\n            ...currentChatPlaybacks,\n            [messageId]: timestamp,\n          },\n        },\n      },\n    },\n  };\n});\n\naddActionHandler('setMediaViewerVolume', (global, actions, payload): ActionReturnType => {\n  const {\n    volume,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    mediaViewer: {\n      ...selectTabState(global, tabId).mediaViewer,\n      volume,\n      isMuted: false,\n    },\n  }, tabId);\n});\n\naddActionHandler('setMediaViewerPlaybackRate', (global, actions, payload): ActionReturnType => {\n  const {\n    playbackRate,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  global = {\n    ...global,\n    mediaViewer: {\n      ...global.mediaViewer,\n      lastPlaybackRate: playbackRate,\n    },\n  };\n\n  return updateTabState(global, {\n    mediaViewer: {\n      ...selectTabState(global, tabId).mediaViewer,\n      playbackRate,\n    },\n  }, tabId);\n});\n\naddActionHandler('setMediaViewerMuted', (global, actions, payload): ActionReturnType => {\n  const {\n    isMuted,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    mediaViewer: {\n      ...selectTabState(global, tabId).mediaViewer,\n      isMuted,\n    },\n  }, tabId);\n});\n\naddActionHandler('setMediaViewerHidden', (global, actions, payload): ActionReturnType => {\n  const { isHidden, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    mediaViewer: {\n      ...selectTabState(global, tabId).mediaViewer,\n      isHidden,\n    },\n  }, tabId);\n});\n","import type { ApiMessage } from '../../../api/types';\nimport type {\n  ActionReturnType,\n  GlobalState,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { type ActiveDownloads, FocusDirection } from '../../../types';\n\nimport {\n  ANIMATION_END_DELAY,\n  RELEASE_DATETIME,\n  SCROLL_MAX_DURATION,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../../config';\nimport { cancelScrollBlockingAnimation, isAnimatingScroll } from '../../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport { copyHtmlToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { compact, findLast } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { oldTranslate } from '../../../util/oldLangProvider';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\nimport { getServerTime } from '../../../util/serverTime';\nimport versionNotification from '../../../versionNotification.txt';\nimport {\n  getIsSavedDialog,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  getMessageDownloadableMedia,\n  getMessageStatefulContent,\n  isChatChannel,\n} from '../../helpers';\nimport { getMessageSummaryText } from '../../helpers/messageSummary';\nimport { addTabStateResetterAction } from '../../helpers/meta';\nimport { getPeerTitle } from '../../helpers/peers';\nimport { renderMessageSummaryHtml } from '../../helpers/renderMessageSummaryHtml';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  addActiveMediaDownload,\n  cancelMessageMediaDownload,\n  enterMessageSelectMode,\n  exitMessageSelectMode,\n  replaceTabThreadParam,\n  replaceThreadParam,\n  toggleMessageSelection,\n  updateFocusDirection,\n  updateFocusedMessage,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectCanForwardMessage,\n  selectChat,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectDraft,\n  selectForwardedMessageIdsByGroupId,\n  selectIsRightColumnShown,\n  selectIsViewportNewest,\n  selectMessageIdsByGroupId,\n  selectPinnedIds,\n  selectReplyStack,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectTabState,\n  selectThreadInfo,\n  selectViewportIds,\n} from '../../selectors';\nimport { getPeerStarsForMessage } from '../api/messages';\n\nimport { getIsMobile } from '../../../hooks/useAppLayout';\n\nconst FOCUS_DURATION = 1500;\nconst FOCUS_NO_HIGHLIGHT_DURATION = SCROLL_MAX_DURATION + ANIMATION_END_DELAY;\nconst POLL_RESULT_OPEN_DELAY_MS = 450;\nconst VERSION_NOTIFICATION_DURATION = 1000 * 60 * 60 * 24 * 3; // 3 days\nconst SERVICE_NOTIFICATIONS_MAX_AMOUNT = 1e3;\n\nlet blurTimeout: number | undefined;\n\naddActionHandler('setScrollOffset', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId, scrollOffset, tabId = getCurrentTabId(),\n  } = payload;\n\n  global = replaceThreadParam(global, chatId, threadId, 'lastScrollOffset', scrollOffset);\n\n  return replaceTabThreadParam(global, chatId, threadId, 'scrollOffset', scrollOffset, tabId);\n});\n\naddActionHandler('setEditingId', (global, actions, payload): ActionReturnType => {\n  const { messageId, tabId = getCurrentTabId() } = payload;\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return undefined;\n  }\n\n  const { chatId, threadId, type } = currentMessageList;\n  const paramName = type === 'scheduled' ? 'editingScheduledId' : 'editingId';\n\n  return replaceThreadParam(global, chatId, threadId, paramName, messageId);\n});\n\naddActionHandler('setEditingDraft', (global, actions, payload): ActionReturnType => {\n  const {\n    text, chatId, threadId, type,\n  } = payload;\n\n  const paramName = type === 'scheduled' ? 'editingScheduledDraft' : 'editingDraft';\n\n  return replaceThreadParam(global, chatId, threadId, paramName, text);\n});\n\naddActionHandler('editLastMessage', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return undefined;\n  }\n\n  const chatMessages = selectChatMessages(global, chatId);\n  const viewportIds = selectViewportIds(global, chatId, threadId, tabId);\n  if (!chatMessages || !viewportIds) {\n    return undefined;\n  }\n\n  const lastOwnEditableMessageId = findLast(viewportIds, (id) => {\n    return Boolean(chatMessages[id] && selectAllowedMessageActionsSlow(global, chatMessages[id], threadId).canEdit);\n  });\n\n  if (!lastOwnEditableMessageId) {\n    return undefined;\n  }\n\n  return replaceThreadParam(global, chatId, threadId, 'editingId', lastOwnEditableMessageId);\n});\n\naddActionHandler('replyToNextMessage', (global, actions, payload): ActionReturnType => {\n  const { targetIndexDelta, tabId = getCurrentTabId() } = payload;\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return;\n  }\n\n  const chatMessages = selectChatMessages(global, chatId);\n  const viewportIds = selectViewportIds(global, chatId, threadId, tabId);\n  if (!chatMessages || !viewportIds) {\n    return;\n  }\n\n  const replyInfo = selectDraft(global, chatId, threadId)?.replyInfo;\n  const isLatest = selectIsViewportNewest(global, chatId, threadId, tabId);\n\n  let messageId: number | undefined;\n\n  if (!isLatest || !replyInfo?.replyToMsgId) {\n    if (threadId === MAIN_THREAD_ID) {\n      messageId = selectChatLastMessageId(global, chatId);\n    } else {\n      const threadInfo = selectThreadInfo(global, chatId, threadId);\n\n      messageId = threadInfo?.lastMessageId;\n    }\n  } else {\n    const chatMessageKeys = Object.keys(chatMessages);\n    const indexOfCurrent = chatMessageKeys.indexOf(replyInfo.replyToMsgId.toString());\n    const newIndex = indexOfCurrent + targetIndexDelta;\n    messageId = newIndex <= chatMessageKeys.length + 1 && newIndex >= 0\n      ? Number(chatMessageKeys[newIndex])\n      : undefined;\n  }\n  actions.updateDraftReplyInfo({\n    replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, tabId,\n  });\n  actions.focusMessage({\n    chatId,\n    threadId,\n    messageId: messageId!,\n    tabId,\n  });\n});\n\naddActionHandler('openAudioPlayer', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId, messageId, origin, volume, playbackRate, isMuted, timestamp,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const tabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    audioPlayer: {\n      chatId,\n      threadId,\n      messageId,\n      timestamp,\n      origin: origin ?? tabState.audioPlayer.origin,\n      volume: volume ?? tabState.audioPlayer.volume,\n      playbackRate: playbackRate || tabState.audioPlayer.playbackRate || global.audioPlayer.lastPlaybackRate,\n      isPlaybackRateActive: (tabState.audioPlayer.isPlaybackRateActive === undefined\n        ? global.audioPlayer.isLastPlaybackRateActive\n        : tabState.audioPlayer.isPlaybackRateActive),\n      isMuted: isMuted || tabState.audioPlayer.isMuted,\n    },\n  }, tabId);\n});\n\naddActionHandler('setAudioPlayerVolume', (global, actions, payload): ActionReturnType => {\n  const {\n    volume, tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    audioPlayer: {\n      ...selectTabState(global, tabId).audioPlayer,\n      volume,\n      isMuted: false,\n    },\n  }, tabId);\n});\n\naddActionHandler('setAudioPlayerPlaybackRate', (global, actions, payload): ActionReturnType => {\n  const {\n    playbackRate, isPlaybackRateActive, tabId = getCurrentTabId(),\n  } = payload;\n\n  global = {\n    ...global,\n    audioPlayer: {\n      ...global.audioPlayer,\n      lastPlaybackRate: playbackRate,\n      isLastPlaybackRateActive: isPlaybackRateActive,\n    },\n  };\n\n  return updateTabState(global, {\n    audioPlayer: {\n      ...selectTabState(global, tabId).audioPlayer,\n      playbackRate,\n      isPlaybackRateActive,\n    },\n  }, tabId);\n});\n\naddActionHandler('setAudioPlayerMuted', (global, actions, payload): ActionReturnType => {\n  const {\n    isMuted, tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    audioPlayer: {\n      ...selectTabState(global, tabId).audioPlayer,\n      isMuted,\n    },\n  }, tabId);\n});\n\naddActionHandler('setAudioPlayerOrigin', (global, actions, payload): ActionReturnType => {\n  const {\n    origin, tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    audioPlayer: {\n      ...selectTabState(global, tabId).audioPlayer,\n      origin,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeAudioPlayer', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    audioPlayer: {\n      volume: tabState.audioPlayer.volume,\n      playbackRate: tabState.audioPlayer.playbackRate,\n      isPlaybackRateActive: tabState.audioPlayer.isPlaybackRateActive,\n      isMuted: tabState.audioPlayer.isMuted,\n    },\n  }, tabId);\n});\n\naddActionHandler('openPollResults', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n\n  const shouldOpenInstantly = selectIsRightColumnShown(global, getIsMobile(), tabId);\n  const tabState = selectTabState(global, tabId);\n\n  if (!shouldOpenInstantly) {\n    window.setTimeout(() => {\n      global = getGlobal();\n\n      global = updateTabState(global, {\n        pollResults: {\n          chatId,\n          messageId,\n          voters: {},\n        },\n      }, tabId);\n      setGlobal(global);\n    }, POLL_RESULT_OPEN_DELAY_MS);\n  } else if (chatId !== tabState.pollResults.chatId || messageId !== tabState.pollResults.messageId) {\n    return updateTabState(global, {\n      pollResults: {\n        chatId,\n        messageId,\n        voters: {},\n      },\n    }, tabId);\n  }\n\n  return undefined;\n});\n\naddActionHandler('closePollResults', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    pollResults: {},\n  }, tabId);\n});\n\naddActionHandler('focusLastMessage', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n\n  const { chatId, threadId, type } = currentMessageList;\n\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n  let lastMessageId: number | undefined;\n  if (threadId === MAIN_THREAD_ID) {\n    if (type === 'pinned') {\n      const pinnedMessageIds = selectPinnedIds(global, chatId, MAIN_THREAD_ID);\n      if (!pinnedMessageIds?.length) {\n        return;\n      }\n\n      lastMessageId = pinnedMessageIds[pinnedMessageIds.length - 1];\n    } else {\n      lastMessageId = selectChatLastMessageId(global, chatId);\n    }\n  } else if (isSavedDialog) {\n    lastMessageId = selectChatLastMessageId(global, String(threadId), 'saved');\n  } else {\n    const threadInfo = selectThreadInfo(global, chatId, threadId);\n\n    lastMessageId = threadInfo?.lastMessageId;\n  }\n\n  if (!lastMessageId) {\n    return;\n  }\n\n  actions.focusMessage({\n    chatId,\n    threadId,\n    messageListType: type,\n    messageId: lastMessageId,\n    noHighlight: true,\n    noForumTopicPanel: true,\n    tabId,\n  });\n});\n\naddActionHandler('focusNextReply', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return undefined;\n  }\n\n  const { chatId, threadId } = currentMessageList;\n\n  const replyStack = selectReplyStack(global, chatId, threadId, tabId);\n\n  if (!replyStack || replyStack.length === 0) {\n    actions.focusLastMessage({ tabId });\n  } else {\n    const messageId = replyStack.pop();\n\n    global = replaceTabThreadParam(global, chatId, threadId, 'replyStack', [...replyStack], tabId);\n\n    setGlobal(global);\n\n    actions.focusMessage({\n      chatId,\n      threadId,\n      messageId: messageId!,\n      tabId,\n      noForumTopicPanel: true,\n    });\n  }\n\n  return undefined;\n});\n\naddActionHandler('focusMessage', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, threadId = MAIN_THREAD_ID, messageListType = 'thread', noHighlight, groupedId, groupedChatId,\n    replyMessageId, isResizingContainer, shouldReplaceHistory, noForumTopicPanel, quote, quoteOffset,\n    scrollTargetPosition, timestamp, tabId = getCurrentTabId(),\n  } = payload;\n\n  let { messageId } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    actions.showNotification({ message: oldTranslate('Conversation.ErrorInaccessibleMessage'), tabId });\n    return undefined;\n  }\n\n  const onMessageReady = timestamp\n    ? () => actions.openMediaFromTimestamp({\n      chatId, threadId, messageId, timestamp, tabId,\n    }) : undefined;\n\n  if (groupedId !== undefined) {\n    const ids = selectForwardedMessageIdsByGroupId(global, groupedChatId!, groupedId);\n    if (ids?.length) {\n      ([messageId] = compact(ids));\n    }\n  }\n\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  const shouldSwitchChat = !currentMessageList || (\n    chatId !== currentMessageList.chatId\n    || threadId !== currentMessageList.threadId\n    || messageListType !== currentMessageList.type\n  );\n\n  if (blurTimeout) {\n    clearTimeout(blurTimeout);\n    blurTimeout = undefined;\n  }\n  blurTimeout = window.setTimeout(() => {\n    global = getGlobal();\n    global = updateFocusedMessage({ global }, tabId);\n    global = updateFocusDirection(global, undefined, tabId);\n    setGlobal(global);\n  }, noHighlight ? FOCUS_NO_HIGHLIGHT_DURATION : FOCUS_DURATION);\n\n  global = updateFocusedMessage({\n    global,\n    chatId,\n    messageId,\n    threadId,\n    noHighlight,\n    isResizingContainer,\n    quote,\n    quoteOffset,\n    scrollTargetPosition,\n  }, tabId);\n  global = updateFocusDirection(global, undefined, tabId);\n\n  if (replyMessageId) {\n    const replyStack = selectReplyStack(global, chatId, threadId, tabId) || [];\n    global = replaceTabThreadParam(global, chatId, threadId, 'replyStack', [...replyStack, replyMessageId], tabId);\n  }\n\n  if (shouldSwitchChat) {\n    global = updateFocusDirection(global, FocusDirection.Static, tabId);\n  }\n\n  const viewportIds = selectViewportIds(global, chatId, threadId, tabId);\n  if (viewportIds && viewportIds.includes(messageId)) {\n    setGlobal(global, { forceOnHeavyAnimation: true });\n    actions.openThread({\n      chatId,\n      threadId,\n      type: messageListType,\n      shouldReplaceHistory,\n      noForumTopicPanel,\n      tabId,\n    });\n    onMessageReady?.();\n    return undefined;\n  }\n\n  if (shouldSwitchChat) {\n    global = replaceTabThreadParam(global, chatId, threadId, 'viewportIds', undefined, tabId);\n  }\n\n  if (viewportIds && !shouldSwitchChat) {\n    const direction = messageId > viewportIds[0] ? FocusDirection.Down : FocusDirection.Up;\n    global = updateFocusDirection(global, direction, tabId);\n  }\n\n  if (isAnimatingScroll()) {\n    cancelScrollBlockingAnimation();\n  }\n\n  setGlobal(global, { forceOnHeavyAnimation: true });\n\n  actions.openThread({\n    chatId,\n    threadId,\n    type: messageListType,\n    shouldReplaceHistory,\n    noForumTopicPanel,\n    tabId,\n  });\n  actions.loadViewportMessages({\n    chatId,\n    threadId,\n    tabId,\n    shouldForceRender: true,\n    onLoaded: onMessageReady,\n  });\n  return undefined;\n});\n\naddActionHandler('setShouldPreventComposerAnimation', (global, actions, payload): ActionReturnType => {\n  const { shouldPreventComposerAnimation, tabId = getCurrentTabId() } = payload;\n  return updateTabState(global, {\n    shouldPreventComposerAnimation,\n  }, tabId);\n});\n\naddActionHandler('openReplyMenu', (global, actions, payload): ActionReturnType => {\n  const {\n    fromChatId, messageId, quoteText, quoteOffset, tabId = getCurrentTabId(),\n  } = payload;\n  return updateTabState(global, {\n    replyingMessage: {\n      fromChatId,\n      messageId,\n      quoteText,\n      quoteOffset,\n    },\n    isShareMessageModalShown: true,\n  }, tabId);\n});\n\naddActionHandler('openForwardMenu', (global, actions, payload): ActionReturnType => {\n  const {\n    fromChatId, messageIds, storyId, groupedId, withMyScore, tabId = getCurrentTabId(),\n  } = payload;\n  let groupedMessageIds;\n  if (groupedId) {\n    groupedMessageIds = selectMessageIdsByGroupId(global, fromChatId, groupedId);\n  }\n  return updateTabState(global, {\n    forwardMessages: {\n      fromChatId,\n      messageIds: groupedMessageIds || messageIds,\n      storyId,\n      withMyScore,\n    },\n    isShareMessageModalShown: true,\n  }, tabId);\n});\n\naddActionHandler('changeRecipient', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    forwardMessages: {\n      ...selectTabState(global, tabId).forwardMessages,\n      toChatId: undefined,\n      noAuthors: false,\n      noCaptions: false,\n    },\n    isShareMessageModalShown: true,\n  }, tabId);\n});\n\naddActionHandler('setForwardNoAuthors', (global, actions, payload): ActionReturnType => {\n  const { noAuthors, tabId = getCurrentTabId() } = payload;\n  const tabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    forwardMessages: {\n      ...tabState.forwardMessages,\n      noAuthors,\n      // `noCaptions` cannot be true when `noAuthors` is false\n      noCaptions: noAuthors && tabState.forwardMessages.noCaptions,\n    },\n  }, tabId);\n});\n\naddActionHandler('setForwardNoCaptions', (global, actions, payload): ActionReturnType => {\n  const { noCaptions, tabId = getCurrentTabId() } = payload;\n  return updateTabState(global, {\n    forwardMessages: {\n      ...selectTabState(global, tabId).forwardMessages,\n      noCaptions,\n      noAuthors: noCaptions, // On other clients `noAuthors` updates together with `noCaptions`\n    },\n  }, tabId);\n});\n\naddActionHandler('exitForwardMode', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  global = updateTabState(global, {\n    isShareMessageModalShown: false,\n    forwardMessages: {},\n    replyingMessage: {},\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openForwardMenuForSelectedMessages', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.selectedMessages) {\n    return;\n  }\n\n  const { chatId: fromChatId, messageIds } = tabState.selectedMessages;\n\n  const forwardableMessageIds = messageIds.filter((id) => {\n    const message = selectChatMessage(global, fromChatId, id);\n    return message && selectCanForwardMessage(global, message);\n  });\n\n  if (!forwardableMessageIds.length) {\n    return;\n  }\n\n  actions.openForwardMenu({ fromChatId, messageIds: forwardableMessageIds, tabId });\n});\n\naddActionHandler('cancelMediaDownload', (global, actions, payload): ActionReturnType => {\n  const { media, tabId = getCurrentTabId() } = payload;\n\n  const hash = getMediaHash(media, 'download');\n  if (!hash) return undefined;\n\n  global = cancelMessageMediaDownload(global, [hash], tabId);\n  return global;\n});\n\naddActionHandler('cancelMediaHashDownloads', (global, actions, payload): ActionReturnType => {\n  const { mediaHashes, tabId = getCurrentTabId() } = payload;\n\n  global = cancelMessageMediaDownload(global, mediaHashes, tabId);\n\n  return global;\n});\n\naddActionHandler('downloadMedia', (global, actions, payload): ActionReturnType => {\n  const { media, originMessage, tabId = getCurrentTabId() } = payload;\n\n  const hash = getMediaHash(media, 'download');\n  if (!hash) return undefined;\n\n  const size = 'size' in media ? media.size : 0;\n  const metadata = {\n    size,\n    format: getMediaFormat(media, 'download'),\n    filename: getMediaFilename(media),\n    originChatId: originMessage?.chatId,\n    originMessageId: originMessage?.id,\n  } satisfies ActiveDownloads[string];\n\n  return addActiveMediaDownload(global, hash, metadata, tabId);\n});\n\naddActionHandler('downloadSelectedMessages', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.selectedMessages) {\n    return;\n  }\n\n  const { chatId, messageIds } = tabState.selectedMessages;\n  const { threadId } = selectCurrentMessageList(global, tabId) || {};\n\n  const chatMessages = selectChatMessages(global, chatId);\n  if (!chatMessages || !threadId) return;\n  const messages = messageIds.map((id) => chatMessages[id])\n    .filter((message) => selectAllowedMessageActionsSlow(global, message, threadId).canDownload);\n  messages.forEach((message) => {\n    const media = getMessageDownloadableMedia(message);\n    if (!media) return;\n    actions.downloadMedia({ media, originMessage: message, tabId });\n  });\n});\n\naddActionHandler('enterMessageSelectMode', (global, actions, payload): ActionReturnType => {\n  const { messageId, tabId = getCurrentTabId() } = payload || {};\n  const openChat = selectCurrentChat(global, tabId);\n  if (!openChat) {\n    return global;\n  }\n\n  return enterMessageSelectMode(global, openChat.id, messageId, tabId);\n});\n\naddActionHandler('toggleMessageSelection', (global, actions, payload): ActionReturnType => {\n  const {\n    messageId,\n    groupedId,\n    childMessageIds,\n    withShift,\n    tabId = getCurrentTabId(),\n  } = payload;\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  if (!currentMessageList) {\n    return;\n  }\n\n  const { chatId, threadId, type: messageListType } = currentMessageList;\n\n  global = toggleMessageSelection(\n    global, chatId, threadId, messageListType, messageId, groupedId, childMessageIds, withShift, tabId,\n  );\n\n  setGlobal(global);\n\n  if (global.shouldShowContextMenuHint) {\n    actions.disableContextMenuHint();\n    actions.showNotification({\n      // eslint-disable-next-line @stylistic/max-len\n      message: `To **edit** or **reply**, close this menu. Then ${IS_TOUCH_ENV ? 'long tap' : 'right click'} on a message.`,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('disableContextMenuHint', (global): ActionReturnType => {\n  if (!global.shouldShowContextMenuHint) {\n    return undefined;\n  }\n\n  return {\n    ...global,\n    shouldShowContextMenuHint: false,\n  };\n});\n\naddActionHandler('exitMessageSelectMode', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return exitMessageSelectMode(global, tabId);\n});\n\naddActionHandler('openPollModal', (global, actions, payload): ActionReturnType => {\n  const { isQuiz, tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    pollModal: {\n      isOpen: true,\n      isQuiz,\n    },\n  }, tabId);\n});\n\naddActionHandler('closePollModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    pollModal: {\n      isOpen: false,\n    },\n  }, tabId);\n});\n\naddActionHandler('openTodoListModal', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, forNewTask, tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    todoListModal: {\n      chatId,\n      messageId,\n      forNewTask,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeTodoListModal', 'todoListModal');\n\naddActionHandler('checkVersionNotification', (global, actions): ActionReturnType => {\n  if (RELEASE_DATETIME && Date.now() > Number(RELEASE_DATETIME) + VERSION_NOTIFICATION_DURATION) {\n    return;\n  }\n\n  const currentVersion = APP_VERSION.split('.').slice(0, 2).join('.');\n  const { serviceNotifications } = global;\n\n  if (serviceNotifications.find(({ version }) => version === currentVersion)) {\n    return;\n  }\n\n  const message: Omit<ApiMessage, 'id'> = {\n    chatId: SERVICE_NOTIFICATIONS_USER_ID,\n    date: getServerTime(),\n    content: {\n      text: parseHtmlAsFormattedText(versionNotification, true),\n    },\n    isOutgoing: false,\n  };\n\n  actions.createServiceNotification({\n    message: message as ApiMessage,\n    version: currentVersion,\n  });\n});\n\naddActionHandler('createServiceNotification', (global, actions, payload): ActionReturnType => {\n  const { message, version } = payload;\n  const { serviceNotifications } = global;\n\n  const maxId = Math.max(\n    selectChatLastMessageId(global, SERVICE_NOTIFICATIONS_USER_ID) || 0,\n    ...serviceNotifications.map(({ id }) => id),\n  );\n  const fractionalPart = (serviceNotifications.length + 1) / SERVICE_NOTIFICATIONS_MAX_AMOUNT;\n  // The fractional ID is made of the largest integer ID and an incremented fractional part\n  const id = Math.floor(maxId) + fractionalPart;\n\n  message.previousLocalId = message.id;\n  message.id = id;\n\n  const serviceNotification = {\n    id,\n    message,\n    version,\n    isUnread: true,\n  };\n\n  global = {\n    ...global,\n    serviceNotifications: [\n      ...serviceNotifications.slice(-SERVICE_NOTIFICATIONS_MAX_AMOUNT),\n      serviceNotification,\n    ],\n  };\n  setGlobal(global);\n\n  actions.apiUpdate({\n    '@type': 'newMessage',\n    id: message.id,\n    chatId: message.chatId,\n    message,\n  });\n});\n\naddActionHandler('openReactorListModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    reactorModal: { chatId, messageId },\n  }, tabId);\n});\n\naddActionHandler('closeReactorListModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    reactorModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openSeenByModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    seenByModal: { chatId, messageId },\n  }, tabId);\n});\n\naddActionHandler('closeSeenByModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    seenByModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openPrivacySettingsNoticeModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, isReadDate, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    privacySettingsNoticeModal: { chatId, isReadDate },\n  }, tabId);\n});\n\naddActionHandler('closePrivacySettingsNoticeModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    privacySettingsNoticeModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openChatLanguageModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n\n  const activeLanguage = messageId\n    ? selectRequestedMessageTranslationLanguage(global, chatId, messageId, tabId)\n    : selectRequestedChatTranslationLanguage(global, chatId, tabId);\n\n  return updateTabState(global, {\n    chatLanguageModal: { chatId, messageId, activeLanguage },\n  }, tabId);\n});\n\naddActionHandler('closeChatLanguageModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    chatLanguageModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('copySelectedMessages', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  if (!tabState.selectedMessages) {\n    return;\n  }\n\n  const { chatId, messageIds } = tabState.selectedMessages;\n  copyTextForMessages(global, chatId, messageIds);\n});\n\naddActionHandler('copyMessagesByIds', (global, actions, payload): ActionReturnType => {\n  const { messageIds, tabId = getCurrentTabId() } = payload;\n  const chat = selectCurrentChat(global, tabId);\n  if (!messageIds || messageIds.length === 0 || !chat) {\n    return;\n  }\n\n  copyTextForMessages(global, chat.id, messageIds);\n});\n\naddActionHandler('openOneTimeMediaModal', (global, actions, payload): ActionReturnType => {\n  const { message, tabId = getCurrentTabId() } = payload;\n  global = updateTabState(global, {\n    oneTimeMediaModal: {\n      message,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('closeOneTimeMediaModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  global = updateTabState(global, {\n    oneTimeMediaModal: undefined,\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('closeReportAdModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    reportAdModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('closeReportModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    reportModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openPreviousReportAdModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const reportAdModal = selectTabState(global, tabId).reportAdModal;\n  if (!reportAdModal) {\n    return undefined;\n  }\n\n  if (reportAdModal.sections.length === 1) {\n    actions.closeReportAdModal({ tabId });\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    reportAdModal: {\n      ...reportAdModal,\n      sections: reportAdModal.sections.slice(0, -1),\n    },\n  }, tabId);\n});\n\naddActionHandler('openPreviousReportModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const reportModal = selectTabState(global, tabId).reportModal;\n  if (!reportModal) {\n    return undefined;\n  }\n\n  if (reportModal.sections.length === 1) {\n    actions.closeReportModal({ tabId });\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    reportModal: {\n      ...reportModal,\n      sections: reportModal.sections.slice(0, -1),\n    },\n  }, tabId);\n});\n\naddActionHandler('openPaidReactionModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n  return updateTabState(global, {\n    paidReactionModal: { chatId, messageId },\n  }, tabId);\n});\n\naddActionHandler('closePaidReactionModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    paidReactionModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openSuggestMessageModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n  return updateTabState(global, {\n    suggestMessageModal: { chatId, messageId },\n  }, tabId);\n});\n\naddActionHandler('closeSuggestMessageModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    suggestMessageModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openSuggestedPostApprovalModal', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId, tabId = getCurrentTabId() } = payload;\n  return updateTabState(global, {\n    suggestedPostApprovalModal: { chatId, messageId },\n  }, tabId);\n});\n\naddActionHandler('closeSuggestedPostApprovalModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    suggestedPostApprovalModal: undefined,\n  }, tabId);\n});\n\nfunction copyTextForMessages(global: GlobalState, chatId: string, messageIds: number[]) {\n  const { type: messageListType, threadId } = selectCurrentMessageList(global) || {};\n  const lang = langProvider.oldTranslate;\n\n  const chat = selectChat(global, chatId);\n\n  const chatMessages = messageListType === 'scheduled'\n    ? selectChatScheduledMessages(global, chatId)\n    : selectChatMessages(global, chatId);\n\n  if (!chat || !chatMessages || !threadId) return;\n\n  const messages = messageIds\n    .map((id) => chatMessages[id])\n    .filter((message) => selectAllowedMessageActionsSlow(global, message, threadId).canCopy)\n    .sort((message1, message2) => message1.id - message2.id);\n\n  const resultHtml: string[] = [];\n  const resultText: string[] = [];\n\n  messages.forEach((message) => {\n    const sender = isChatChannel(chat) ? chat : selectSender(global, message);\n    const senderTitle = `> ${sender ? getPeerTitle(lang, sender) : message.forwardInfo?.hiddenUserName || ''}:`;\n    const statefulContent = getMessageStatefulContent(global, message);\n\n    resultHtml.push(senderTitle);\n    resultHtml.push(`${renderMessageSummaryHtml(lang, message)}\\n`);\n\n    resultText.push(senderTitle);\n    resultText.push(`${getMessageSummaryText(lang, message, statefulContent, false, 0, true)}\\n`);\n  });\n\n  copyHtmlToClipboard(resultHtml.join('\\n'), resultText.join('\\n'));\n}\n\naddActionHandler('openDeleteMessageModal', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageIds, isSchedule,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    deleteMessageModal: {\n      chatId,\n      messageIds,\n      isSchedule,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('closeDeleteMessageModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    deleteMessageModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('openAboutAdsModal', (global, actions, payload): ActionReturnType => {\n  const {\n    randomId, additionalInfo, canReport, sponsorInfo, tabId = getCurrentTabId(),\n  } = payload || {};\n\n  return updateTabState(global, {\n    aboutAdsModal: {\n      randomId,\n      canReport,\n      additionalInfo,\n      sponsorInfo,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeAboutAdsModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    aboutAdsModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('closePreparedInlineMessageModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    preparedMessageModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('closeSharePreparedMessageModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    sharePreparedMessageModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('updateSharePreparedMessageModalSendArgs', async (global, actions, payload): Promise<void> => {\n  const { args, tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  if (!tabState.sharePreparedMessageModal) {\n    return;\n  }\n\n  if (!args) {\n    global = updateTabState(global, {\n      sharePreparedMessageModal: {\n        ...tabState.sharePreparedMessageModal,\n        pendingSendArgs: undefined,\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  const starsForSendMessage = await getPeerStarsForMessage(global, args.peerId);\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    sharePreparedMessageModal: {\n      ...tabState.sharePreparedMessageModal,\n      pendingSendArgs: {\n        peerId: args.peerId,\n        threadId: args.threadId,\n        starsForSendMessage,\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n});\n","import type { ActionReturnType } from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addActionHandler } from '../../index';\nimport {\n  closeMiddleSearch,\n  resetMiddleSearch,\n  updateMiddleSearch,\n  updateSharedMediaSearchType,\n} from '../../reducers';\nimport { selectCurrentMessageList } from '../../selectors';\n\naddActionHandler('openMiddleSearch', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return undefined;\n  }\n\n  return updateMiddleSearch(global, chatId, threadId, {}, tabId);\n});\n\naddActionHandler('closeMiddleSearch', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return undefined;\n  }\n\n  return closeMiddleSearch(global, chatId, threadId, tabId);\n});\n\naddActionHandler('updateMiddleSearch', (global, actions, payload): ActionReturnType => {\n  const {\n    update, tabId = getCurrentTabId(),\n  } = payload;\n\n  let chatId;\n  let threadId;\n  if (payload.chatId) {\n    chatId = payload.chatId;\n    threadId = payload.threadId || MAIN_THREAD_ID;\n  } else {\n    const currentMessageList = selectCurrentMessageList(global, tabId);\n    if (!currentMessageList) {\n      return undefined;\n    }\n    chatId = currentMessageList.chatId;\n    threadId = currentMessageList.threadId;\n  }\n\n  global = updateMiddleSearch(global, chatId, threadId, update, tabId);\n\n  return global;\n});\n\naddActionHandler('resetMiddleSearch', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return undefined;\n  }\n\n  return resetMiddleSearch(global, chatId, threadId, tabId);\n});\n\naddActionHandler('setSharedMediaSearchType', (global, actions, payload): ActionReturnType => {\n  const { mediaType, tabId = getCurrentTabId() } = payload;\n  const { chatId, threadId } = selectCurrentMessageList(global, tabId) || {};\n  if (!chatId || !threadId) {\n    return undefined;\n  }\n\n  return updateSharedMediaSearchType(global, chatId, threadId, mediaType, tabId);\n});\n","import { addCallback } from \"../../../lib/teact/teactn\";\n\nimport type { ApiError, ApiNotification } from \"../../../api/types\";\nimport type { ActionReturnType, GlobalState } from \"../../types\";\n\nimport {\n  ANIMATION_WAVE_MIN_INTERVAL,\n  DEBUG,\n  GLOBAL_STATE_CACHE_CUSTOM_EMOJI_LIMIT,\n  INACTIVE_MARKER,\n  PAGE_TITLE,\n} from \"../../../config\";\nimport {\n  IS_ELECTRON,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from \"../../../util/browser/windowEnvironment\";\nimport {\n  getAllMultitabTokens,\n  getCurrentTabId,\n  reestablishMasterToSelf,\n} from \"../../../util/establishMultitabRole\";\nimport { getAllNotificationsCount } from \"../../../util/folderManager\";\nimport generateUniqueId from \"../../../util/generateUniqueId\";\nimport getIsAppUpdateNeeded from \"../../../util/getIsAppUpdateNeeded\";\nimport getReadableErrorText from \"../../../util/getReadableErrorText\";\nimport { compact, unique } from \"../../../util/iteratees\";\nimport { refreshFromCache } from \"../../../util/localization\";\nimport * as langProvider from \"../../../util/oldLangProvider\";\nimport updateIcon from \"../../../util/updateIcon\";\nimport {\n  setPageTitle,\n  setPageTitleInstant,\n} from \"../../../util/updatePageTitle\";\nimport { getAllowedAttachmentOptions, getChatTitle } from \"../../helpers\";\nimport {\n  addActionHandler,\n  getActions,\n  getGlobal,\n  setGlobal,\n} from \"../../index\";\nimport { updateTabState } from \"../../reducers/tabs\";\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsTrustedBot,\n  selectPeerPaidMessagesStars,\n  selectSender,\n  selectTabState,\n  selectTopic,\n} from \"../../selectors\";\nimport { selectSharedSettings } from \"../../selectors/sharedState\";\n\nimport { getIsMobile, getIsTablet } from \"../../../hooks/useAppLayout\";\n\nexport const APP_VERSION_URL = \"version.txt\";\nconst FLOOD_PREMIUM_WAIT_NOTIFICATION_DURATION = 6000;\nconst MAX_STORED_EMOJIS = 8 * 4; // Represents four rows of recent emojis\n\naddActionHandler(\n  \"toggleChatInfo\",\n  (global, actions, payload): ActionReturnType => {\n    const { force, tabId = getCurrentTabId() } = payload || {};\n    const isChatInfoShown =\n      force !== undefined\n        ? force\n        : !selectTabState(global, tabId).isChatInfoShown;\n\n    global = updateTabState(global, { isChatInfoShown }, tabId);\n    global = { ...global, lastIsChatInfoShown: isChatInfoShown };\n\n    return global;\n  }\n);\n\naddActionHandler(\n  \"openTradingColumn\",\n  (global, actions, payload): ActionReturnType => {\n    const { coin, mintAddress, tabId = getCurrentTabId() } = payload;\n\n    console.log(\"🚀 openTradingColumn action handler called with:\", {\n      coin,\n      mintAddress,\n      tabId,\n    });\n    console.log(\n      \"📈 Current global state isTradingColumnShown:\",\n      global.byTabId[tabId]?.isTradingColumnShown\n    );\n\n    const newState = updateTabState(\n      global,\n      {\n        isTradingColumnShown: true,\n        selectedTradingCoin: coin,\n        selectedTradingMintAddress: mintAddress,\n      },\n      tabId\n    );\n\n    console.log(\n      \"✨ New state isTradingColumnShown:\",\n      newState.byTabId[tabId]?.isTradingColumnShown\n    );\n\n    return newState;\n  }\n);\n\naddActionHandler(\n  \"closeTradingColumn\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(\n      global,\n      {\n        isTradingColumnShown: false,\n        selectedTradingCoin: undefined,\n        selectedTradingMintAddress: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"setLeftColumnWidth\",\n  (global, actions, payload): ActionReturnType => {\n    const { leftColumnWidth } = payload;\n\n    return {\n      ...global,\n      leftColumnWidth,\n    };\n  }\n);\n\naddActionHandler(\"resetLeftColumnWidth\", (global): ActionReturnType => {\n  return {\n    ...global,\n    leftColumnWidth: undefined,\n  };\n});\n\naddActionHandler(\n  \"toggleManagement\",\n  (global, actions, payload): ActionReturnType => {\n    const { force, tabId = getCurrentTabId() } = payload || {};\n    const { chatId } = selectCurrentMessageList(global, tabId) || {};\n\n    if (!chatId) {\n      return undefined;\n    }\n\n    const tabState = selectTabState(global, tabId);\n\n    return updateTabState(\n      global,\n      {\n        management: {\n          byChatId: {\n            ...tabState.management.byChatId,\n            [chatId]: {\n              ...tabState.management.byChatId[chatId],\n              isActive:\n                force !== undefined\n                  ? force\n                  : !(tabState.management.byChatId[chatId] || {}).isActive,\n            },\n          },\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"requestNextManagementScreen\",\n  (global, actions, payload): ActionReturnType => {\n    const { screen, tabId = getCurrentTabId() } = payload || {};\n    const { chatId } = selectCurrentMessageList(global, tabId) || {};\n\n    if (!chatId) {\n      return undefined;\n    }\n\n    const tabState = selectTabState(global, tabId);\n\n    return updateTabState(\n      global,\n      {\n        management: {\n          byChatId: {\n            ...tabState.management.byChatId,\n            [chatId]: {\n              ...tabState.management.byChatId[chatId],\n              isActive: true,\n              nextScreen: screen,\n            },\n          },\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeManagement\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    const { chatId } = selectCurrentMessageList(global, tabId) || {};\n\n    if (!chatId) {\n      return undefined;\n    }\n\n    const tabState = selectTabState(global, tabId);\n\n    return updateTabState(\n      global,\n      {\n        management: {\n          byChatId: {\n            ...tabState.management.byChatId,\n            [chatId]: {\n              ...tabState.management.byChatId[chatId],\n              isActive: false,\n            },\n          },\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"processOpenChatOrThread\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload;\n    if (!getIsMobile() && !getIsTablet()) {\n      return undefined;\n    }\n\n    return updateTabState(\n      global,\n      {\n        isLeftColumnShown:\n          selectTabState(global, tabId).messageLists.length === 0,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"resetNextProfileTab\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    const { chatId } = selectCurrentMessageList(global, tabId) || {};\n\n    if (!chatId) {\n      return undefined;\n    }\n\n    return updateTabState(\n      global,\n      { nextProfileTab: undefined, forceScrollProfileTab: false },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"toggleStatistics\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    const tabState = selectTabState(global, tabId);\n    return updateTabState(\n      global,\n      {\n        isStatisticsShown: !tabState.isStatisticsShown,\n        statistics: {\n          ...tabState.statistics,\n          currentMessageId: undefined,\n          currentStoryId: undefined,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"toggleMessageStatistics\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId(), messageId } = payload || {};\n    return updateTabState(\n      global,\n      {\n        statistics: {\n          ...selectTabState(global, tabId).statistics,\n          currentMessageId: messageId,\n          currentStoryId: undefined,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"toggleStoryStatistics\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId(), storyId } = payload || {};\n    return updateTabState(\n      global,\n      {\n        statistics: {\n          ...selectTabState(global, tabId).statistics,\n          currentStoryId: storyId,\n          currentMessageId: undefined,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"toggleLeftColumn\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    return updateTabState(\n      global,\n      {\n        isLeftColumnShown: !selectTabState(global, tabId).isLeftColumnShown,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"addRecentEmoji\",\n  (global, actions, payload): ActionReturnType => {\n    const { emoji } = payload;\n    const { recentEmojis } = global;\n    if (!recentEmojis) {\n      return {\n        ...global,\n        recentEmojis: [emoji],\n      };\n    }\n\n    const newEmojis = recentEmojis.filter((e) => e !== emoji);\n    newEmojis.unshift(emoji);\n    if (newEmojis.length > MAX_STORED_EMOJIS) {\n      newEmojis.pop();\n    }\n\n    return {\n      ...global,\n      recentEmojis: newEmojis,\n    };\n  }\n);\n\naddActionHandler(\n  \"addRecentSticker\",\n  (global, actions, payload): ActionReturnType => {\n    const { sticker } = payload;\n    const { recent } = global.stickers;\n    if (!recent) {\n      return {\n        ...global,\n        stickers: {\n          ...global.stickers,\n          recent: {\n            hash: \"0\",\n            stickers: [sticker],\n          },\n        },\n      };\n    }\n\n    const newStickers = recent.stickers.filter((s) => s.id !== sticker.id);\n    newStickers.unshift(sticker);\n\n    return {\n      ...global,\n      stickers: {\n        ...global.stickers,\n        recent: {\n          ...recent,\n          stickers: newStickers,\n        },\n      },\n    };\n  }\n);\n\naddActionHandler(\n  \"addRecentCustomEmoji\",\n  (global, actions, payload): ActionReturnType => {\n    const { documentId } = payload;\n    const { recentCustomEmojis } = global;\n    if (!recentCustomEmojis) {\n      return {\n        ...global,\n        recentCustomEmojis: [documentId],\n      };\n    }\n\n    const newEmojis = recentCustomEmojis.filter((id) => id !== documentId);\n    newEmojis.unshift(documentId);\n    if (newEmojis.length > MAX_STORED_EMOJIS) {\n      newEmojis.pop();\n    }\n\n    return {\n      ...global,\n      recentCustomEmojis: newEmojis,\n    };\n  }\n);\n\naddActionHandler(\"clearRecentCustomEmoji\", (global): ActionReturnType => {\n  return {\n    ...global,\n    recentCustomEmojis: [],\n  };\n});\n\naddActionHandler(\n  \"reorderStickerSets\",\n  (global, actions, payload): ActionReturnType => {\n    const { order, isCustomEmoji } = payload;\n    return {\n      ...global,\n      stickers: {\n        ...global.stickers,\n        added: {\n          setIds: !isCustomEmoji ? order : global.stickers.added.setIds,\n        },\n      },\n      customEmojis: {\n        ...global.customEmojis,\n        added: {\n          setIds: isCustomEmoji ? order : global.customEmojis.added.setIds,\n        },\n      },\n    };\n  }\n);\n\naddActionHandler(\n  \"showNotification\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId(), ...notification } = payload;\n    const hasLocalId = notification.localId;\n    notification.localId ||= generateUniqueId();\n\n    const newNotifications = [...selectTabState(global, tabId).notifications];\n    const existingNotificationIndex = newNotifications.findIndex((n) =>\n      hasLocalId\n        ? n.localId === notification.localId\n        : n.message === notification.message\n    );\n    if (existingNotificationIndex !== -1) {\n      newNotifications.splice(existingNotificationIndex, 1);\n    }\n\n    newNotifications.push(notification as ApiNotification);\n\n    return updateTabState(\n      global,\n      {\n        notifications: newNotifications,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"showAllowedMessageTypesNotification\",\n  (global, actions, payload): ActionReturnType => {\n    const { chatId, messageListType, tabId = getCurrentTabId() } = payload;\n\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    if (paidMessagesStars && messageListType === \"scheduled\") {\n      actions.showNotification({\n        message: {\n          key: \"DescriptionScheduledPaidMessagesNotAllowed\",\n        },\n        tabId,\n      });\n      return;\n    }\n\n    const chat = selectChat(global, chatId);\n    if (!chat) return;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const isSavedMessages = chatId\n      ? selectIsChatWithSelf(global, chatId)\n      : undefined;\n    const isChatWithBot = chatId\n      ? selectIsChatWithBot(global, chat)\n      : undefined;\n\n    const {\n      canSendPlainText,\n      canSendPhotos,\n      canSendVideos,\n      canSendDocuments,\n      canSendAudios,\n      canSendStickers,\n      canSendRoundVideos,\n      canSendVoices,\n    } = getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isSavedMessages\n    );\n    const allowedContent = compact([\n      canSendPlainText ? \"Chat.SendAllowedContentTypeText\" : undefined,\n      canSendPhotos ? \"Chat.SendAllowedContentTypePhoto\" : undefined,\n      canSendVideos ? \"Chat.SendAllowedContentTypeVideo\" : undefined,\n      canSendVoices ? \"Chat.SendAllowedContentTypeVoiceMessage\" : undefined,\n      canSendRoundVideos\n        ? \"Chat.SendAllowedContentTypeVideoMessage\"\n        : undefined,\n      canSendDocuments ? \"Chat.SendAllowedContentTypeFile\" : undefined,\n      canSendAudios ? \"Chat.SendAllowedContentTypeMusic\" : undefined,\n      canSendStickers ? \"Chat.SendAllowedContentTypeSticker\" : undefined,\n    ]).map((l) => langProvider.oldTranslate(l));\n\n    if (!allowedContent.length) {\n      actions.showNotification({\n        message: langProvider.oldTranslate(\"Chat.SendNotAllowedText\"),\n        tabId,\n      });\n      return;\n    }\n\n    const lastDelimiter = langProvider.oldTranslate(\n      \"AutoDownloadSettings.LastDelimeter\"\n    );\n    const allowedContentString = allowedContent\n      .join(\", \")\n      .replace(/,([^,]*)$/, `${lastDelimiter}$1`);\n\n    actions.showNotification({\n      message: langProvider.oldTranslate(\n        \"Chat.SendAllowedContentText\",\n        allowedContentString\n      ),\n      tabId,\n    });\n  }\n);\n\naddActionHandler(\n  \"dismissNotification\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload;\n    const newNotifications = selectTabState(global, tabId).notifications.filter(\n      ({ localId }) => localId !== payload.localId\n    );\n\n    return updateTabState(\n      global,\n      {\n        notifications: newNotifications,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\"showDialog\", (global, actions, payload): ActionReturnType => {\n  const { data, tabId = getCurrentTabId() } = payload;\n\n  // Filter out errors that we don't want to show to the user\n  if (\"message\" in data && data.hasErrorKey && !getReadableErrorText(data)) {\n    return global;\n  }\n\n  const newDialogs = [...selectTabState(global, tabId).dialogs];\n  if (\"message\" in data) {\n    const existingErrorIndex = newDialogs.findIndex(\n      (err) => (err as ApiError).message === data.message\n    );\n    if (existingErrorIndex !== -1) {\n      newDialogs.splice(existingErrorIndex, 1);\n    }\n  }\n\n  newDialogs.push(data);\n\n  return updateTabState(\n    global,\n    {\n      dialogs: newDialogs,\n    },\n    tabId\n  );\n});\n\naddActionHandler(\n  \"dismissDialog\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    const newDialogs = [...selectTabState(global, tabId).dialogs];\n\n    newDialogs.pop();\n\n    return updateTabState(\n      global,\n      {\n        dialogs: newDialogs,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"toggleSafeLinkModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { url: safeLinkModalUrl, tabId = getCurrentTabId() } = payload;\n\n    return updateTabState(\n      global,\n      {\n        safeLinkModalUrl,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"openHistoryCalendar\",\n  (global, actions, payload): ActionReturnType => {\n    const { selectedAt, tabId = getCurrentTabId() } = payload;\n\n    return updateTabState(\n      global,\n      {\n        historyCalendarSelectedAt: selectedAt,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeHistoryCalendar\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(\n      global,\n      {\n        historyCalendarSelectedAt: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\"openGame\", (global, actions, payload): ActionReturnType => {\n  const { url, chatId, messageId, tabId = getCurrentTabId() } = payload;\n\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) return;\n\n  const botId = message.viaBotId || selectSender(global, message)?.id;\n  if (!botId) return;\n\n  if (!selectIsTrustedBot(global, botId)) {\n    global = updateTabState(\n      global,\n      {\n        botTrustRequest: {\n          botId,\n          type: \"game\",\n          onConfirm: {\n            action: \"openGame\",\n            payload,\n          },\n        },\n      },\n      tabId\n    );\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(\n    global,\n    {\n      openedGame: {\n        url,\n        chatId,\n        messageId,\n      },\n    },\n    tabId\n  );\n  setGlobal(global);\n});\n\naddActionHandler(\"closeGame\", (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(\n    global,\n    {\n      openedGame: undefined,\n    },\n    tabId\n  );\n});\n\naddActionHandler(\n  \"requestConfetti\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId(), ...rest } = payload;\n\n    if (!selectCanAnimateInterface(global)) return undefined;\n\n    return updateTabState(\n      global,\n      {\n        confetti: {\n          lastConfettiTime: Date.now(),\n          ...rest,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"requestWave\",\n  (global, actions, payload): ActionReturnType => {\n    const { startX, startY, tabId = getCurrentTabId() } = payload;\n\n    if (!IS_WAVE_TRANSFORM_SUPPORTED || !selectCanAnimateInterface(global))\n      return undefined;\n\n    const tabState = selectTabState(global, tabId);\n    const currentLastTime = tabState.wave?.lastWaveTime || 0;\n    if (Date.now() - currentLastTime < ANIMATION_WAVE_MIN_INTERVAL)\n      return undefined;\n\n    return updateTabState(\n      global,\n      {\n        wave: {\n          lastWaveTime: Date.now(),\n          startX,\n          startY,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"updateAttachmentSettings\",\n  (global, actions, payload): ActionReturnType => {\n    return {\n      ...global,\n      attachmentSettings: {\n        ...global.attachmentSettings,\n        ...payload,\n      },\n    };\n  }\n);\n\naddActionHandler(\n  \"requestEffectInComposer\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload;\n\n    return updateTabState(\n      global,\n      {\n        shouldPlayEffectInComposer: true,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"hideEffectInComposer\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload;\n\n    return updateTabState(\n      global,\n      {\n        shouldPlayEffectInComposer: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\"setPaidMessageAutoApprove\", (global): ActionReturnType => {\n  global = {\n    ...global,\n    settings: {\n      ...global.settings,\n      byKey: {\n        ...global.settings.byKey,\n        shouldPaidMessageAutoApprove: true,\n      },\n    },\n  };\n\n  return global;\n});\n\naddActionHandler(\n  \"setReactionEffect\",\n  (global, actions, payload): ActionReturnType => {\n    const { chatId, threadId, reaction, tabId = getCurrentTabId() } = payload;\n\n    const emoticon = reaction?.type === \"emoji\" && reaction.emoticon;\n    if (!emoticon) return;\n\n    const effect = Object.values(global.availableEffectById).find(\n      (currentEffect) =>\n        currentEffect.effectAnimationId && currentEffect.emoticon === emoticon\n    );\n\n    const effectId = effect?.id;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    if (effect?.isPremium && !isCurrentUserPremium) {\n      actions.openPremiumModal({\n        initialSection: \"effects\",\n        tabId,\n      });\n      return;\n    }\n\n    if (!effectId) return;\n\n    actions.requestEffectInComposer({ tabId });\n\n    actions.saveEffectInDraft({ chatId, threadId, effectId });\n  }\n);\n\naddActionHandler(\n  \"openLimitReachedModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { limit, tabId = getCurrentTabId() } = payload;\n\n    return updateTabState(\n      global,\n      {\n        limitReachedModal: {\n          limit,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeLimitReachedModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(\n      global,\n      {\n        limitReachedModal: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeStickerSetModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(\n      global,\n      {\n        openedStickerSetShortName: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"openCustomEmojiSets\",\n  (global, actions, payload): ActionReturnType => {\n    const { setIds, tabId = getCurrentTabId() } = payload;\n    return updateTabState(\n      global,\n      {\n        openedCustomEmojiSetIds: setIds,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeCustomEmojiSets\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(\n      global,\n      {\n        openedCustomEmojiSetIds: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"updateLastRenderedCustomEmojis\",\n  (global, actions, payload): ActionReturnType => {\n    const { ids } = payload;\n    const { lastRendered } = global.customEmojis;\n\n    return {\n      ...global,\n      customEmojis: {\n        ...global.customEmojis,\n        lastRendered: unique([...lastRendered, ...ids]).slice(\n          0,\n          GLOBAL_STATE_CACHE_CUSTOM_EMOJI_LIMIT\n        ),\n      },\n    };\n  }\n);\n\naddActionHandler(\n  \"openCreateTopicPanel\",\n  (global, actions, payload): ActionReturnType => {\n    const { chatId, tabId = getCurrentTabId() } = payload;\n\n    // Topic panel can be opened only if there is a selected chat\n    const currentChat = selectCurrentChat(global, tabId);\n    if (!currentChat) actions.openChat({ id: chatId, tabId });\n\n    return updateTabState(\n      global,\n      {\n        createTopicPanel: {\n          chatId,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeCreateTopicPanel\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    return updateTabState(\n      global,\n      {\n        createTopicPanel: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"openEditTopicPanel\",\n  (global, actions, payload): ActionReturnType => {\n    const { chatId, topicId, tabId = getCurrentTabId() } = payload;\n\n    // Topic panel can be opened only if there is a selected chat\n    const currentChat = selectCurrentChat(global, tabId);\n    if (!currentChat) actions.openChat({ id: chatId, tabId });\n\n    return updateTabState(\n      global,\n      {\n        editTopicPanel: {\n          chatId,\n          topicId,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeEditTopicPanel\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    return updateTabState(\n      global,\n      {\n        editTopicPanel: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"updateArchiveSettings\",\n  (global, actions, payload): ActionReturnType => {\n    const { archiveSettings } = global;\n    const {\n      isHidden = archiveSettings.isHidden,\n      isMinimized = archiveSettings.isMinimized,\n    } = payload;\n\n    return {\n      ...global,\n      archiveSettings: {\n        isHidden,\n        isMinimized,\n      },\n    };\n  }\n);\n\naddActionHandler(\n  \"openMapModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { geoPoint, zoom, tabId = getCurrentTabId() } = payload;\n\n    return updateTabState(\n      global,\n      {\n        mapModal: {\n          point: geoPoint,\n          zoom,\n        },\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeMapModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(\n      global,\n      {\n        mapModal: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\"checkAppVersion\", (global): ActionReturnType => {\n  fetch(`${APP_VERSION_URL}?${Date.now()}`)\n    .then((response) => response.text())\n    .then((version) => {\n      version = version.trim();\n\n      if (getIsAppUpdateNeeded(version, APP_VERSION)) {\n        global = getGlobal();\n        global = {\n          ...global,\n          isAppUpdateAvailable: true,\n        };\n        setGlobal(global);\n      }\n    })\n    .catch((err) => {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.error(\"[checkAppVersion failed] \", err);\n      }\n    });\n});\n\naddActionHandler(\n  \"setIsElectronUpdateAvailable\",\n  (global, action, payload): ActionReturnType => {\n    global = getGlobal();\n    global = {\n      ...global,\n      isElectronUpdateAvailable: Boolean(payload.isAvailable),\n    };\n    setGlobal(global);\n  }\n);\n\naddActionHandler(\"afterHangUp\", (global): ActionReturnType => {\n  if (!selectTabState(global, getCurrentTabId()).multitabNextAction) return;\n  reestablishMasterToSelf();\n});\n\nlet notificationInterval: number | undefined;\n\nconst NOTIFICATION_INTERVAL = 500;\n\naddActionHandler(\n  \"onTabFocusChange\",\n  (global, actions, payload): ActionReturnType => {\n    const { isBlurred, tabId = getCurrentTabId() } = payload;\n\n    if (isBlurred) {\n      if (notificationInterval) clearInterval(notificationInterval);\n\n      notificationInterval = window.setInterval(() => {\n        actions.updatePageTitle({\n          tabId,\n        });\n      }, NOTIFICATION_INTERVAL);\n    } else {\n      clearInterval(notificationInterval);\n      notificationInterval = undefined;\n    }\n\n    global = updateTabState(\n      global,\n      {\n        isBlurred,\n      },\n      tabId\n    );\n\n    return {\n      ...global,\n      initialUnreadNotifications: isBlurred\n        ? getAllNotificationsCount()\n        : undefined,\n    };\n  }\n);\n\naddActionHandler(\n  \"updatePageTitle\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n    const { canDisplayChatInTitle } = selectSharedSettings(global);\n    const currentUserId = global.currentUserId;\n    const isTestServer = global.config?.isTestServer;\n    const prefix = isTestServer ? \"[T] \" : \"\";\n\n    if (document.title.includes(INACTIVE_MARKER)) {\n      updateIcon(false);\n      setPageTitleInstant(`${prefix}${PAGE_TITLE} ${INACTIVE_MARKER}`);\n      return;\n    }\n\n    if (\n      global.initialUnreadNotifications &&\n      Math.round(Date.now() / 1000) % 2 === 0\n    ) {\n      const notificationCount = getAllNotificationsCount();\n\n      const newUnread = notificationCount - global.initialUnreadNotifications;\n\n      if (newUnread > 0) {\n        setPageTitleInstant(\n          `${prefix}${newUnread} notification${newUnread > 1 ? \"s\" : \"\"}`\n        );\n        updateIcon(true);\n        return;\n      }\n    }\n\n    updateIcon(false);\n\n    const messageList = selectCurrentMessageList(global, tabId);\n\n    if (\n      messageList &&\n      canDisplayChatInTitle &&\n      !global.passcode.isScreenLocked\n    ) {\n      const { chatId, threadId } = messageList;\n      const currentChat = selectChat(global, chatId);\n      if (currentChat) {\n        const title = getChatTitle(\n          langProvider.oldTranslate,\n          currentChat,\n          chatId === currentUserId\n        );\n        const topic = selectTopic(global, chatId, threadId);\n        if (currentChat.isForum && topic) {\n          setPageTitle(`${prefix}${title} › ${topic.title}`);\n          return;\n        }\n\n        setPageTitle(`${prefix}${title}`);\n        return;\n      }\n    }\n\n    setPageTitleInstant(IS_ELECTRON ? \"\" : `${prefix}${PAGE_TITLE}`);\n  }\n);\n\naddActionHandler(\n  \"closeInviteViaLinkModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload ?? {};\n    return updateTabState(\n      global,\n      {\n        inviteViaLinkModal: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"closeCollectibleInfoModal\",\n  (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload ?? {};\n    return updateTabState(\n      global,\n      {\n        collectibleInfoModal: undefined,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"setShouldCloseRightColumn\",\n  (global, actions, payload): ActionReturnType => {\n    const { value, tabId = getCurrentTabId() } = payload;\n    return updateTabState(\n      global,\n      {\n        shouldCloseRightColumn: value,\n      },\n      tabId\n    );\n  }\n);\n\naddActionHandler(\n  \"refreshLangPackFromCache\",\n  (global, actions, payload): ActionReturnType => {\n    refreshFromCache(payload.langCode);\n  }\n);\n\naddActionHandler(\n  \"processPremiumFloodWait\",\n  (global, actions, payload): ActionReturnType => {\n    const { isUpload } = payload;\n    const {\n      bandwidthPremiumDownloadSpeedup,\n      bandwidthPremiumUploadSpeedup,\n      bandwidthPremiumNotifyPeriod,\n    } = global.appConfig || {};\n    const { lastPremiumBandwithNotificationDate: lastNotifiedAt } =\n      global.settings;\n\n    if (\n      !bandwidthPremiumDownloadSpeedup ||\n      !bandwidthPremiumUploadSpeedup ||\n      !bandwidthPremiumNotifyPeriod\n    ) {\n      return undefined;\n    }\n    if (\n      lastNotifiedAt &&\n      Date.now() < lastNotifiedAt + bandwidthPremiumNotifyPeriod * 1000\n    )\n      return undefined;\n\n    const unblurredTabIds = Object.values(global.byTabId)\n      .filter((l) => !l.isBlurred)\n      .map((l) => l.id);\n\n    unblurredTabIds.forEach((tabId) => {\n      actions.showNotification({\n        title: langProvider.oldTranslate(\n          isUpload ? \"UploadSpeedLimited\" : \"DownloadSpeedLimited\"\n        ),\n        message: langProvider.oldTranslate(\n          isUpload\n            ? \"UploadSpeedLimitedMessage\"\n            : \"DownloadSpeedLimitedMessage\",\n          isUpload\n            ? bandwidthPremiumUploadSpeedup\n            : bandwidthPremiumDownloadSpeedup\n        ),\n        duration: FLOOD_PREMIUM_WAIT_NOTIFICATION_DURATION,\n        tabId,\n      });\n    });\n\n    return {\n      ...global,\n      settings: {\n        ...global.settings,\n        lastPremiumBandwithNotificationDate: Date.now(),\n      },\n    };\n  }\n);\n\nlet prevIsScreenLocked: boolean | undefined;\nlet prevBlurredTabsCount: number = 0;\nlet onlineTimeout: number | undefined;\nconst ONLINE_TIMEOUT = 100;\naddCallback((global: GlobalState) => {\n  const { updatePageTitle, updateIsOnline } = getActions();\n\n  const isLockedUpdated = global.passcode.isScreenLocked !== prevIsScreenLocked;\n  const blurredTabsCount = Object.values(global.byTabId).filter(\n    (l) => l.isBlurred\n  ).length;\n  const isMasterTab = selectTabState(global, getCurrentTabId()).isMasterTab;\n\n  if (isLockedUpdated) {\n    updatePageTitle();\n  }\n\n  if (blurredTabsCount !== prevBlurredTabsCount && isMasterTab) {\n    if (onlineTimeout) clearTimeout(onlineTimeout);\n\n    onlineTimeout = window.setTimeout(() => {\n      global = getGlobal();\n      const newBlurredTabsCount = Object.values(global.byTabId).filter(\n        (l) => l.isBlurred\n      ).length;\n      updateIsOnline({\n        isOnline: newBlurredTabsCount !== getAllMultitabTokens().length,\n      });\n    }, ONLINE_TIMEOUT);\n  }\n\n  prevIsScreenLocked = global.passcode.isScreenLocked;\n  prevBlurredTabsCount = blurredTabsCount;\n});\n","import type { ActionReturnType } from '../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { IS_SCREEN_LOCKED_CACHE_KEY } from '../../../config';\nimport { getCurrentTabId, signalPasscodeHash } from '../../../util/establishMultitabRole';\nimport { cloneDeep } from '../../../util/iteratees';\nimport {\n  clearEncryptedSession, encryptSession, forgetPasscode, setupPasscode,\n} from '../../../util/passcode';\nimport { onBeforeUnload } from '../../../util/schedulers';\nimport { clearStoredSession, loadStoredSession, storeSession } from '../../../util/sessions';\nimport { forceUpdateCache, migrateCache, serializeGlobal } from '../../cache';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { INITIAL_GLOBAL_STATE } from '../../initialState';\nimport { clearPasscodeSettings, updatePasscodeSettings } from '../../reducers';\n\nlet noLockOnUnload = false;\nonBeforeUnload(() => {\n  const global = getGlobal();\n  if (!global.isInited) return;\n  if (global.passcode.hasPasscode && !noLockOnUnload && Object.keys(global.byTabId).length === 1) {\n    clearStoredSession();\n  }\n});\n\naddActionHandler('setPasscode', async (global, actions, payload): Promise<void> => {\n  const { passcode, tabId = getCurrentTabId() } = payload;\n  global = updatePasscodeSettings(global, {\n    isLoading: true,\n  });\n  setGlobal(global);\n  await setupPasscode(passcode);\n\n  const sessionJson = JSON.stringify({ ...loadStoredSession(), userId: global.currentUserId });\n  global = getGlobal();\n  const globalJson = serializeGlobal(updatePasscodeSettings(global, {\n    hasPasscode: true,\n    error: undefined,\n    isLoading: false,\n  }));\n\n  try {\n    await encryptSession(sessionJson, globalJson);\n\n    signalPasscodeHash();\n    global = getGlobal();\n    global = updatePasscodeSettings(global, {\n      hasPasscode: true,\n      error: undefined,\n      isLoading: false,\n    });\n    setGlobal(global);\n\n    forceUpdateCache(true);\n  } catch (err: any) {\n    forgetPasscode();\n\n    global = getGlobal();\n    global = updatePasscodeSettings(global, {\n      isLoading: false,\n    });\n    setGlobal(global);\n\n    actions.showNotification({\n      message: 'Failed to set passcode',\n      tabId,\n    });\n    actions.openSettingsScreen({ screen: SettingsScreens.PasscodeDisabled, tabId });\n  }\n});\n\naddActionHandler('clearPasscode', (global): ActionReturnType => {\n  void clearEncryptedSession();\n\n  localStorage.removeItem(IS_SCREEN_LOCKED_CACHE_KEY);\n  return clearPasscodeSettings(global);\n});\n\naddActionHandler('unlockScreen', (global, actions, payload): ActionReturnType => {\n  const beforeTabStates = Object.values(global.byTabId);\n  const { sessionJson, globalJson } = payload;\n  const session = JSON.parse(sessionJson);\n  storeSession(session);\n\n  const previousGlobal = global;\n  global = JSON.parse(globalJson);\n  global.byTabId = previousGlobal.byTabId;\n  migrateCache(global, cloneDeep(INITIAL_GLOBAL_STATE));\n\n  global = updatePasscodeSettings(\n    global,\n    {\n      isScreenLocked: false,\n      error: undefined,\n      invalidAttemptsCount: 0,\n    },\n  );\n  setGlobal(global);\n\n  signalPasscodeHash();\n\n  beforeTabStates.forEach(({ id: tabId, isMasterTab }) => actions.init({ tabId, isMasterTab }));\n  actions.initApi();\n});\n\nconst MAX_INVALID_ATTEMPTS = 5;\nconst TIMEOUT_RESET_INVALID_ATTEMPTS_MS = 1000 * 15;// 180000; // 3 minutes\n\naddActionHandler('logInvalidUnlockAttempt', (global): ActionReturnType => {\n  const invalidAttemptsCount = (global.passcode?.invalidAttemptsCount ?? 0) + 1;\n\n  return updatePasscodeSettings(global, {\n    invalidAttemptsCount,\n    timeoutUntil: (invalidAttemptsCount >= MAX_INVALID_ATTEMPTS\n      ? Date.now() + TIMEOUT_RESET_INVALID_ATTEMPTS_MS : undefined),\n  });\n});\n\naddActionHandler('resetInvalidUnlockAttempts', (global): ActionReturnType => {\n  return updatePasscodeSettings(global, {\n    invalidAttemptsCount: 0,\n    timeoutUntil: undefined,\n  });\n});\n\naddActionHandler('setPasscodeError', (global, actions, payload): ActionReturnType => {\n  const { error } = payload;\n\n  return updatePasscodeSettings(global, { error });\n});\n\naddActionHandler('clearPasscodeError', (global): ActionReturnType => {\n  return updatePasscodeSettings(global, { error: undefined });\n});\n\naddActionHandler('skipLockOnUnload', (): ActionReturnType => {\n  noLockOnUnload = true;\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { DEFAULT_GIFT_PROFILE_FILTER_OPTIONS } from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addActionHandler, setGlobal } from '../../index';\nimport {\n  clearPayment,\n  updatePayment,\n  updateStarsPayment,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectTabState } from '../../selectors';\n\naddActionHandler('closePaymentModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const payment = selectTabState(global, tabId).payment;\n  const status = payment.status || 'cancelled';\n  const starsBalanceModal = selectTabState(global, tabId).starsBalanceModal;\n\n  actions.processOriginStarsPayment({\n    originData: starsBalanceModal,\n    status,\n    tabId,\n  });\n\n  global = clearPayment(global, tabId);\n  global = updatePayment(global, {\n    status,\n  }, tabId);\n\n  return global;\n});\n\naddActionHandler('resetPaymentStatus', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  global = updatePayment(global, { status: undefined }, tabId);\n  global = updateStarsPayment(global, { status: undefined }, tabId);\n  return global;\n});\n\naddActionHandler('addPaymentError', (global, actions, payload): ActionReturnType => {\n  const { error, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    payment: {\n      ...selectTabState(global, tabId).payment,\n      status: 'failed',\n      error,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeGiveawayModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    giveawayModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('closeGiftCodeModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    giftCodeModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('updateGiftProfileFilter', (global, actions, payload): ActionReturnType => {\n  const { filter, peerId, tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  const prevFilter = tabState.savedGifts.filter;\n  let updatedFilter = {\n    ...prevFilter,\n    ...filter,\n  };\n\n  if (!updatedFilter.shouldIncludeUnlimited\n    && !updatedFilter.shouldIncludeLimited\n    && !updatedFilter.shouldIncludeUnique) {\n    updatedFilter = {\n      ...prevFilter,\n      shouldIncludeUnlimited: true,\n      shouldIncludeLimited: true,\n      shouldIncludeUnique: true,\n      ...filter,\n    };\n  }\n\n  if (!updatedFilter.shouldIncludeDisplayed && !updatedFilter.shouldIncludeHidden) {\n    updatedFilter = {\n      ...prevFilter,\n      shouldIncludeDisplayed: true,\n      shouldIncludeHidden: true,\n      ...filter,\n    };\n  }\n\n  global = updateTabState(global, {\n    savedGifts: {\n      ...tabState.savedGifts,\n      giftsByPeerId: {\n        [peerId]: tabState.savedGifts.giftsByPeerId[peerId],\n      },\n      filter: updatedFilter,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  actions.loadPeerSavedGifts({\n    peerId, shouldRefresh: true, tabId: tabState.id,\n  });\n});\n\naddActionHandler('resetGiftProfileFilter', (global, actions, payload): ActionReturnType => {\n  const { peerId, tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  global = updateTabState(global, {\n    savedGifts: {\n      ...tabState.savedGifts,\n      giftsByPeerId: {\n        [peerId]: tabState.savedGifts.giftsByPeerId[peerId],\n      },\n      filter: {\n        ...DEFAULT_GIFT_PROFILE_FILTER_OPTIONS,\n      },\n    },\n  }, tabId);\n  setGlobal(global);\n\n  actions.loadPeerSavedGifts({\n    peerId, shouldRefresh: true, tabId: tabState.id,\n  });\n});\n\naddActionHandler('openPaymentMessageConfirmDialogOpen', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    isPaymentMessageConfirmDialogOpen: true,\n  }, tabId);\n});\n\naddActionHandler('closePaymentMessageConfirmDialogOpen', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    isPaymentMessageConfirmDialogOpen: false,\n  }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { addActionHandler } from '../../index';\nimport { updateChatMessage } from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChatMessage, selectTabState } from '../../selectors';\n\naddActionHandler('processOpenChatOrThread', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  if (chatId) {\n    return updateTabState(global, {\n      reactionPicker: {\n        chatId,\n        messageId: undefined,\n        position: undefined,\n      },\n    }, tabId);\n  }\n\n  return updateTabState(global, {\n    reactionPicker: undefined,\n  }, tabId);\n});\n\naddActionHandler('openMessageReactionPicker', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId,\n    messageId,\n    position,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    reactionPicker: {\n      chatId,\n      messageId,\n      position,\n    },\n  }, tabId);\n});\n\naddActionHandler('openStoryReactionPicker', (global, actions, payload): ActionReturnType => {\n  const {\n    peerId,\n    storyId,\n    position,\n    sendAsMessage,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    reactionPicker: {\n      storyPeerId: peerId,\n      storyId,\n      sendAsMessage,\n      position,\n    },\n  }, tabId);\n});\n\naddActionHandler('openEffectPicker', (global, actions, payload): ActionReturnType => {\n  const {\n    position,\n    chatId,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    reactionPicker: {\n      position,\n      chatId,\n      isForEffects: true,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeReactionPicker', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    reactionPicker: {\n      ...tabState.reactionPicker,\n      messageId: undefined,\n      position: undefined,\n      storyId: undefined,\n      storyPeerId: undefined,\n      isForEffects: undefined,\n    },\n  }, tabId);\n});\n\naddActionHandler('resetLocalPaidReactions', (global, actions, payload): ActionReturnType => {\n  const { chatId, messageId } = payload;\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) {\n    return undefined;\n  }\n\n  const { reactions } = message;\n\n  if (!reactions) {\n    return undefined;\n  }\n\n  const updatedResults = reactions.results.map((reaction) => {\n    if (reaction.localAmount) {\n      if (!reaction.count) return undefined;\n      return {\n        ...reaction,\n        localAmount: undefined,\n        localPreviousChosenOrder: undefined,\n        chosenOrder: reaction.localPreviousChosenOrder,\n      };\n    }\n    return reaction;\n  }).filter(Boolean);\n\n  Object.values(global.byTabId)\n    .forEach(({ id: tabId }) => {\n      actions.dismissNotification({\n        localId: getMessageKey(message),\n        tabId,\n      });\n    });\n\n  return updateChatMessage(global, chatId, messageId, {\n    reactions: {\n      ...reactions,\n      results: updatedResults,\n    },\n  });\n});\n","import type { ApiInputSavedStarGift, ApiSavedStarGift } from '../../../api/types';\nimport type { ActionReturnType } from '../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../config';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { addTabStateResetterAction } from '../../helpers/meta';\nimport { getPrizeStarsTransactionFromGiveaway, getStarsTransactionFromGift } from '../../helpers/payments';\nimport { addActionHandler } from '../../index';\nimport {\n  clearStarPayment, openStarsTransactionModal,\n} from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChatMessage, selectIsCurrentUserFrozen, selectStarsPayment, selectTabState,\n} from '../../selectors';\n\naddActionHandler('processOriginStarsPayment', (global, actions, payload): ActionReturnType => {\n  const { originData, status, tabId = getCurrentTabId() } = payload;\n  const {\n    originStarsPayment, originReaction, originGift, topup,\n  } = originData || {};\n\n  if (!originStarsPayment && !originReaction && !originGift && !topup) {\n    return undefined;\n  }\n\n  actions.closeStarsBalanceModal({ tabId });\n\n  if (status !== 'paid') {\n    return undefined;\n  }\n\n  // Re-open previous payment modal\n  if (originStarsPayment) {\n    global = updateTabState(global, {\n      starsPayment: originStarsPayment,\n    }, tabId);\n  }\n\n  if (originReaction) {\n    actions.sendPaidReaction({\n      chatId: originReaction.chatId,\n      messageId: originReaction.messageId,\n      forcedAmount: originReaction.amount,\n      tabId,\n    });\n  }\n\n  if (originGift) {\n    actions.sendStarGift({\n      ...originGift,\n      tabId,\n    });\n  }\n\n  return global;\n});\n\naddActionHandler('openGiftRecipientPicker', (global, actions, payload): ActionReturnType => {\n  const {\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return global;\n  }\n\n  return updateTabState(global, {\n    isGiftRecipientPickerOpen: true,\n  }, tabId);\n});\n\naddTabStateResetterAction('closeGiftRecipientPicker', 'isGiftRecipientPickerOpen');\n\naddActionHandler('openStarsGiftingPickerModal', (global, actions, payload): ActionReturnType => {\n  const {\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  return updateTabState(global, {\n    starsGiftingPickerModal: {\n      isOpen: true,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeStarsGiftingPickerModal', 'starsGiftingPickerModal');\n\naddActionHandler('openPrizeStarsTransactionFromGiveaway', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId,\n    messageId,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) return undefined;\n\n  const transaction = getPrizeStarsTransactionFromGiveaway(message);\n  if (!transaction) return undefined;\n\n  return openStarsTransactionModal(global, transaction, tabId);\n});\n\naddActionHandler('openStarsBalanceModal', (global, actions, payload): ActionReturnType => {\n  const {\n    originStarsPayment,\n    originReaction,\n    originGift,\n    topup,\n    shouldIgnoreBalance,\n    currency = STARS_CURRENCY_CODE,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const starBalance = global.stars?.balance;\n\n  if (!shouldIgnoreBalance && starBalance && topup && topup.balanceNeeded <= starBalance.amount) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('StarsTopupLinkEnough'),\n      actionText: langProvider.oldTranslate('StarsTopupLinkTopupAnyway'),\n      action: {\n        action: 'openStarsBalanceModal',\n        payload: { topup, shouldIgnoreBalance: true, tabId },\n      },\n      icon: 'star',\n      tabId,\n    });\n    return undefined;\n  }\n\n  global = clearStarPayment(global, tabId);\n\n  // Always refresh status on opening\n  actions.loadStarStatus();\n\n  return updateTabState(global, {\n    starsBalanceModal: {\n      originStarsPayment,\n      originReaction,\n      originGift,\n      topup,\n      currency,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeStarsBalanceModal', 'starsBalanceModal');\n\naddActionHandler('closeStarsPaymentModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  const starsPayment = selectStarsPayment(global, tabId);\n  let status = starsPayment?.status;\n  if (!status || status === 'pending') {\n    status = 'cancelled';\n  }\n\n  return updateTabState(global, {\n    starsPayment: {\n      status,\n    },\n  }, tabId);\n});\n\naddActionHandler('openStarsTransactionModal', (global, actions, payload): ActionReturnType => {\n  const { transaction, tabId = getCurrentTabId() } = payload;\n  return openStarsTransactionModal(global, transaction, tabId);\n});\n\naddActionHandler('openStarsTransactionFromGift', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId,\n    messageId,\n    tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message) return undefined;\n\n  const transaction = getStarsTransactionFromGift(message);\n  if (!transaction) return undefined;\n\n  return openStarsTransactionModal(global, transaction, tabId);\n});\n\naddTabStateResetterAction('closeStarsTransactionModal', 'starsTransactionModal');\n\naddActionHandler('openStarsSubscriptionModal', (global, actions, payload): ActionReturnType => {\n  const { subscription, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    starsSubscriptionModal: {\n      subscription,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeStarsSubscriptionModal', 'starsSubscriptionModal');\n\naddTabStateResetterAction('closeGiftModal', 'giftModal');\n\naddActionHandler('closeStarsGiftModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    starsGiftModal: { isOpen: false },\n  }, tabId);\n});\n\naddActionHandler('openGiftInfoModalFromMessage', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, messageId, tabId = getCurrentTabId(),\n  } = payload;\n\n  const message = selectChatMessage(global, chatId, messageId);\n  if (!message || !message.content.action) return;\n\n  const action = message.content.action;\n  if (action.type !== 'starGift' && action.type !== 'starGiftUnique') return;\n\n  const starGift = action.type === 'starGift' ? action : undefined;\n  const uniqueGift = action.type === 'starGiftUnique' ? action : undefined;\n\n  const giftReceiverId = action.peerId || (message.isOutgoing ? message.chatId : global.currentUserId!);\n\n  const inputGift: ApiInputSavedStarGift = action.savedId\n    ? { type: 'chat', chatId, savedId: action.savedId }\n    : { type: 'user', messageId };\n\n  const fromId = action.fromId || (message.isOutgoing ? global.currentUserId! : message.chatId);\n\n  const gift: ApiSavedStarGift = {\n    date: message.date,\n    gift: action.gift,\n    message: starGift?.message,\n    starsToConvert: starGift?.starsToConvert,\n    isNameHidden: starGift?.isNameHidden,\n    isUnsaved: !action.isSaved,\n    fromId,\n    messageId: message.id,\n    isConverted: starGift?.isConverted,\n    upgradeMsgId: starGift?.upgradeMsgId,\n    canUpgrade: starGift?.canUpgrade,\n    alreadyPaidUpgradeStars: starGift?.alreadyPaidUpgradeStars,\n    inputGift,\n    canExportAt: uniqueGift?.canExportAt,\n    savedId: action.savedId,\n    transferStars: uniqueGift?.transferStars,\n  };\n\n  actions.openGiftInfoModal({ peerId: giftReceiverId, gift, tabId });\n});\n\naddActionHandler('openGiftInfoModal', (global, actions, payload): ActionReturnType => {\n  const {\n    gift, tabId = getCurrentTabId(),\n  } = payload;\n\n  const peerId = 'peerId' in payload ? payload.peerId : undefined;\n  const recipientId = 'recipientId' in payload ? payload.recipientId : undefined;\n\n  return updateTabState(global, {\n    giftInfoModal: {\n      peerId,\n      gift,\n      recipientId,\n    },\n  }, tabId);\n});\n\naddActionHandler('openGiftResalePriceComposerModal', (global, actions, payload): ActionReturnType => {\n  const {\n    gift, peerId, tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    giftResalePriceComposerModal: {\n      peerId,\n      gift,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeGiftInfoModal', 'giftInfoModal');\n\naddTabStateResetterAction('closeGiftResalePriceComposerModal', 'giftResalePriceComposerModal');\n\naddTabStateResetterAction('closeGiftUpgradeModal', 'giftUpgradeModal');\n\naddActionHandler('openGiftWithdrawModal', (global, actions, payload): ActionReturnType => {\n  const { gift, tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    giftWithdrawModal: {\n      gift,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeGiftWithdrawModal', 'giftWithdrawModal');\n\naddActionHandler('openGiftStatusInfoModal', (global, actions, payload): ActionReturnType => {\n  const { emojiStatus, tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    giftStatusInfoModal: {\n      emojiStatus,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeGiftStatusInfoModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    giftStatusInfoModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('clearGiftWithdrawError', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  const giftWithdrawModal = tabState?.giftWithdrawModal;\n  if (!giftWithdrawModal) return undefined;\n\n  return updateTabState(global, {\n    giftWithdrawModal: {\n      ...giftWithdrawModal,\n      errorKey: undefined,\n    },\n  }, tabId);\n});\n\naddActionHandler('openGiftTransferModal', (global, actions, payload): ActionReturnType => {\n  const { gift, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    giftTransferModal: {\n      gift,\n    },\n  }, tabId);\n});\n\naddTabStateResetterAction('closeGiftTransferModal', 'giftTransferModal');\n","import type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addActionHandler } from '../..';\nimport { updateVerifyMonetizationModal } from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\n\naddActionHandler('openMonetizationVerificationModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId(), chatId } = payload || {};\n\n  return updateTabState(global, {\n    monetizationVerificationModal: {\n      chatId,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeMonetizationVerificationModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    monetizationVerificationModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('clearMonetizationVerificationError', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateVerifyMonetizationModal(global, { errorKey: undefined }, tabId);\n});\n\naddActionHandler('closeMonetizationStatistics', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    monetizationStatistics: undefined,\n  }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addActionHandler } from '../../index';\nimport { updateTabState } from '../../reducers/tabs';\n\naddActionHandler('setStickerSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    stickerSearch: {\n      query,\n      resultIds: undefined,\n    },\n  }, tabId);\n});\n\naddActionHandler('setGifSearchQuery', (global, actions, payload): ActionReturnType => {\n  const { query, tabId = getCurrentTabId() } = payload;\n\n  return updateTabState(global, {\n    gifSearch: {\n      query,\n      offset: undefined,\n      // offsetId: undefined,\n      results: undefined,\n    },\n  }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { addStoriesForPeer } from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectCurrentViewedStory,\n  selectPeer,\n  selectPeerFirstStoryId,\n  selectPeerFirstUnreadStoryId,\n  selectPeerStories,\n  selectStoryListForViewer,\n  selectTabState,\n} from '../../selectors';\nimport { fetchChatByUsername } from '../api/chats';\nimport { getPeerStarsForMessage } from '../api/messages';\n\naddActionHandler('openStoryViewer', async (global, actions, payload): Promise<void> => {\n  const {\n    peerId, storyId, isSinglePeer, isSingleStory, isPrivate, isArchive, origin, tabId = getCurrentTabId(),\n  } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const tabState = selectTabState(global, tabId);\n  const peerStories = selectPeerStories(global, peerId);\n\n  if (storyId && (!peerStories || !peerStories.byId[storyId])) {\n    const result = await callApi('fetchPeerStoriesByIds', { peer, ids: [storyId] });\n\n    if (!result) {\n      return;\n    }\n    global = getGlobal();\n    global = addStoriesForPeer(global, peerId, result.stories);\n  }\n\n  const storyList = tabState.storyViewer.storyList\n    || selectStoryListForViewer(global, peerId, storyId, isSingleStory, isSinglePeer, isPrivate, isArchive);\n\n  global = updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      peerId,\n      storyId: storyId || selectPeerFirstUnreadStoryId(global, peerId) || selectPeerFirstStoryId(global, peerId),\n      isSinglePeer,\n      isPrivate,\n      isArchive,\n      isSingleStory,\n      viewModal: undefined,\n      origin,\n      storyList,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openStoryViewerByUsername', async (global, actions, payload): Promise<void> => {\n  const {\n    username, storyId, origin, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = await fetchChatByUsername(global, username);\n\n  if (!chat) {\n    return;\n  }\n\n  actions.openStoryViewer({\n    peerId: chat.id,\n    storyId,\n    isSinglePeer: true,\n    isSingleStory: true,\n    origin,\n    tabId,\n  });\n});\n\naddActionHandler('closeStoryViewer', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const {\n    isMuted, isRibbonShown, isArchivedRibbonShown, storyId,\n  } = selectTabState(global, tabId).storyViewer;\n\n  if (!storyId) return global;\n\n  global = updateTabState(global, {\n    storyViewer: {\n      isMuted,\n      isRibbonShown,\n      isArchivedRibbonShown,\n      lastViewedByPeerId: undefined,\n      storyList: undefined,\n    },\n  }, tabId);\n\n  return global;\n});\n\naddActionHandler('setStoryViewerMuted', (global, actions, payload): ActionReturnType => {\n  const {\n    isMuted,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...selectTabState(global, tabId).storyViewer,\n      isMuted,\n    },\n  }, tabId);\n});\n\naddActionHandler('toggleStoryRibbon', (global, actions, payload): ActionReturnType => {\n  const { isShown, isArchived, tabId = getCurrentTabId() } = payload;\n\n  const orderedIds = global.stories.orderedPeerIds[isArchived ? 'archived' : 'active'];\n  if (!orderedIds?.length) {\n    return global;\n  }\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...selectTabState(global, tabId).storyViewer,\n      [isArchived ? 'isArchivedRibbonShown' : 'isRibbonShown']: isShown,\n    },\n  }, tabId);\n});\n\naddActionHandler('openPreviousStory', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  const {\n    peerId, storyId, isSinglePeer, isSingleStory, storyList,\n  } = tabState.storyViewer;\n\n  if (isSingleStory || !storyList) {\n    actions.closeStoryViewer({ tabId });\n    return undefined;\n  }\n\n  if (!peerId || !storyId) {\n    return undefined;\n  }\n\n  const peer = selectPeer(global, peerId);\n  const peerStories = selectPeerStories(global, peerId);\n  if (!peerStories || !peer) {\n    return undefined;\n  }\n\n  const { peerIds: orderedPeerIds, storyIdsByPeerId } = storyList;\n  const peerStoryIds = storyIdsByPeerId[peerId] ?? [];\n  const currentStoryIndex = peerStoryIds.indexOf(storyId);\n  let previousStoryIndex: number;\n  let previousPeerId: string;\n\n  if (currentStoryIndex > 0) {\n    previousStoryIndex = currentStoryIndex - 1;\n    previousPeerId = peerId;\n  } else {\n    const previousPeerIdIndex = orderedPeerIds.indexOf(peerId) - 1;\n    if (isSinglePeer || previousPeerIdIndex < 0) {\n      return undefined;\n    }\n\n    previousPeerId = orderedPeerIds[previousPeerIdIndex];\n    previousStoryIndex = (storyIdsByPeerId?.[previousPeerId]?.length || 1) - 1;\n  }\n\n  const previousStoryId = storyIdsByPeerId?.[previousPeerId]?.[previousStoryIndex];\n  if (!previousStoryId) {\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      peerId: previousPeerId,\n      storyId: previousStoryId,\n    },\n  }, tabId);\n});\n\naddActionHandler('openNextStory', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n  const {\n    peerId, storyId, isSinglePeer, isSingleStory, storyList,\n  } = tabState.storyViewer;\n  if (isSingleStory || !storyList) {\n    actions.closeStoryViewer({ tabId });\n    return undefined;\n  }\n\n  if (!peerId || !storyId) {\n    return undefined;\n  }\n\n  const peer = selectPeer(global, peerId);\n  const peerStories = selectPeerStories(global, peerId);\n  if (!peerStories || !peer) {\n    return undefined;\n  }\n\n  const { peerIds: orderedPeerIds, storyIdsByPeerId } = storyList;\n  const peerStoryIds = storyIdsByPeerId[peerId] ?? [];\n  const currentStoryIndex = peerStoryIds.indexOf(storyId);\n  let nextStoryIndex: number;\n  let nextPeerId: string;\n\n  if (currentStoryIndex < peerStoryIds.length - 1) {\n    nextStoryIndex = currentStoryIndex + 1;\n    nextPeerId = peerId;\n  } else {\n    const nextPeerIdIndex = orderedPeerIds.indexOf(peerId) + 1;\n    if (isSinglePeer || nextPeerIdIndex > orderedPeerIds.length - 1) {\n      actions.closeStoryViewer({ tabId });\n      return undefined;\n    }\n\n    nextPeerId = orderedPeerIds[nextPeerIdIndex];\n    nextStoryIndex = 0;\n  }\n\n  const nextStoryId = storyIdsByPeerId?.[nextPeerId]?.[nextStoryIndex];\n  if (!nextStoryId) {\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      peerId: nextPeerId,\n      storyId: nextStoryId,\n    },\n  }, tabId);\n});\n\naddActionHandler('openStoryViewModal', (global, actions, payload): ActionReturnType => {\n  const { storyId, tabId = getCurrentTabId() } = payload;\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      viewModal: {\n        storyId,\n        nextOffset: '',\n        isLoading: true,\n      },\n    },\n  }, tabId);\n});\n\naddActionHandler('closeStoryViewModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    storyViewer: omit(tabState.storyViewer, ['viewModal']),\n  }, tabId);\n});\n\naddActionHandler('copyStoryLink', async (global, actions, payload): Promise<void> => {\n  const { peerId, storyId, tabId = getCurrentTabId() } = payload;\n\n  const peer = selectPeer(global, peerId);\n  if (!peer) {\n    return;\n  }\n\n  const link = await callApi('fetchStoryLink', { peer, storyId });\n  if (!link) {\n    return;\n  }\n\n  copyTextToClipboard(link);\n  actions.showNotification({\n    message: langProvider.oldTranslate('LinkCopied'),\n    tabId,\n  });\n});\n\naddActionHandler('sendMessage', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload;\n  const { storyId, peerId: storyPeerId } = selectCurrentViewedStory(global, tabId);\n  const isStoryReply = Boolean(storyId && storyPeerId);\n\n  if (!isStoryReply) {\n    return;\n  }\n  const messagePriceInStars = await getPeerStarsForMessage(global, storyPeerId!);\n  if (messagePriceInStars === undefined) return;\n\n  const { gif, sticker, isReaction } = payload;\n\n  let message: string;\n  if (gif) {\n    message = 'Story.Tooltip.GifSent';\n  } else if (sticker) {\n    message = 'Story.Tooltip.StickerSent';\n  } else if (isReaction) {\n    message = 'Story.Tooltip.ReactionSent';\n  } else {\n    message = 'Story.Tooltip.MessageSent';\n  }\n\n  actions.showNotification({\n    message: langProvider.oldTranslate(message),\n    actionText: langProvider.oldTranslate('Story.ToastViewInChat'),\n    action: [{\n      action: 'closeStoryViewer',\n      payload: undefined,\n    }, {\n      action: 'openChat',\n      payload: { id: storyPeerId },\n    }],\n    tabId,\n  });\n});\n\naddActionHandler('openStoryPrivacyEditor', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      isPrivacyModalOpen: true,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeStoryPrivacyEditor', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      isPrivacyModalOpen: false,\n    },\n  }, tabId);\n});\n\naddActionHandler('toggleStealthModal', (global, actions, payload): ActionReturnType => {\n  const { isOpen, tabId = getCurrentTabId() } = payload || {};\n  const tabState = selectTabState(global, tabId);\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      isStealthModalOpen: isOpen,\n    },\n  }, tabId);\n});\n\naddActionHandler('clearStoryViews', (global, actions, payload): ActionReturnType => {\n  const { isLoading, tabId = getCurrentTabId() } = payload || {};\n\n  const tabState = selectTabState(global, tabId);\n\n  if (!tabState.storyViewer.viewModal) return global;\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      viewModal: {\n        ...tabState.storyViewer.viewModal,\n        views: undefined,\n        isLoading,\n        nextOffset: '',\n      },\n    },\n  }, tabId);\n});\n\naddActionHandler('updateStoryView', (global, actions, payload): ActionReturnType => {\n  const {\n    userId, isUserBlocked, areStoriesBlocked, tabId = getCurrentTabId(),\n  } = payload;\n\n  const tabState = selectTabState(global, tabId);\n  const { viewModal } = tabState.storyViewer;\n  if (!viewModal?.storyId) return undefined;\n\n  const updatedViews = viewModal?.views?.map((view) => {\n    if (view.peerId === userId) {\n      return {\n        ...view,\n        isUserBlocked: isUserBlocked || undefined,\n        areStoriesBlocked: areStoriesBlocked || undefined,\n      };\n    }\n\n    return view;\n  });\n\n  return updateTabState(global, {\n    storyViewer: {\n      ...tabState.storyViewer,\n      viewModal: {\n        ...viewModal,\n        views: updatedViews,\n      },\n    },\n  }, tabId);\n});\n\naddActionHandler('closeBoostModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    boostModal: undefined,\n  }, tabId);\n});\n\naddActionHandler('closeBoostStatistics', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    boostStatistics: undefined,\n  }, tabId);\n});\n","import type { ActionReturnType } from '../../types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { addTabStateResetterAction } from '../../helpers/meta';\nimport { addActionHandler } from '../../index';\nimport { closeNewContactDialog, updateUserSearch } from '../../reducers';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectIsCurrentUserFrozen } from '../../selectors';\n\naddActionHandler('setUserSearchQuery', (global, actions, payload): ActionReturnType => {\n  const {\n    query,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  return updateUserSearch(global, {\n    globalUserIds: undefined,\n    localUserIds: undefined,\n    fetchingStatus: Boolean(query),\n    query,\n  }, tabId);\n});\n\naddActionHandler('openAddContactDialog', (global, actions, payload): ActionReturnType => {\n  const { userId, tabId = getCurrentTabId() } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return global;\n  }\n\n  return updateTabState(global, {\n    newContact: { userId },\n  }, tabId);\n});\n\naddActionHandler('openNewContactDialog', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return global;\n  }\n\n  return updateTabState(global, {\n    newContact: {\n      isByPhoneNumber: true,\n    },\n  }, tabId);\n});\n\naddActionHandler('closeNewContactDialog', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return closeNewContactDialog(global, tabId);\n});\n\naddActionHandler('closeSuggestedStatusModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    suggestedStatusModal: undefined,\n  }, tabId);\n});\n\naddTabStateResetterAction('closeChatRefundModal', 'chatRefundModal');\n","import type { ActionReturnType, TabState } from '../types';\n\nimport { getCurrentTabId } from '../../util/establishMultitabRole';\nimport { updateTabState } from '../reducers/tabs';\nimport { addActionHandler, type TabStateActionNames } from '..';\n\nexport function addTabStateResetterAction<ActionName extends TabStateActionNames>(\n  name: ActionName, key: keyof TabState,\n) {\n  // @ts-ignore\n  addActionHandler(name, (global, actions, payload): ActionReturnType => {\n    const { tabId = getCurrentTabId() } = payload || {};\n\n    return updateTabState(global, {\n      [key]: undefined,\n    }, tabId);\n  });\n}\n","import type { ApiMessage } from '../../api/types';\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { renderMessageText } from '../../components/common/helpers/renderMessageText';\nimport { getGlobal } from '..';\nimport { getMessageStatefulContent } from './messages';\nimport { getMessageSummaryDescription, getMessageSummaryEmoji } from './messageSummary';\n\nexport function renderMessageSummaryHtml(\n  lang: OldLangFn,\n  message: ApiMessage,\n) {\n  const global = getGlobal();\n  const emoji = getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n  const text = (renderMessageText({ message, shouldRenderAsHtml: true }) as string[])?.join('');\n\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text, true) as string;\n\n  return `${emojiWithSpace}${description}`;\n}\n","import type { InlineBotSettings } from '../../types';\nimport type { WebApp, WebAppModalStateType } from '../../types/webapp';\nimport type {\n  GlobalState, TabArgs,\n} from '../types';\n\nimport { getCurrentTabId } from '../../util/establishMultitabRole';\nimport { getWebAppKey } from '../helpers/bots';\nimport { selectActiveWebApp, selectTabState } from '../selectors';\nimport { updateTabState } from './tabs';\n\nexport function replaceInlineBotSettings<T extends GlobalState>(\n  global: T, username: string, inlineBotSettings: InlineBotSettings | false,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const tabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    inlineBots: {\n      ...tabState.inlineBots,\n      byUsername: {\n        ...tabState.inlineBots.byUsername,\n        [username]: inlineBotSettings,\n      },\n    },\n  }, tabId);\n}\n\nexport function replaceInlineBotsIsLoading<T extends GlobalState>(\n  global: T, isLoading: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  return updateTabState(global, {\n    inlineBots: {\n      ...selectTabState(global, tabId).inlineBots,\n      isLoading,\n    },\n  }, tabId);\n}\n\nexport function updateWebApp<T extends GlobalState>(\n  global: T, key: string, webAppUpdate: Partial<WebApp>,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n  const openedWebApps = currentTabState.webApps.openedWebApps;\n\n  const originalWebApp = openedWebApps[key];\n\n  if (!originalWebApp) return global;\n\n  const updatedValue = {\n    ...originalWebApp,\n    ...webAppUpdate,\n  };\n\n  const updatedWebAppKey = getWebAppKey(updatedValue);\n  if (!updatedWebAppKey) return global;\n\n  global = updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      openedWebApps: {\n        ...openedWebApps,\n        [updatedWebAppKey]: updatedValue,\n      },\n    },\n  }, tabId);\n\n  return global;\n}\n\nexport function activateWebAppIfOpen<T extends GlobalState>(\n  global: T, webAppKey: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n  const openedWebApps = currentTabState.webApps.openedWebApps;\n\n  if (!openedWebApps[webAppKey]) {\n    return global;\n  }\n\n  global = updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      isMoreAppsTabActive: false,\n      activeWebAppKey: webAppKey,\n      modalState: 'maximized',\n    },\n  }, tabId);\n\n  return global;\n}\n\nexport function addWebAppToOpenList<T extends GlobalState>(\n  global: T, webApp: WebApp,\n  makeActive: boolean = true, openModalIfNotOpen: boolean = true,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n\n  const key = getWebAppKey(webApp);\n\n  if (!key) return global;\n  const newOpenedKeys = [...currentTabState.webApps.openedOrderedKeys];\n  if (!newOpenedKeys.includes(key)) newOpenedKeys.push(key);\n\n  const newSessionKeys = [...currentTabState.webApps.sessionKeys];\n  if (!newSessionKeys.includes(key)) newSessionKeys.push(key);\n\n  const openedWebApps = currentTabState.webApps.openedWebApps;\n\n  global = updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      ...makeActive && { activeWebAppKey: key },\n      isMoreAppsTabActive: false,\n      isModalOpen: openModalIfNotOpen,\n      modalState: 'maximized',\n      openedWebApps: {\n        ...openedWebApps,\n        [key]: webApp,\n      },\n      openedOrderedKeys: newOpenedKeys,\n      sessionKeys: newSessionKeys,\n    },\n  }, tabId);\n\n  return global;\n}\n\nexport function removeActiveWebAppFromOpenList<T extends GlobalState>(\n  global: T, ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n  const activeWebAppKey = currentTabState.webApps.activeWebAppKey;\n\n  if (!activeWebAppKey) return global;\n\n  return removeWebAppFromOpenList(global, activeWebAppKey, false, tabId);\n}\n\nexport function removeWebAppFromOpenList<T extends GlobalState>(\n  global: T, key: string, skipClosingConfirmation?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n  const { openedWebApps, openedOrderedKeys, activeWebAppKey } = currentTabState.webApps;\n  const webApp = openedWebApps[key];\n  if (!webApp) return global;\n\n  if (!skipClosingConfirmation && webApp.shouldConfirmClosing) {\n    return updateWebApp(global, key, { isCloseModalOpen: true }, tabId);\n  }\n\n  const updatedOpenedWebApps = { ...openedWebApps };\n  const removingWebAppKey = getWebAppKey(webApp);\n\n  let newOpenedKeys = openedOrderedKeys;\n\n  if (removingWebAppKey) {\n    delete updatedOpenedWebApps[removingWebAppKey];\n    newOpenedKeys = openedOrderedKeys.filter((k) => k !== removingWebAppKey);\n  }\n\n  const isRemovedAppActive = activeWebAppKey === getWebAppKey(webApp);\n\n  const openedWebAppsKeys = Object.keys(updatedOpenedWebApps);\n  const openedWebAppsCount = openedWebAppsKeys.length;\n\n  global = updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      ...isRemovedAppActive && {\n        activeWebAppKey: openedWebAppsCount\n          ? openedWebAppsKeys[openedWebAppsCount - 1] : undefined,\n      },\n      openedWebApps: updatedOpenedWebApps,\n      openedOrderedKeys: newOpenedKeys,\n      ...!openedWebAppsCount && {\n        sessionKeys: [],\n      },\n    },\n  }, tabId);\n\n  return global;\n}\n\nexport function clearOpenedWebApps<T extends GlobalState>(\n  global: T,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n\n  const webAppsNotAllowedToClose = Object.fromEntries(\n    Object.entries(currentTabState.webApps.openedWebApps).filter(\n      ([, webApp]) => webApp.shouldConfirmClosing,\n    ),\n  );\n\n  const webAppsNotAllowedToCloseValues = Object.values(webAppsNotAllowedToClose);\n  const hasNotAllowedToCloseApps = webAppsNotAllowedToCloseValues.length > 0;\n\n  if (!hasNotAllowedToCloseApps) {\n    return updateTabState(global, {\n      webApps: {\n        ...currentTabState.webApps,\n        activeWebAppKey: undefined,\n        openedWebApps: {},\n        openedOrderedKeys: [],\n        sessionKeys: [],\n      },\n    }, tabId);\n  }\n\n  const currentActiveWebApp = selectActiveWebApp(global, tabId);\n\n  const newActiveWebApp = currentActiveWebApp?.shouldConfirmClosing\n    ? currentActiveWebApp : webAppsNotAllowedToCloseValues[0];\n\n  const newActiveWebAppKey = getWebAppKey(newActiveWebApp);\n\n  if (newActiveWebAppKey) {\n    webAppsNotAllowedToClose[newActiveWebAppKey] = {\n      ...newActiveWebApp,\n      isCloseModalOpen: true,\n    };\n  }\n  const newOpenedKeys = currentTabState.webApps.openedOrderedKeys.filter((k) => webAppsNotAllowedToClose[k]);\n\n  return updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      activeWebAppKey: newActiveWebAppKey,\n      isMoreAppsTabActive: false,\n      openedWebApps: webAppsNotAllowedToClose,\n      openedOrderedKeys: newOpenedKeys,\n    },\n  }, tabId);\n}\n\nexport function hasOpenedWebApps<T extends GlobalState>(\n  global: T, ...[tabId = getCurrentTabId()]: TabArgs<T>\n): boolean {\n  return Object.keys(selectTabState(global, tabId).webApps.openedWebApps).length > 0;\n}\n\nexport function hasOpenedMoreThanOneWebApps<T extends GlobalState>(\n  global: T, ...[tabId = getCurrentTabId()]: TabArgs<T>\n): boolean {\n  return Object.keys(selectTabState(global, tabId).webApps.openedWebApps).length > 1;\n}\n\nexport function replaceWebAppModalState<T extends GlobalState>(\n  global: T, modalState: WebAppModalStateType,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      modalState,\n    },\n  }, tabId);\n}\n\nexport function replaceIsWebAppModalOpen<T extends GlobalState>(\n  global: T, value: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): T {\n  const currentTabState = selectTabState(global, tabId);\n  return updateTabState(global, {\n    webApps: {\n      ...currentTabState.webApps,\n      isModalOpen: value,\n    },\n  }, tabId);\n}\n","import type { ApiChat, ApiMessage, ApiReactionWithPaid } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN, MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN } from '../../config';\nimport windowSize from '../../util/windowSize';\nimport {\n  MIN_LEFT_COLUMN_WIDTH,\n  SIDE_COLUMN_MAX_WIDTH,\n} from '../../components/middle/helpers/calculateMiddleFooterTransforms';\nimport { updateReactionCount } from '../helpers';\nimport { selectIsChatWithSelf, selectSendAs, selectTabState } from '../selectors';\nimport { updateChat } from './chats';\nimport { updateChatMessage } from './messages';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\n\nfunction getLeftColumnWidth(windowWidth: number) {\n  if (windowWidth > MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN) {\n    return Math.min(\n      Math.max(windowWidth * 0.25, MIN_LEFT_COLUMN_WIDTH),\n      windowWidth * 0.33,\n    );\n  }\n\n  if (windowWidth > MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN) {\n    return Math.min(\n      Math.max(windowWidth * 0.33, MIN_LEFT_COLUMN_WIDTH),\n      windowWidth * 0.4,\n    );\n  }\n\n  return SIDE_COLUMN_MAX_WIDTH;\n}\n\nexport function subtractXForEmojiInteraction(global: GlobalState, x: number) {\n  const tabState = selectTabState(global);\n  return x - ((tabState.isLeftColumnShown && !getIsMobile())\n    ? global.leftColumnWidth || getLeftColumnWidth(windowSize.get().width)\n    : 0);\n}\n\nexport function addMessageReaction<T extends GlobalState>(\n  global: T, message: ApiMessage, userReactions: ApiReactionWithPaid[],\n): T {\n  const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n  const currentReactions = message.reactions || { results: [], areTags: isInSavedMessages };\n  const currentSendAs = selectSendAs(global, message.chatId);\n\n  // Update UI without waiting for server response\n  const results = updateReactionCount(currentReactions.results, userReactions);\n\n  let { recentReactions = [] } = currentReactions;\n\n  if (recentReactions.length) {\n    recentReactions = recentReactions.filter(({ isOwn, peerId }) => !isOwn && peerId !== global.currentUserId);\n  }\n\n  userReactions.forEach((reaction) => {\n    const { currentUserId } = global;\n    if (reaction.type === 'paid') return;\n    recentReactions.unshift({\n      peerId: currentSendAs?.id || currentUserId!,\n      reaction,\n      addedDate: Math.floor(Date.now() / 1000),\n      isOwn: true,\n    });\n  });\n\n  return updateChatMessage(global, message.chatId, message.id, {\n    reactions: {\n      ...currentReactions,\n      results,\n      recentReactions,\n    },\n  });\n}\n\nexport function updateUnreadReactions<T extends GlobalState>(\n  global: T, chatId: string, update: Pick<ApiChat, 'unreadReactionsCount' | 'unreadReactions'>,\n): T {\n  return updateChat(global, chatId, update, true);\n}\n","export type PoolsSortBy = \"tvl\" | \"apr\" | \"vol\";\nexport type OhlcvInterval =\n  | \"1s\"\n  | \"1m\"\n  | \"5m\"\n  | \"15m\"\n  | \"30m\"\n  | \"1h\"\n  | \"2h\"\n  | \"4h\"\n  | \"8h\"\n  | \"1D\"\n  | \"1W\";\n\nexport interface HMPagination {\n  page: number;\n  limit: number;\n  total: number;\n  totalPages: number;\n}\n\nconst API_URL = \"https://hyperswap-public-production.up.railway.app/data\";\nconst API_KEY = \"O2c5gIAB/ePI+uP22JnbOvZu2K401M910OQL9YKSQSI=\"; // hardcoded for ease of testing for now\n\n// M7 Backend API\nconst M7_API_URL = \"http://localhost:8888\";\n\nconst bearerToken = `Bearer ${API_KEY}`;\n\nexport const fetchPools = async (\n  sortBy: PoolsSortBy,\n  page: number,\n  limit: number,\n  q?: string\n): Promise<{\n  pools: HMPool[];\n  pagination: HMPagination;\n}> => {\n  const params = new URLSearchParams({\n    sortBy,\n    page: page.toString(),\n    limit: limit.toString(),\n    ...(q && { q }),\n  });\n  const response = await fetch(`${API_URL}/pools?${params}`, {\n    headers: {\n      Authorization: bearerToken,\n    },\n  });\n  return response.json();\n};\n\nexport const fetchPool = async (poolAddress: string): Promise<HMPool> => {\n  const response = await fetch(`${API_URL}/pools/${poolAddress}`, {\n    headers: {\n      Authorization: bearerToken,\n    },\n  });\n  return response.json();\n};\n\nexport const fetchPoolTransactions = async (\n  poolAddress: string,\n  page: number = 1,\n  limit: number = 10,\n  token?: string\n): Promise<{\n  transactions: HMPoolTransaction[];\n  selectedToken: string;\n  inverted: boolean;\n  pagination: HMPagination;\n}> => {\n  const params = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n    ...(token && { token }),\n  });\n  const response = await fetch(\n    `${API_URL}/pools/${poolAddress}/txs?${params}`,\n    {\n      headers: {\n        Authorization: bearerToken,\n      },\n    }\n  );\n  return response.json();\n};\n\nexport const fetchPoolTransaction = async (\n  txHash: string\n): Promise<HMPoolTransaction> => {\n  const response = await fetch(`${API_URL}/txs/${txHash}`, {\n    headers: {\n      Authorization: bearerToken,\n    },\n  });\n  return response.json();\n};\n\nexport const fetchPoolOhlcv = async (\n  poolAddress: string,\n  interval: OhlcvInterval = \"1m\",\n  from?: number,\n  to?: number,\n  take?: number,\n  usd?: boolean,\n  token?: string\n): Promise<{\n  poolAddress: string;\n  interval: OhlcvInterval;\n  selectedToken: string;\n  inverted: boolean;\n  data: HMOhlcv[];\n}> => {\n  const params = new URLSearchParams({\n    interval,\n    ...(from && { from: from.toString() }),\n    ...(to && { to: to.toString() }),\n    ...(take && { take: take.toString() }),\n    ...(usd && { usd: usd.toString() }),\n    ...(token && { token }),\n  });\n\n  const response = await fetch(\n    `${API_URL}/pools/${poolAddress}/ohlcv?${params}`,\n    {\n      headers: {\n        Authorization: bearerToken,\n      },\n    }\n  );\n  return response.json();\n};\n\nexport const fetchPairPools = async (\n  token0: string,\n  token1: string,\n  page: number = 1,\n  limit: number = 10\n): Promise<{\n  pools: HMPool[];\n  pagination: HMPagination;\n}> => {\n  const params = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n  });\n  const response = await fetch(\n    `${API_URL}/pools/pair/${token0}/${token1}?${params}`,\n    {\n      headers: {\n        Authorization: bearerToken,\n      },\n    }\n  );\n  return response.json();\n};\n\nexport const fetchPoolsByToken = async (\n  token: string,\n  page: number = 1,\n  limit: number = 10\n): Promise<{\n  pools: HMPool[];\n  pagination: HMPagination;\n}> => {\n  const params = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n  });\n  const response = await fetch(`${API_URL}/pools/token/${token}?${params}`, {\n    headers: {\n      Authorization: bearerToken,\n    },\n  });\n  return response.json();\n};\n\nexport interface HMTokenMetadata {\n  address: string;\n  symbol: string;\n  name: string;\n  decimals: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface HMPoolTokenMetadata {\n  address: string;\n  token0: HMTokenMetadata | null;\n  token1: HMTokenMetadata | null;\n}\n\nexport const fetchPoolTokenMetadata = async (\n  poolAddress: string\n): Promise<HMPoolTokenMetadata> => {\n  const response = await fetch(\n    `${API_URL}/pools/${poolAddress}/token-metadata`,\n    {\n      headers: {\n        Authorization: bearerToken,\n      },\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch pool token metadata\");\n  }\n  return response.json();\n};\n\nexport interface HMPool {\n  address: string;\n  token0: string;\n  token1: string;\n  fee: number;\n  tickSpacing: number;\n  createdAt: string;\n  updatedAt: string;\n  poolFactory: string;\n  txHash: string;\n  blockNumber: string;\n  blockTimestamp: string;\n  feeProtocol0: number;\n  feeProtocol1: number;\n  currentTvlUSD: number;\n  currentTvlToken0: number;\n  currentTvlToken1: number;\n  currentPrice: number;\n  currentPriceUSD: number;\n  currentSqrtPriceX96: string;\n  currentTick: number;\n  currentLiquidity: string;\n  volume24hUSD: number;\n  fees24hUSD: number;\n  swaps24h: number;\n  volume7dUSD: number;\n  fees7dUSD: number;\n  apr24h: number;\n  apr7d: number;\n  totalVolumeUSD: number;\n  totalFeesUSD: number;\n  totalSwaps: number;\n  lastTxBlock: string | null;\n  lastTxTimestamp: string | null;\n  count?: {\n    transactions: number;\n    positions: number;\n  };\n}\n\nexport interface HMOhlcv {\n  t: number;\n  o: number;\n  h: number;\n  l: number;\n  c: number;\n  v: number;\n}\ntype HMTransactionType =\n  | \"SWAP\"\n  | \"MINT\"\n  | \"BURN\"\n  | \"COLLECT\"\n  | \"INITIALIZE\"\n  | \"COLLECT_PROTOCOL\";\n\nexport interface HMPoolTransaction {\n  id: string;\n  txHash: string;\n  blockNumber: string;\n  blockTimestamp: string;\n  logIndex: number;\n  poolAddress: string;\n  transactionType: HMTransactionType;\n  sender: string;\n  recipient: string;\n  amount0: number;\n  amount1: number;\n  sqrtPriceX96: string | null;\n  liquidity: string | null;\n  tick: number | null;\n  tickLower: number | null;\n  tickUpper: number | null;\n  liquidityAmount: string | null;\n  hypePriceUSD: number | null;\n  zeroForOne: boolean | null;\n  amountInNet: number | null;\n  amountOutNet: number | null;\n  amountInGross: number | null;\n  feesToken0: number | null;\n  feesToken1: number | null;\n  volumeToken0: number | null;\n  volumeToken1: number | null;\n  volumeUSD: number | null;\n  feesUSD: number | null;\n  price: number | null;\n  priceUSD: number | null;\n  tvlToken0: number | null;\n  tvlToken1: number | null;\n  tvlUSD: number | null;\n}\n\n// M7 Token Metadata Types\nexport interface M7TokenData {\n  mintAddress: string;\n  symbol?: string;\n  name?: string;\n  decimals?: number;\n  logoUri?: string;\n  price?: number;\n  liquidity?: number;\n  marketCap?: number;\n  holders?: number;\n  website?: string;\n  twitter?: string;\n}\n\nexport interface M7TokenMetadataResponse {\n  mintAddress: string;\n  found: boolean;\n  tokenData?: M7TokenData;\n  message: string;\n}\n\n// M7 API Functions\nexport const fetchTokenMetadata = async (\n  mintAddress: string\n): Promise<M7TokenMetadataResponse> => {\n  const response = await fetch(`${M7_API_URL}/user/get-token-metadata`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      mintAddress,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(\n      `Failed to fetch token metadata: ${response.status} ${response.statusText}`\n    );\n  }\n\n  return response.json();\n};\n","import { useCallback, useState } from '../lib/teact/teact';\n\nconst useCacheBuster = () => {\n  const [cacheBuster, setCacheBuster] = useState(0);\n\n  const updateCacheBuster = useCallback(() => {\n    setCacheBuster((current) => current + 1);\n  }, []);\n\n  return [cacheBuster, updateCacheBuster] as const;\n};\n\nexport default useCacheBuster;\n","import type { GlobalState } from '../global/types';\nimport type { OldLangFn } from './useOldLang';\n\nimport useBrowserOnline from './window/useBrowserOnline';\n\nexport enum ConnectionStatus {\n  waitingForNetwork,\n  syncing,\n  online,\n}\n\ntype ConnectionStatusPosition =\n  'overlay'\n  | 'minimized'\n  | 'middleHeader'\n  | 'none';\n\nexport default function useConnectionStatus(\n  lang: OldLangFn,\n  connectionState: GlobalState['connectionState'],\n  isSyncing: boolean | undefined,\n  hasMiddleHeader: boolean,\n  isMinimized?: boolean,\n  isDisabled?: boolean,\n) {\n  let status: ConnectionStatus;\n  const isBrowserOnline = useBrowserOnline();\n  if (!isBrowserOnline || connectionState === 'connectionStateConnecting') {\n    status = ConnectionStatus.waitingForNetwork;\n  } else if (isSyncing) {\n    status = ConnectionStatus.syncing;\n  } else {\n    status = ConnectionStatus.online;\n  }\n\n  let position: ConnectionStatusPosition;\n  if (status === ConnectionStatus.online || isDisabled) {\n    position = 'none';\n  } else if (hasMiddleHeader) {\n    position = 'middleHeader';\n  } else if (isMinimized) {\n    position = 'minimized';\n  } else {\n    position = 'overlay';\n  }\n\n  let text: string | undefined;\n  if (status === ConnectionStatus.waitingForNetwork) {\n    text = lang('WaitingForNetwork');\n  } else if (status === ConnectionStatus.syncing) {\n    text = lang('Updating');\n  }\n\n  if (position === 'middleHeader') {\n    text = text!.toLowerCase().replace(/\\.+$/, '');\n  }\n\n  return {\n    connectionStatus: status,\n    connectionStatusPosition: position,\n    connectionStatusText: text,\n  };\n}\n","import { useMemo } from '../lib/teact/teact';\n\nimport type {\n  ApiAudio, ApiChat, ApiMessage, ApiPeer, ApiVoice,\n  MediaContent,\n} from '../api/types';\n\nimport {\n  getAudioHasCover, getChatAvatarHash, getChatTitle, getMediaHash, getMessageContent,\n} from '../global/helpers';\nimport { getPeerTitle } from '../global/helpers/peers';\nimport { resizeImage, scaleImage } from '../util/imageResize';\nimport { buildMediaMetadata } from '../util/mediaSession';\nimport { AVATAR_FULL_DIMENSIONS } from '../components/common/helpers/mediaDimensions';\nimport useAsync from './useAsync';\nimport useMedia from './useMedia';\nimport useOldLang from './useOldLang';\n\nimport telegramLogoPath from '../assets/telegram-logo-filled.svg';\n\nconst LOGO_DIMENSIONS = { width: 200, height: 200 };\nconst MINIMAL_SIZE = 115; // spec says 100, but on Chrome 93 it's not showing\n\n// TODO Add support for video in future\nconst useMessageMediaMetadata = (\n  message?: ApiMessage, sender?: ApiPeer, chat?: ApiChat,\n): MediaMetadata | undefined => {\n  const lang = useOldLang();\n\n  const { audio, voice } = message ? getMessageContent(message) : {} satisfies MediaContent;\n  const title = audio ? (audio.title || audio.fileName) : voice ? 'Voice message' : '';\n  const artist = audio?.performer || (sender && getPeerTitle(lang, sender));\n  const album = (chat && getChatTitle(lang, chat)) || 'Telegram';\n\n  const audioCoverHash = (audio && getAudioHasCover(audio) && getMediaHash(audio, 'pictogram'));\n  const avatarHash = sender && getChatAvatarHash(sender, 'big');\n  const hash = (audio && audioCoverHash) || (voice && avatarHash);\n  const media = useMedia(hash);\n\n  const size = useMemo(() => {\n    return getCoverSize(audio, voice, media);\n  }, [audio, media, voice]);\n  const { result: url } = useAsync(() => (\n    makeGoodArtwork(media, size)\n  ), [media, size], telegramLogoPath);\n  return useMemo(() => {\n    return buildMediaMetadata({\n      title,\n      artist,\n      album,\n      artwork: [{ src: url }],\n    });\n  }, [album, artist, title, url]);\n};\n\nfunction makeGoodArtwork(url?: string, size?: { width: number; height: number }): Promise<string> {\n  if (!url) return Promise.resolve(telegramLogoPath);\n  if (!size) return resizeImage(url, MINIMAL_SIZE, MINIMAL_SIZE);\n  const min = Math.min(size.width, size.height);\n  if (min < MINIMAL_SIZE) {\n    const ratio = MINIMAL_SIZE / min;\n    return scaleImage(url, ratio);\n  }\n  return Promise.resolve(url);\n}\n\nfunction getCoverSize(audio?: ApiAudio, voice?: ApiVoice, url?: string) {\n  if (!url) return LOGO_DIMENSIONS;\n  if (audio) {\n    if (!audio.thumbnailSizes?.length) return undefined;\n    const preferred = audio.thumbnailSizes.find((size) => size.type === 'm');\n    return preferred || audio.thumbnailSizes[0]; // Sometimes `m` is not present\n  }\n\n  if (voice) {\n    return AVATAR_FULL_DIMENSIONS;\n  }\n\n  return undefined;\n}\n\nexport default useMessageMediaMetadata;\n","import { useMemo } from '../lib/teact/teact';\n\nimport getMessageIdsForSelectedText from '../util/getMessageIdsForSelectedText';\nimport { useHotkeys } from './useHotkeys';\nimport useLastCallback from './useLastCallback';\n\nconst useNativeCopySelectedMessages = (copyMessagesByIds: ({ messageIds }: { messageIds?: number[] }) => void) => {\n  const handleCopy = useLastCallback((e: KeyboardEvent) => {\n    const messageIds = getMessageIdsForSelectedText();\n\n    if (messageIds && messageIds.length > 1) {\n      e.preventDefault();\n      copyMessagesByIds({ messageIds });\n    }\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+C': handleCopy,\n  }), []));\n};\n\nexport default useNativeCopySelectedMessages;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { IS_IOS, IS_PWA, IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\n\nconst metaViewport = document.querySelector('meta[name=\"viewport\"]');\nconst defaultViewportContent = metaViewport?.getAttribute('content') || '';\nconst allowedZoomViewportContent = 'width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover';\n\nexport default function usePreventPinchZoomGesture(isDisabled = false) {\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    if (isDisabled) {\n      // Clean viewport content from values values that disable the ability to zoom a webpage\n      // https://web.dev/meta-viewport/\n      metaViewport?.setAttribute('content', allowedZoomViewportContent);\n      return undefined;\n    }\n\n    metaViewport?.setAttribute('content', defaultViewportContent);\n\n    // Since iOS 10 `user-scaleable=no` is disabled in Safari for iOS,\n    // this is only applicable for the browser and does not apply to the PWA mode.\n    // https://newbedev.com/how-do-you-disable-viewport-zooming-on-mobile-safari\n    if (IS_IOS && !IS_PWA) {\n      document.addEventListener('gesturestart', preventEvent);\n    }\n\n    return () => {\n      metaViewport?.setAttribute('content', 'width=device-width, initial-scale=1, shrink-to-fit=no');\n      if (IS_IOS && !IS_PWA) {\n        document.removeEventListener('gesturestart', preventEvent);\n      }\n    };\n  }, [isDisabled]);\n}\n\nfunction preventEvent(e: Event) {\n  e.preventDefault();\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport function useResize(\n  elementRef: ElementRef<HTMLElement>,\n  onResize: (width: number) => void,\n  onReset: NoneToVoidFunction,\n  initialWidth?: number,\n  cssPropertyName?: string,\n) {\n  const [isActive, markIsActive, unmarkIsActive] = useFlag();\n  const [initialMouseX, setInitialMouseX] = useState<number>(0);\n  const [initialElementWidth, setInitialElementWidth] = useState<number>(0);\n\n  const setElementStyle = useLastCallback((width?: number) => {\n    requestMutation(() => {\n      if (!elementRef.current) {\n        return;\n      }\n\n      const widthPx = width ? `${width}px` : '';\n      elementRef.current.style.width = widthPx;\n      if (cssPropertyName) {\n        elementRef.current.style.setProperty(cssPropertyName, widthPx);\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!elementRef.current || !initialWidth) {\n      return;\n    }\n\n    setElementStyle(initialWidth);\n  }, [cssPropertyName, elementRef, initialWidth, setElementStyle]);\n\n  function handleMouseUp() {\n    requestMutation(() => {\n      document.body.classList.remove('cursor-ew-resize');\n    });\n  }\n\n  function initResize(e: React.MouseEvent<HTMLElement, MouseEvent>) {\n    e.preventDefault();\n\n    requestMutation(() => {\n      document.body.classList.add('cursor-ew-resize');\n    });\n\n    setInitialMouseX(e.clientX);\n    setInitialElementWidth(elementRef.current!.offsetWidth);\n    markIsActive();\n  }\n\n  function resetResize(e: React.MouseEvent<HTMLElement, MouseEvent>) {\n    e.preventDefault();\n    setElementStyle(undefined);\n    onReset();\n  }\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const newWidth = Math.ceil(initialElementWidth + e.clientX - initialMouseX);\n      setElementStyle(newWidth);\n    };\n\n    function stopDrag() {\n      cleanup();\n      onResize(elementRef.current!.offsetWidth);\n    }\n\n    function cleanup() {\n      handleMouseUp();\n      document.removeEventListener('mousemove', handleMouseMove, false);\n      document.removeEventListener('mouseup', stopDrag, false);\n      document.removeEventListener('blur', stopDrag, false);\n      unmarkIsActive();\n    }\n\n    document.addEventListener('mousemove', handleMouseMove, false);\n    document.addEventListener('mouseup', stopDrag, false);\n    document.addEventListener('blur', stopDrag, false);\n\n    return cleanup;\n  }, [initialElementWidth, initialMouseX, elementRef, onResize, isActive, unmarkIsActive, setElementStyle]);\n\n  return { initResize, resetResize, handleMouseUp };\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\n\nexport default function useBrowserOnline() {\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  useEffect(() => {\n    function handleChange() {\n      setIsOnline(window.navigator.onLine);\n    }\n\n    window.addEventListener('online', handleChange);\n    window.addEventListener('offline', handleChange);\n\n    return () => {\n      window.removeEventListener('offline', handleChange);\n      window.removeEventListener('online', handleChange);\n    };\n  }, []);\n\n  return isOnline;\n}\n","import { IS_ANDROID, IS_IOS } from './browser/windowEnvironment';\n\nconst SHOULD_PRE_OPEN = IS_IOS || IS_ANDROID;\n\nexport default class PopupManager {\n  private preOpened?: WindowProxy | null;\n\n  constructor(private features?: string, private onFail?: NoneToVoidFunction) {\n  }\n\n  preOpenIfNeeded() {\n    if (!SHOULD_PRE_OPEN) return;\n\n    this.preOpened = window.open('about:blank', undefined, this.features);\n    if (this.preOpened) {\n      this.preOpened.blur();\n    } else {\n      this.onFail?.();\n    }\n  }\n\n  open(url: string) {\n    if (this.preOpened) {\n      this.preOpened.location.href = url;\n      this.preOpened.focus();\n      this.preOpened = undefined;\n\n      return;\n    }\n\n    if (!SHOULD_PRE_OPEN) {\n      const popup = window.open(url, undefined, this.features);\n      if (popup) {\n        popup.focus();\n      } else {\n        this.onFail?.();\n      }\n    }\n  }\n\n  cancelPreOpen() {\n    this.preOpened?.close();\n    this.preOpened = undefined;\n  }\n}\n","/**\n * Utility functions for number formatting\n */\n\n/**\n * Formats numbers with condensed notation (K, M, B), commas, and appropriate decimal places\n *\n * @param value - The number to format (can be string, number, undefined, or null)\n * @returns Formatted string representation of the number\n *\n * @example\n * formatNumber(1234) // \"1,234.00\"\n * formatNumber(1234567) // \"1.23M\"\n * formatNumber(0.000123) // \"0.000123\"\n * formatNumber(null) // \"N/A\"\n */\nexport function formatNumber(\n  value: string | number | undefined | null\n): string {\n  if (!value && value !== 0) return \"N/A\";\n\n  const num = typeof value === \"string\" ? parseFloat(value) : value;\n  if (isNaN(num)) return \"N/A\";\n\n  // Handle negative numbers\n  const isNegative = num < 0;\n  const absNum = Math.abs(num);\n\n  // Format based on magnitude\n  let formatted = \"\";\n\n  if (absNum >= 1_000_000_000) {\n    // Billions\n    formatted = (absNum / 1_000_000_000).toFixed(2) + \"B\";\n  } else if (absNum >= 1_000_000) {\n    // Millions\n    formatted = (absNum / 1_000_000).toFixed(2) + \"M\";\n  } else if (absNum >= 1_000) {\n    // Thousands\n    formatted = (absNum / 1_000).toFixed(2) + \"K\";\n  } else if (absNum >= 1) {\n    // Regular numbers with 2 decimal places\n    formatted = absNum.toFixed(2);\n  } else if (absNum > 0) {\n    // Small decimals - keep more precision\n    formatted = absNum.toFixed(6).replace(/\\.?0+$/, \"\");\n  } else {\n    // Zero\n    formatted = \"0\";\n  }\n\n  // Remove unnecessary trailing zeros and decimal points for condensed notation\n  if (\n    formatted.includes(\"K\") ||\n    formatted.includes(\"M\") ||\n    formatted.includes(\"B\")\n  ) {\n    formatted = formatted.replace(/\\.00([KMB])$/, \"$1\");\n  }\n\n  // Add commas for regular numbers (not condensed)\n  if (\n    !formatted.includes(\"K\") &&\n    !formatted.includes(\"M\") &&\n    !formatted.includes(\"B\")\n  ) {\n    const parts = formatted.split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    formatted = parts.join(\".\");\n  }\n\n  return isNegative ? \"-\" + formatted : formatted;\n}\n","const APP_VERSION_REGEX = /^\\d+\\.\\d+(\\.\\d+)?$/;\n\nexport default function getIsAppUpdateNeeded(remoteVersion: string, appVersion: string, isStrict?: boolean) {\n  const sanitizedRemoteVersion = remoteVersion.trim();\n\n  if (!APP_VERSION_REGEX.test(sanitizedRemoteVersion)) {\n    return false;\n  }\n\n  if (isStrict) {\n    return sanitizedRemoteVersion.localeCompare(appVersion, undefined, { numeric: true, sensitivity: 'base' }) === 1;\n  }\n\n  return sanitizedRemoteVersion !== appVersion;\n}\n","import type { ApiFieldError } from '../../api/types';\n\nconst STRIPE_ERRORS: Record<string, ApiFieldError> = {\n  missing_payment_information: {\n    field: 'cardNumber',\n    message: 'Incorrect card number',\n  },\n  invalid_number: {\n    field: 'cardNumber',\n    message: 'Incorrect card number',\n  },\n  number: {\n    field: 'cardNumber',\n    message: 'Incorrect card number',\n  },\n  exp_year: {\n    field: 'expiry',\n    message: 'Incorrect year',\n  },\n  exp_month: {\n    field: 'expiry',\n    message: 'Incorrect month',\n  },\n  invalid_expiry_year: {\n    field: 'expiry',\n    message: 'Incorrect year',\n  },\n  invalid_expiry_month: {\n    field: 'expiry',\n    message: 'Incorrect month',\n  },\n  cvc: {\n    field: 'cvv',\n    message: 'Incorrect CVV',\n  },\n  invalid_cvc: {\n    field: 'cvv',\n    message: 'Incorrect CVV',\n  },\n};\n\nexport function getStripeError(error: {\n  code: string;\n  message: string;\n  param?: string;\n}) {\n  const { message: description, code, param } = error;\n  const { field, message } = param ? STRIPE_ERRORS[param] : STRIPE_ERRORS[code];\n\n  return { field, message, description };\n}\n","export function buildQueryString(data: Record<string, string>) {\n  const query = Object.keys(data).map((k) => `${k}=${data[k]}`).join('&');\n  return query.length > 0 ? `?${query}` : '';\n}\n","export default function updateIcon(asUnread: boolean) {\n  document.querySelectorAll<HTMLLinkElement>('link[rel=\"icon\"], link[rel=\"alternate icon\"]')\n    .forEach((link) => {\n      if (asUnread) {\n        if (!link.href.includes('favicon-unread')) {\n          link.href = link.href.replace('favicon', 'favicon-unread');\n        }\n      } else {\n        link.href = link.href.replace('favicon-unread', 'favicon');\n      }\n    });\n}\n","import { IS_ELECTRON } from './browser/windowEnvironment';\nimport { debounce } from './schedulers';\n\nconst UPDATE_DEBOUNCE_MS = 200;\n\n// For some reason setting `document.title` to the same value\n// causes increment of Chrome Dev Tools > Performance Monitor > DOM Nodes counter\nexport function setPageTitleInstant(nextTitle: string) {\n  if (IS_ELECTRON) {\n    window.electron!.setWindowTitle(nextTitle);\n\n    return;\n  }\n\n  if (document.title !== nextTitle) {\n    document.title = nextTitle;\n  }\n}\n\n// Synchronous page title update has conflicts with History API in Chrome\nexport const setPageTitle = debounce(setPageTitleInstant, UPDATE_DEBOUNCE_MS, false);\n","/* (ignored) */"],"names":["DEBUG","default","Main","LockScreen","console","log","Bundles","useModuleLoader","jsx","_jsx","ActiveCallHeaderAsync","props","isActive","ActiveCallHeader","Calls","undefined","GroupCallAsync","groupCallId","GroupCall","PhoneCallAsync","PhoneCall","RatePhoneCallModalAsync","isOpen","RatePhoneCallModal","AboutMonetizationModalAsync","AboutMonetizationModal","Extra","CustomEmojiSetsModalAsync","customEmojiSetIds","CustomEmojiSetsModal","DeleteMessageModalAsync","DeleteMessageModal","memo","useRef","getMessageMediaHash","getMessageMediaThumbDataUri","buildClassName","formatMediaDuration","stopEvent","useIsIntersecting","useLastCallback","useMedia","useMediaTransitionDeprecated","jsxs","_jsxs","PreviewMedia","media","idPrefix","isProtected","observeIntersection","onClick","index","ref","isIntersecting","thumbDataUri","mediaBlobUrl","transitionClassNames","video","content","handleClick","id","className","children","src","alt","draggable","decoding","onContextMenu","isGif","duration","PrivacySettingsNoticeModalAsync","PrivacySettingsNoticeModal","SeenByModalAsync","SeenByModal","StickerSetModalAsync","StickerSetModal","UnpinAllMessagesModalAsync","UnpinAllMessagesModal","useEffect","updateAppBadge","getAllNotificationsCount","formatIntegerCompact","useFolderManagerForUnreadCounters","useLang","UnreadCounter","isForAppBadge","unreadNotificationsCount","lang","VerificationMonetizationModalAsync","modal","VerificationMonetizationModal","useMemo","getActions","withGlobal","getHasAdminRight","selectChat","selectPeer","selectUser","CUSTOM_PEER_HIDDEN","getGiftAttributes","getStickerFromGift","getTotalGiftAvailability","useContextMenuHandlers","StickerView","Menu","Avatar","Icon","RadialPatternBackground","GiftMenuItems","GiftRibbon","styles","GIFT_STICKER_SIZE","SavedGift","peerId","gift","style","fromPeer","currentUserId","hasAdminRights","collectibleEmojiStatuses","currentUserEmojiStatus","openGiftInfoModal","stickerRef","canManage","totalIssued","starGift","starGiftUnique","type","ribbonText","resellPriceInStars","isPinned","number","total","ribbonColor","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","getTriggerElement","current","getRootElement","closest","getMenuElement","document","querySelector","getLayout","withPortal","avatarPeer","isNameHidden","sticker","radialPatternBackdrop","backdrop","pattern","backdropColors","centerColor","edgeColor","patternColor","radialPattern","backgroundColors","patternIcon","root","onMouseDown","topIcon","peer","size","name","stickerWrapper","observeIntersectionForPlaying","observeIntersectionForLoading","containerRef","shouldPreloadPreview","isUnsaved","hiddenGift","color","text","anchor","autoClose","onClose","onCloseAnimationEnd","global","fromId","chat","currentUser","emojiStatus","statuses","Loading","ArchivedChatsAsync","ArchivedChats","useOldLang","Button","Spinner","Transition","ConnectionStatusOverlay","connectionStatus","connectionStatusText","dir","isRtl","activeKey","round","useState","LeftColumnContent","SettingsScreens","selectCurrentChat","selectIsCurrentUserFrozen","selectIsForumPanelOpen","selectTabState","IS_APP","IS_FIREFOX","IS_MAC_OS","IS_TOUCH_ENV","LAYERS_ANIMATION_NAME","captureEscKeyListener","captureControlledSwipe","useFoldersReducer","useHotkeys","usePrevious","useStateRef","useSyncEffect","LeftMain","NewChat","Settings","ContentType","RENDER_COUNT","Object","keys","length","RESET_TRANSITION_DELAY_MS","LeftColumn","contentKey","settingsScreen","searchQuery","searchDate","isFirstChatFolderActive","shouldSkipHistoryAnimations","hasPasscode","nextFoldersAction","isChatOpen","isAppUpdateAvailable","isElectronUpdateAvailable","isForumPanelOpen","forumPanelChatId","isClosingSearch","archiveSettings","isArchivedStoryRibbonShown","isAccountFrozen","setGlobalSearchQuery","setGlobalSearchClosing","setGlobalSearchChatId","resetChatCreation","setGlobalSearchDate","loadPasswordInfo","clearTwoFaError","openChat","openLeftColumnContent","openSettingsScreen","contactsFilter","setContactsFilter","foldersState","foldersDispatch","lastResetTime","setLastResetTime","contentType","Archived","NewChannelStep1","NewChannelStep2","NewChannel","NewGroupStep1","NewGroupStep2","NewGroup","handleReset","forceReturnToChatList","fullReset","screen","isClosing","setTimeout","query","date","Date","now","pickerSearchInput","getElementById","blur","EditProfile","Folders","General","Notifications","DataStorage","Privacy","Performance","ActiveSessions","Language","Stickers","Experimental","GeneralChatBackground","GeneralChatBackgroundColor","PrivacyPhoneNumber","PrivacyAddByPhone","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyPhoneCall","PrivacyPhoneP2P","PrivacyForwarding","PrivacyGroupChats","PrivacyVoiceMessages","PrivacyMessages","PrivacyBlockedUsers","ActiveWebsites","TwoFaDisabled","TwoFaEnabled","TwoFaCongratulations","PasscodeDisabled","PasscodeEnabled","PasscodeCongratulations","PasscodeNewPasscode","PasscodeChangePasscodeCurrent","PasscodeTurnOff","PasscodeNewPasscodeConfirm","PasscodeChangePasscodeNew","PasscodeChangePasscodeConfirm","PrivacyPhoneNumberAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioAllowedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayAllowedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsAllowedContacts","PrivacyGiftsDeniedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneP2PDeniedContacts","PrivacyForwardingAllowedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsAllowedContacts","PrivacyGroupChatsDeniedContacts","TwoFaNewPassword","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaNewPasswordEmail","TwoFaNewPasswordEmailCode","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaChangePasswordHint","TwoFaRecoveryEmail","TwoFaRecoveryEmailCode","FoldersCreateFolder","FoldersEditFolder","FoldersShare","FoldersIncludedChatsFromChatList","FoldersExcludedChatsFromChatList","FoldersEditFolderFromChatList","FoldersEditFolderInvites","ChatList","QuickReaction","CustomEmoji","DoNotTranslate","PrivacyNoPaidMessages","GlobalSearch","handleSearchQuery","Contacts","handleTopicSearch","isArchived","isChatList","noChatOrForumOpen","handleHotkeySearch","e","preventDefault","handleHotkeySavedMessages","shouldReplaceHistory","handleArchivedChats","handleHotkeySettings","prevSettingsScreenRef","excludedClosestSelector","selectorToPreventScroll","onSwipeRightStart","onCancel","renderContent","onReset","onTopicSearch","isStoryRibbonShown","currentScreen","shouldSkipTransition","isChannel","onSearchQuery","renderCount","shouldCleanup","cleanupExceptionKey","shouldWrap","wrapExceptionKey","withSwipeControl","tabState","globalSearch","minDate","activeChatFolder","leftColumn","storyViewer","isArchivedRibbonShown","passcode","currentChat","Boolean","useCallback","MenuItem","Fragment","_Fragment","NewChatButton","isShown","onNewPrivateChat","onNewChannel","onNewGroup","isMenuOpen","setIsMenuOpen","openFrozenAccountModal","fabClassName","toggleIsMenuOpen","handleClose","menuItems","icon","ariaLabel","tabIndex","positionX","positionY","getCurrentMaxAccountCount","getCurrentProdAccountCount","getAccountSlotUrl","REM","useMultiaccountInfo","FullNameTitle","MenuSeparator","NOTIFICATION_DURATION","AccountMenuItems","totalLimit","onSelectCurrent","showNotification","accounts","currentCount","maxCount","currentAccountInfo","values","find","account","userId","shouldShowLimit","handleLimitClick","title","message","isPremium","newAccountUrl","freeIndex","entries","sort","map","slot","arr","isSameServer","isTest","mockUser","firstName","lastName","filter","join","isCustomPeer","peerColorId","emojiStatusId","hasSeparator","customIcon","previewUrl","avatarUri","href","Number","withEmojiStatus","emojiStatusSize","rel","getGlobal","ALL_FOLDER_ID","selectCanShareFolder","selectCurrentLimit","captureEvents","SwipeDirection","MEMO_EMPTY_ARRAY","renderTextWithEntities","useDerivedState","useFolderManagerForUnreadChatsByFolder","useHistoryBack","useShowTransition","StoryRibbon","TabList","SAVED_MESSAGES_HOTKEY","FIRST_FOLDER_INDEX","ChatFolders","chatFoldersById","orderedFolderIds","maxFolders","maxChatLists","shouldHideFolderTabs","folderInvitesById","maxFolderInvites","hasArchivedChats","hasArchivedStories","sessions","loadChatFolders","setActiveChatFolder","openShareChatFolderModal","openDeleteChatFolderModal","openEditChatFolder","openLimitReachedModal","markChatMessagesRead","transitionRef","shouldRender","shouldRenderStoryRibbon","getIsClosing","getIsStoryRibbonClosing","withShouldRender","isStoryRibbonClosing","scrollToTop","activeList","scrollTo","top","behavior","allChatsFolder","includedChatIds","excludedChatIds","displayedFolders","allChatsFolderIndex","findIndex","folder","isInAllChatsFolder","isInFirstFolder","folderUnreadChatsCountersById","handleReadAllChats","folderId","unreadChatIds","forEach","chatId","folderCountersById","folderTabs","i","isBlocked","canShareFolder","contextActions","push","handler","chatListCount","reduce","acc","el","limit","destructive","entities","noCustomEmojiPlayback","noTitleAnimations","badgeCount","chatsCount","isBadgeActive","notificationsCount","handleSwitchTab","forceOnHeavyAnimation","onSwipe","direction","Left","Math","min","Right","max","isNotInFirstFolderRef","onBack","handleKeyDown","ctrlKey","shiftKey","code","startsWith","digit","match","addEventListener","removeEventListener","placeholderRef","shouldRenderPlaceholder","noMountTransition","renderCurrentTab","activeFolder","isFolder","folderType","isMainList","canDisplayArchive","isHidden","shouldRenderFolders","contextRootElementSelector","tabs","activeTab","onSwitchTab","chatFolders","byId","orderedIds","invites","chats","listIds","archived","stories","orderedPeerIds","archivedStories","activeSessions","byHash","isRibbonShown","ContactListAsync","ContactList","PRODUCTION_URL","IS_ELECTRON","useForumPanelRender","useShowTransitionDeprecated","LeftSearch","ForumPanel","LeftMainHeader","TRANSITION_RENDER_COUNT","BUTTON_CLOSE_DELAY_MS","closeTimeout","closeForumPanel","isNewChatButtonShown","setIsNewChatButtonShown","isElectronAutoUpdateEnabled","setIsElectronAutoUpdateEnabled","window","electron","getIsAutoUpdateEnabled","then","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","isForumPanelRendered","isForumPanelVisible","shouldRenderUpdateButton","updateButtonClassNames","isMouseInside","handleMouseEnter","handleMouseLeave","clearTimeout","handleSelectSettings","handleSelectContacts","handleSelectArchived","handleUpdateClick","open","installUpdate","location","reload","handleSelectNewChannel","handleSelectNewGroup","autoCloseTimeout","onMouseEnter","onMouseLeave","shouldHideSearch","onSelectSettings","onSelectContacts","onSelectArchived","fluid","badge","onOpenAnimationStart","APP_NAME","IS_BETA","selectCanSetPasscode","selectCurrentMessageList","selectIsCurrentUserPremium","selectTheme","selectSharedSettings","formatDateToString","useAppLayout","useConnectionStatus","useElectronDrag","useFlag","useFullscreenStatus","useLeftHeaderButtonRtlForumTransition","PeerChip","StoryToggler","DropdownMenu","SearchInput","ShowTransition","LeftSideMenuItems","StatusButton","CLEAR_DATE_SEARCH_PARAM","CLEAR_CHAT_SEARCH_PARAM","isLoading","isCurrentUserPremium","globalSearchChatId","theme","connectionState","isSyncing","isFetchingDifference","isMessageListOpen","isConnectionStatusMinimized","areChatsLoaded","canSetPasscode","setSharedSettingOption","lockScreen","oldLang","isMobile","isBotMenuOpen","markBotMenuOpen","unmarkBotMenuOpen","areContactsVisible","hasMenu","selectedSearchDate","connectionStatusPosition","handleLockScreenHotkey","stopPropagation","MainButton","onTrigger","ripple","handleSearchFocus","toggleConnectionStatus","handleLockScreen","isSearchRelevant","isSearchFocused","searchInputPlaceholder","versionString","APP_VERSION","APP_REVISION","isFullscreen","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","headerRef","withStoryToggler","searchContent","canClose","isMinimized","isCloseNonDestructive","clickArg","trigger","footer","forceOpen","transformOriginX","onTransitionEnd","onBotMenuOpened","onBotMenuClosed","inputId","resultsItemSelector","value","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","onChange","onFocus","onSpinnerClick","canShow","isCustom","fetchingStatus","messages","active","ANIMATION_LEVEL_MAX","ANIMATION_LEVEL_MIN","ARCHIVED_FOLDER_ID","BETA_CHANGELOG_URL","FEEDBACK_URL","IS_TEST","PRODUCTION_HOSTNAME","WEB_VERSION_BASE","INITIAL_PERFORMANCE_STATE_MAX","INITIAL_PERFORMANCE_STATE_MID","INITIAL_PERFORMANCE_STATE_MIN","selectPremiumLimit","IS_MULTIACCOUNT_SUPPORTED","getPromptInstall","switchPermanentWebVersion","AttachBotItem","Switcher","Toggle","animationLevel","canInstall","attachBots","accountsTotalLimit","updatePerformanceSettings","openChatByUsername","openUrl","openChatWithInfo","animationLevelValue","withOtherVersions","hostname","archivedUnreadChatsCount","bots","bot","isForSideMenu","handleSelectSaved","handleDarkModeToggle","newTheme","shouldUseSystemTheme","handleAnimationLevelChange","newLevel","performanceSettings","handleChangelogClick","handleSwitchToWebK","handleOpenTipsChat","username","handleBugReportClick","url","handleOpenMyStories","profileTab","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","label","checked","noAnimation","toLowerCase","isCharIcon","attachMenu","EMOJI_STATUS_LOOP_LIMIT","getServerTime","useTimeout","useEffectWithPrevDeps","StarIcon","CustomEmojiEffect","StatusPickerMenu","EFFECT_DURATION_MS","EMOJI_STATUS_SIZE","collectibleStatuses","setEmojiStatus","loadCurrentUser","buttonRef","shouldShowEffect","markShouldShowEffect","unmarkShouldShowEffect","isEffectShown","showEffect","hideEffect","isStatusPickerOpen","openStatusPicker","closeStatusPicker","delay","until","prevEmojiStatus","documentId","handleEmojiStatusSet","collectibleStatus","status","handleEmojiStatusClick","reaction","isLottie","loopLimit","withSparkles","statusButtonRef","onEmojiStatusSelect","StatusPickerMenuAsync","NewChatAsync","LeftSearchAsync","SettingsAsync","AttachBotRecipientPickerAsync","requestedAttachBotInChat","AttachBotRecipientPicker","BotTrustModalAsync","BotTrustModal","DeleteFolderDialogAsync","DeleteFolderDialog","DialogsAsync","Dialogs","ApiMediaFormat","IS_OPFS_SUPPORTED","IS_SERVICE_WORKER_SUPPORTED","MAX_BUFFER_SIZE","download","generateUniqueId","mediaLoader","useRunDebounced","GLOBAL_UPDATE_DEBOUNCE","processedHashes","Set","downloadedHashes","DownloadManager","activeDownloads","cancelMediaHashDownloads","runDebounced","handleMediaDownloaded","hash","add","mediaHashes","Array","from","clear","mediaHash","metadata","has","filename","format","mediaFormat","mediaData","getFromMemory","handleProgress","currentDownloads","cancelProgress","fetch","result","DownloadUrl","URL","baseURI","searchParams","set","encodeURIComponent","downloadWindow","toString","DraftRecipientPickerAsync","requestedDraft","DraftRecipientPicker","ForwardRecipientPickerAsync","ForwardRecipientPicker","getCanPostInChat","selectChatFullInfo","useInterval","useSendMessageAction","Modal","PLAY_GAME_ACTION_INTERVAL","GameModal","openedGame","gameTitle","canPost","closeGame","openForwardMenu","messageId","sendMessageAction","handleMessage","event","data","JSON","parse","eventType","fromChatId","messageIds","withMyScore","handleLoad","currentTarget","focus","hasCloseButton","onLoad","sandbox","allow","chatFullInfo","HistoryCalendarAsync","HistoryCalendar","decryptSession","UnrecoverablePasscodeError","LOCAL_TGS_URLS","AnimatedIconWithPreview","PasswordForm","ConfirmDialog","Link","lockPreviewUrl","ICON_SIZE","isLocked","passcodeSettings","unlockScreen","signOut","logInvalidUnlockAttempt","resetInvalidUnlockAttempts","invalidAttemptsCount","timeoutUntil","validationError","setValidationError","shouldShowPasscode","setShouldShowPasscode","isSignOutDialogOpen","openSignOutConfirmation","closeSignOutConfirmation","handleClearError","handleSubmit","err","forceInitApi","handleSignOutMessage","renderLogoutPrompt","help","isText","container","wrapper","tgsUrl","Lock","shouldShowSubmit","shouldDisablePasswordManager","error","submitLabel","clearError","isPasswordVisible","noRipple","onChangePasswordVisibility","onSubmit","confirmLabel","confirmHandler","confirmIsDestructive","beginHeavyAnimation","useLayoutEffect","addExtraClass","ElectronEvent","BASE_EMOJI_KEYWORD_LANG","INACTIVE_MARKER","requestNextMutation","selectCanAnimateInterface","selectChatFolder","selectChatMessage","selectIsForwardModalOpen","selectIsMediaViewerOpen","selectIsReactionPickerOpen","selectIsRightColumnShown","selectIsServiceChatReady","selectIsStoryViewerOpen","selectPerformanceSettingsValue","IS_ANDROID","IS_WAVE_TRANSFORM_SUPPORTED","waitForTransitionEnd","processDeepLink","loadBundle","parseInitialLocationHash","parseLocationHash","updateIcon","useForceUpdate","usePreventPinchZoomGesture","useBackgroundMode","useBeforeUnload","UnreadCount","MediaViewer","ReactionPicker","MessageListHistoryHandler","MiddleColumn","AudioPlayer","ModalContainer","PaymentModal","ReceiptModal","RightColumn","RightColumnProfile","RightColumnTrading","StoryViewer","NewContactModal","PremiumLimitReachedModal","GiveawayModal","PremiumMainModal","StarsGiftingPickerModal","SafeLinkModal","ConfettiContainer","SnapEffectContainer","WaveContainer","APP_OUTDATED_TIMEOUT_MS","CALL_BUNDLE_LOADING_DELAY_MS","DEBUG_isLogged","isLeftColumnOpen","isMiddleColumnOpen","isRightColumnOpen","isTradingColumnOpen","isMediaViewerOpen","isStoryViewerOpen","isForwardModalOpen","hasNotifications","hasDialogs","activeGroupCallId","safeLinkModalUrl","isHistoryCalendarOpen","limitReached","openedStickerSetShortName","openedCustomEmojiSetIds","isServiceChatReady","withInterfaceAnimations","wasTimeFormatSetManually","addedSetIds","addedCustomEmojiIds","isPhoneCallActive","newContactUserId","newContactByPhoneNumber","isRatePhoneCallModalOpen","botTrustRequest","botTrustRequestBot","isPremiumModalOpen","isGiveawayModalOpen","isDeleteMessageModalOpen","isStarsGiftingPickerModal","isPaymentModalOpen","isReceiptModalOpen","isReactionPickerOpen","deleteFolderDialog","isMasterTab","noRightColumnAnimation","isSynced","isAppConfigLoaded","initMain","loadAnimatedEmojis","loadBirthdayNumbersStickers","loadRestrictedEmojiStickers","loadNotificationSettings","loadNotificationExceptions","updateIsOnline","onTabFocusChange","loadTopInlineBots","loadEmojiKeywords","loadCountryList","loadAvailableReactions","loadStickerSets","loadPremiumGifts","loadTonGifts","loadStarGifts","loadDefaultTopicIcons","loadAddedStickers","loadFavoriteStickers","loadDefaultStatusIcons","ensureTimeFormat","closeStickerSetModal","closeCustomEmojiSets","checkVersionNotification","loadConfig","loadAppConfig","loadAttachBots","loadContactList","loadCustomEmojis","loadGenericEmojiEffects","closePaymentModal","clearReceipt","checkAppVersion","openThread","toggleLeftColumn","loadRecentEmojiStatuses","loadUserCollectibleStatuses","updatePageTitle","loadTopReactions","loadRecentReactions","loadDefaultTagReactions","loadFeaturedEmojiStickers","setIsElectronUpdateAvailable","loadAuthorizations","loadPeerColors","loadSavedReactionTags","loadTimezones","loadQuickReplies","loadStarStatus","loadAvailableEffects","loadTopBotApps","loadPaidReactionPrivacy","loadBotFreezeAppeal","loadAllChats","loadAllStories","loadAllHiddenStories","loadContentSettings","leftColumnRef","isDesktop","removeUpdateAvailableListener","on","UPDATE_AVAILABLE","isAvailable","removeUpdateErrorListener","UPDATE_ERROR","isOnline","listType","language","langCode","ids","customEmojis","ignoreCache","parsedInitialLocationHash","tgaddr","decodeURIComponent","DEEPLINK","link","parsedLocationHash","threadId","parentNode","childElementCount","noCloseTransition","prefix","willAnimateLeftColumnRef","forceUpdate","prevIsLeftColumnOpen","body","classList","toggle","endHeavyAnimation","willAnimateRightColumnRef","isNarrowMessageList","setIsNarrowMessageList","prevIsMiddleColumnOpen","prevIsRightColumnOpen","handleBlur","isBlurred","handleFocus","includes","handleStickerSetModalClose","handleCustomEmojiSetsModalClose","noUi","stickerSetShortName","isByPhoneNumber","shouldRequestWriteAccess","isLeftColumnShown","historyCalendarSelectedAt","notifications","dialogs","newContact","ratingPhoneCall","premiumModal","giveawayModal","deleteMessageModal","starsGiftingPickerModal","payment","limitReachedModal","deleteFolderDialogModal","gameMessage","game","isTradingColumnShown","groupCalls","phoneCall","stickers","added","setIds","botId","receipt","NewContactModalAsync","NotificationsAsync","SafeLinkModalAsync","WebAppsCloseConfirmationModalAsync","WebAppsCloseConfirmationModal","GiveawayModalAsync","PremiumMainModalAsync","StarsGiftingPickerModalAsync","Stars","PremiumLimitReachedModalAsync","requestMeasure","buildStyle","pick","useWindowSize","CONFETTI_FADEOUT_TIMEOUT","DEFAULT_CONFETTI_SIZE","CONFETTI_COLORS","STAR_PATH","Path2D","STAR_SIZE_MULTIPLIER","confetti","canvasRef","confettiRef","isRafStartedRef","windowSize","defaultConfettiAmount","lastConfettiTime","width","left","height","generateConfetti","w","h","amount","position","velocity","generateRandomPositionData","randomNumberAroundZero","randomColor","floor","random","pos","flicker","flickerFrequency","rotation","lastDrawnAt","frameCount","isStar","withStars","updateCanvas","canvas","ctx","getContext","canvasWidth","canvasHeight","clearRect","confettiToRemove","c","diff","newPos","x","y","newVelocity","newFlicker","abs","sin","newRotation","PI","newFrameCount","newLastDrawnAt","shouldRemove","newConfetti","fillStyle","save","translate","scale","rotate","fill","restore","beginPath","ellipse","prevConfettiTime","hideTimeout","containerStyle","containerWidth","containerHeight","leftSide","randomX","randomY","SVG_NAMESPACE","addSvgDefinition","removeSvgDefinition","waveRipple","BASE_SIZE_MULTIPLIER","FILTER_ID","FILTER_SCALE","WAVE_COUNT_LIMIT","waveInfo","waves","setWaves","addWave","newWave","prevWaves","startX","startY","get","maxSize","overlaySize","startTime","lastWaveTime","waveWidth","xmlns","in","in2","xChannelSelector","yChannelSelector","teactFastList","wave","onAnimationEnd","MediaViewerAsync","ChatLanguageModalAsync","ChatLanguageModal","getUserFullName","selectChatLastMessage","selectUserFullInfo","ContactGreeting","defaultStickers","lastUnreadMessageId","currentMessageList","businessIntro","user","loadGreetingStickers","sendMessage","markMessageListRead","randomIndex","maxId","handleStickerSelect","isPreloadedGlobally","messageList","description","shouldLoop","explainer","greeting","fullInfo","lastMessage","lastReadInboxMessageId","EmojiInteractionAnimationAsync","activeEmojiInteraction","EmojiInteractionAnimation","MAIN_THREAD_ID","selectCurrentMiddleSearch","animateScroll","ScrollDownButton","FOCUS_MARGIN","FloatingActionButtons","withScrollDown","messageListType","unreadCount","unreadReactions","unreadMentions","reactionsCount","mentionsCount","withExtraShift","focusNextReply","focusNextReaction","focusNextMention","fetchUnreadReactions","readAllMentions","readAllReactions","fetchUnreadMentions","elementRef","hasUnreadReactions","hasUnreadMentions","handleReadAllReactions","handleReadAllMentions","handleScrollDownClick","messagesContainer","parentElement","messageElements","querySelectorAll","lastMessageElement","element","margin","revealed","hideScrollDown","noComposer","noExtraShift","ariaLabelLang","onReadAll","reactions","hidden","transformDown","unread","hasActiveMiddleSearch","shouldShowCount","unreadReactionsCount","unreadMentionsCount","FrozenAccountPlaceholder","subtitle","removeExtraClass","LoadMoreDirection","ANIMATION_END_DELAY","ANONYMOUS_USER_ID","MESSAGE_LIST_SLICE","SERVICE_NOTIFICATIONS_USER_ID","forceMeasure","requestForcedReflow","getIsSavedDialog","getMessageHtmlId","isAnonymousForwardsChat","isChatChannel","isChatGroup","isChatMonoforum","isSystemBot","selectBot","selectCanTranslateChat","selectChatMessages","selectChatScheduledMessages","selectCurrentMessageIds","selectFirstUnreadId","selectFocusedMessageId","selectIsChatProtected","selectIsChatWithSelf","selectIsInSelectMode","selectIsViewportNewest","selectLastScrollOffset","selectMonoforumChannel","selectScrollOffset","selectThreadInfo","selectTopic","selectTranslationLanguage","selectIsChatRestricted","selectActiveRestrictionReasons","isAnimatingScroll","restartCurrentScrollAnimation","isUserId","orderBy","isLocalMessageId","resetScroll","debounce","onTickEnd","getOffsetToContainer","groupMessages","preventMessageInputBlur","useLayoutEffectWithPrevDeps","useNativeCopySelectedMessages","isBackgroundModeActive","useContainerHeight","useStickyDates","MessageListAccountInfo","MessageListContent","NoMessages","RequirementToContactMessage","MESSAGE_REACTIONS_POLLING_INTERVAL","MESSAGE_COMMENTS_POLLING_INTERVAL","MESSAGE_FACT_CHECK_UPDATE_INTERVAL","MESSAGE_STORY_POLLING_INTERVAL","BOTTOM_THRESHOLD","UNREAD_DIVIDER_TOP","SCROLL_DEBOUNCE","MESSAGE_ANIMATION_DURATION","BOTTOM_FOCUS_MARGIN","SELECT_MODE_ANIMATION_DURATION","UNREAD_DIVIDER_CLASS","runDebouncedForScroll","cb","MessageList","isChatLoaded","isForum","isChannelChat","isGroupChat","isChannelWithAvatars","isReady","isChatWithSelf","isSystemBotChat","isAnonymousForwards","isCreator","isBot","isNonContact","nameChangeDate","photoChangeDate","messagesById","firstUnreadId","isComments","isViewportNewest","isRestricted","restrictionReasons","isEmptyThread","focusingId","isSelectModeActive","hasLinkedChat","withBottomShift","withDefaultBg","topic","noMessageSendingAnimation","isServiceNotificationsChat","isContactRequirePremium","paidMessagesStars","areAdsEnabled","channelJoinInfo","isChatProtected","hasCustomGreeting","monoforumChannelId","canTranslate","translationLanguage","shouldAutoTranslate","onIntersectPinnedMessage","onScrollDownToggle","onNotchToggle","loadViewportMessages","setScrollOffset","loadSponsoredMessages","loadMessageReactions","copyMessagesByIds","loadMessageViews","loadPeerStoriesByIds","loadFactChecks","requestChatTranslation","scrollOffsetRef","anchorIdRef","anchorTopRef","listItemElementsRef","memoFirstUnreadIdRef","memoUnreadDividerBeforeIdRef","memoFocusingIdRef","isScrollTopJustUpdatedRef","shouldAnimateAppearanceRef","isSavedDialog","hasOpenChatButton","areMessagesLoaded","isPrivate","withUsers","canHaveAds","toLanguageCode","messageGroups","listedMessages","prevMessage","shouldAppendJoinMessage","shouldAppendJoinMessageAfterCurrent","joinedDate","lastMessageId","generateChannelJoinMessageId","isOutgoing","action","mediaType","inviterId","isViaRequest","orderRule","results","storyDataList","storyData","storiesByPeerIds","storyIds","isCommentsInfo","viewsCount","factCheck","shouldFetch","loadMoreAround","Around","isScrolled","updateStickyDates","handleScroll","isFocusing","focusedMessage","shouldCancelWaiting","scrollHeight","scrollTop","scrollOffset","getContainerHeight","prevContainerHeightRef","isLastMessageLocal","firstElementChild","clientHeight","offsetHeight","rememberScrollPositionRef","preservedItemElements","dataset","getBoundingClientRect","prevMessageIds","prevIsViewportNewest","process","env","APP_ENV","time","prevContainerHeight","lastItemElement","firstUnreadElement","hasLastMessageChanged","hasViewportShifted","wasMessageAdded","contains","bottomOffset","lastItemHeight","isAtBottom","isAlreadyFocusing","shouldScrollToBottom","forceDuration","isResized","unreadDivider","newScrollTop","newAnchorTop","ceil","timeEnd","prevIsSelectModeActive","noAvatars","shouldRenderGreeting","isGroupChatJustCreated","isEmptyTopic","hasMessages","onScroll","canShowAds","isUnread","isSchedule","shouldRenderAccountInfo","noAppearanceAnimation","backgroundColor","userFullInfo","withLastMessageWhenPreloading","groupedId","chatBot","settings","canAddContact","messagesCount","isTranslationDisabled","hasAutoTranslation","areProfilesShown","linkedChatId","joinInfo","getBotCoverMediaHash","getChatTitle","getPhotoFullDimensions","getVideoDimensions","getVideoMediaHash","isChatWithVerificationCodesBot","selectUserCommonChats","formatPastDatetime","formatRegistrationMonth","isoToEmoji","getCountryCodeByIso","renderText","AvatarList","MiniTable","OptimizedVideo","Skeleton","botInfo","isLoadingFullUser","phoneCodeList","commonChats","loadCommonChats","phoneCountry","registrationMonth","country","botInfoPhotoUrl","photo","botInfoGifUrl","gif","botInfoDimensions","isBotInfoEmpty","isChatInfoEmpty","isVerifyCodes","forceScrollProfileTab","securityNameInfo","withNodes","withMarkdown","securityPhotoInfo","tableData","chatDescription","iso2","defaultName","commonChatsCount","peers","slice","linkInfo","count","pluralValue","chatInfo","botBackground","canPlay","loop","disablePictureInPicture","muted","playsInline","forceAspectRatio","botInfoDescription","botInfoTitle","chatBackground","chatInfoTitle","chatInfoSubtitle","textColor","keyClassName","isVerified","chatNotVerified","verifiedTitle","countryList","phoneCodes","getIsHeavyAnimating","SCHEDULED_WHEN_ONLINE","getMessageOriginalId","getSuggestedChangesActionText","getSuggestedChangesInfo","isActionMessage","isOwnMessage","isServiceNotificationMessage","getPeerTitle","selectSender","formatHumanDate","formatScheduledDateTime","convertTonFromNanos","compact","formatStarsAsText","formatTonAsText","isAlbum","renderPeerLink","useDerivedSignal","usePreviousDeprecated","useMessageObservers","useScrollHooks","ActionMessage","Message","SenderGroupContainer","SponsoredMessage","actionMessageStyles","openHistoryCalendar","getIsHeavyAnimating2","getIsReady","areDatesClickable","observeIntersectionForReading","withHistoryTriggers","backwardsTriggerRef","forwardsTriggerRef","fabTriggerRef","renderPaidMessageAction","album","paidMessageStars","messagesLength","sender","userTitle","renderSuggestedPostInfoAction","suggestedPostInfo","price","scheduleDate","userLink","originalMessage","replyInfo","replyToMsgId","changesInfo","titleText","currency","suggestedPostContainer","suggestedPostTitle","messageCountToAnimate","messageGroup","senderGroups","flat","appearanceIndex","isNewMessage","calculateSenderGroups","dateGroup","dateGroupIndex","dateGroupsArray","senderGroup","senderGroupIndex","senderGroupsArray","isLastInList","observeIntersectionForBottom","appearanceOrder","isJustAdded","getIsMessageListReady","currentDocumentGroupId","senderGroupElements","messageOrAlbum","messageIndex","mainMessage","isOwn","isMessageAlbum","nextMessage","previousLocalId","documentGroupId","nextDocumentGroupId","isTopicTopMessage","isFirstInGroup","isLastInGroup","isFirstInDocumentGroup","isLastInDocumentGroup","originalId","key","noComments","withAvatar","withSenderName","noReplies","lastMessageOrAlbum","lastAppearanceOrder","firstMessageOrAlbum","firstMessage","firstMessageId","dateGroups","selectedAt","datetime","originalDate","createLocationHash","messageLists","closeChat","forceSyncOnIOs","MessageHistoryRecord","MessageSelectToolbarAsync","MessageSelectToolbar","EDITABLE_INPUT_CSS_SELECTOR","EDITABLE_INPUT_ID","GENERAL_TOPIC_ID","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","TMP_CHAT_ID","requestMutation","getForumComposerPlaceholder","getMessageSendingRestrictionReason","isChatSuperGroup","isUserRightBanned","selectDraft","selectEditingId","selectIsChatBotNotStarted","selectIsMonoforumAdmin","selectIsUserBlocked","selectPeerPaidMessagesStars","selectPinnedIds","selectThemeValues","selectTopics","IS_IOS","IS_SAFARI","IS_TRANSLATION_SUPPORTED","MASK_IMAGE_DISABLED","calculateMiddleFooterTransforms","useCustomBackground","usePrevDuringAnimation","useResize","usePinnedMessage","useFluidBackgroundFilter","Composer","DropAreaState","MiddleHeader","MiddleHeaderPanes","PremiumRequiredPlaceholder","ReactorListModal","MiddleSearch","isImage","item","kind","isVideo","LAYER_ANIMATION_DURATION_MS","draftReplyInfo","isPinnedMessageList","currentUserBannedRights","defaultBannedRights","pinnedMessagesCount","customBackground","isRightColumnShown","isBackgroundBlurred","leftColumnWidth","isSeenByModalOpen","isPrivacySettingsNoticeModalOpen","isReactorListModalOpen","isChatLanguageModalOpen","currentTransitionKey","arePeerSettingsLoaded","canSubscribe","canStartBot","canRestartBot","activeEmojiInteractions","shouldJoinToSend","shouldSendJoinRequest","shouldLoadFullChat","pinnedIds","canUnpin","canUnblock","canShowOpenChatButton","topics","freezeAppealChat","shouldBlockSendInMonoforum","openPreviousChat","unpinAllMessages","loadUser","loadPeerSettings","exitMessageSelectMode","joinChannel","sendBotCommand","restartBot","loadFullChat","setLeftColumnWidth","resetLeftColumnWidth","unblockUser","windowWidth","isTablet","dropAreaState","setDropAreaState","None","isScrollDownNeeded","setIsScrollDownShown","isScrollDownShown","isNotchShown","setIsNotchShown","isUnpinModalOpen","setIsUnpinModalOpen","handleIntersectPinnedMessage","handleFocusPinnedMessage","getCurrentPinnedIndex","getLoadingPinnedId","closeAnimationDuration","renderingChatId","renderingThreadId","renderingMessageListType","renderingCanSubscribe","renderingCanStartBot","renderingCanRestartBot","renderingCanUnblock","renderingCanPost","renderingIsScrollDownShown","renderingIsChannel","renderingShouldJoinToSend","renderingShouldSendJoinRequest","renderingHandleIntersectPinnedMessage","prevTransitionKey","handleCssTransitionEnd","handleSlideTransitionStop","useIsReady","visualViewport","handleResize","isFixNeeded","documentElement","offsetTop","initResize","resetResize","handleMouseUp","n","handleDragEnter","items","dataTransfer","shouldDrawQuick","every","QuickFile","Document","handleHideDropArea","handleOpenUnpinModal","closeUnpinModal","handleOpenChatFromSaved","String","handleUnpinAllMessages","handleTabletFocus","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleUnblock","customBackgroundValue","bgClassName","background","withTransition","customBgImage","customBgColor","blurred","withRightColumn","messagingDisabledClassName","messageSendingRestrictionReason","forumComposerPlaceholder","composerRestrictionMessage","composerHiddenScale","toolbarHiddenScale","composerTranslateX","toolbarTranslateX","unpinHiddenScale","toolbarForUnpinHiddenScale","footerClassName","isMessagingDisabled","withMessageListBottomShift","onMouseUp","onDoubleClick","onDragEnter","onFocusPinnedMessage","isBlockingAnimation","onStop","onDropHide","editableInputId","editableInputCssSelector","onUnpin","teactOrderKey","seenByModal","reactorModal","chatLanguageModal","privacySettingsNoticeModal","state","editingId","threadInfo","isMessageThread","fromChannelId","isBotNotStarted","isMainThread","isNotJoined","joinRequests","isMonoforum","isJoinToSend","isJoinRequest","isUserBlocked","shouldBlockSendInForum","isClosed","isMonoforumAdmin","userFull","botFreezeAppealId","withAnimations","setIsReady","willSwitchMessageList","propertyName","target","StoryViewerOrigin","MIN_SCREEN_WIDTH_FOR_STATIC_LEFT_COLUMN","selectScheduledIds","selectThreadParam","useLongPress","GroupChatInfo","PrivateChatInfo","HeaderActions","HeaderPinnedMessage","BACK_BUTTON_INACTIVE_TIME","SEARCH_LONGTAP_THRESHOLD","typingStatus","audioMessage","emojiStatusSticker","emojiStatusSlug","openThreadWithInfo","openPremiumModal","openStickerSet","updateMiddleSearch","openUniqueGiftBySlug","isBackButtonActive","isLeftColumnHideable","shouldShowCloseButton","componentRef","handleOpenSearch","update","handleOpenChat","handleLongPressMouseDown","handleLongPressMouseUp","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","threshold","setBackButtonActive","handleUserStatusClick","slug","fromUserId","handleChannelStatusClick","stickerSetInfo","handleBackClick","messageInput","isAudioPlayerActive","isAudioPlayerRendering","isPinnedMessagesFullWidth","renderInfo","renderChatInfo","renderBackButton","savedMessagesStatus","realChatId","displayChatId","linkedMonoforumId","withDots","withFullInfo","withMediaViewer","withStory","withUpdatingStatus","storyViewerOrigin","MiddleHeaderAvatar","noRtl","onEmojiStatusClick","withMonoforumStatus","asClose","withUnreadCounter","canExpandActions","audioPlayer","audioChatId","audioMessageId","scheduledIds","useSignal","setExtraStyles","useEffectOnce","useSignalEffect","applyAnimationState","GroupCallTopPane","BotAdPane","BotVerificationPane","ChatReportPane","PaidMessageChargePane","FALLBACK_PANE_STATE","isAudioPlayerRendered","isMiddleSearchOpen","getAudioPlayerState","setAudioPlayerState","getPinnedState","setPinnedState","getGroupCallState","setGroupCallState","getChatReportState","setChatReportState","getBotAdState","setBotAdState","getBotVerificationState","setBotVerificationState","getPaidMessageChargeState","setPaidMessageChargeState","isFirstRenderRef","audioPlayerState","botVerificationState","pinnedState","groupCallState","chatReportState","botAdState","paidMessageState","stateArray","isFirstRender","totalHeight","middleColumn","isFullWidth","onPaneStateChange","canBlockContact","canReportSpam","isAutoArchived","shouldHide","TopicIcon","renderScheduled","renderSavedMessages","renderGroup","renderTopic","BORDER_MASK_LEVEL","PinnedMessageNavigation","markupParams","calculateMarkup","trackHeight","trackTranslateY","markHeight","markTranslateY","clipPathId","clipPath","firstChild","currentElement","transform","svg","div","defs","innerHTML","pinnedMessageBorder","pinnedMessageBorderWrapper1","pinnedMessageBorderMask","pinnedMessageBorderWrapper","pinnedMessageBorderMark","reverseIndex","barHeight","getBarHeight","getMarkHeight","getTrackHeight","getClipPath","getMarkTranslateY","getTrackTranslateY","radius","d","drawRect","getUserFirstOrLastName","userName","handleOpenPremiumModal","isPrimary","ReactorListModalAsync","isApiPeerUser","formatStarsAsIcon","Sparkles","openStarsBalanceModal","handleGetMoreStars","inner","iconsContainer","Unlock","animatedUnlock","commentsIcon","asFont","starIcon","containerClassName","starIconContainer","pill","button","preset","MIN_SCREEN_WIDTH_FOR_STATIC_RIGHT_COLUMN","MOBILE_SCREEN_MAX_WIDTH","MAX_TOOLBAR_WIDTH","MAX_MESSAGES_LIST_WIDTH","SIDE_COLUMN_MAX_WIDTH","MIN_LEFT_COLUMN_WIDTH","UNPIN_BUTTON_WIDTH","sidePadding","messageListWidth","getMessageListWidth","sendButtonWidth","composerWidth","toolbarWidth","rightColumnWidth","getDayStartAt","GROUP_INTERVAL_SECONDS","topMessageId","initDateGroup","currentAlbum","currentDateGroup","currentSenderGroup","isInAlbum","albumId","hasMultipleCaptions","hasComments","commentsMessage","captionMessage","paidMedia","extendedMedia","isPaidMedia","lastMessageInSenderGroup","nextMessageDayStartsAt","newDateGroup","senderId","postAuthorTitle","inlineButtons","forwardInfo","useResizeObserver","isComposerVisible","setContainerHeight","entry","contentRect","currentNormalHeight","normalHeight","useIntersectionObserver","INTERSECTION_THROTTLE_FOR_READING","INTERSECTION_THROTTLE_FOR_MEDIA","markMentionsRead","animateUnreadReaction","scheduleForViewsIncrement","INTERSECTION_MARGIN_FOR_LOADING","observe","freeze","freezeForReading","unfreeze","unfreezeForReading","rootRef","throttleMs","mentionIds","reactionIds","viewportPinnedIdsToAdd","viewportPinnedIdsToRemove","scheduledToUpdateViews","shouldUpdateViews","albumMainId","hasUnreadMention","hasUnreadReaction","selectListedIds","selectOutlyingListByMessageId","cycleRestrict","unique","viewportPinnedIds","lastFocusedId","getPinnedIndexByKey","setPinnedIndexByKey","setLoadingPinnedId","currentPinnedIndex","pinnedLength","clampIndex","loadingPinnedId","newPinnedIndex","indexOf","concat","focusedMessageId","pinnedIndexAboveFocused","maxViewportPinnedId","newIndex","listedIds","isMessageLoaded","currentIndex","MESSAGE_LIST_SENSITIVE_AREA","useDebouncedSignal","useOnIntersect","FAB_THRESHOLD","NOTCH_THRESHOLD","CONTAINER_HEIGHT_DEBOUNCE","TOOLS_FREEZE_TIMEOUT","loadMoreBackwards","loadMoreForwards","Backwards","Forwards","toggleScrollTools","fabTrigger","fabOffsetTop","scrollBottom","isNearBottom","observeIntersectionForHistory","observeIntersectionForFab","freezeForFab","unfreezeForFab","throttleScheduler","observeIntersectionForNotch","freezeForNotch","unfreezeForNotch","freezeShortly","getContainerHeightDebounced","DEBOUNCE","STICKY_TOP","markIsScrolled","stuckDateEl","findStuckDate","currentStuck","remove","allElements","containerTop","computedStyle","getComputedStyle","headerActionsHeight","parseInt","getPropertyValue","MESSAGE_APPEARANCE_DELAY","getMainUsername","isAnonymousOwnMessage","selectForwardedSender","canShowSender","originSender","isRepliesChat","updateInsertingPeerIdMention","messageSender","markShown","shouldPreferOriginSender","isAvatarPeerUser","handleMention","handleAvatarClick","avatarRef","contextMenu","canMention","shouldRenderContextMenu","renderContextMenu","renderAvatar","hiddenName","hiddenUserName","senderAvatar","avatarContainer","ownProps","forceSenderName","SponsoredContextMenuContainerAsync","SponsoredContextMenuContainer","MediaViewerOrigin","getIsDownloading","getMessageContent","getMessageDownloadableMedia","selectActiveDownloads","selectCanAutoLoadMedia","selectCanAutoPlayMedia","selectSponsoredMessage","calculateMediaDimensions","getMinMediaWidth","MIN_MEDIA_WIDTH_WITH_TEXT","BadgeButton","PeerColorWrapper","MessageAppendix","Photo","Video","INTERSECTION_DEBOUNCE_MS","isDownloading","canAutoLoadMedia","canAutoPlayMedia","viewSponsored","hideSponsored","clickSponsored","openMediaViewer","openAboutAdsModal","contentRef","shouldObserve","debounceMs","randomId","handleMouseDown","handleHideSponsoredMessage","hasMedia","isMedia","shouldSkipModal","handleOpenMedia","origin","isSponsoredMessage","handleOpenAboutAdsModal","canReport","additionalInfo","sponsorInfo","extraPadding","sizeCalculations","calculatedWidth","contentWidth","noMediaCorners","isRectangular","buttonText","renderMediaContent","canAutoLoad","forcedWidth","canAutoPlay","peerColor","isRecommended","triggerRef","downloadableMedia","ReactionPickerAsync","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","getMediaDuration","isMessageLocal","makeTrackId","clearMediaSession","useAudioPlayer","useCurrentOrPrev","useMessageMediaMetadata","useHeaderPane","RangeSlider","RippleEffect","PLAYBACK_RATES","PLAYBACK_RATE_VALUES","REGULAR_PLAYBACK_RATE","DEFAULT_FAST_PLAYBACK_RATE","volume","playbackRate","isPlaybackRateActive","isMuted","timestamp","setAudioPlayerVolume","setAudioPlayerPlaybackRate","setAudioPlayerMuted","focusMessage","closeAudioPlayer","renderingMessage","audio","voice","isVoice","shouldRenderPlaybackButton","senderName","mediaMetadata","playPause","stop","isPlaying","requestNextTrack","requestPreviousTrack","isFirst","isLast","setVolume","toggleMuted","setPlaybackRate","setCurrentTime","shouldForceOpen","isDisabled","onStateChange","handleVolumeChange","handleVolumeClick","updatePlaybackRate","newRate","rate","shouldBeActive","handlePlaybackClick","oldRate","newIsActive","PlaybackRateButton","displayRate","volumeIcon","renderAudio","renderVoice","disabled","bold","onHide","onMouseEnterBackdrop","renderPlaybackRateMenuItem","performer","fileName","currentRate","isSelected","getApiPeerColorClass","SponsoredMessageContextMenuContainer","sponsoredMessage","renderingSponsoredMessage","withResizeObserver","handleAboutClick","info","aboutAd","avatar","selectPeerFullInfo","BOT_VERIFICATION_ICON_SIZE","DISPLAY_DURATION_MS","wasShown","botVerification","markBotVerificationInfoShown","markAsShowed","iconId","peerFullInfo","botVerificationShownPeerIds","isChatBasicGroup","isApiPeerChat","Checkbox","openAddContactDialog","blockUser","reportSpam","deleteChat","leaveChannel","deleteChatUser","deleteHistory","toggleChatArchived","hidePeerSettingsBar","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","shouldReportSpam","setShouldReportSpam","shouldDeleteChat","setShouldDeleteChat","renderingPeer","isBasicGroup","renderingCanAddContact","renderingCanBlockContact","renderingCanReportSpam","renderingIsAutoArchived","handleAddContact","handleConfirmBlock","handleCloseReportPane","handleChatReportSpam","shouldDeleteForAll","hasAnyButton","isRendering","onCheck","getMessageIsSpoiler","getMessageSingleInlineButton","getMessageVideo","selectAllowedMessageActionsSlow","getPictogramDimensions","renderKeyboardButtonText","useEnsureMessage","useFastClick","useThumbnail","useAsyncRendering","AnimatedCounter","MediaSpoiler","MessageSummary","MAX_LENGTH","SHOW_LOADER_DELAY","EMOJI_SIZE","pinnedMessageIds","topMessageSender","clickBotInlineButton","pinMessage","loadPinnedMessages","pinnedMessageId","isArray","pinnedMessage","pinnedMessageNumber","topMessageTitle","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","isSpoiler","canRenderLoader","shouldShowLoader","renderingPinnedMessage","noOpenTransition","isUnpinDialogOpen","openUnpinDialog","closeUnpinDialog","handleUnpinMessage","isUnpin","inlineButton","handleInlineButtonClick","handleAllPinnedClick","handleMessageClick","nextMessageId","noForumTopicPanel","noHoverColor","markNoHoverColor","unmarkNoHoverColor","renderPictogram","blobUrl","isFullVideo","asSpoiler","srcUrl","shouldRenderVideo","pinnedThumb","pinnedThumbImage","isVisible","fullWidth","mini","loading","pinListIcon","pinListIconHidden","noHover","pictogramTransition","messageText","withMedia","messageTextTransition","summary","truncateLength","noEmoji","emojiSize","shouldStopPropagation","firstPinnedMessage","chargedPaidMessageStars","openChatRefundModal","handleRefund","peerName","messageStarIcon","messageStars","noForcedUpperCase","MiddleSearchAsync","AboutAdsModal","AgeVerificationModal","AttachBotInstallModal","BoostModal","ChatInviteModal","ChatlistModal","CollectibleInfoModal","DeleteAccountModal","EmojiStatusAccessModal","FrozenAccountModal","PremiumGiftModal","GiftInfoModal","GiftRecipientPicker","GiftResalePriceComposerModal","GiftStatusInfoModal","GiftTransferModal","GiftUpgradeModal","GiftWithdrawModal","GiftCodeModal","InviteViaLinkModal","LocationAccessModal","MapModal","OneTimeMediaModal","PaidReactionModal","PreparedMessageModal","ReportAdModal","ReportModal","SharePreparedMessageModal","ChatRefundModal","StarsGiftModal","StarsBalanceModal","StarsPaymentModal","StarsSubscriptionModal","StarsTransactionInfoModal","SuggestedPostApprovalModal","SuggestedStatusModal","SuggestMessageModal","UrlAuthModal","WebAppModal","MODALS","giftCodeModal","boostModal","chatlistModal","urlAuth","oneTimeMediaModal","inviteViaLinkModal","requestedAttachBotInstall","reportAdModal","reportModal","webApps","collectibleInfoModal","mapModal","starsPayment","starsBalanceModal","starsTransactionModal","chatInviteModal","paidReactionModal","suggestMessageModal","suggestedPostApprovalModal","starsSubscriptionModal","starsGiftModal","giftModal","isGiftRecipientPickerOpen","isWebAppsCloseConfirmationModalOpen","giftInfoModal","giftResalePriceComposerModal","suggestedStatusModal","emojiStatusAccessModal","locationAccessModal","aboutAdsModal","giftUpgradeModal","monetizationVerificationModal","giftWithdrawModal","giftStatusInfoModal","preparedMessageModal","sharePreparedMessageModal","giftTransferModal","chatRefundModal","isFrozenAccountModalOpen","deleteAccountModal","isAgeVerificationModalOpen","MODAL_KEYS","MODAL_ENTRIES","modalProps","ModalComponent","AboutAdsModalAsync","AgeVerificationModalAsync","AttachBotInstallModalAsync","BoostModalAsync","ChatInviteModalAsync","ChatlistModalAsync","CollectibleInfoModalAsync","DeleteAccountModalAsync","EmojiStatusAccessModalAsync","FrozenAccountModalAsync","GiftModalAsync","GiftModal","GiftInfoModalAsync","GiftRecipientPickerAsync","GiftResalePriceComposerModalAsync","GiftStatusInfoModalAsync","GiftTransferModalAsync","GiftUpgradeModalAsync","GiftWithdrawModalAsync","GiftCodeModalAsync","InviteViaLinkModalAsync","LocationAccessModalAsync","MapModalAsync","OneTimeMediaModalAsync","PaidReactionModalAsync","PreparedMessageModalAsync","ReportAdModalAsync","ReportModalAsync","SharePreparedMessageModalAsync","StarsBalanceModalAsync","StarPaymentModalAsync","StarPaymentModal","ChatRefundModalAsync","StarsGiftModalAsync","StarsSubscriptionModalAsync","StarsTransactionModalAsync","StarsTransactionModal","SuggestMessageModalAsync","SuggestedPostApprovalModalAsync","SuggestedStatusModalAsync","UrlAuthModalAsync","WebAppModalAsync","PaymentModalAsync","ReceiptModalAsync","NewChatMembersProgress","isUserBot","filterPeersByQuery","sortChatIds","PeerPicker","FloatingActionButton","AddChatMembers","members","onNextStep","localContactIds","isSearching","localUserIds","globalUserIds","setUserSearchQuery","selectedMemberIds","setSelectedMemberIds","prevSelectedMemberIds","noPickerScrollRestore","memberIds","member","handleFilterChange","displayedIds","usersById","users","filteredIds","canBeInvitedToGroup","handleNextStep","itemIds","selectedIds","filterValue","filterPlaceholder","searchInputId","onSelectedIdsChange","onFilterChange","isSearchable","withDefaultPadding","noScrollRestore","allowMultiple","withStatus","itemInputType","userIds","contactList","newChatMembersProgress","userSearch","CreateTopicAsync","CreateTopic","EditTopicAsync","EditTopic","GifSearchAsync","GifSearch","PollResultsAsync","PollResults","AudioOrigin","MEMBERS_SLICE","PROFILE_SENSITIVE_AREA","SHARED_MEDIA_SLICE","SLIDE_TRANSITION_DURATION","getMessageDocument","isChatAdmin","getSavedGiftKey","selectCurrentSharedMediaSearch","selectPeerStories","selectSimilarBotsIds","selectSimilarChannelIds","getSenderName","useViewTransition","usePeerStoriesPolling","useCacheBuster","useProfileState","useProfileViewportIds","useTransitionFixes","Audio","Media","NothingFound","ChatExtra","ProfileInfo","WebLink","MediaStory","InfiniteScroll","ListItem","DeleteMemberModal","TABS","HIDDEN_RENDER_DELAY","INTERSECTION_THROTTLE","Profile","profileState","monoforumChannel","foundIds","pinnedStoryIds","archiveStoryIds","storyByIds","mediaSearchType","hasCommonChatsTab","hasStoriesTab","hasMembersTab","hasPreviewMediaTab","hasGiftsTab","gifts","botPreviewMedia","areMembersHidden","canAddMembers","canDeleteMembers","commonChatIds","adminMembersById","userStatusesById","chatsById","nextProfileTab","shouldWarnAboutSvg","similarChannels","similarBots","limitSimilarPeers","isTopicInfo","onProfileStateChange","setSharedMediaSearchType","loadMoreMembers","searchSharedMediaMessages","openAudioPlayer","setNewChatMembersDialogState","loadPeerProfileStories","loadStoriesArchive","loadChannelRecommendations","loadBotRecommendations","loadPreviewMedias","loadPeerSavedGifts","resetGiftProfileFilter","deletingUserId","setDeletingUserId","profileId","isSavedMessages","tab","initialTab","allowAutoScrollToTabs","startAutoScrollToTabsIfNeeded","stopAutoScrollToTabs","setActiveTab","renderingGifts","setRenderingGifts","startViewTransition","shouldApplyVtn","giftIds","renderingActiveTab","tabType","handleLoadCommonChats","handleLoadPeerStories","offsetId","handleLoadStoriesArchive","handleLoadGifts","handleLoadMoreMembers","prevGifts","prevGiftIds","newGiftIds","hasOrderChanged","some","resultType","viewportIds","getMore","noProfileInfo","searchMessages","loadStories","loadMoreGifts","groupChatMembers","chatMessages","isFirstTab","handleStopAutoScrollToTabs","applyTransitionFix","releaseTransitionFix","cacheBuster","resetCacheBuster","observeIntersectionForMedia","handleTransitionStop","handleNewMemberDialogOpen","InProgress","handleSelectMedia","SharedMedia","handleSelectPreviewMedia","standaloneMedia","flatMap","mediaIndex","handlePlayAudio","handleMemberClick","handleMessageFocus","handleDeleteMembersModalClose","prevHasMemberTabs","newActiveTab","handleResetGiftsFilter","renderingDelay","canRenderContent","getMemberContextAction","memberId","renderNothingFoundGiftsWithFilter","SearchingDuck","nonInteractive","noLoop","noSpinner","forceRenderHiddenMembers","isViewportIdsEmpty","story","isArchive","withDate","smaller","onDateClick","onMessageClick","onPlay","canDownload","senderTitle","adminMember","forceShowSelf","channelId","avatarSize","activeListSelector","itemSelector","sensitiveArea","preloadBackwards","noScrollRestoreOnTop","noFastList","onLoadMore","renderProfileInfo","shouldRestoreHeight","isForMonoforum","canPlayVideo","chatOrUserId","currentType","resultsByType","statusesById","isGroup","isForbidden","canViewMembers","similarChannelIds","similarBotsIds","isSelf","hasPreviewMedia","previewMediaByBotId","areStoriesHidden","hasPinnedStories","peerStories","profileIds","archiveIds","starGiftCount","peerGifts","savedGifts","giftsByPeerId","ManagementScreens","ProfileState","RightColumnContent","selectAreActiveChatsLoaded","selectRightColumnContentKey","useMarkScrolled","Management","RightHeader","BoostStatistics","MessageStatistics","MonetizationStatistics","Statistics","StoryStatistics","StickerSearch","ANIMATION_DURATION","MAIN_SCREENS_COUNT","MANAGEMENT_SCREENS_COUNT","blurSearchInput","searchInput","isChatSelected","nextManagementScreen","shouldCloseRightColumn","toggleChatInfo","toggleManagement","setStickerSearchQuery","setGifSearchQuery","closePollResults","addChatMembers","setEditingExportedInvite","toggleStatistics","toggleMessageStatistics","toggleStoryStatistics","setOpenedInviteInfo","requestNextManagementScreen","resetNextProfileTab","closeCreateTopicPanel","closeEditTopicPanel","closeBoostStatistics","setShouldCloseRightColumn","closeMonetizationStatistics","setProfileState","SavedDialogs","managementScreen","setManagementScreen","Initial","selectedChatMemberId","setSelectedChatMemberId","isPromotedByCurrentUser","setIsPromotedByCurrentUser","isScrolledDown","isProfile","ChatInfo","isManagement","isStatistics","isMessageStatistics","isStoryStatistics","isBoostStatistics","isMonetizationStatistics","isStickerSearch","isGifSearch","isPollResults","isAddingChatMembers","AddingMembers","isCreatingTopic","isEditingTopic","isOverlaying","setShouldSkipTransition","renderingContentKey","selector","close","shouldScrollUp","Closed","force","ChatPrivacyType","Discussion","GroupPermissions","GroupType","ChatAdministrators","ChannelSubscribers","GroupMembers","Invites","Reactions","JoinRequests","ChannelRemovedUsers","GroupUserPermissionsCreate","GroupRemovedUsers","GroupUserPermissions","NewDiscussionGroup","ChatAdminRights","ChatNewAdminRights","GroupAddAdmins","GroupRecentActions","EditInvite","InviteInfo","invite","handleSelectChatMember","isPromoted","handleAppendingChatMembers","prevChatId","prevThreadId","onScreenSelect","onChatMemberSelect","isColumnOpen","areActiveChatsLoaded","management","byChatId","nextScreen","useAsync","formatNumber","openTradingColumn","isCoinsExpanded","setIsCoinsExpanded","selectedCoinId","setSelectedCoinId","currentPage","setCurrentPage","coinsPerPage","logoLoadErrors","setLogoLoadErrors","fetchWalletBalance","response","method","headers","stringify","telegramUserId","ok","Error","json","fetchAggregatedPipelineCount","fetchAggregatedPipelineData","page","walletData","isWalletLoading","walletError","countData","isCountLoading","countError","pipelineData","isPipelineLoading","pipelineError","shortenAddress","address","displayAddress","walletAddress","shortAddress","displayBalance","balance","toggleCoinsVisibility","handleCoinClick","coinData","tokenData","symbol","mintAddress","comments","activeCount","score","cap","liquidity","holders","marketCap","change","coin","navigator","clipboard","writeText","viewBox","stroke","strokeWidth","rx","ry","cx","cy","r","points","logoUri","onError","prev","pagination","totalPages","hasPrevious","hasNext","defaultValue","TVChart","fetchPoolTokenMetadata","fetchTokenMetadata","selectedCoin","selectedMintAddress","closeTradingColumn","tokenMetadata","setTokenMetadata","isLoadingTokenMetadata","setIsLoadingTokenMetadata","tokenMetadataError","setTokenMetadataError","poolMetadata","setPoolMetadata","isLoadingChart","setIsLoadingChart","chartError","setChartError","tradeType","setTradeType","selectedPoolTab","setSelectedPoolTab","logoLoadError","setLogoLoadError","catch","poolAddress","TVChartElem","chartType","found","x1","y1","x2","y2","toLocaleString","toFixed","strokeLinecap","strokeLinejoin","selectedTradingCoin","selectedTradingMintAddress","SAVED_FOLDER_ID","getCanAddContact","getCanManageTopic","selectCanManage","selectCanUseGiftProfileAdminFilter","selectCanUseGiftProfileFilter","selectCurrentGifSearch","selectCurrentStickerSearch","useFolderManagerForChatsCount","COLUMN_ANIMATION_DURATION","HeaderContent","stickerSearchQuery","gifSearchQuery","isEditingInvite","canViewStatistics","currentInviteInfo","isInsideTopic","canEditTopic","canEditBot","giftProfileFilter","canUseGiftFilter","canUseGiftAdminFilter","deleteExportedChatInvite","openEditTopicPanel","updateGiftProfileFilter","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","sortType","giftsSortType","shouldIncludeUnlimited","shouldIncludeUnlimitedGifts","shouldIncludeLimited","shouldIncludeLimitedGifts","shouldIncludeUnique","shouldIncludeUniqueGifts","shouldIncludeDisplayed","shouldIncludeDisplayedGifts","shouldIncludeHidden","shouldIncludeHiddenGifts","foldersChatCount","handleEditInviteClick","handleDeleteInviteClick","handleStickerSearchQueryChange","handleGifSearchQueryChange","toggleEditTopic","topicId","handleToggleManagement","handleToggleStatistics","MemberList","GiftList","StoryList","ManageInitial","ManageChatPrivacyType","ManageDiscussion","ManageChannelSubscribers","ManageGroupPermissions","ManageChatAdministrators","ManageGroupRemovedUsers","ManageChannelRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageGroupRecentActions","ManageGroupAdminRights","ManageGroupNewAdminRights","ManageGroupMembers","ManageInvites","ManageEditInvite","ManageGroupAddAdmins","ManageReactions","ManageInviteInfo","ManageJoinRequests","getHeaderTitle","PrimaryLinkMenuButton","renderHeaderContent","isRevoked","autoFocusSearch","isBackButton","buttonClassName","editingInvite","inviteInfo","StickerSearchAsync","throttle","TRANSITION_DURATION","PROGRAMMATIC_SCROLL_TIMEOUT_MS","runThrottledForScroll","isScrollingProgrammatically","prevTabType","tabsEl","getStateFromTabType","prevProfileState","tabListEl","maxDistance","determineProfileState","MESSAGE_SEARCH_SLICE","getMessageContentIds","sortUserIds","useInfiniteScroll","chatIds","memberViewportIds","getMoreMembers","noProfileInfoForMembers","useInfiniteScrollForLoadableItems","mediaViewportIds","getMoreMedia","noProfileInfoForMedia","useInfiniteScrollForSharedMedia","documentViewportIds","getMoreDocuments","noProfileInfoForDocuments","linkViewportIds","getMoreLinks","noProfileInfoForLinks","audioViewportIds","getMoreAudio","noProfileInfoForAudio","voiceViewportIds","getMoreVoices","noProfileInfoForVoices","commonChatViewportIds","getMoreCommonChats","noProfileInfoForCommonChats","sortedStoryIds","pinnedStoryIdsSet","a","b","aIsPinned","bIsPinned","storyViewportIds","getMoreStories","noProfileInfoForStories","archiveStoryViewportIds","getMoreStoriesArchive","noProfileInfoForStoriesArchive","handleLoadMore","isOnTop","forSharedMediaType","currentResultType","messageIdsRef","ROUNDING_COMPENSATION_PX","transitionElSelector","setMinHeight","transitionEl","newHeight","minHeight","overflowY","scrollBarWidth","offsetWidth","clientWidth","paddingRight","ManagementAsync","GIVEAWAY_BOOST_PER_PREMIUM","selectIsGiveawayGiftsPurchaseAvailable","formatDateAtTime","formatInteger","getBoostProgressInfo","LinkField","PremiumProgress","StatisticsOverview","GiftBlueRound","GiftGreenRound","GiftRedRound","GiftStar","GIVEAWAY_IMG_LIST","CUSTOM_PEER_STAR_TEMPLATE","avatarIcon","CUSTOM_PEER_TO_BE_DISTRIBUTED","titleKey","withPremiumGradient","boostStatistics","isGiveawayAvailable","giveawayBoostsPerPremium","loadMoreBoosters","openGiveawayModal","isLoaded","boostStatus","isGiftListEqual","boosts","giftedBoosts","shouldDisplayGiftList","list","currentLevel","hasNextLevel","levelProgress","remainingBoosts","prepaidGiveaways","statsOverview","level","premiumSubscribers","boostersToLoadCount","loadedBoostsCount","boost","multiplier","totalCount","toLoadCount","renderBoostIcon","quantity","floatingBadge","floatingBadgeButtonColor","floatingBadgeIcon","floatingBadgeValue","renderBoostTypeIcon","isFromGiveaway","isGift","floatingBadgeWarning","floatingBadgeButton","handleBoosterClick","renderBoostList","hasStars","stars","customPeer","boostInfo","expires","noEmojiStatus","noFake","noVerified","iconElement","rightElement","handleGiveawayClick","isGifts","launchPrepaidGiveawayHandler","prepaidGiveaway","listToRender","section","leftText","rightText","progress","floatingBadgeText","stats","statistics","sectionHeader","isStarsGiveaway","giveawayIcon","months","month","boostSection","noResults","showMore","isLoadingBoosters","loadMoreSpinner","down","boostUrl","withShare","giveawayButton","appConfig","MessageStatisticsAsync","SafeLink","lovelyChartPromise","LovelyChart","ensureLovelyChart","MONETIZATION_GRAPHS_TITLES","topHoursGraph","revenueGraph","MONETIZATION_GRAPHS","dcId","isChannelRevenueWithdrawalEnabled","hasPassword","loadChannelMonetizationStatistics","openMonetizationVerificationModal","loadedCharts","isAboutMonetizationModalOpen","openAboutMonetizationModal","closeAboutMonetizationModal","isConfirmPasswordDialogOpen","openConfirmPasswordDialogOpen","closeConfirmPasswordDialogOpen","availableBalance","balances","isWithdrawalEnabled","canWithdraw","child","graph","isAsync","create","renderAvailableReward","integerTonPart","decimalTonPart","split","integerUsdPart","decimalUsdPart","usdRate","availableReward","toncoin","toncoinIcon","rewardValue","decimalPart","integer","topText","linkText","rewardsText","verificationMonetizationHandler","ready","isToncoin","textBottom","isOnlyConfirm","byKey","monetizationStatistics","statisticsDcId","monetization","StatisticsAsync","StoryStatisticsAsync","getStoryMediaHash","selectPinnedStories","preventMessageInputBlurWithBubbling","MediaAreaOverlay","canPin","openStoryViewer","loadPeerSkippedStories","toggleStoryInProfile","toggleStoryPinnedToTop","isDense","isFullyLoaded","isOut","isDeleted","imageHash","imgBlobUrl","thumbUrl","thumbnail","dataUri","storyId","isSinglePeer","handleUnarchiveClick","isInProfile","handleArchiveClick","handleTogglePinned","expiredIcon","overlayIcon","pinnedIcon","views","maxPinnedStoriesCount","pinnedStories","pinnedStory","canPinMore","StoryViewerAsync","Datafeed","formatPrice","disableStrict","enableStrict","createChartTypeButtonHTML","createCurrencyButtonHTML","setChartType","setCurrency","customCssUrl","setCustomCssUrl","tvWidgetRef","customCSS","cssBlob","Blob","createObjectURL","revokeObjectURL","localStorage","setItem","appendedScript","initChart","TradingViewWidget","TradingView","widget","widgetOptions","datafeed","interval","locale","library_path","autosize","disabled_features","enabled_features","client_id","custom_formatters","priceFormatterFactory","auto_save_delay","debug","time_frames","resolution","overrides","custom_css_url","favorites","intervals","tvWidget","headerReady","chartTypeButton","createButton","script","createElement","async","onload","onerror","head","appendChild","removeChild","fetchPoolOhlcv","RES_TO_INTERVAL","configurationData","supported_resolutions","symbols_types","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","activeSubscriptions","Map","onReady","callback","resolveSymbol","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","flip","token0","desiredToken","token1","baseToken","symbolInfo","ticker","session","timezone","exchange","minmov","pricescale","has_intraday","has_seconds","has_weekly_and_monthly","has_daily","listed_exchange","volume_precision","data_status","desiredAddress","getBars","periodParams","onHistoryCallback","onErrorCallback","to","countBack","bar","t","o","high","low","l","v","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","unsubscribeBars","BigNumber","RES_TO_SECONDS","getNextBarTime","lastBar","lastCharacter","nextBarTime","SUBSCRIPT_NUMBER_MAP","calcPricePrecision","num","precision","gr0","formated","toFormat","replace","matchString","convertCandlePriceToMcap","candle","supply","convertCandleUSDToSOL","solPrice","getCurrentTabId","oldTranslate","callApi","addActionHandler","setGlobal","actions","payload","reason","tabId","authorizations","orderedHashes","ttlDays","removedSessions","newSessions","currentSessionHash","isCurrent","currentSession","areCallsEnabled","areSecretChatsEnabled","isConfirmed","isUnconfirmed","days","webAuthorizations","activeWebSessions","accountDaysTtl","closeDeleteAccountModal","ManagementProgress","BOT_FATHER_USERNAME","GENERAL_REFETCH_INTERVAL","copyTextToClipboard","getUsernameFromDeepLink","getTranslationFn","PopupManager","requestActionTimeout","extractCurrentThemeParams","getWebAppKey","removeBlockedUser","updateBotAppPermissions","updateManagementProgress","updateSharedSettings","updateUser","updateUserFullInfo","activateWebAppIfOpen","addWebAppToOpenList","replaceInlineBotSettings","replaceInlineBotsIsLoading","updateTabState","selectChatLastMessageId","selectIsTrustedBot","selectMessageReplyInfo","selectSendAs","fetchChatByUsername","getPeerStarsForMessage","getIsWebAppsFullscreenSupported","GAMEE_URL","TOP_PEERS_REQUEST_COOLDOWN","runDebouncedForSearch","botFatherId","buttonType","initDraftFromSuggestedMessage","copyText","answerCallbackButton","openPollModal","isQuiz","showDialog","phoneNumber","receiptMessageId","getReceipt","openInvoice","isSamePeer","switchBotInline","requestSimpleWebView","viaBotId","requestWebView","requestBotUrlAuth","buttonId","resetDraftReplyInfo","clearWebPagePreview","lastRequestedAt","topInlineBots","topBotApps","offset","inlineBotData","inlineBots","byUsername","inlineBot","switchPm","canLoadMore","cacheTime","searchInlineBot","botSender","openChatWithDraft","queryId","sendAs","isSilent","scheduledAt","allowPaidStars","resultId","starsForOneMessage","params","sendInlineBotApiResult","localId","variables","options","shouldUseCustomIcon","resetInlineBot","param","accessHash","startParam","contact","isFromSideMenu","isFromSwitchWebView","checkIfOpenOrActivate","onConfirm","webViewUrl","newActiveApp","requestUrl","appName","isFromBotMenu","isFullScreen","changeWebAppModalState","mode","shouldMarkBotTrusted","markBotTrusted","isWriteAllowed","medias","shouldSkipInFuture","shouldSkipWebAppCloseConfirmation","startApp","isFromConfirm","shouldSkipBotTrustRequest","isAttachBotInstalled","isAttachBot","attachBot","shouldAskForTos","isDisclaimerNeeded","isForAttachMenu","botApp","shouldRequestBotTrust","isInactive","app","closeActiveWebApp","isEnabled","isWepAppOpened","webApp","currentTabState","openedWebApps","webAppName","webAppForCheck","shouldDisplayDisclaimer","botUser","actionPayload","handleUrlAuthResult","domain","request","siteUrl","closeUrlAuthModal","shouldReplaceSettings","newInlineBotData","currentIds","newResults","isGallery","switchWebview","nextOffset","gameePopups","isGame","openGame","preOpenIfNeeded","alert","isError","cancelPreOpen","about","bio","Complete","isBotAccessEmojiGranted","isBotCanManageEmojiStatus","isAccessGranted","geolocation","startBot","botUrl","freezeAppealUrl","botAppealUsername","GLOBAL_SEARCH_SLICE","GLOBAL_TOPIC_SEARCH_SLICE","timestampPlusDay","isDeepLink","tryParseDeepLink","toChannelId","addMessages","addUserStatuses","updateGlobalSearch","updateGlobalSearchFetchingStatus","updateGlobalSearchResults","updateTopics","selectChatByUsername","selectCurrentGlobalSearchQuery","searchThrottled","searchResult","sponsoredResult","Promise","all","currentSearchQuery","accountResultIds","globalResultIds","localResults","peerIds","globalResults","sponsoredPeer","maxDate","nextOffsetId","searchMessagesGlobal","context","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","nextOffsetPeerId","nextOffsetRate","offsetPeer","offsetRate","popularBotApps","botApps","messageLink","inChatResultRequest","isChat","topicsRequest","inChatResult","localTopics","totalTopicsCount","getMessageByPublicLink","getMessageByPrivateLink","unshift","sortedTopics","foundTopicIds","localChat","getChatGroupOrChannelMessage","internalChannelId","localMessage","langProvider","updateChat","updateChatFullInfo","updateManagement","ensureIsSuperGroup","isUsernameAvailable","checkedUsername","shouldDisableUsernames","adminId","admin","revokedInvites","expireDate","usageLimit","isRequestNeeded","oldInvite","newInvite","managementState","offsetDate","offsetUserId","offsetUser","importers","isRequested","requesters","isApproved","targetChat","importer","recentRequesterIds","requestsPending","file","isSuggest","newUser","loadMoreProfilePhotos","shouldInvalidateCache","MESSAGE_DELETED","GIF_MIME_TYPE","MAX_MEDIA_FILES_FOR_ALBUM","MESSAGE_ID_REQUIRED_ERROR","RE_TELEGRAM_LINK","STARS_CURRENCY_CODE","STARS_SUGGESTED_POST_FUTURE_MIN","SUPPORTED_AUDIO_CONTENT_TYPES","TON_CURRENCY_CODE","ensureProtocol","isMixedScriptUrl","copyTextToClipboardFromPromise","areSortedArraysIntersecting","buildCollectionByKey","omit","partition","getMessageKey","rafPromise","cancelApiProgress","isDeletedUser","splitMessagesForForwarding","addChatMessagesById","addUnreadMentions","deleteSponsoredMessage","removeOutlyingList","removeRequestedMessageTranslation","removeUnreadMentions","replaceSettings","replaceThreadParam","replaceUserStatuses","safeReplacePinnedIds","safeReplaceViewportIds","updateChatMessage","updateListedIds","updateMessageTranslation","updateOutlyingLists","updatePeerFullInfo","updateQuickReplies","updateQuickReplyMessages","updateRequestedMessageTranslation","updateScheduledMessages","updateSponsoredMessage","updateThreadInfo","updateThreadUnreadFromForwardedMessage","updateTopic","updateUploadByMessageKey","selectCanForwardMessage","selectCurrentViewedStory","selectEditingMessage","selectEditingScheduledId","selectFirstMessageId","selectForwardsCanBeSentToChat","selectForwardsContainVoiceMessages","selectLanguageCode","selectNoWebPage","selectPeerStory","selectPollFromMessage","selectRealLastReadId","selectReplyCanBeSentToChat","selectSavedDialogIdFromMessage","selectScheduledMessage","selectThreadIdFromMessage","selectUserStatus","selectViewportIds","updateWithLocalMedia","deleteMessages","AUTOLOGIN_TOKEN_KEY","uploadProgressCallbacks","runDebouncedForMarkRead","isBudgetPreload","shouldForceRender","onLoaded","isOutlying","historyIds","newViewportIds","areSomeLocal","areAllLocal","getViewportSlice","loadWithBudget","replyOriginForId","threadUpdate","loadMessage","isDeleting","storyPeerId","isStoryReply","contentToBeScheduled","draft","isForwarding","forwardMessages","draftSuggestedPostInfo","storyReplyInfo","messageReplyInfo","messagePriceInStars","suggestedPostPrice","suggestedPostCurrency","suggestedPostAmount","currentBalance","topup","balanceNeeded","currentTonBalance","ton","suggestedMessage","suggestedMedia","noWebPage","isPending","isInvertedMedia","isSingle","attachments","isGrouped","shouldGroupMessages","localMessages","restParams","sendParams","attachment","wasDrafted","sendMessageOrReduceLocal","commonParams","byType","splitAttachmentsByType","hasSentCaption","groupIndex","group","groupedAttachments","quick","shouldSendAsFile","firstAttachment","restAttachments","firstAttachments","lastAttachment","replyToForFirstMessage","localForwards","executeForwardMessages","sendMessagesWithNotification","inviteLink","userFullNames","userFullName","currentMessageKey","progressCallback","messageKey","setEditingId","delete","todo","apiUpdate","currentDraft","newDraft","effectId","saveDraft","isLocalOnly","shouldKeepReply","shouldKeepSuggestedPost","currentReplyInfo","updatedReplyInfo","noLocalTimeUpdate","updatedSuggestedPostInfo","clearDraft","updateDraftReplyInfo","monoforumPeerId","messageSuggestedPost","futureMin","starsSuggestedPostFutureMin","validScheduleDate","updateDraftSuggestedPostInfo","insertingPeerIdMention","isLocal","draftDate","isOneSide","payloadMessageList","messageIdsToDelete","notification","dismissAction","dismissNotification","activeChat","folders","pinnedChatIds","newIncludedChatIds","newPinnedChatIds","updatedFolder","folderUpdate","option","closeReportModal","oldSections","sections","selectedOption","newSection","subject","isOptional","participantId","serviceNotifications","minId","readCount","countSortedIds","newTopicUnreadCount","shouldFetchUnreadReactions","webPagePreview","completedIds","incompletedIds","currentTodo","currentCompletions","completions","currentCompletionIds","itemId","newCompletions","completedBy","completedAt","finalCompletions","newContent","messageUpdate","poll","shouldResetVoters","pollResults","voters","votes","vote","offsets","hasScheduledMessages","scheduledPerThread","scheduledInThread","transcriptionId","isTranscriptionError","newCustomEmojiIds","customEmoji","toChatId","toChat","noAuthors","noCaptions","toThreadId","isToMainThread","fromChat","realMessages","serviceMessages","m","forwardableRealMessages","messageSlices","config","maxForwardedCount","forwardParams","forwardedLocalMessagesSlice","isShareMessageModalShown","addOffset","sliceSize","allMessages","threadFirstMessageId","outlyingList","replyMessage","findClosestIndex","sourceIds","isBackwards","isAround","indexForDirection","sendMessages","messageIdsForUndo","forwardedIds","forwardedMessage","firstSendParam","storySendMessage","isReaction","seenByDates","sendAsId","sendAsChat","sendAsPeerIds","isForPaidReactions","sendPaidReactionsAsPeerIds","initialSection","closeReportAdModal","enabled","isAdmin","neededAmount","isCurrencyStars","reject","rejectComment","markMessagesRead","previousChatId","ignoreDeepLinks","urlWithProtocol","parsedUrl","isMixedScript","closeStoryViewer","openTelegramLink","autologinToken","autologinDomains","urlAuthDomains","requestLinkUrlAuth","shouldDisplayModal","toggleSafeLinkModal","checkIfVoiceMessagesAllowed","noVoiceMessages","moveReplyToNewDraft","replyingInfo","replyingMessage","currentThreadId","currentChatId","newReplyInfo","replyToTopId","replyToPeerId","quoteText","quoteOffset","getPeerId","newReply","closeMediaViewer","isSelectForwardsContainVoiceMessages","showAllowedMessageTypesNotification","markMessagesTranslationPending","SEND_VIEWS_TIMEOUT","viewsIncrementTimeout","idsToIncrementViews","incrementViews","shouldIncrement","viewsInfo","forwardsCount","forwards","readDate","userStatus","updateStatus","isReadDateRestricted","isReadDateRestrictedByMe","quickReplies","quickReplyId","shortcutId","shouldIncludeThread","shouldIncludeGrouped","showErrorOccurredNotification","showLinkCopiedNotification","callApiExportMessageLinkPromise","MESSAGES_TO_REPORT_DELIVERY","reportDeliveryTimeout","cId","webAppKey","sendWebAppEvent","eventData","supportedFilters","peerTypes","getAttachmentType","previousType","mimeType","CHAT_MEDIA_SLICE","isInsideSortedArrayRange","getSearchResultKey","getChatMediaMessageIds","isSameReaction","initializeChatMediaSearchResults","mergeWithChatMediaSearchSegment","setChatMediaSearchLoading","updateChatMediaSearchResults","updateMiddleSearchResults","updateSharedMediaSearchResults","selectCurrentChatMediaSearch","MEDIA_PRELOAD_OFFSET","currentSearch","savedTag","isHashtag","shouldReuseParams","offsetPeerId","shouldHaveQuery","fetchingQuery","hashtag","newFoundIds","hasTagChanged","hasSearchChanged","resultChatId","cleanQuery","requestedQuery","currentResults","searchSharedMedia","currentMediaMessageId","searchChatMedia","selectCurrentChatMediaSearchSegment","currentSegment","segments","segment","splice","calcChatMediaSearchAddOffset","calcChatMediaSearchOffsetId","currentMessageId","calcLoadMoreDirection","currentSegmentFoundIdsCount","idIndexInSegment","loadingState","areAllItemsLoadedBackwards","areAllItemsLoadedForwards","halfMediaCount","preloadOffset","lastMediaIndex","calcLoadingState","newFoundIdsCount","chatMediaSearchParams","PaymentStep","DEBUG_PAYMENT_SMART_GLOCAL","getStripeError","buildQueryString","getRequestInputInvoice","getRequestInputSavedStarGift","closeInvoice","openStarsTransactionFromReceipt","setPaymentStep","setReceipt","setRequestInfoId","setSmartGlocalCardInfo","setStripeCardInfo","updatePayment","updateShippingOptions","updateStarsPayment","selectPaymentInputInvoice","selectPaymentRequestId","selectProviderPublicToken","selectProviderPublishableKey","selectSmartGlocalCredentials","selectStarsPayment","selectStripeCredentials","LOCAL_BOOST_COOLDOWN","requestInfo","saveInfo","inputInvoice","requestInputInvoice","validateRequestedInfo","isPaymentFormLoading","form","handlePaymentFormError","isExtendedMedia","Checkout","shouldHideName","shouldUpgrade","giftId","payInputStarInvoice","credentials","nativeProvider","publishableKey","sendStripeCredentials","publicToken","sendSmartGlocalCredentials","shippingOptionId","saveCredentials","savedCredentialId","tipAmount","requestInfoId","paymentState","temporaryPassword","formId","requestedInfoId","directInfo","starPayment","subscriptionInfo","subscriptionFormId","closeStarsPaymentModal","closeGiftModal","cardNumber","expiryMonth","expiryYear","cvv","zip","Authorization","card","expiration_month","expiration_year","security_code","tokenizeUrl","nativeParams","endsWith","Accept","descriptionKey","token","step","promo","isSuccess","monthsAmount","toUserId","loadPremiumStickers","closeReactionPicker","starOptions","forUserId","forPeerId","starsGiftOptions","password","field","shouldSave","shippingOptions","Shipping","closeBoostModal","myBoosts","boostListResult","boostListGiftResult","boostStatusResult","boostList","updatedBoostList","slots","oldChatFullInfo","oldBoostsApplied","boostsApplied","appliedBoostsCount","oldStatus","boostsPerLevel","nextLevelBoosts","currentLevelBoosts","newBoosts","isLevelUp","newCurrentLevelBoosts","newNextLevelBoosts","hasMyBoost","oldMyBoosts","unixNow","newMyBoosts","cooldownUntil","requestConfetti","closeGiftCodeModal","giveawayId","paymentPurpose","additionalChannels","additionalChannelIds","areWinnersVisible","countries","prizeDescription","untilDate","openBoostStatistics","shouldKeepOriginalDetails","upgradeStars","requestSavedGift","isWaitingForStarGiftUpgrade","closeGiftUpgradeModal","closeGiftInfoModal","inputSavedGift","invoice","recipientId","transferStars","isWaitingForStarGiftTransfer","closeGiftTransferModal","toPeer","sendStarPaymentForm","errorKey","inputGift","closeGiftWithdrawModal","hasErrorKey","buildCollectionByCallback","addPaidReaction","getDocumentMediaHash","getReactionKey","getUserReactions","addMessageReaction","subtractXForEmojiInteraction","updateUnreadReactions","selectDefaultReaction","selectMaxUserReactions","selectMessageIdsByGroupId","INTERACTION_RANDOM_OFFSET","interactionLocalId","availableReaction","aroundAnimation","BlobUrl","centerIcon","appearAnimation","selectAnimation","availableReactions","effects","emojis","effectById","effect","effectAnimationId","emoticon","availableEffectById","effectReactions","emoji","startSize","isReversed","animatedEffect","interactions","timestamps","toggleReaction","shouldAddToRecent","isInSaved","isInDocumentGroup","documentGroupFirstMessageId","userReactions","hasReaction","userReaction","newUserReactions","paidReactions","regularReactions","trimmedRegularReactions","localReactions","stopActiveReaction","containerId","startActiveReaction","shouldIgnoreDefaultPrivacy","defaultPrivacy","paidReactionPrivacy","currentReactions","newReactions","forcedAmount","paidReaction","localAmount","resetLocalPaidReactions","localIsPrivate","localPeerId","originReaction","currentActiveReactions","activeReactions","newActiveReactions","newMessageActiveReactions","defaultReaction","reactors","interaction","recentReactions","scrollTargetPosition","topReactions","defaultTags","savedReactionTags","tagsByKey","tags","tag","newTag","DEFAULT_RESALE_GIFTS_FILTER_OPTIONS","RESALE_GIFTS_LIMIT","areInputSavedGiftsEqual","appendStarsSubscriptions","appendStarsTransactions","replacePeerSavedGifts","updateChats","updateStarsBalance","updateStarsSubscriptionLoading","updateUsers","selectGiftProfileFilter","selectPeerSavedGifts","currentStarsStatus","needsTopupOptions","topupOptions","starsStatus","tonStatus","isTon","history","inbound","outbound","subscriptions","nextHistoryOffset","nextSubscriptionOffset","isInbound","isOutbound","idsByCategoryName","stock","limited","resale","allStarGiftIds","allStarGifts","limitedStarGiftIds","isLimited","stockedStarGiftIds","availabilityRemains","availabilityTotal","resaleStarGiftIds","availabilityResale","starsCategory","starGifts","idsByCategory","resaleGifts","loadResaleGifts","shouldRefresh","isAllLoaded","attributesHash","currentGifts","newGifts","currentUpdateIteration","updateIteration","shouldUpdateIteration","attributes","counters","localNextOffset","fetchingFilter","currentFilter","byTabId","isCancelled","subscriptionId","shouldUnsave","requestInputGift","oldGifts","g","samples","sampleAttributes","pinLimit","savedGiftPinLimit","currentPinnedGifts","newPinnedGifts","trimmedPinnedGifts","inputSavedGifts","reloadPeerSavedGifts","areDeepEqual","updateChannelMonetizationStatistics","updateMessageStatistics","updateStatistics","updateStatisticsGraph","updateStoryStatistics","updateVerifyMonetizationModal","loadMessagePublicForwards","currentMessage","publicForwards","shouldOmitFirstElement","publicForwardsData","isPercentage","loadStoryPublicForwards","currentStory","currentPassword","closeMonetizationVerificationModal","buildApiInputPrivacyRules","addStories","addStoriesForPeer","removePeerStory","updateLastReadStoryForPeer","updateLastViewedStoryForPeer","updatePeer","updatePeerProfileStory","updatePeerStoriesFullyLoaded","updatePeerStoriesHidden","updatePeerStory","updatePeerStoryViews","updatePeersWithStories","updateSentStoryReaction","updateStealthMode","updateStoryViews","updateStoryViewsLoading","INFINITE_LOOP_MARKER","stateHash","isFirstRequest","stealthMode","hasMore","hasNextInArchive","archiveStateHash","skippedStoryIds","serverTime","byPeerId","lastReadId","currentIsPinned","oldPinnedIds","s","isRemoving","newPinnedIds","lastReadStoryId","isArchiveFullyLoaded","areReactionsFirst","areJustContacts","privacy","allowedIds","allowUserIds","allowChatIds","blockedIds","blockUserIds","blockChatIds","inputPrivacy","visibility","isUnspecified","botsPrivacy","peerIdsToLoad","maxStoryId","hasStories","loadPeerStories","previousReaction","sentReaction","isForPast","isForFuture","BIRTHDAY_NUMBERS_SET","RESTRICTED_EMOJI_SET","pause","searchWords","rebuildStickersForEmoji","replaceAnimatedEmojis","updateCustomEmojiForEmoji","updateCustomEmojiSets","updateGifSearch","updateRecentStatusCustomEmojis","updateStickerSearch","updateStickerSet","updateStickerSets","updateStickersForEmoji","selectStickerSet","ADDED_SETS_THROTTLE","ADDED_SETS_THROTTLE_CHUNK","addedStickers","addedCustomEmojis","sets","recentCustomEmojis","setsById","cached","setIdsToLoad","loadStickers","recent","loadRecentStickers","favorite","favoriteStickers","premium","featured","featuredStickers","stickerSet","premiumGifts","tonGifts","fullSet","defaultTopicIconsId","defaultStatusIconsId","documentIds","cachedSet","animatedEmojiEffects","shortName","birthdayNumbers","restrictedEmoji","genericEmojiEffects","gifs","saved","savedGifs","premiumLimit","newGifs","unfave","stickerSetId","installedDate","isInstalled","currentEmojiKeywords","emojiKeywords","fromVersion","version","keywords","recentStickers","packs","currentEmoji","forEmoji","resultIds","searchGifs","gifSearchUsername","gifSearch","featuredIds","shouldIgnoreCache","emojiStatuses","botUsername","addCallback","IS_BYPASS_AUTH","init","initFolderManager","omitUndefined","updateThread","selectEditingDraft","RELEASE_STATUS_TIMEOUT","releaseStatusTimeout","preloadTopChatMessages","whenFirstBatchDone","loadAndReplaceMessages","wasReset","draftChatIds","draftsByChatId","threadsById","acc2","editingDraft","lastMessages","lastMessageIds","savedLastMessages","activeThreadId","resultDiscussion","loadTopMessages","newCurrentChatId","currentChatMessages","topicLastMessages","resultMessageIds","messagesThreadInfos","isDiscussionStartLoaded","threadStartMessages","topMessages","allMessagesWithTopicLastMessages","otherTabId","tabThreads","thread","otherChatId","otherThreadId","loadTopics","loadTopicById","shouldCloseChatOnError","threads","previousGlobal","authState","sync","updateTwoFaSettings","hint","onSuccess","email","recoveryEmail","waitingEmailCodeLength","BOT_VERIFICATION_PEERS_LIMIT","closeNewContactDialog","updatePeerPhotos","updatePeerPhotosIsLoading","updateUserCommonChats","updateUserSearch","updateUserSearchFetchingStatus","selectPeerPhotos","PROFILE_PHOTOS_FIRST_LOAD_LIMIT","runThrottledForSearch","withPhotos","newFullInfo","profilePhotos","hasChangedAvatar","avatarPhotoId","hasChangedProfilePhoto","profilePhoto","hasChangedFallbackPhoto","fallbackPhoto","hasChangedPersonalPhoto","personalPhoto","hasChangedPhoto","topPeers","getCompareString","collator","Collator","sortedUsers","compare","shouldRefundCharged","starsAmount","starsToRefund","shouldSharePhoneNumber","updateChatMutedState","isContact","phone","isPreload","photos","newPhotos","referrerWebAppKey","customEmojiIconId","isCloseFriend","customEmojiId","loadFullUser","currentPeerIds","newPeerIds","ARE_CALLS_SUPPORTED","notifyAboutCall","removeGroupCall","updateGroupCall","updateGroupCallParticipant","selectGroupCall","selectPhoneCallUser","checkNavigatorUserMediaPermissions","initializeSounds","call","leaveGroupCall","groupCall","isCallNotEmpty","participantsCount","participants","participant","playGroupCallSound","sound","hangUp","needRating","isCallPanelVisible","MAX_ACTIVE_PINNED_CHATS","closeMessageNotifications","notifyAboutMessage","checkIfHasUnreadReactions","addChatListIds","deleteChatMessages","deletePeerPhoto","leaveChat","replacePeerPhotos","replacePinnedTopicIds","updateChatListType","selectChatListType","selectCommonBoxChatId","selectIsChatListed","selectTopicFromMessage","TYPING_STATUS_CLEAR_DELAY","INVALIDATE_FULL_CHAT_FIELDS","prevIsForum","lastReadOutboxMessageId","updatedChat","noTopChatsRequest","loadTopChats","chatUpdate","changedFields","invalidateFullInfo","requestChatUpdate","localMessageIds","currentTypingStatus","isOur","isFromScheduled","hasMention","loadPinnedDialogs","orderedPinnedIds","newOrderedPinnedIds","pinnedId","isFolderActive","newChatFoldersById","newOrderedIds","orderedId","recommended","targetChatFullInfo","replacedMembers","addedMember","deletedMemberId","shouldUpdate","deleteIndex","adminMembers","isOwner","membersCount","loadChatJoinRequests","order","isForumAsMessages","photoId","pickTruthy","getMessageText","getMessageReplyInfo","getStoryReplyInfo","addViewportId","clearMessageTranslation","deleteChatScheduledMessages","deleteQuickReply","deleteQuickReplyMessages","deleteTopic","removeChatFromChatLists","updateChatLastMessageId","updateChatMediaLoadingState","updateMessageTranslations","updatePoll","updatePollVote","updateQuickReplyMessage","updateScheduledMessage","updateThreadInfos","selectCanAnimateSnapEffect","selectIsMessageInCurrentMessageList","selectThreadByMessage","PublicKey","axios","VIVA_API_KEY","ANIMATION_DELAY","SNAP_ANIMATION_DELAY","VIDEO_PROCESSING_NOTIFICATION_DELAY","lastVideoProcessingNotificationTime","shouldForceReply","textString","potentialAddresses","publicKey","isOnCurve","telegramChatId","post","apiError","updateListedAndViewportIds","newMessage","isForumTopic","updateChatLastMessage","noHighlight","isResizingContainer","reportDeliveryUntilDate","reportMessageDelivery","savedDialogId","requestSavedDialogUpdate","threadScheduledIds","isFromNew","updateReactions","newScheduledMessageId","isScheduled","fileUploads","byMessageKey","updatePerThread","currentUpdatedInThread","currentThreadInfo","lastReadInboxMessageIdInThread","newIds","hadVideoProcessing","isVideoProcessingPending","processedVideoId","actionText","deleteScheduledMessages","deleteThread","deleteParticipantHistory","pollId","pollUpdate","createServiceNotification","isBought","paidMediaUpdate","transcriptions","sendingState","translations","localPaidReaction","reactionEffectsEnabled","hasUnreadReactionsForMessageInChat","hasUnreadReactionsInNewReactions","previewBlobUrl","updateThreadUnread","originMessage","isUnreadChatNotLoaded","candidateGlobal","currentLastMessageId","isSameOrNewer","findLastMessage","messageThreadId","threadIdsToUpdate","idsSet","newLastMessage","isAnimatingAsSnap","stillDeletedIds","chatIdsToUpdate","commonBoxChatId","newLastSavedDialogMessage","scheduledMessages","applyLangPackDifference","requestLangPackDifference","addBlockedUser","addChats","addUsers","setConfirmPaymentUrl","threadInfos","polls","isBlockedFromStories","oldOrder","isCustomEmoji","newOrder","reorderStickerSets","setId","loadSavedGifs","rules","ConfirmPayment","closeWebApp","processPremiumFloodWait","isUpload","private","strings","keysToRemove","actionStarGift","receiver","formatCurrencyAsString","totalAmount","closeStarsBalanceModal","giftModalState","subscriptionPricing","subscriptionPeriod","starsModalState","isCompleted","starGiftModalState","addNotifyException","updateNotifyDefaults","peerType","notifySettings","twoFaSettings","throttleWithFullyIdle","deleteContact","updateStatusesOnFullyIdle","flushStatusUpdates","pendingStatusUpdates","localUser","targetUserFullInfo","menuButton","commands","selfDestructAccountDays","clearOpenedWebApps","hasOpenedMoreThanOneWebApps","hasOpenedWebApps","removeActiveWebAppFromOpenList","removeWebAppFromOpenList","replaceIsWebAppModalOpen","replaceWebAppModalState","updateWebApp","selectActiveWebApp","selectWebApp","activeWebAppKey","isMoreAppsTabActive","openedWebAppsKeys","openedWebAppsCount","isModalOpen","skipClosingConfirmation","shouldSkipConfirmation","shouldShowConfirmation","openWebAppsCloseConfirmationModal","miniAppsCachedPosition","miniAppsCachedSize","activeWebApp","trustedBotIds","newTrustedBotIds","callbackPayload","newPlannedEvents","plannedEvents","attachMenuPeerTypes","callAttachBot","createMessageHashUrl","closeMiddleSearch","replaceTabThreadParam","updateCurrentMessageList","updateRequestedChatTranslation","shouldReplaceLast","hideEffectInComposer","closeStarsTransactionModal","shouldPreventComposerAnimation","isStatisticsShown","openForumPanel","hashUrl","openNewWindow","isChatInfoShown","lastIsChatInfoShown","files","chatCreation","targetIndexDelta","nextId","GlobalSearchContent","updateGlobalSearchContent","MAX_RECENTLY_FOUND_IDS","currentContent","BotApps","recentlyFoundChatIds","newRecentIds","pop","getTimestampableMedia","selectReplyMessage","isAvatarView","withDynamicLoading","mediaViewer","messageMedia","maxMessageDuration","Inline","replyMessageMedia","maxReplyMessageDuration","currentChatPlaybacks","playbackByChatId","lastPlaybackRate","FocusDirection","RELEASE_DATETIME","SCROLL_MAX_DURATION","cancelScrollBlockingAnimation","copyHtmlToClipboard","findLast","parseHtmlAsFormattedText","versionNotification","getMediaFilename","getMediaFormat","getMediaHash","getMessageStatefulContent","getMessageSummaryText","addTabStateResetterAction","renderMessageSummaryHtml","addActiveMediaDownload","cancelMessageMediaDownload","enterMessageSelectMode","toggleMessageSelection","updateFocusDirection","updateFocusedMessage","selectForwardedMessageIdsByGroupId","selectReplyStack","selectRequestedChatTranslationLanguage","selectRequestedMessageTranslationLanguage","getIsMobile","FOCUS_DURATION","FOCUS_NO_HIGHLIGHT_DURATION","POLL_RESULT_OPEN_DELAY_MS","VERSION_NOTIFICATION_DURATION","SERVICE_NOTIFICATIONS_MAX_AMOUNT","blurTimeout","paramName","lastOwnEditableMessageId","canEdit","isLatest","chatMessageKeys","indexOfCurrent","isLastPlaybackRateActive","shouldOpenInstantly","replyStack","focusLastMessage","groupedChatId","replyMessageId","quote","onMessageReady","openMediaFromTimestamp","shouldSwitchChat","Static","Down","Up","groupedMessageIds","selectedMessages","forwardableMessageIds","originChatId","originMessageId","downloadMedia","childMessageIds","withShift","shouldShowContextMenuHint","disableContextMenuHint","pollModal","forNewTask","todoListModal","currentVersion","fractionalPart","serviceNotification","isReadDate","activeLanguage","copyTextForMessages","canCopy","message1","message2","resultHtml","resultText","statefulContent","args","pendingSendArgs","starsForSendMessage","resetMiddleSearch","updateSharedMediaSearchType","ANIMATION_WAVE_MIN_INTERVAL","GLOBAL_STATE_CACHE_CUSTOM_EMOJI_LIMIT","PAGE_TITLE","getAllMultitabTokens","reestablishMasterToSelf","getIsAppUpdateNeeded","getReadableErrorText","refreshFromCache","setPageTitle","setPageTitleInstant","getAllowedAttachmentOptions","selectIsChatWithBot","getIsTablet","APP_VERSION_URL","FLOOD_PREMIUM_WAIT_NOTIFICATION_DURATION","MAX_STORED_EMOJIS","newState","currentStoryId","recentEmojis","newEmojis","newStickers","hasLocalId","newNotifications","existingNotificationIndex","isChatWithBot","canSendPlainText","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","canSendStickers","canSendRoundVideos","canSendVoices","allowedContent","lastDelimiter","allowedContentString","newDialogs","existingErrorIndex","rest","currentLastTime","attachmentSettings","shouldPlayEffectInComposer","shouldPaidMessageAutoApprove","currentEffect","requestEffectInComposer","saveEffectInDraft","lastRendered","createTopicPanel","editTopicPanel","geoPoint","zoom","point","trim","multitabNextAction","notificationInterval","NOTIFICATION_INTERVAL","clearInterval","setInterval","initialUnreadNotifications","canDisplayChatInTitle","isTestServer","notificationCount","newUnread","isScreenLocked","bandwidthPremiumDownloadSpeedup","bandwidthPremiumUploadSpeedup","bandwidthPremiumNotifyPeriod","lastPremiumBandwithNotificationDate","lastNotifiedAt","unblurredTabIds","prevIsScreenLocked","prevBlurredTabsCount","onlineTimeout","ONLINE_TIMEOUT","isLockedUpdated","blurredTabsCount","newBlurredTabsCount","IS_SCREEN_LOCKED_CACHE_KEY","signalPasscodeHash","cloneDeep","clearEncryptedSession","encryptSession","forgetPasscode","setupPasscode","onBeforeUnload","clearStoredSession","loadStoredSession","storeSession","forceUpdateCache","migrateCache","serializeGlobal","INITIAL_GLOBAL_STATE","clearPasscodeSettings","updatePasscodeSettings","noLockOnUnload","isInited","sessionJson","globalJson","removeItem","beforeTabStates","initApi","MAX_INVALID_ATTEMPTS","TIMEOUT_RESET_INVALID_ATTEMPTS_MS","DEFAULT_GIFT_PROFILE_FILTER_OPTIONS","clearPayment","processOriginStarsPayment","originData","prevFilter","updatedFilter","isPaymentMessageConfirmDialogOpen","reactionPicker","sendAsMessage","isForEffects","updatedResults","localPreviousChosenOrder","chosenOrder","getPrizeStarsTransactionFromGiveaway","getStarsTransactionFromGift","clearStarPayment","openStarsTransactionModal","originStarsPayment","originGift","sendPaidReaction","sendStarGift","transaction","shouldIgnoreBalance","starBalance","subscription","uniqueGift","giftReceiverId","savedId","starsToConvert","isSaved","isConverted","upgradeMsgId","canUpgrade","alreadyPaidUpgradeStars","canExportAt","stickerSearch","selectPeerFirstStoryId","selectPeerFirstUnreadStoryId","selectStoryListForViewer","isSingleStory","storyList","viewModal","lastViewedByPeerId","storyIdsByPeerId","peerStoryIds","currentStoryIndex","previousStoryIndex","previousPeerId","previousPeerIdIndex","previousStoryId","nextStoryIndex","nextPeerId","nextPeerIdIndex","nextStoryId","isPrivacyModalOpen","isStealthModalOpen","areStoriesBlocked","updatedViews","view","renderMessageText","getMessageSummaryDescription","getMessageSummaryEmoji","emojiWithSpace","shouldRenderAsHtml","inlineBotSettings","webAppUpdate","originalWebApp","updatedValue","updatedWebAppKey","modalState","makeActive","openModalIfNotOpen","newOpenedKeys","openedOrderedKeys","newSessionKeys","sessionKeys","shouldConfirmClosing","isCloseModalOpen","updatedOpenedWebApps","removingWebAppKey","k","isRemovedAppActive","webAppsNotAllowedToClose","fromEntries","webAppsNotAllowedToCloseValues","hasNotAllowedToCloseApps","currentActiveWebApp","newActiveWebApp","newActiveWebAppKey","updateReactionCount","getLeftColumnWidth","isInSavedMessages","areTags","currentSendAs","addedDate","API_URL","API_KEY","M7_API_URL","bearerToken","fetchPools","sortBy","q","URLSearchParams","fetchPool","fetchPoolTransactions","fetchPoolTransaction","txHash","take","usd","fetchPairPools","fetchPoolsByToken","statusText","setCacheBuster","updateCacheBuster","useBrowserOnline","ConnectionStatus","hasMiddleHeader","isBrowserOnline","waitingForNetwork","syncing","online","getAudioHasCover","getChatAvatarHash","resizeImage","scaleImage","buildMediaMetadata","AVATAR_FULL_DIMENSIONS","telegramLogoPath","LOGO_DIMENSIONS","MINIMAL_SIZE","artist","audioCoverHash","avatarHash","getCoverSize","makeGoodArtwork","artwork","resolve","ratio","thumbnailSizes","preferred","getMessageIdsForSelectedText","handleCopy","IS_PWA","metaViewport","defaultViewportContent","getAttribute","allowedZoomViewportContent","setAttribute","preventEvent","onResize","initialWidth","cssPropertyName","markIsActive","unmarkIsActive","initialMouseX","setInitialMouseX","initialElementWidth","setInitialElementWidth","setElementStyle","widthPx","setProperty","clientX","handleMouseMove","newWidth","stopDrag","cleanup","setIsOnline","onLine","handleChange","SHOULD_PRE_OPEN","constructor","features","onFail","preOpened","popup","parseFloat","isNaN","isNegative","absNum","formatted","parts","APP_VERSION_REGEX","remoteVersion","appVersion","isStrict","sanitizedRemoteVersion","test","localeCompare","numeric","sensitivity","STRIPE_ERRORS","missing_payment_information","invalid_number","exp_year","exp_month","invalid_expiry_year","invalid_expiry_month","cvc","invalid_cvc","asUnread","UPDATE_DEBOUNCE_MS","nextTitle","setWindowTitle"],"sourceRoot":""}